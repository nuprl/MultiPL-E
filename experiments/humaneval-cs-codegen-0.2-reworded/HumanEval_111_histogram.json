{
  "name": "HumanEval_111_histogram",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Given a string representing a space separated lowercase letters, return a dictionary\n    // of the letter with the most repetition and containing the corresponding count.\n    // If several letters have the same occurrence, return all of them.\n    // Example:\n    // >>> Histogram((\"a b c\"))\n    // (new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}})\n    // >>> Histogram((\"a b b a\"))\n    // (new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})\n    // >>> Histogram((\"a b c a b\"))\n    // (new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})\n    // >>> Histogram((\"b b b b a\"))\n    // (new Dictionary<string,long>(){{\"b\", 4L}})\n    // >>> Histogram((\"\"))\n    // (new Dictionary<string,long>())\n    public static Dictionary<string,long> Histogram(string test) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Histogram((\"a b b a\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c a b\")).Equals((new Dictionary<string,long>(){{\"a\", 2L}, {\"b\", 2L}})));\n    Debug.Assert(Histogram((\"a b c d g\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}, {\"b\", 1L}, {\"c\", 1L}, {\"d\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"b b b b a\")).Equals((new Dictionary<string,long>(){{\"b\", 4L}})));\n    Debug.Assert(Histogram((\"r t g\")).Equals((new Dictionary<string,long>(){{\"r\", 1L}, {\"t\", 1L}, {\"g\", 1L}})));\n    Debug.Assert(Histogram((\"\")).Equals((new Dictionary<string,long>())));\n    Debug.Assert(Histogram((\"a\")).Equals((new Dictionary<string,long>(){{\"a\", 1L}})));\n    }\n\n}\n",
  "completions": [
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            } else {\n                result.Add(c, 1);\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            }\n            else {\n                result.Add(c, 1);\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter of letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter] += 1;\n            } else {\n                result.Add(letter, 1);\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c]++;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            }\n            else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter of letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        var letters = test.ToLower().Split(' ');\n        var max = 0;\n        for (var i = 0; i < letters.Length; i++) {\n            var count = 0;\n            for (var j = 0; j < letters.Length; j++) {\n                if (letters[i] == letters[j]) count++;\n            }\n            if (count > max) {\n                max = count;\n                result = new Dictionary<string,long>();\n                result.Add(letters[i], count);\n            }\n            else if (count == max) {\n                result.Add(letters[i], count);\n            }\n        }\n        return result;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (int i = 0; i < test.Length; i++) {\n            string s = test.Substring(i, 1);\n            if (!hist.ContainsKey(s)) {\n                hist.Add(s, 1);\n            }\n            else {\n                hist[s] += 1;\n            }\n        }\n        return hist;",
    "        var result = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        var max = 0;\n        var maxChars = \"\";\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            }\n            else {\n                result[c] = 1;\n            }\n            if (result[c] > max) {\n                max = result[c];\n                maxChars = c;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c]++;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c] += 1;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] + 1 : 1;\n            dictionary[letter] = count;\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var chars = test.ToLowerInvariant().ToCharArray();\n        var max = 0;\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            var count = result.ContainsKey(c) ? result[c] : 0;\n            result[c] = count + 1;\n            if (count + 1 > max) {\n                max = count + 1;\n            }\n        }\n        for (var c : result) {\n            if (result[c] == max) {\n                result[c] = max;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            } else {\n                result[c] = 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            var count = dictionary.ContainsKey(c) ? dictionary[c] : 0;\n            dictionary[c] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int[] counts = new int[26];\n        for (int i = 0; i < test.Length; i++) {\n            counts[test[i] - 'a']++;\n        }\n        int max = 0;\n        for (int i = 0; i < 26; i++) {\n            if (counts[i] > max) {\n                max = counts[i];\n            }\n        }\n        for (int i = 0; i < 26; i++) {\n            if (counts[i] == max) {\n                result.Add(String.Chars[i], counts[i]);\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        var letters = test.ToLower().Split(' ');\n        var max = 0;\n        for (var i = 0; i < letters.Length; i++) {\n            var count = 0;\n            for (var j = 0; j < letters.Length; j++) {\n                if (letters[i] == letters[j]) count++;\n            }\n            if (count > max) {\n                max = count;\n                result = new Dictionary<string,long>();\n            }\n            if (count == max) result.Add(letters[i], count);\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (!histogram.ContainsKey(c)) {\n                histogram.Add(c, 1);\n            }\n            else {\n                histogram[c] += 1;\n            }\n        }\n        return histogram;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        char[] chars = test.ToCharArray();\n        int max = chars[0];\n        int count = 1;\n        for (int i = 1; i < chars.Length; i++) {\n            if (chars[i] == chars[i - 1]) {\n                count++;\n            } else {\n                if (count > max) {\n                    max = count;\n                    result.Add(chars[i - 1] + \"\", max);\n                }\n                count = 1;\n            }\n        }\n        if (count > max) {\n            max = count;\n            result.Add(chars[chars.Length - 1] + \"\", max);\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = result.ContainsKey(letter) ? result[letter] : 0;\n            result[letter] = count + 1;\n        }\n        return result;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            }\n            else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        var max = 0;\n        var max_letter = \"\";\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            }\n            else {\n                result[c] = 1;\n            }\n            if (result[c] > max) {\n                max = result[c];\n                max_letter = c;\n            }\n        }\n        return result;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] = dict[c] + 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dictionary.ContainsKey(c)) {\n                dictionary.Add(c, 1);\n            }\n            else {\n                dictionary[c] = dictionary[c] + 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c] += 1;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (!result.ContainsKey(c)) {\n                result.Add(c, 1);\n            }\n            else {\n                result[c] = result[c] + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        var max = 0;\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dictionary.ContainsKey(c)) {\n                dictionary.Add(c, 1);\n            }\n            else {\n                dictionary[c] = dictionary[c] + 1;\n                if (dictionary[c] > max) {\n                    max = dictionary[c];\n                }\n            }\n        }\n        for (var i = 0; i < dictionary.Count; i++) {\n            if (dictionary[i] == max) {\n                dictionary[i] = dictionary[i] + 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (!hist.ContainsKey(c)) {\n                hist.Add(c, 1);\n            }\n            else {\n                hist.Add(c, hist.get(c) + 1);\n            }\n        }\n        return hist;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] = dict[c] + 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var dictionary = new Dictionary<char,int>();\n        for (var i = 0; i < test.Length; i++) {\n            var c = test[i];\n            if (dictionary.ContainsKey(c)) {\n                dictionary[c]++;\n            }\n            else {\n                dictionary[c] = 1;\n            }\n        }\n        for (var kvp in dictionary) {\n            var key = kvp.Key.ToString();\n            if (result.ContainsKey(key)) {\n                result[key] += dictionary[kvp.Key];\n            }\n            else {\n                result[key] = dictionary[kvp.Key];\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c]++;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter]++;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var ch = chars[i];\n            var count = dictionary.ContainsKey(ch) ? dictionary[ch] : 0;\n            dictionary[ch] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            }\n            else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            }\n            else {\n                result.Add(c, 1);\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] += 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (int i = 0; i < test.Length; i++) {\n            string current = test.Substring(i, 1);\n            if (result.ContainsKey(current)) {\n                result[current] += 1;\n            }\n            else {\n                result[current] = 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c]++;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            }\n            else {\n                dict[c] = 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int max = 0;\n        string maxLetter = \"\";\n        for (int i = 0; i < test.Length; i++) {\n            if (result.ContainsKey(test[i])) {\n                result[test[i]]++;\n            } else {\n                result[test[i]] = 1;\n            }\n            if (result[test[i]] > max) {\n                max = result[test[i]];\n                maxLetter = test[i];\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c]++;\n            } else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant();\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter]++;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int max = 0;\n        string maxKey = \"\";\n        for (int i = 0; i < test.Length; i++) {\n            string key = test.Substring(i, 1);\n            if (result.ContainsKey(key)) {\n                result[key] += 1;\n            }\n            else {\n                result[key] = 1;\n            }\n            if (result[key] > max) {\n                max = result[key];\n                maxKey = key;\n            }\n        }\n        result[maxKey] = max;\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dictionary.ContainsKey(c)) {\n                dictionary.Add(c, 1);\n            }\n            else {\n                dictionary[c] = dictionary[c] + 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter of letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter]++;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dictionary.ContainsKey(c)) {\n                dictionary.Add(c, 1);\n            }\n            else {\n                dictionary[c] = dictionary[c] + 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c]++;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] = dictionary[letter] + 1;\n            }\n        }\n        return dictionary;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] = dict[c] + 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter]++;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = result.ContainsKey(letter) ? result[letter] : 0;\n            result[letter] = count + 1;\n        }\n        return result;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dict = new Dictionary<string,long>();\n        for (var i = 0; i < test.Length; i++) {\n            var c = test[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] = dict[c] + 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] + 1 : 1;\n            dictionary[letter] = count;\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        char[] chars = test.ToCharArray();\n        int[] counts = new int[26];\n        for (int i = 0; i < chars.Length; i++) {\n            counts[chars[i] - 'a']++;\n        }\n        for (int i = 0; i < counts.Length; i++) {\n            if (counts[i] > 0) {\n                result.Add(chars[i] + \"\", counts[i]);\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (!histogram.ContainsKey(c)) {\n                histogram.Add(c, 1);\n            }\n            else {\n                histogram[c] += 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] = dictionary[letter] + 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            }\n            else {\n                result.Add(c, 1);\n            }\n        }\n        return result;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        var chars = test.ToCharArray();\n        var max = chars[0];\n        var maxCount = 1;\n        for (var i = 0; i < chars.Length; i++) {\n            if (chars[i] == max) {\n                maxCount++;\n            } else {\n                if (maxCount > 1) {\n                    result.Add(max, maxCount);\n                }\n                max = chars[i];\n                maxCount = 1;\n            }\n        }\n        if (maxCount > 1) {\n            result.Add(max, maxCount);\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        if (test.Length == 0) return hist;\n        int max = 0;\n        string max_letter = \"\";\n        for (int i = 0; i < test.Length; i++) {\n            string letter = test.Substring(i, 1);\n            if (hist.ContainsKey(letter)) {\n                hist[letter]++;\n            } else {\n                hist[letter] = 1;\n            }\n            if (hist[letter] > max) {\n                max = hist[letter];\n                max_letter = letter;\n            }\n        }\n        return hist;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (!hist.ContainsKey(c)) {\n                hist.Add(c, 1);\n            }\n            else {\n                hist.Add(c, hist.get(c) + 1);\n            }\n        }\n        return hist;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (result.ContainsKey(letter)) {\n                result[letter] += 1;\n            } else {\n                result[letter] = 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c] += 1;\n            } else {\n                result[c] = 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        char[] chars = test.ToCharArray();\n        int[] count = new int[256];\n        for (int i = 0; i < chars.Length; i++) {\n            count[chars[i]]++;\n        }\n        int max = 0;\n        for (int i = 0; i < count.Length; i++) {\n            if (count[i] > max) {\n                max = count[i];\n                result.Add(String.Format(\"{0}\", i), count[i]);\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        var max = 0;\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            }\n            else {\n                dict[c] = 1;\n            }\n            if (dict[c] > max) {\n                max = dict[c];\n            }\n        }\n        for (var c : dict.Keys) {\n            if (dict[c] == max) {\n                dict[c] = max;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter of letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (!histogram.ContainsKey(c)) {\n                histogram.Add(c, 1);\n            }\n            else {\n                histogram[c] += 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        var max = 0;\n        var maxChars = \"\";\n        for (var i = 0; i < chars.Length; i++) {\n            var char = chars[i];\n            if (dictionary.ContainsKey(char)) {\n                dictionary[char]++;\n            }\n            else {\n                dictionary[char] = 1;\n            }\n            if (dictionary[char] > max) {\n                max = dictionary[char];\n                maxChars = char;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        char[] chars = test.ToCharArray();\n        int max = chars[0];\n        int count = 1;\n        for (int i = 1; i < chars.Length; i++) {\n            if (chars[i] == chars[i-1]) {\n                count++;\n            } else {\n                if (count > max) {\n                    max = count;\n                    result.Add(chars[i-1] + \"\", max);\n                }\n                count = 1;\n            }\n        }\n        if (count > max) {\n            max = count;\n            result.Add(chars[chars.Length-1] + \"\", max);\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c] += 1;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (int i = 0; i < test.Length; i++) {\n            string current = test.Substring(i, 1);\n            if (result.ContainsKey(current)) {\n                result[current]++;\n            } else {\n                result.Add(current, 1);\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int[] counts = new int[26];\n        for (int i = 0; i < test.Length; i++) {\n            counts[test[i] - 'a']++;\n        }\n        for (int i = 0; i < counts.Length; i++) {\n            if (counts[i] > 0) {\n                result.Add(String.LetterChars[i], counts[i]);\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int max = 0;\n        string maxKey = \"\";\n        for (int i = 0; i < test.Length; i++) {\n            string key = test.Substring(i, 1);\n            if (result.ContainsKey(key)) {\n                result[key]++;\n            }\n            else {\n                result[key] = 1;\n            }\n            if (result[key] > max) {\n                max = result[key];\n                maxKey = key;\n            }\n        }\n        result[maxKey] = max + 1;\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] = dict[c] + 1;\n            }\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!result.ContainsKey(c)) {\n                result.Add(c, 1);\n            }\n            else {\n                result[c] = result[c] + 1;\n            }\n        }\n        return result;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] += 1;\n            }\n        }\n        return dict;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (!histogram.ContainsKey(c)) {\n                histogram.Add(c, 1);\n            }\n            else {\n                histogram[c] += 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] = result[letter] + 1;\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (result.ContainsKey(letter)) {\n                result[letter] += 1;\n            }\n            else {\n                result[letter] = 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c] += 1;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c] += 1;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        char[] chars = test.ToCharArray();\n        int[] counts = new int[26];\n        for (int i = 0; i < chars.Length; i++) {\n            counts[chars[i] - 'a']++;\n        }\n        int maxCount = 0;\n        for (int i = 0; i < counts.Length; i++) {\n            if (counts[i] > maxCount) {\n                maxCount = counts[i];\n                result.Add(String.Chars[i], counts[i]);\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant();\n        var max = 0;\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n            if (dictionary[letter] > max) {\n                max = dictionary[letter];\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int[] histogram = new int[26];\n        for (int i = 0; i < test.Length; i++) {\n            histogram[test[i] - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if (histogram[i] > 0) {\n                result.Add(String.Chars[i], histogram[i]);\n            }\n        }\n        return result;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        int max = 0;\n        int maxIndex = 0;\n        for (int i = 0; i < test.Length; i++) {\n            if (result.ContainsKey(test[i])) {\n                result[test[i]] += 1;\n            }\n            else {\n                result[test[i]] = 1;\n            }\n            if (result[test[i]] > max) {\n                max = result[test[i]];\n                maxIndex = i;\n            }\n        }\n        for (int i = 0; i < test.Length; i++) {\n            if (i == maxIndex) continue;\n            if (result[test[i]] == max) {\n                result[test[i]] = max + 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (dictionary.ContainsKey(c)) {\n                dictionary[c] += 1;\n            }\n            else {\n                dictionary[c] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (!histogram.ContainsKey(c)) {\n                histogram.Add(c, 1);\n            }\n            else {\n                histogram[c] = histogram[c] + 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] + 1 : 1;\n            dictionary[letter] = count;\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (result.ContainsKey(c)) {\n                result[c]++;\n            } else {\n                result.Add(c, 1);\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var char = chars[i];\n            if (dictionary.ContainsKey(char)) {\n                dictionary[char] += 1;\n            }\n            else {\n                dictionary[char] = 1;\n            }\n        }\n        return dictionary;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var c : chars) {\n            var count = dict.ContainsKey(c) ? dict[c] : 0;\n            dict[c] = count + 1;\n        }\n        return dict;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (hist.ContainsKey(c)) {\n                hist[c]++;\n            }\n            else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] = dictionary[letter] + 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var ch = chars[i];\n            if (dictionary.ContainsKey(ch)) {\n                dictionary[ch]++;\n            }\n            else {\n                dictionary[ch] = 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = result.ContainsKey(letter) ? result[letter] : 0;\n            result[letter] = count + 1;\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        var max = 0;\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (dictionary.ContainsKey(c)) {\n                dictionary[c]++;\n            }\n            else {\n                dictionary[c] = 1;\n            }\n            if (dictionary[c] > max) {\n                max = dictionary[c];\n            }\n        }\n        for (var c in dictionary) {\n            if (dictionary[c] == max) {\n                dictionary[c] = dictionary[c] + 1;\n            }\n        }\n        return dictionary;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter of letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        Dictionary<string,long> hist = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (hist.ContainsKey(c)) {\n                hist[c] += 1;\n            } else {\n                hist[c] = 1;\n            }\n        }\n        return hist;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        for (char c : test.ToCharArray()) {\n            if (!result.ContainsKey(c)) {\n                result.Add(c, 1);\n            }\n            else {\n                result[c] = result[c] + 1;\n            }\n        }\n        return result;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var i = 0; i < letters.Length; i++) {\n            var letter = letters[i];\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter] += 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLowerInvariant().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c]++;\n            }\n        }\n        return dict;",
    "        var dict = new Dictionary<string,long>();\n        var chars = test.ToCharArray();\n        for (var i = 0; i < chars.Length; i++) {\n            var c = chars[i];\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            else {\n                dict[c] = dict[c] + 1;\n            }\n        }\n        return dict;",
    "        var result = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!result.ContainsKey(letter)) {\n                result.Add(letter, 1);\n            }\n            else {\n                result[letter] += 1;\n            }\n        }\n        return result;",
    "        Dictionary<string,long> histogram = new Dictionary<string,long>();\n        foreach (char c in test) {\n            if (histogram.ContainsKey(c)) {\n                histogram[c] += 1;\n            }\n            else {\n                histogram[c] = 1;\n            }\n        }\n        return histogram;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (!dictionary.ContainsKey(letter)) {\n                dictionary.Add(letter, 1);\n            }\n            else {\n                dictionary[letter]++;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            } else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter in letters) {\n            var count = dictionary.ContainsKey(letter) ? dictionary[letter] : 0;\n            dictionary[letter] = count + 1;\n        }\n        return dictionary;",
    "        Dictionary<string,long> result = new Dictionary<string,long>();\n        if (test.Length == 0) return result;\n        char[] chars = test.ToCharArray();\n        int max = 0;\n        int maxIndex = 0;\n        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] > max) {\n                max = chars[i];\n                maxIndex = i;\n            }\n        }\n        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] == max) {\n                if (result.ContainsKey(chars[i] + \"\")) {\n                    result[chars[i] + \"\"] += 1;\n                }\n                else {\n                    result[chars[i] + \"\"] = 1;\n                }\n            }\n        }\n        return result;",
    "        var dictionary = new Dictionary<string,long>();\n        var letters = test.ToLower().Split(' ');\n        for (var letter : letters) {\n            if (dictionary.ContainsKey(letter)) {\n                dictionary[letter] += 1;\n            }\n            else {\n                dictionary[letter] = 1;\n            }\n        }\n        return dictionary;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
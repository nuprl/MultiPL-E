{
  "name": "HumanEval_145_order_by_points",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L})))\n    // (new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))\n    // >>> OrderByPoints((new List<long>()))\n    // (new List<long>())\n    public static List<long> OrderByPoints(List<long> nums) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)11L, (long)-1L, (long)-11L, (long)-12L}))).Equals((new List<long>(new long[]{(long)-1L, (long)-11L, (long)1L, (long)-12L, (long)11L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1234L, (long)423L, (long)463L, (long)145L, (long)2L, (long)423L, (long)423L, (long)53L, (long)6L, (long)37L, (long)3457L, (long)3L, (long)56L, (long)0L, (long)46L}))).Equals((new List<long>(new long[]{(long)0L, (long)2L, (long)3L, (long)6L, (long)53L, (long)423L, (long)423L, (long)423L, (long)1234L, (long)145L, (long)37L, (long)46L, (long)56L, (long)463L, (long)3457L}))));\n    Debug.Assert(OrderByPoints((new List<long>())).Equals((new List<long>())));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)-11L, (long)-32L, (long)43L, (long)54L, (long)-98L, (long)2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)-3L, (long)-32L, (long)-98L, (long)-11L, (long)1L, (long)2L, (long)43L, (long)54L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L, (long)11L}))).Equals((new List<long>(new long[]{(long)1L, (long)10L, (long)2L, (long)11L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(OrderByPoints((new List<long>(new long[]{(long)0L, (long)6L, (long)6L, (long)-76L, (long)-21L, (long)23L, (long)4L}))).Equals((new List<long>(new long[]{(long)-76L, (long)-21L, (long)0L, (long)4L, (long)23L, (long)6L, (long)6L}))));\n    }\n\n}\n",
  "completions": [
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                i--;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            result.Add(nums[i]);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (nums[i] == 0) {\n                result.Add(nums[i]);\n                continue;\n            }\n            long sum1 = 0;\n            for (long j = 0; j < nums[i].ToString().Length; j++) {\n                sum1 += nums[i].ToString()[j] - '0';\n            }\n            if (sum1 == 0) {\n                result.Add(nums[i]);\n                continue;\n            }\n            for (int j = 0; j < nums.Count; j++) {\n                if (nums[j] == 0) continue;\n                long sum2 = 0;\n                for (int k = 0; k < nums[j].ToString().Length; k++) {\n                    sum2 += nums[j].ToString()[k] - '0';\n                }\n                if (sum2 == 0) continue;\n                if (sum1 + sum2 == sum) {\n                    result.Add(nums[i]);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += Math.Abs(num);\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (result.Count == 0 || result.Last() < sum - num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += num;\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum == num)\n                sorted.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                sorted.Add(num);\n        }\n        return sorted;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                continue;\n            }\n            for (int j = i + 1; j < nums.Count; j++) {\n                if (sum == nums[i] + nums[j]) {\n                    result.Add(nums[i]);\n                    result.Add(nums[j]);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++)\n            sums[i] = nums[i] * 10 + nums[i];\n        for (int i = 0; i < nums.Count; i++) {\n            int index = 0;\n            for (int j = 0; j < nums.Count; j++) {\n                if (sums[j] > sums[index])\n                    index = j;\n            }\n            result.Add(nums[index]);\n            nums.Remove(index);\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                sorted.Add(nums[i]);\n                break;\n            }\n            else {\n                if (sum < 0) {\n                    sum = 0;\n                }\n                else {\n                    sum -= nums[i];\n                }\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (sum < 0) {\n                result.Add(nums[i]);\n                sum += nums[i];\n            }\n            else {\n                sum -= nums[i];\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0) continue;\n            if (num == 1) result.Add(num);\n            else if (num == -1) result.Add(-num);\n            else if (num == -2) result.Add(-num);\n            else if (num == 2) result.Add(num);\n            else if (num == -3) result.Add(-num);\n            else if (num == 3) result.Add(num);\n            else if (num == -4) result.Add(-num);\n            else if (num == 4) result.Add(num);\n            else if (num == -5) result.Add(-num);\n            else if (num == 5) result.Add(num);\n            else if (num == -6) result.Add(-num);\n            else if (num == 6) result.Add(num);\n            else if (num == -7) result.Add(-num);\n            else if (num == 7) result.Add(num);\n            else if (num == -8) result.Add(-num);\n            else if (num == 8) result.Add(num);\n            else if (num == -9) result.Add(-num);\n            else if (num == 9) result.Add(num);\n            else if (num == -10) result.Add(-num);\n            else if (num == 10) result.Add(num);\n            else if (num == -11) result.Add(-num);\n            else if (num == 11) result.Add(num);\n            else if (num == -12) result.Add(-num);\n            else if (num == 12) result.Add(num);\n            else if (num == -13) result.Add(-num);\n            else if (num == 13) result.Add(num);\n            else if (num == -14) result.Add(-num);\n            else if (num == 14) result.",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0) continue;\n            if (sum == 0) {\n                result.Add(num);\n                continue;\n            }\n            int index = nums.IndexOf(num);\n            if (index == 0) {\n                result.Add(num);\n                continue;\n            }\n            if (sum - num == 0) {\n                result.Add(num);\n                continue;\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num == 1) {\n                result.Add(num);\n                continue;\n            }\n            int index = nums.IndexOf(num);\n            if (index == 0) {\n                result.Add(num);\n                continue;\n            }\n            if (sum - num == sum - nums[index - 1]) {\n                result.Add(num);\n                continue;\n            }\n            if (sum - num > sum - nums[index - 1]) {\n                result.Add(num);\n                continue;\n            }\n            result.Add(nums[index - 1]);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            sums[(int)num % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = nums.OrderBy(x => x);\n        int index = 0;\n        for (int i = 0; i < sorted.Count; i++) {\n            long sum = 0;\n            for (int j = 0; j < sorted[i].ToString().Length; j++) {\n                sum += (long)(sorted[i].ToString()[j] - '0');\n            }\n            if (index < sorted.Count - 1 && sum == sorted[index + 1].ToString().Length) {\n                index++;\n            }\n            else {\n                sorted.RemoveAt(index);\n                sorted.Insert(index, sorted[i]);\n                index++;\n            }\n        }\n        return sorted;",
    "        if (nums == null)\n            return new List<long>();\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            long sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            if (sum == 0)\n                sorted.Add(num);\n        }\n        List<long> result = new List<long>();\n        for (long num : sorted) {\n            for (long i = 0; i < nums.Count; i++) {\n                if (nums[i] == num) {\n                    result.Add(nums[i]);\n                    nums.RemoveAt(i);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += num;\n        List<long> sorted = new List<long>();\n        for (long num : nums)\n            if (sum - num < 0)\n                sorted.Add(num);\n            else\n                sorted.Add(sum - num);\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        List<long> result = new List<long>();\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                continue;\n            }\n            long j = i;\n            while (j < nums.Count && nums[j] == nums[i]) {\n                j++;\n            }\n            if (j == i) {\n                result.Add(nums[i]);\n                continue;\n            }\n            long k = i;\n            while (k < nums.Count && nums[k] == nums[j]) {\n                k++;\n            }\n            if (k == j) {\n                result.Add(nums[i]);\n                continue;\n            }\n            result.Add(nums[i]);\n            result.Add(nums[j]);\n            result.Add(nums[k]);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += num;\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum - num > 0) {\n                sorted.Add(num);\n                sum -= num;\n            }\n        }\n        for (long num : nums) {\n            if (sum - num < 0) {\n                sorted.Add(num);\n                sum += num;\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num < 0) {\n                num = -num;\n                if (num > sum)\n                    num = -num;\n            }\n            else {\n                if (num > sum)\n                    num = -num;\n            }\n            result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                result.Add(nums[i]);\n            else {\n                if (nums[i] == 0)\n                    result.Add(nums[i]);\n                else {\n                    if (nums[i] < 0)\n                        result.Add(nums[i]);\n                    else {\n                        if (nums[i] > 0) {\n                            if (sum % 10 == 0)\n                                result.Add(nums[i]);\n                            else {\n                                if (sum % 10 < nums[i] % 10)\n                                    result.Add(nums[i]);\n                                else {\n                                    if (sum % 10 > nums[i] % 10)\n                                        result.Add(nums[i]);\n                                    else {\n                                        if (i < nums.Count - 1) {\n                                            if (sum % 10 == nums[i + 1] % 10)\n                                                result.Add(nums[i]);\n                                            else {\n                                                if (sum % 10 < nums[i + 1] % 10)\n                                                    result.Add(nums[i]);\n                                                else {\n                                                    if (sum % 10 > nums[i + 1] % 10)\n                                                        result.Add(nums[i]);\n                                                    else {\n                                                        if (i < nums.Count - 2) {\n                                                            if (sum % 10 == nums[i + 2] % 10)\n                                                                result.Add(nums[i]);\n                                                            else {\n                                                                if (sum % 10 < nums[i + 2] % 10)\n                               ",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num < 0) {\n                if (sum % -num == 0)\n                    result.Add(num);\n            }\n            else {\n                if (sum % num == 0)\n                    result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (sum % 10 == 0) {\n                result.Add(num);\n            }\n            else {\n                for (long num2 : nums) {\n                    if (num2 == num)\n                        continue;\n                    if (num2 == 0)\n                        continue;\n                    if (sum % 10 == 0) {\n                        result.Add(num);\n                        break;\n                    }\n                    if (num2 == sum - num) {\n                        result.Add(num);\n                        break;\n                    }\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num < 0)\n                num = -num;\n            if (num > 0) {\n                if (sum % 10 == 0) {\n                    result.Add(num);\n                }\n            }\n            else {\n                if (sum % 10 == 0) {\n                    result.Add(num);\n                }\n            }\n        }\n        return result;",
    "        if (nums == null) return null;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += num;\n        List<long> sorted = new List<long>();\n        for (long num : nums)\n            sorted.Add(num);\n        sorted.Sort((a, b) => {\n            return a.ToString().CompareTo(b.ToString()) == 0 ? a.Index - b.Index : a.ToString().CompareTo(b.ToString()) < 0 ? -1 : 1;\n        });\n        for (long num : sorted)\n            nums.Remove(num);\n        return nums;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        if (nums == null)\n            return nums;\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sorted.Add(sum);\n        }\n        sorted.Sort(new Comparer<long>() {\n            public int Compare(long x, long y) {\n                return x.CompareTo(y);\n            }\n        });\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += Math.Abs(i);\n        long[] sorted = nums.ToArray();\n        Arrays.Sort(sorted, new Comparator<long>() {\n            public int Compare(long a, long b) {\n                return (int)Math.signum(a - b);\n            }\n        });\n        List<long> result = new List<long>();\n        for (long i : sorted)\n            result.Add(i);\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num == -1)\n                num = -2;\n            if (num == -2)\n                num = -1;\n            if (num < 0)\n                num = -num;\n            if (num > 0)\n                num = num;\n            if (num == 0)\n                continue;\n            if (num < sum)\n                result.Add(num);\n        }\n        return result;",
    "        if (nums == null) return null;\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        List<long> result = new List<long>();\n        for (long i : nums) {\n            if (sum == i) {\n                result.Add(i);\n            }\n        }\n        for (long i : nums) {\n            if (sum != i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        if (nums == null)\n            return null;\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++)\n                result.Add(i);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] == 0)\n                continue;\n            if (sum == 0)\n                result.Add(0);\n            else {\n                long digit = nums[i] % 10;\n                long sum_digit = sum % 10;\n                if (digit == sum_digit)\n                    result.Add(nums[i]);\n                else if (digit > sum_digit)\n                    result.Add(nums[i]);\n                else\n                    result.Add(0);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums.Count == 0) return nums;\n        // Sort the list based on the sum of digits\n        nums.Sort((a, b) => {\n            long a_sum = 0;\n            long b_sum = 0;\n            for (int i = 0; i < Math.Max(a.ToString().Length, b.ToString().Length); i++) {\n                a_sum += a.ToString().Substring(i, 1).ToLong();\n                b_sum += b.ToString().Substring(i, 1).ToLong();\n            }\n            return a_sum - b_sum;\n        });\n        // Sort the list based on the index\n        nums.Sort((a, b) => a.Index - b.Index);\n        return nums;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++)\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            int index = 0;\n            for (int j = 0; j < nums.Count; j++) {\n                if (sums[j] > sums[index])\n                    index = j;\n            }\n            result.Add(nums[index]);\n            sums[index] = sums[index] - nums[index];\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += Math.Abs(num);\n        List<long> sorted = new List<long>();\n        for (long num : nums)\n            if (sum - Math.Abs(num) < sorted.Count)\n                sorted.Add(num);\n            else\n                sorted.Insert(num, sorted.Count);\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += Math.Abs(i);\n        List<long> result = new List<long>();\n        for (long i : nums) {\n            if (result.Count == 0 || result.Last() < sum - i)\n                result.Add(i);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += i;\n        List<long> sorted = new List<long>();\n        for (long i = 0; i < nums.Count; i++) {\n            long num = nums[i];\n            if (sum - num < 0)\n                sorted.Add(num);\n            else\n                sorted.Add(nums[i]);\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        List<long> temp = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                temp.Add(num);\n            }\n            else {\n                sorted.Add(temp.Count == 0 ? num : temp.Count == 1 ? num : nums.Count == 1 ? num : nums.Count == 2 ? num : nums.Count == 3 ? num : nums.Count == 4 ? num : nums.Count == 5 ? num : nums.Count == 6 ? num : nums.Count == 7 ? num : nums.Count == 8 ? num : nums.Count == 9 ? num : nums.Count == 10 ? num : nums.Count == 11 ? num : nums.Count == 12 ? num : nums.Count == 13 ? num : nums.Count == 14 ? num : nums.Count == 15 ? num : nums.Count == 16 ? num : nums.Count == 17 ? num : nums.Count == 18 ? num : nums.Count == 19 ? num : nums.Count == 20 ? num : nums.Count == 21 ? num : nums.Count == 22 ? num : nums.Count == 23 ? num : nums.Count == 24 ? num : nums.Count == 25 ? num : nums.Count == 26 ? num : nums.Count == 27 ? num : nums.Count == 28 ? num : nums.Count == 29 ? num : nums.Count == 30 ? num : nums.Count == 31 ? num : nums.Count == 32 ? num : nums.Count == 33 ? num : nums.Count == 34 ? num : nums.Count == 35 ? num : nums.Count == 36 ? num : nums.Count == 37 ? num : nums.Count == 38 ? num : nums.Count == 39 ? num : nums.Count == 40 ? num : nums.Count == 41 ? num : nums.Count == 42 ?",
    "        if (nums == null)\n            return new List<long>();\n        // Sort the list based on the sum of digits\n        nums.Sort((a, b) => {\n            long a_sum = 0;\n            long b_sum = 0;\n            for (int i = 0; i < Math.Max(a.ToString().Length, b.ToString().Length); i++) {\n                a_sum += Math.Pow(10, i) * a.ToString().Substring(i, 1).ToLong();\n                b_sum += Math.Pow(10, i) * b.ToString().Substring(i, 1).ToLong();\n            }\n            return a_sum - b_sum;\n        });\n        // Sort the list based on the index in original list\n        nums.Sort((a, b) => a.Index - b.Index);\n        return nums;",
    "        // Write your code here\n        return nums.OrderBy(x => {\n            long sum = 0;\n            for (int i = 0; i < Math.Abs(x); i++) {\n                sum += Math.Abs(x) % 10;\n            }\n            return sum;\n        });",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums == null) {\n            return new List<long>();\n        }\n        // Sort nums by sum of digits\n        nums.Sort((a, b) => {\n            return (a + b) % 10;\n        });\n        // Sort nums by index\n        nums.Sort((a, b) => {\n            return a - b;\n        });\n        return nums;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                continue;\n            }\n            for (int j = 0; j < nums.Count; j++) {\n                if (nums[j] == 0) continue;\n                if (nums[j] == nums[i]) {\n                    result.Add(nums[i]);\n                    break;\n                }\n                if (nums[j] > nums[i]) {\n                    result.Add(nums[i]);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                result.Add(nums[i]);\n            else {\n                long sum2 = 0;\n                for (long j = 0; j < nums.Count; j++) {\n                    if (nums[j] == i)\n                        continue;\n                    sum2 += nums[j];\n                }\n                if (sum2 == 0)\n                    result.Add(nums[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        if (nums.Count == 0)\n            return nums;\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        }\n        List<long> sorted = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = 0; j < nums.Count; j++) {\n                if (sums[j] == sums[i]) {\n                    sorted.Add(nums[i]);\n                    nums.RemoveAt(i);\n                    break;\n                }\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long[] sums = new long[10];\n        for (long num : nums) {\n            sums[(int)num % 10] += num;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (sums[i] != 0) {\n                result.Add(sums[i]);\n                sums[i] = 0;\n            }\n        }\n        for (long num : nums) {\n            sums[(int)num % 10] += num;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (sums[i] != 0) {\n                result.Add(sums[i]);\n                sums[i] = 0;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long[] nums_array = nums.ToArray();\n        Arrays.Sort(nums_array, new Comparer<long>() {\n            public int Compare(long x, long y) {\n                return (int)(x + y);\n            }\n        });\n        return nums.Select(x => x).ToList();",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num < 0) {\n                num = -num;\n                if (sum % 10 == 0)\n                    result.Add(num);\n            }\n            else {\n                if (sum % 10 == 0)\n                    result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        return nums.OrderBy(x => x.ToString().Replace(\"-\", \"\").ToLong() + x.ToString().Replace(\"-\", \"\").ToLong());",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (nums[i] == 0)\n                continue;\n            if (sum % 10 == 0) {\n                result.Add(nums[i]);\n                sum = 0;\n                continue;\n            }\n            long diff = sum - nums[i];\n            if (diff == 0) {\n                result.Add(nums[i]);\n                sum = 0;\n                continue;\n            }\n            if (diff < 0) {\n                result.Add(nums[i]);\n                sum = 0;\n                continue;\n            }\n            if (diff == 0) {\n                result.Add(nums[i]);\n                sum = 0;\n                continue;\n            }\n            if (diff > 0) {\n                result.Add(nums[i]);\n                sum = 0;\n                continue;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        int index = 0;\n        while (index < nums.Count) {\n            if (sum == 0) {\n                result.Add(nums[index]);\n                index++;\n                continue;\n            }\n            long sum1 = 0;\n            for (int i = index; i < nums.Count; i++) {\n                sum1 += nums[i];\n                if (sum1 == sum) {\n                    result.Add(nums[i]);\n                    index = i + 1;\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        int index = 0;\n        while (index < nums.Count) {\n            if (sum == nums[index]) {\n                result.Add(nums[index]);\n                index++;\n            }\n            else if (sum < nums[index]) {\n                result.Add(nums[index]);\n                index++;\n            }\n            else {\n                result.Add(nums[index]);\n                index++;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                result.Add(nums[i]);\n            else {\n                long sum2 = 0;\n                for (long num : nums) {\n                    sum2 += num;\n                    if (sum2 == sum) {\n                        result.Add(nums[i]);\n                        break;\n                    }\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0) continue;\n            if (num == -1) continue;\n            if (num == 1) continue;\n            if (num == -11) continue;\n            if (num == 11) continue;\n            if (num == -12) continue;\n            if (num == 12) continue;\n            if (num == sum) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            sums[(int)num % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long[] sums = new long[10];\n        for (long num : nums) {\n            int digit = 0;\n            while (num != 0) {\n                digit = (int)(num % 10);\n                sums[digit] += num;\n                num /= 10;\n            }\n        }\n        for (int i = 0; i < 10; i++) {\n            if (sums[i] != 0) {\n                for (long num : nums) {\n                    if (num == 0)\n                        break;\n                    if (num == nums[0])\n                        result.Add(num);\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        List<long> result = new List<long>();\n        for (long i : nums) {\n            if (sum == i) {\n                result.Add(i);\n            }\n        }\n        for (long i : nums) {\n            if (sum != i) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long[] numsArr = nums.ToArray();\n        Arrays.Sort(numsArr);\n        List<long> result = new List<long>();\n        for (long num : numsArr) {\n            result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => {\n            long sum = 0;\n            for (int i = 0; i < x.ToString().Length; i++) {\n                sum += x.ToString().Chars[i] - '0';\n            }\n            return sum;\n        });",
    "        if (nums == null)\n            return new List<long>();\n        // Sort the list based on the sum of digits\n        nums.Sort((a, b) => {\n            return (int)(a + b) - (int)(a + b);\n        });\n        // Sort the list based on the index\n        nums.Sort((a, b) => {\n            return a - b;\n        });\n        return nums;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (num == -1)\n                num = -1;\n            if (num == 1)\n                num = 1;\n            if (num == 11)\n                num = 11;\n            if (num == -11)\n                num = -11;\n            if (num == 12)\n                num = 12;\n            if (num == -12)\n                num = -12;\n            if (num == sum)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                if (sums[i] == sums[j]) {\n                    long temp = nums[i];\n                    nums[i] = nums[j];\n                    nums[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            result.Add(nums[i]);\n        }\n        return result;",
    "        // Sort the list based on the sum of digits\n        nums.Sort((a, b) => {\n            int aSum = 0;\n            int bSum = 0;\n            for (int i = 0; i < Math.Max(a.ToString().Length, b.ToString().Length); i++) {\n                aSum += (a.ToString().Length > i) ? a.ToString().Chars[i].ToInt() : 0;\n                bSum += (b.ToString().Length > i) ? b.ToString().Chars[i].ToInt() : 0;\n            }\n            return aSum - bSum;\n        });\n        // Sort the list based on the index in original list\n        nums.Sort((a, b) => {\n            return a - b;\n        });\n        return nums;",
    "        if (nums == null)\n            return new List<long>();\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0) {\n                result.Add(num);\n                continue;\n            }\n            if (sum % 10 == 0) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums == null) return new List<long>();\n        long[] numsArray = nums.ToArray();\n        Arrays.Sort(numsArray, new Comparer<long>() {\n            public int Compare(long x, long y) {\n                return (int)(x + y);\n            }\n        });\n        return nums.Select(x => x).ToList();",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                result.Add(nums[i]);\n            else {\n                long sum2 = 0;\n                for (long j = i; j < nums.Count; j++) {\n                    sum2 += nums[j];\n                    if (sum2 == sum) {\n                        result.Add(nums[i]);\n                        break;\n                    }\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum < nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum > nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum > nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += num;\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sorted.Count == 0 || sorted.Count == 1 && sorted.First() == num)\n                sorted.Add(num);\n            else {\n                long sum2 = 0;\n                for (long num2 : sorted)\n                    sum2 += num2;\n                if (sum2 < sum)\n                    sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num)\n                result.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (sum % 10 == 0) {\n                result.Add(num);\n            }\n            else {\n                for (long i = 0; i < nums.Count; i++) {\n                    if (nums[i] == num) {\n                        result.Add(num);\n                        break;\n                    }\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num)\n                result.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (num == 0) continue;\n            if (sum == 0) {\n                result.Add(num);\n                continue;\n            }\n            int index = nums.IndexOf(num);\n            if (index == -1) {\n                result.Add(num);\n                continue;\n            }\n            result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (sum < 0) {\n                sum = 0;\n            }\n            else {\n                sum -= nums[i];\n            }\n        }\n        return result;",
    "        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                if (sums[i] == sums[j]) {\n                    result.Add(nums[i]);\n                    result.Add(nums[j]);\n                    i++;\n                    break;\n                }\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            result.Add(nums[i]);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            sums[(int)num % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (sum < 0) {\n                sum = 0;\n            }\n            sum -= nums[i];\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                result.Add(nums[i]);\n            else {\n                if (nums[i] == 0)\n                    result.Add(nums[i]);\n                else {\n                    if (nums[i] < 0)\n                        result.Add(nums[i]);\n                    else {\n                        if (nums[i] > 0)\n                            result.Add(nums[i]);\n                        else {\n                            if (nums[i] < 0)\n                                result.Add(nums[i]);\n                            else {\n                                if (nums[i] > 0)\n                                    result.Add(nums[i]);\n                                else {\n                                    if (nums[i] < 0)\n                                        result.Add(nums[i]);\n                                    else {\n                                        if (nums[i] > 0)\n                                            result.Add(nums[i]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num < 0) {\n                result.Add(-num);\n            }\n            else {\n                result.Add(num);\n            }\n        }\n        result.Sort((a, b) => {\n            return a.ToString().CompareTo(b.ToString());\n        });\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x.ToString().Split(' ')[0].ToLong());",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (nums[i] == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            long sum1 = 0;\n            for (long j = i + 1; j < nums.Count; j++) {\n                sum1 += nums[j];\n                if (sum1 == sum) {\n                    result.Add(nums[j]);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += Math.Abs(num);\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (result.Count == 0 || result.Last() < sum - num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums == null) return new List<long>();\n        if (nums.Count == 0) return nums;\n        long[] numsArray = nums.ToArray();\n        int[] sums = new int[numsArray.Length];\n        for (int i = 0; i < numsArray.Length; i++) {\n            sums[i] = numsArray[i] % 10;\n        }\n        Arrays.sort(sums);\n        List<long> result = new List<long>();\n        for (int i = 0; i < numsArray.Length; i++) {\n            result.Add(numsArray[i]);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num)\n                result.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x.ToString().Replace(\"-\", \"\").ToLong());",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == nums[i]) {\n                result.Add(nums[i]);\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum != nums[i]) {\n                result.Add(nums[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (result.Count == 0 || result.Last() != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = 0; j < nums[i].ToString().Length; j++) {\n                sum += nums[i].ToString().Chars[j] - '0';\n            }\n            result.Add(sum);\n        }\n        result.Sort(new Comparer<long>() {\n            public int Compare(long x, long y) {\n                if (x == y) return 0;\n                if (x < y) return -1;\n                return 1;\n            }\n        });\n        for (int i = 0; i < nums.Count; i++) {\n            nums[i] = result[i];\n        }\n        return nums;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num)\n                result.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            if (sum < 0) {\n                sum = 0;\n            }\n            sum -= nums[i];\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum - num == 0) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum - num != 0) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n                break;\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += Math.Abs(num);\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (result.Count == 0 || result.Last() < sum - num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        long sum = 0;\n        for (long n : nums) {\n            sum += Math.Abs(n);\n        }\n        List<long> result = new List<long>();\n        for (long n : nums) {\n            if (n < 0) {\n                result.Add(-n);\n            }\n            else {\n                result.Add(n);\n            }\n        }\n        result.Sort((a, b) => {\n            if (a < 0 && b < 0) {\n                return a < b ? -1 : a > b ? 1 : 0;\n            }\n            else if (a < 0) {\n                return -1;\n            }\n            else if (b < 0) {\n                return 1;\n            }\n            else {\n                return a - b;\n            }\n        });\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> result = new List<long>();\n        for (long num : nums) {\n            if (sum == num)\n                result.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        List<long> result = new List<long>();\n        for (long i = 0; i < nums.Count; i++) {\n            long n = nums[i];\n            if (sum - n < 0) {\n                result.Add(n);\n                sum -= n;\n            }\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            long n = nums[i];\n            if (sum - n >= 0) {\n                result.Add(n);\n                sum -= n;\n            }\n        }\n        return result;",
    "        if (nums.Count == 0)\n            return nums;\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            result.Add(nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = 0; j < nums.Count; j++) {\n                if (sums[i] == sums[j]) {\n                    if (i < j) {\n                        result.Remove(nums[j]);\n                        result.Insert(nums[i], j);\n                    }\n                    else {\n                        result.Remove(nums[i]);\n                        result.Insert(nums[j], i);\n                    }\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += i;\n        List<long> result = new List<long>();\n        for (long i : nums) {\n            if (sum - i < 0)\n                result.Add(i);\n        }\n        for (long i : nums) {\n            if (sum - i >= 0)\n                result.Add(i);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum < nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum > nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sum = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sum[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sum[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums == null)\n            return new List<long>();\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sorted.Add(sum);\n        }\n        sorted.Sort(new CompareBySumOfDigits());\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long num : nums)\n            sum += num;\n        List<long> result = new List<long>();\n        for (long num : nums)\n            result.Add(num);\n        result.Sort((a, b) => a - b);\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long[] sums = new long[10];\n        for (long num : nums) {\n            sums[(int)num % 10] += num;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < nums.Count; j++) {\n                if (sums[i] == nums[j]) {\n                    result.Add(nums[j]);\n                    nums.RemoveAt(j);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                sorted.Add(nums[i]);\n            else {\n                if (sum % 10 == 0) {\n                    sorted.Add(nums[i]);\n                    sum = 0;\n                }\n                else {\n                    sum -= nums[i];\n                }\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long[] sums = new long[9];\n        for (long num : nums) {\n            int digit = 0;\n            while (num != 0) {\n                digit = (int)(num % 10);\n                num /= 10;\n                sums[digit] += num;\n            }\n        }\n        for (int i = 0; i < 9; i++) {\n            if (sums[i] != 0) {\n                for (long num : nums) {\n                    if (num == 0)\n                        continue;\n                    if (num == nums.First)\n                        result.Add(num);\n                    if (num == nums.Last)\n                        result.Add(num);\n                    if (num > nums.First && num < nums.Last)\n                        result.Add(num);\n                }\n                break;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num)\n                result.Add(num);\n        }\n        for (long num : nums) {\n            if (sum != num)\n                result.Add(num);\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0) continue;\n            if (num < 0) {\n                num = -num;\n                sum -= num;\n            }\n            if (sum == 0) {\n                result.Add(num);\n                break;\n            }\n            if (sum < 0) {\n                result.Add(num);\n                sum = 0;\n            }\n            else {\n                sum -= num;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                break;\n            }\n            else {\n                if (sum % 10 == 0) {\n                    result.Add(nums[i]);\n                    sum = 0;\n                }\n                else {\n                    sum -= nums[i];\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums) {\n            sum += i;\n        }\n        List<long> result = new List<long>();\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0) {\n                result.Add(nums[i]);\n                continue;\n            }\n            long j = i;\n            while (j < nums.Count && nums[j] == nums[i]) {\n                j++;\n            }\n            if (j - i == 1) {\n                result.Add(nums[i]);\n                continue;\n            }\n            long k = i;\n            while (k < nums.Count && nums[k] == nums[j]) {\n                k++;\n            }\n            if (k - j == 1) {\n                result.Add(nums[j]);\n                continue;\n            }\n            long l = i;\n            while (l < nums.Count && nums[l] == nums[k]) {\n                l++;\n            }\n            if (l - k == 1) {\n                result.Add(nums[k]);\n                continue;\n            }\n            long m = i;\n            while (m < nums.Count && nums[m] == nums[l]) {\n                m++;\n            }\n            if (m - l == 1) {\n                result.Add(nums[l]);\n                continue;\n            }\n            long n = i;\n            while (n < nums.Count && nums[n] == nums[m]) {\n                n++;\n            }\n            if (n - m == 1) {\n                result.Add(nums[m]);\n                continue;\n            }\n            long o = i;\n            while (o < nums.Count && nums[o] == nums[n]) {\n                o++;\n            }\n            if (o - n == 1) {\n                result.Add(nums[n]);\n                continue;\n            }\n            long p = i",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum < nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum > nums[i]) {\n                result.Add(nums[i]);\n                nums.RemoveAt(i);\n                break;\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        List<long> temp = new List<long>();\n        for (long num : nums) {\n            temp.Add(num);\n        }\n        while (temp.Count > 0) {\n            long sum = 0;\n            for (long num : temp) {\n                sum += num % 10;\n            }\n            if (sorted.Count == 0 || sorted.Count > 0 && sorted.Last() != sum) {\n                sorted.Add(sum);\n            }\n            for (int i = 0; i < temp.Count; i++) {\n                if (temp[i] % 10 == sum) {\n                    temp.RemoveAt(i);\n                    break;\n                }\n            }\n        }\n        return sorted;",
    "        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += i;\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++)\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        Arrays.Sort(sums);\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++)\n            if (sums[i] == sum)\n                result.Add(nums[i]);\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (num == 0)\n                continue;\n            if (sum % 10 == 0) {\n                result.Add(num);\n            }\n            else {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += i;\n        List<long> result = new List<long>();\n        for (long i = 0; i < nums.Count; i++) {\n            if (sum == 0)\n                result.Add(nums[i]);\n            else {\n                long sum2 = 0;\n                for (long j = 0; j < nums.Count; j++) {\n                    if (nums[j] == i)\n                        sum2 += nums[j];\n                }\n                if (sum2 == sum)\n                    result.Add(nums[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        List<long> sorted = nums.OrderBy(x => x);\n        int index = 0;\n        long sum = 0;\n        while (index < sorted.Count) {\n            sum += sorted[index];\n            while (index < sorted.Count - 1 && sum == sorted[index + 1])\n                index++;\n            result.Add(sorted[index]);\n            index++;\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long[] sums = new long[nums.Count];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[i] = nums[i] * 10 + nums[i] % 10;\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            int index = 0;\n            for (int j = 0; j < nums.Count; j++) {\n                if (sums[j] == sums[i]) {\n                    index = j;\n                    break;\n                }\n            }\n            if (index != i) {\n                long temp = nums[i];\n                nums[i] = nums[index];\n                nums[index] = temp;\n            }\n        }\n        return nums;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum == nums[i]) {\n                result.Add(nums[i]);\n            }\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            if (sum != nums[i]) {\n                result.Add(nums[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        if (nums.Count == 0) return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        long sum = 0;\n        for (long i : nums)\n            sum += i;\n        List<long> result = new List<long>();\n        for (long i = 0; i < nums.Count; i++) {\n            long curSum = 0;\n            for (long j = 0; j < nums.Count; j++) {\n                if (nums[j] == i)\n                    curSum += nums[j];\n            }\n            if (curSum == sum)\n                result.Add(i);\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums.OrderBy(x => x);",
    "        // Write your code here\n        return nums.OrderBy(x => {\n            int sum = 0;\n            for (int i = 0; i < x.ToString().Length; i++) {\n                sum += x.ToString().Substring(i, 1).ToInt();\n            }\n            return sum;\n        });",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (long num : nums) {\n            int sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            sums[sum]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        if (nums == null)\n            return new List<long>();\n        List<long> sorted = new List<long>();\n        for (long num : nums) {\n            long sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            if (sorted.Count() == 0 || sorted.Last() < sum)\n                sorted.Add(sum);\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> sorted = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                sorted.Add(num);\n                break;\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                sorted.Add(num);\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0)\n            return nums;\n        List<long> result = new List<long>();\n        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        for (long num : nums) {\n            if (sum == num) {\n                result.Add(num);\n            }\n        }\n        for (long num : nums) {\n            if (sum != num) {\n                result.Add(num);\n            }\n        }\n        return result;",
    "        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n        List<long> sorted = nums.OrderBy(x => x);\n        for (int i = 0; i < sorted.Count - 1; i++) {\n            if (sorted[i] + sorted[i + 1] == sum) {\n                long temp = sorted[i];\n                sorted[i] = sorted[i + 1];\n                sorted[i + 1] = temp;\n            }\n        }\n        return sorted;",
    "        // Write your code here\n        if (nums.Count == 0) return nums;\n        List<long> result = new List<long>();\n        int[] sums = new int[10];\n        for (int i = 0; i < nums.Count; i++) {\n            sums[nums[i] % 10]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < sums[i]; j++) {\n                result.Add(i);\n            }\n        }\n        return result;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
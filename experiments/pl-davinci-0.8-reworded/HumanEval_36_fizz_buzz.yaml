name: HumanEval_36_fizz_buzz
language: pl
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nsub fizz_buzz {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fizz_buzz;\n\
  \        if(eq_deeply($candidate->(50),0)) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(78),2)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(79),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(200),6))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4000),192))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10000),639))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100000),8026))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $cnt = 0;\n    for my $i (1..$n) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $cnt += ($i =~ tr/7//);\n        }\n    }\n\
    \    return $cnt;\n}", "    my $count = 0;\n    for (1..$n) {\n        if (($_\
    \ % 11 == 0 || $_ % 13 == 0) && $_ =~ /7/) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i <\
    \ $n; $i++) {\n        if ( $i % 11 == 0 || $i % 13 == 0 ) {\n            my $num\
    \ = $i;\n            while ( $num > 0 ) {\n                if ( $num % 10 == 7\
    \ ) {\n                    $count++;\n                }\n                $num\
    \ = int($num / 10);\n            }\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    for (11..$n) {\n        next if $_ % 11 && $_ % 13;\n \
    \       my $digits = ();\n        for (split //, $_) {\n            $count++ if\
    \ $_ == 7;\n        }\n    }\n    return $count;\n}", "    my $result = 0;\n \
    \   while ($n > 0) {\n        $result += $n % 7;\n        $n = int $n / 10;\n\
    \    }\n    return $result;\n}", "    return grep(s{7$}{}, map($_ % 11 == 0 ||\
    \ $_ % 13 == 0 ? $_ : (), 1 .. $n - 1));\n}", "    return 0 if $n < 7;\n    $n\
    \ = int($n / 7) + 1;\n    return $n + int($n / 11) + int($n / 13) - int($n / 11\
    \ / 13);\n}", "    my $count = 0;\n    my $i = 0;\n    my $mult;\n    for (;;)\
    \ {\n\t$mult = 11 * $i;\n\tif ($mult >= $n) {\n\t    last;\n\t}\n\t$count += occur($mult,\
    \ 7);\n\t$mult = 13 * $i;\n\tif ($mult >= $n) {\n\t    last;\n\t}\n\t$count +=\
    \ occur($mult, 7);\n\t$i++;\n    }\n    return $count;\n}", "    my $rv = 0;\n\
    \    foreach my $i (1..$n-1) {\n        next unless $i % 11 == 0 or $i % 13 ==\
    \ 0;\n        while($i) {\n            $rv++ if $i % 10 == 7;\n            $i\
    \ /= 10;\n        }\n    }\n    return $rv;\n}", "    my $count = 0;\n    my $x\
    \ = 11;\n    while ($x < $n) {\n        if ($x % 11 == 0 or $x % 13 == 0) {\n\
    \            $count += grep { $_ == 7 } split(\"\", $x);\n        }\n        $x++;\n\
    \    }\n    return $count;\n}", "    my $res = 0;\n    for my $i (1..$n-1) {\n\
    \        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $num = $i;\n    \
    \        while ($num) {\n                if ($num % 10 == 7) {\n             \
    \       $res++;\n                }\n                $num /= 10;\n            }\n\
    \        }\n    }\n    return $res;\n}", "    my $n7 = 0;\n    my $num = 0;\n\
    \    my $ret = 0;\n    while ($num < $n) {\n        if (($num % 11 == 0) || ($num\
    \ % 13 == 0)) {\n            while ($num > 0) {\n                $n7++ if ($num\
    \ % 10 == 7);\n                $num /= 10;\n            }\n            $ret +=\
    \ $n7;\n            $n7 = 0;\n        }\n        $num++;\n    }\n    return $ret;\n\
    }", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 ==\
    \ 0 or $i % 13 == 0) {\n            my $tmp = $i;\n            while ($tmp) {\n\
    \                $count++ if $tmp % 10 == 7;\n                $tmp /= 10;\n  \
    \          }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13\
    \ == 0)) {\n            if ($i =~ /7/) {\n                $count++;\n        \
    \    }\n        }\n    }\n    return $count;\n}", "    return (($n % 11) == 0\
    \ || ($n % 13) == 0) ? ($n =~ tr/7//) : 0;\n}", "    my $count = 0;\n    for my\
    \ $i (1..$n-1) {\n        $count++ if (($i % 11 == 0 || $i % 13 == 0) && $i =~\
    \ /7/);\n    }\n    return $count;\n}", "    ...\n}", "    my $c = 0;\n    while\
    \ ($n > 0) {\n        my $m = $n % 10;\n        $c++ if ($m == 7);\n        $n\
    \ /= 10;\n    }\n    return $c;\n}", "    die \"n must be >= 2\" if $n < 2;\n\
    \    my $c = 0;\n    my @multiples_of_11 = grep {$_ % 11 == 0} 2..$n;\n    my\
    \ @multiples_of_13 = grep {$_ % 13 == 0} 2..$n;\n    my @multiples_of_11_and_13\
    \ = grep {$_ % 11 == 0 && $_ % 13 == 0} 2..$n;\n    my @all_multiples = (@multiples_of_11,\
    \ @multiples_of_13);\n    my %all_multiples = map {$_ => 1} @all_multiples;\n\
    \    my @unique_multiples = grep {!$all_multiples{$_}} @multiples_of_11_and_13;\n\
    \    push @unique_multiples, @all_multiples;\n    for my $multiple (@unique_multiples)\
    \ {\n        my $string_multiple = \"$multiple\";\n        my @characters = split(\"\
    \", $string_multiple);\n        for my $character (@characters) {\n          \
    \  if ($character == 7) {\n                $c++;\n            }\n        }\n \
    \   }\n    return $c;\n}", "    my $tot = 0;\n    my $mult = 2;\n    my $num =\
    \ $mult * 11;\n    while ($num < $n) {\n        my $cnt = 7_counter($num);\n \
    \       $tot += $cnt;\n        $mult += 1;\n        $num = $mult * 11;\n    }\n\
    \    $mult = 2;\n    $num = $mult * 13;\n    while ($num < $n) {\n        my $cnt\
    \ = 7_counter($num);\n        $tot += $cnt;\n        $mult += 1;\n        $num\
    \ = $mult * 13;\n    }\n    return $tot;\n}", "    my $sum = 0;\n    foreach my\
    \ $i(1..$n-1) {\n        my $result = $i%11;\n        my $result1 = $i%13;\n \
    \       if ($result == 0 or $result1 == 0) {\n            if ( $i =~ /7/ ) {\n\
    \                $sum += 1;\n            }\n        }\n    }\n    return $sum;\n\
    }", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        my $sum = 0;\n\
    \        my $num = $i;\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = int($num / 10);\n        }\n        $count++ if ($sum\
    \ == 7 and ($i % 11 == 0 or $i % 13 == 0));\n    }\n    return $count;\n}", " \
    \   return sum(\n        map { $_ =~ /7/g } grep { my $d = $_ % 11; $d == 0 ||\
    \ $d == 3 } 1 .. $n-1\n    );\n}", "    my $count = 0;\n    for my $i (1..$n-1)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            $count += ()\
    \ = $i =~ /7/g;\n        }\n    }\n    return $count;\n}", "    my $total = 0;\n\
    \    foreach my $x (1..$n-1) {\n        if ($x % 11 == 0 || $x % 13 == 0) {\n\
    \            my $x_string = $x . \"\";\n            $total += grep {$_ == 7} split\
    \ //, $x_string;\n        }\n    }\n    return $total;\n}", "    my $sum = 0;\n\
    \    my $i;\n    for ($i = 0; $i < $n; $i++) {\n        if (divisible_by_11_or_13($i))\
    \ {\n            $sum += occurrences_of_7($i);\n        }\n    }\n    return $sum;\n\
    }", "    my $count = 0;\n    for my $i ( 1 .. $n - 1 ) {\n        next if $i %\
    \ 11 && $i % 13;\n        $count++ while $i =~ /7/g;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            my $j = $i;\n            while ($j\
    \ > 0) {\n                if ($j % 10 == 7) {\n                    $count++;\n\
    \                }\n                $j = $j / 10;\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i <\
    \ $n; $i++) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n            $count\
    \ += () = $i =~ /7/g;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    foreach my $i (1..$n) {\n        if (($i % 11 == 0 || $i % 13 == 0)\
    \ && $i =~ /7/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $count += num_sevens($i);\n        }\n   \
    \ }\n    return $count;\n}", "    my $times = 0;\n    foreach my $i (1..$n-1)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $num = $i;\n\
    \            while ($num != 0) {\n                if ($num % 10 == 7) {\n    \
    \                $times++;\n                }\n                $num = int $num\
    \ / 10;\n            }\n        }\n    }\n    return $times;\n}", "    my $c =\
    \ 0;\n    for (my $i = 1; $i < $n; $i++) {\n        next unless ($i % 11 == 0\
    \ || $i % 13 == 0);\n        $c++ while ($i =~ s/7//);\n    }\n    return $c;\n\
    }", "    my $count = 0;\n    for (my $i = $n; $i > 0; $i--) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            $count += count7($i);\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n\
    \        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            if ($i =~ /7/) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for (1..$n-1) {\n        $count++ if /7/ && ($_ %\
    \ 11 == 0 || $_ % 13 == 0);\n    }\n    return $count;\n}", "    # Your code here\n\
    \    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if (($i % 11\
    \ == 0 || $i % 13 == 0) && $i =~ /7/) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}", "    # Fill this in\n    return 0;\n}", "    my\
    \ $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            while ($i > 0) {\n                if ($i % 10\
    \ == 7) {\n                    $count++;\n                }\n                $i\
    \ /= 10;\n            }\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $i (11..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n            if ($i =~ /7/) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (1..$n-1)\
    \ {\n        $count++ if $_ % 11 == 0 && $_ % 13 == 0 && /7/;\n        $count++\
    \ if $_ % 11 == 0 && /7/;\n        $count++ if $_ % 13 == 0 && /7/;\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my $num = $n - 1;\n    while\
    \ ($num > 0) {\n        if (($num % 11 == 0) || ($num % 13 == 0)) {\n        \
    \    my $number = $num;\n            while ($number > 0) {\n                my\
    \ $digit = $number % 10;\n                if ($digit == 7) {\n               \
    \     $count++;\n                }\n                $number = int($number / 10);\n\
    \            }\n        }\n        $num--;\n    }\n    return $count;\n}", " \
    \   my $fizz_buzz = 0;\n    foreach my $i (1..$n) {\n        if ($i % 11 == 0\
    \ or $i % 13 == 0) {\n            foreach my $digit (split(//, $i)) {\n      \
    \          if ($digit == 7) {\n                    $fizz_buzz += 1;\n        \
    \        }\n            }\n        }\n    }\n    return $fizz_buzz;\n}", "   \
    \ my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            my $t = $i;\n            while ($t > 0) {\n\
    \                if ($t % 10 == 7) {\n                    $count++;\n        \
    \        }\n                $t = int($t / 10);\n            }\n        }\n   \
    \ }\n    return $count;\n}", "    $n--;\n    return 0 if $n < 77;\n    my $count\
    \ = 0;\n    $count += int($n / 77);\n    $count += int($n / 11 / 10) if $n % 77\
    \ > 66;\n    $count += int($n / 13 / 10) if $n % 77 > 75;\n    return $count;\n\
    }", "    # ...\n}", "    my $cnt = 0;\n    for (my $i = 7; $i < $n; $i++) {\n\
    \        if ( ($i % 11 == 0 || $i % 13 == 0) && $i =~ /[7]/ ) {\n            $cnt++;\n\
    \        }\n    }\n    return $cnt;\n}", "    my $count;\n    foreach my $num\
    \ (1..$n) {\n        next if $num % 11 && $num % 13;\n        my $i = $num;\n\
    \        while ($i) {\n            $count++ if $i % 10 == 7;\n            $i /=\
    \ 10;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for\
    \ (1..$n) {\n        if ($_ % 11 == 0 or $_ % 13 == 0) {\n            my $n =\
    \ $_;\n            while ($n > 0) {\n                if ($n % 10 == 7) {\n   \
    \                 $count++;\n                }\n                $n = int $n /\
    \ 10;\n            }\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            my $x = $i;\n            while ($x > 0) {\n        \
    \        if ($x % 10 == 7) {\n                    $count++;\n                }\n\
    \                $x = int($x / 10);\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    my $n_fizz = int($n / 11);\n    my $n_buzz = int($n / 13);\n\
    \    my $n_fizz_buzz = int($n / (11 * 13));\n    my $n_fizz_contains = fizz_contains($n_fizz);\n\
    \    my $n_buzz_contains = buzz_contains($n_buzz);\n    my $n_fizz_buzz_contains\
    \ = fizz_buzz_contains($n_fizz_buzz);\n    return $n_fizz_contains + $n_buzz_contains\
    \ - $n_fizz_buzz_contains;\n}", "    my $count = 0;\n    for (my $i = 1; $i <\
    \ $n; $i++) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n            my $j\
    \ = $i;\n            while ($j > 0) {\n                if ($j % 10 == 7) {\n \
    \                   $count++;\n                }\n                $j = int($j\
    \ / 10);\n            }\n        }\n    }\n    return $count;\n}", "    die \"\
    fizz_buzz: Invalid input\" if $n < 1;\n    my $cnt = 0;\n    my $num = 11;\n \
    \   while ($num < $n) {\n        $cnt++ if $num % 11 == 0 || $num % 13 == 0;\n\
    \        $num++;\n    }\n    return $cnt;\n}", "    my $count = 0;\n    for (my\
    \ $i = 7; $i < $n; $i++) {\n        if (0 == $i % 11 || 0 == $i % 13) {\n    \
    \        my $s = $i;\n            while ($s) {\n                $count++ if (7\
    \ == $s % 10);\n                $s /= 10;\n            }\n        }\n    }\n \
    \   return $count;\n}", "    my($count) = 0;\n    for (my($i) = 1; $i < $n; $i++)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my($copy) =\
    \ $i;\n            while ($copy) {\n                if ($copy % 10 == 7) {\n \
    \                   $count++;\n                }\n                $copy /= 10;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $result = 0;\n\
    \    foreach my $i (0..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n\
    \            if ($i % 10 == 7) {\n                $result++;\n            }\n\
    \            if ($i >= 100) {\n                if ($i >= 700) {\n            \
    \        if ($i >= 7400) {\n                        if ($i >= 70000) {\n     \
    \                       $result++;\n                        }\n              \
    \          if ($i >= 74000) {\n                            $result++;\n      \
    \                  }\n                        if ($i >= 70000 && $i % 10 == 7)\
    \ {\n                            $result++;\n                        }\n     \
    \               }\n                    if ($i >= 70000 && $i % 10 == 7) {\n  \
    \                      $result++;\n                    }\n                   \
    \ if ($i >= 7000 && $i % 10 == 7) {\n                        $result++;\n    \
    \                }\n                }\n                if ($i >= 7000 && $i %\
    \ 10 == 7) {\n                    $result++;\n                }\n            \
    \    if ($i >= 700 && $i % 10 == 7) {\n                    $result++;\n      \
    \          }\n            }\n            if ($i >= 700 && $i % 10 == 7) {\n  \
    \              $result++;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $cnt = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            my $j = $i;\n            while ($j > 0) {\n\
    \                $cnt++ if $j % 10 == 7;\n                $j /= 10;\n        \
    \    }\n        }\n    }\n    return $cnt;\n}", "    my $total = 0;\n    my $i\
    \ = 1;\n    while($i < $n) {\n        $total++ if $i % 11 == 0 || $i % 13 == 0;\n\
    \        $i++;\n    }\n    return $total;\n}", "    my $count = 0;\n    foreach\
    \ my $number (11..$n-1) {\n        if ($number % 11 == 0 || $number % 13 == 0)\
    \ {\n            my $string = $number;\n            my @array = split //, $string;\n\
    \            foreach my $char (@array) {\n                if ($char == 7) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for my $i (11..$n-1)\
    \ {\n        $count++ if ($i % 11 == 0 || $i % 13 == 0) && (\"$i\" =~ /7/);\n\
    \    }\n    return $count;\n}", "    return 0 if $n <= 6;\n    return 1 if $n\
    \ == 7;\n    return 2 if $n == 8;\n    my $a = fizz_buzz($n-1);\n    my $b = fizz_buzz($n-2);\n\
    \    my $c = fizz_buzz($n-3);\n    return $a + $b + $c if $n % 11 == 0 or $n %\
    \ 13 == 0;\n    return $a;\n}", "    my $cnt = 0;\n    for (my $i = 1; $i < $n;\
    \ $i++) {\n        next if ($i % 11 and $i % 13);\n        for (my $j = $i; $j\
    \ > 0; $j /= 10) {\n            $cnt++ if ($j % 10 == 7);\n        }\n    }\n\
    \    return $cnt;\n}", "    my $num = 0;\n    foreach (11..$n-1) {\n        if\
    \ (($_ % 11 == 0) || ($_ % 13 == 0)) {\n            my $str = $_;\n          \
    \  $num += $str =~ tr/7//;\n        }\n    }\n    return $num;\n}", "    my $total\
    \ = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            $total += yn_count_7($i);\n        }\n    }\n    return\
    \ $total;\n}", "    # Your code here\n    my $count = 0;\n    foreach my $x (1..$n-1)\
    \ {\n        if ($x % 11 == 0 || $x % 13 == 0) {\n            my $str = $x;\n\
    \            while ($str =~ s/7//) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $result = 0;\n    for (my $i\
    \ = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n       \
    \     my $t = $i;\n            while ($t > 0) {\n                if ($t % 10 ==\
    \ 7) {\n                    $result++;\n                }\n                $t\
    \ = int($t / 10);\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $num_7s = 0;\n    if($n < 11) {\n        return 0;\n    }\n    for(my $i\
    \ = 11; $i < $n; $i++) {\n        if(($i % 11 == 0) || ($i % 13 == 0)) {\n   \
    \         my $tmp = $i;\n            while($tmp > 0) {\n                if($tmp\
    \ % 10 == 7) {\n                    $num_7s++;\n                }\n          \
    \      $tmp = int($tmp / 10);\n            }\n        }\n    }\n    return $num_7s;\n\
    }", "    my $c = 0;\n    for my $i (0..$n-1) {\n        next unless $i % 11 ==\
    \ 0 || $i % 13 == 0;\n        $c++ if $i =~ /7/;\n    }\n    return $c;\n}", " \
    \   ...\n}", "    my $c = 0;\n    foreach my $i ($n .. $n+50) {\n        if ($i\
    \ % 11 == 0) {\n            $c += digit_count($i, 7);\n        }\n        if ($i\
    \ % 13 == 0) {\n            $c += digit_count($i, 7);\n        }\n    }\n    return\
    \ $c;\n}", "    my $count = 0;\n    foreach my $num (1..$n) {\n        if ($num\
    \ % 11 == 0 or $num % 13 == 0) {\n            $count += grep { $_ == 7 } split(//,\
    \ $num);\n        }\n    }\n    return $count;\n}", "    my($count) = 0;\n   \
    \ my($i);\n    for ($i = 7; $i < $n; $i += 11) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $count += count_sevens($i);\n        }\n    }\n\
    \    return $count;\n}", "    my $num_7 = 0;\n    for my $i (1..$n) {\n      \
    \  if ($i % 11 == 0 || $i % 13 == 0) {\n            $num_7 += grep { $_ == 7 }\
    \ split //, $i;\n        }\n    }\n    return $num_7;\n}", "    my $x;\n    my\
    \ $c = 0;\n    my $y;\n    my $z;\n    my $d;\n    my $a;\n    my $b;\n    my\
    \ $div;\n    my $l;\n    my $mod;\n    $x = $n-1;\n    while ($x >= 0) {\n   \
    \     $y = $x;\n        while ($y > 0) {\n            $z = $y % 10;\n        \
    \    if ($z == 7) {\n                $c = $c + 1;\n            }\n           \
    \ $y = $y / 10;\n        }\n        $d = $x % 11;\n        $a = $x % 13;\n   \
    \     $b = $d + $a;\n        if ($b == 0) {\n            $x = $x - 1;\n      \
    \  }\n        else {\n            $x = $x - 2;\n        }\n    }\n    return $c;\n\
    }", "    my $cnt = 0;\n    foreach my $i (0..$n-1) {\n        next if ($i % 11\
    \ != 0 and $i % 13 != 0);\n        next if ($i < 10);\n        my $j = $i;\n \
    \       while ($j > 0) {\n            if ($j % 10 == 7) {\n                $cnt++;\n\
    \                last;\n            }\n            $j /= 10;\n        }\n    }\n\
    \    return $cnt;\n}", "    return scalar grep { /7/ } map { $_ % 11 == 0 || $_\
    \ % 13 == 0 ? $_ : () } 1 .. $n-1;\n}", "    my $i = 0;\n    my $count = 0;\n\
    \    while ($i < $n) {\n        $i++;\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            my $t = $i;\n            while ($t) {\n                $count++\
    \ if $t % 10 == 7;\n                $t /= 10;\n            }\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    for (11..$n) {\n        $count++\
    \ if ($_ % 11 == 0) || ($_ % 13 == 0);\n    }\n    return $count;\n}", "    my\
    \ $fb_sum = 0;\n    my $fb_p;\n    foreach (1..$n) {\n        $fb_p = fizz_buzz_prime($_);\n\
    \        if ($fb_p == 0) {\n            $fb_sum += count_sevens($_);\n       \
    \ }\n    }\n    return $fb_sum;\n}", "    my($i, $j);\n    my($digits);\n    my($count)\
    \ = 0;", "    my $f = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            my $s = $i;\n            while ($s\
    \ > 0) {\n                if ($s % 10 == 7) {\n                    $f++;\n   \
    \             }\n                $s = int($s / 10);\n            }\n        }\n\
    \    }\n    return $f;\n}", "    return sum map {\n        my $num = $_;\n   \
    \     my $count = 0;\n        while ($num >= 7) {\n            $count++ if ($num\
    \ % 10 == 7);\n            $num = int($num / 10);\n        }\n        $count;\n\
    \    } grep { $_ % 11 == 0 || $_ % 13 == 0 } (1 .. $n - 1);\n}", "    my $cnt\
    \ = 0;\n    foreach my $i (1..$n) {\n        $cnt++ if $i % 11 == 0 && $i % 13\
    \ == 0 && $i =~ /7/;\n    }\n    return $cnt;\n}", "    my $count = 0;\n    for\
    \ (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n\
    \            $count += ($i =~ tr/7//);\n        }\n    }\n    return $count;\n\
    }", "    my($result) = 0;\n    for (my($i) = 0; $i < $n; $i += 11) {\n       \
    \ if ($i % 13 == 0) {\n            next;\n        }\n        if ($i % 10 == 7)\
    \ {\n            $result++;\n        }\n        if (int($i / 10) % 10 == 7) {\n\
    \            $result++;\n        }\n    }\n    for (my($i) = 0; $i < $n; $i +=\
    \ 13) {\n        if ($i % 11 == 0) {\n            next;\n        }\n        if\
    \ ($i % 10 == 7) {\n            $result++;\n        }\n        if (int($i / 10)\
    \ % 10 == 7) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }", "    my $i;\n    my $answer = 0;\n    for ($i = 1; $i < $n; $i++) {\n    \
    \    if ($i % 11 == 0 || $i % 13 == 0) {\n            while ($i > 0) {\n     \
    \           $answer++ if $i % 10 == 7;\n                $i /= 10;\n          \
    \  }\n        }\n    }\n    return $answer;\n}", "    return grep {\n        #$_\
    \ % 11 == 0 && $_ % 13 == 0 ? $_ =~ tr/7// :\n        #$_ % 11 == 0 ? $_ =~ tr/7//\
    \ :\n        #$_ % 13 == 0 ? $_ =~ tr/7// : 0\n        $_ % 11 == 0 || $_ % 13\
    \ == 0 ? $_ =~ tr/7// : 0\n    } (1..$n-1);\n}", "    my $count = 0;\n    for\
    \ (my $i = 1; $i < $n; $i++) {\n        $count++ if ($i % 11 == 0 || $i % 13 ==\
    \ 0) && $i =~ /7/;\n    }\n    return $count;\n}", "    my $r = 0;\n    for my\
    \ $i (11 .. $n-1) {\n        next unless $i % 11 == 0 or $i % 13 == 0;\n     \
    \   $r += () = ($i =~ /7/g);\n    }\n    return $r;\n}", "    ...\n}", "    my\
    \ $count = 0;\n    foreach my $i (1..$n) {\n\t$count++ if (($i % 11 == 0) || ($i\
    \ % 13 == 0)) && ($i =~ m/7/);\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for (11..$n) {\n        $count++ if $_ % 11 == 0 || $_ % 13 == 0;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n\
    \        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $tmp = $i;\n\
    \            while ($tmp > 0) {\n                $count++ if ($tmp % 10 == 7);\n\
    \                $tmp /= 10;\n            }\n        }\n    }\n    return $count;\n\
    }", "    # Your code here!\n    my $count = 0;\n    for (my $i = 0; $i < $n; $i++)\
    \ {\n      if ($i % 11 == 0 or $i % 13 == 0) {\n        my $num = $i;\n      \
    \  while ($num > 0) {\n          if ($num % 10 == 7) {\n            $count++;\n\
    \          }\n          $num = $num / 10;\n        }\n      }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n   \
    \     if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $j = $i;\n     \
    \       while ($j > 0) {\n                if ($j % 10 == 7) {\n              \
    \      $count++;\n                }\n                $j = int($j / 10);\n    \
    \        }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n  \
    \  for my $i (1..$n-1) {\n        $count++ if $i % 11 == 0 || $i % 13 == 0 &&\
    \ $i =~ /7/;\n    }\n    return $count;\n}", "    my $sum = 0;\n    for (1..$n)\
    \ {\n        $sum++ if ($_ % 11 == 0 || $_ % 13 == 0) && /7/;\n    }\n    return\
    \ $sum;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        $count++\
    \ if (($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/);\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    while($n > 1) {\n        if ($n % 13 == 0 || $n %\
    \ 11 == 0) {\n            my $t = $n;\n            while($t > 0) {\n         \
    \       $count++ if ($t % 10 == 7);\n                $t /= 10;\n            }\n\
    \        }\n        $n--;\n    }\n    return $count;\n}", "    my $total = 0;\n\
    \    for (my $i = 7; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            $total += $i =~ s/7//g;\n        }\n    }\n    return $total;\n\
    }", "    my $total = 0;\n    for my $i (0..$n) {\n        if (($i % 11 == 0 ||\
    \ $i % 13 == 0) && ($i % 7 == 0)) {\n            $total++;\n        }\n    }\n\
    \    return $total;\n}", "    my $c = 0;\n    for my $m (1..$n-1) {\n        $c++\
    \ if ($m % 11 == 0 or $m % 13 == 0) and $m =~ /7/;\n    }\n    return $c;\n}",
  "    my $digits = get_digits($n);\n    my $count = 0;\n    foreach my $digit (@$digits)\
    \ {\n        if ($digit == 7) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        $count++ if $i % 11 == 0 || $i % 13 == 0 && $i =~ /7/;\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n \
    \       next unless $i % 11 == 0 || $i % 13 == 0;\n        $count++ if $i =~ /7/;\n\
    \    }\n    return $count;\n}", "    # your code here\n}", "    my $count = 0;\n\
    \    for my $i (1..$n) {\n        my $digit7 = 0;\n        if ($i % 11 == 0 or\
    \ $i % 13 == 0) {\n            for my $digit (split //, $i) {\n              \
    \  if ($digit == 7) {\n                    $digit7++;\n                }\n   \
    \         }\n            $count += $digit7;\n        }\n    }\n    return $count;\n\
    }", "    my($i, $sum) = (0, 0);\n    while($i < $n) {\n        if($i % 11 == 0\
    \ || $i % 13 == 0) {\n            while($i > 0) {\n                $sum += ($i\
    \ % 10 == 7) ? 1 : 0;\n                $i /= 10;\n            }\n        }\n \
    \       $i++;\n    }\n    return $sum;\n}", "    my $count = 0;\n    for my $i\
    \ (1..$n-1) {\n        if ( $i % 11 == 0 || $i % 13 == 0 ) {\n            while\
    \ ( $i != 0 ) {\n                $count++ if ( $i % 10 == 7 );\n             \
    \   $i /= 10;\n            }\n        }\n    }\n    return $count;\n}", "    my\
    \ $counter = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if (($i % 11 ==\
    \ 0 || $i % 13 == 0) && $i =~ /7/) {\n            $counter++;\n        }\n   \
    \ }\n    return $counter;\n}", "    my $count = 0;\n    if ($n > 0) {\n      \
    \  foreach my $i (1..$n-1) {\n            if (($i % 11 == 0) || ($i % 13 == 0))\
    \ {\n                while ($i > 0) {\n                    my $r = $i % 10;\n\
    \                    if ($r == 7) {\n                        $count++;\n     \
    \               }\n                    $i = $i / 10;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}", "    return 0 unless $n\
    \ > 0;\n    my $nums = $n - 1;\n    my $fizz_nums = floor($n / 11);\n    my $buzz_nums\
    \ = floor($n / 13);\n    my $fizz_buzz_nums = floor($n / (11 * 13));\n    my $fizz_count\
    \ = $fizz_nums - $fizz_buzz_nums;\n    my $buzz_count = $buzz_nums - $fizz_buzz_nums;\n\
    \    my $all_count = $fizz_count + $buzz_count + $fizz_buzz_nums;\n    my $fizz_sevens\
    \ = fizz_buzz_sevens($fizz_count);\n    my $buzz_sevens = fizz_buzz_sevens($buzz_count);\n\
    \    my $fizz_buzz_sevens = fizz_buzz_sevens($fizz_buzz_nums);\n    my $sevens\
    \ = $fizz_sevens + $buzz_sevens + $fizz_buzz_sevens;\n    my $zeros = fizz_buzz_zeros($n);\n\
    \    return $all_count - $sevens - $zeros;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (1..$n) {\n        next if $i % 11 and $i % 13;\n        $sum += $i =~\
    \ tr/7//;\n    }\n    return $sum;\n}", "    my $cnt = 0;\n    foreach my $i (1..$n-1)\
    \ {\n        $cnt++ if($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n  \
    \  return $cnt;\n}", "    if($n <= 0) { return 0 }\n    my($i, $sum);\n    for($i\
    \ = 0; $i < $n; $i++) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n        \
    \    my($j) = $i;\n            while($j > 0) {\n                if($j % 10 ==\
    \ 7) { $sum++ }\n                $j /= 10;\n            }\n        }\n    }\n\
    \    return $sum;\n}", "    my $result = 0;\n    for my $i (1..$n-1) {\n     \
    \   if ($i % 11 == 0 || $i % 13 == 0) {\n            my $num = $i;\n         \
    \   while ($num) {\n                if ($num % 10 == 7) {\n                  \
    \  $result++;\n                }\n                $num = int($num / 10);\n   \
    \         }\n        }\n    }\n    return $result;\n}", "    my $result = 0;\n\
    \    for my $i (1..$n) {\n        next if ($i % 11 != 0 && $i % 13 != 0);\n  \
    \      $result += $i =~ tr/7//;\n    }\n    return $result;\n}", "    my $count\
    \ = 0;\n    for my $i (1..$n-1) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n\
    \            my $temp = $i;\n            while ($temp > 0) {\n               \
    \ $count++ if $temp % 10 == 7;\n                $temp /= 10;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my($num) = 0;\n    for my $i (1..$n-1)\
    \ {\n        if(($i % 11 == 0) || ($i % 13 == 0)) {\n            $num++ if($i\
    \ =~ /7/);\n        }\n    }\n    return $num;\n}", "    my $count = 0;\n    while\
    \ ($n > 0) {\n        if ($n % 11 == 0 || $n % 13 == 0) {\n            $count\
    \ += () = $n =~ /7/g;\n        }\n        $n--;\n    }\n    return $count;\n}",
  "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if (is_divisible($i,\
    \ 11) or is_divisible($i, 13)) {\n            $count += count_7s($i);\n      \
    \  }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (11..$n-1) {\n\
    \        if ($_ % 11 == 0 || $_ % 13 == 0) {\n            $count += ($_ =~ tr/7//);\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i\
    \ = 1; $i < $n; $i++) {\n        $count++ if($i % 11 == 0 || $i % 13 == 0) &&\
    \ $i =~ /7/;\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my\
    \ $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n    \
    \        $count += $i =~ tr/7//;\n        }\n    }\n    return $count;\n}", " \
    \   my $i = 1;\n    my $sum = 0;\n    while ($i < $n) {\n        if (($i % 11\
    \ == 0) || ($i % 13 == 0)) {\n            my $j = $i;\n            while ($j >\
    \ 0) {\n                if ($j % 10 == 7) {\n                    $sum++;\n   \
    \             }\n                $j = int($j / 10);\n            }\n        }\n\
    \        $i++;\n    }\n    return $sum;\n}", "    my $count;\n    for( my $i =\
    \ 6; $i < $n; $i++ ) {\n        if( $i % 11 == 0 or $i % 13 == 0 ) {\n       \
    \     my $j = $i;\n            while( $j > 0 ) {\n                $count++ if\
    \ $j % 10 == 7;\n                $j /= 10;\n            }\n        }\n    }\n\
    \    return $count;\n}", "    return 0 unless $n;\n    my $result = 0;\n    for\
    \ my $i (1..$n-1) {\n        $result++ if ($i % 11 == 0 || $i % 13 == 0) && ($i\
    \ =~ /7/);\n    }\n    return $result;\n}", "    my $count = 0;\n    for my $i\
    \ (1..$n-1) {\n        $count++ if ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n\
    \    }\n    return $count;\n}", "    # ...\n}", "    my $r = 0;\n    foreach my\
    \ $i (1..$n-1) {\n        if (($i % 11 == 0 || $i % 13 == 0) && $i =~ m/7/) {\n\
    \            $r++;\n        }\n    }\n    return $r;\n}", "    my $count = 0;\n\
    \    for (my $i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            my $temp = $i;\n            while ($temp) {\n            \
    \    $count++ if $temp % 10 == 7;\n                $temp /= 10;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    # YOUR CODE HERE\n}", "    my\
    \ $total = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            my $num = $i;\n            while ($num > 0) {\n    \
    \            if ($num % 10 == 7) {\n                    $total++;\n          \
    \      }\n                $num = int($num / 10);\n            }\n        }\n \
    \   }\n    return $total;\n}", "    my $i = 0;\n    my $count = 0;\n    while($i\
    \ < $n) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n            my $tmp = $i;\n\
    \            while($tmp) {\n                $count++ if($tmp % 10 == 7);\n   \
    \             $tmp /= 10;\n            }\n        }\n        $i++;\n    }\n  \
    \  return $count;\n}", "    my $num_sevens = 0;\n    my $current_num = $n - 1;\n\
    \    while($current_num >= 0) {\n        if($current_num % 11 == 0 || $current_num\
    \ % 13 == 0) {\n            $num_sevens += () = $current_num =~ /7/g;\n      \
    \  }\n        $current_num--;\n    }\n    return $num_sevens;\n}", "    my $divisors\
    \ = [11, 13];\n    my $return_val = 0;\n    for (1..$n) {\n        if (($_ % ($divisors->[0]\
    \ * $divisors->[1])) == 0) {\n            $return_val++ if $_ =~ /7/;\n      \
    \  }\n        elsif ($_ % $divisors->[0] == 0) {\n            $return_val++ if\
    \ $_ =~ /7/;\n        }\n        elsif ($_ % $divisors->[1] == 0) {\n        \
    \    $return_val++ if $_ =~ /7/;\n        }\n    }\n    return $return_val;\n}",
  "    return 0 if $n < 7;\n    my($sevens) = 0;\n    my($m) = int($n / 7);\n    my($total)\
    \ = $m * 6;\n    $sevens += $m;\n    my($remainder) = $n % 7;\n    my($i) = 6;\n\
    \    while ($i <= $remainder) {\n        $i += 11;\n        $sevens++;\n    }\n\
    \    $i = 4;\n    while ($i <= $remainder) {\n        $i += 13;\n        $sevens++;\n\
    \    }\n    return $sevens;\n}", "    my $count = 0;\n    for (my $i = 1; $i <\
    \ $n; $i++){\n        if ($i % 11 == 0 || $i % 13 == 0){\n            my $temp\
    \ = $i;\n            while ($temp > 0){\n                if ($temp % 10 == 7){\n\
    \                    $count++;\n                }\n                $temp = int($temp\
    \ / 10);\n            }\n        }\n    }\n    return $count;\n}", "    my($r)\
    \ = 0;\n    for (my($i) = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n            my($s) = $i;\n            while ($s > 0) {\n     \
    \           if ($s % 10 == 7) {\n                    $r++;\n                }\n\
    \                $s = int($s / 10);\n            }\n        }\n    }\n    return\
    \ $r;\n}", "    my $times = 0;\n    foreach my $i (0..$n) {\n        if ($i %\
    \ 11 == 0) {\n            $times += count_sevens($i);\n        }\n        elsif\
    \ ($i % 13 == 0) {\n            $times += count_sevens($i);\n        }\n    }\n\
    \    return $times;\n}", "    my $n_of_7 = 0;\n    for my $i (1..$n-1) {\n   \
    \     if ($i % 11 == 0 or $i % 13 == 0) {\n            $n_of_7 += count_7($i);\n\
    \        }\n    }\n    return $n_of_7;\n}", "    my $f = $n / 11;\n    my $b =\
    \ $n / 13;\n    my $fb = $n / (11 * 13);\n    return $f + $b - $fb;\n}", "   \
    \ my $res = 0;\n    for my $i (11..$n-1) {\n        if($i % 11 == 0 or $i % 13\
    \ == 0) {\n            $res += () = $i =~ /7/g;\n        }\n    }\n    return\
    \ $res;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i\
    \ % 11 == 0 or $i % 13 == 0) {\n            my $temp = $i;\n            while\
    \ ($temp > 0) {\n                if ($temp % 10 == 7) {\n                    $count++;\n\
    \                }\n                $temp = int($temp / 10);\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i\
    \ = 7; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n   \
    \         $count += count_sev_digits($i);\n        }\n    }\n    return $count;\n\
    }", "    my $ctr = 0;\n    for my $i (1..$n-1) {\n        if ( $i % 11 == 0 or\
    \ $i % 13 == 0 ) {\n            $ctr += scalar( split //, $i ) =~ /7/;\n     \
    \   }\n    }\n    return $ctr;\n}", "    my $fizz = int(($n-1)/11);\n    my $buzz\
    \ = int(($n-1)/13);\n    my $fb = int(($n-1)/(11*13));\n    return $fizz + $buzz\
    \ - $fb;\n}", "    return 0 if $n < 1;\n    return fizz_buzz($n-1) + (num_sevens($n)\
    \ && (0 == $n % 11 or 0 == $n % 13));\n}", '    return -1 if( !$n );', "    my\
    \ $count = 0;\n    for (1..$n) {\n        next unless ($_ % 11 == 0 || $_ % 13\
    \ == 0);\n        $count++ while $_ =~ s/7//;\n    }\n    return $count;\n}",
  "    return 0 if $n < 7;\n    my $count = 0;\n    my $i = 7;\n    while ($i < $n)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $x = $i;\n  \
    \          $count++ while $x = int($x / 10);\n        }\n        $i++;\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    for (1..$n-1) {\n        $count++\
    \ if (/7/ && (($_ % 11 == 0) || ($_ % 13 == 0)));\n    }\n    return $count;\n\
    }", "    my $i;\n    my $count = 0;\n    for ($i = 11; $i < $n; $i++) {\n    \
    \    if ($i % 11 == 0 || $i % 13 == 0) {\n            my $tmp = $i;\n        \
    \    while ($tmp > 0) {\n                if ($tmp % 10 == 7) {\n             \
    \       $count++;\n                }\n                $tmp = int($tmp / 10);\n\
    \            }\n        }\n    }\n    return $count;\n}", "    ...\n}", "    my\
    \ $f=0;\n    for (my $i=11; $i<$n; $i++) {\n        if ($i % 11 == 0 or $i % 13\
    \ == 0) {\n            my $ii = $i;\n            while ($ii != 0) {\n        \
    \        if ($ii % 10 == 7) {\n                    $f++;\n                }\n\
    \                $ii = int($ii / 10);\n            }\n        }\n    }\n    return\
    \ $f;\n}", "    my $counter = 0;\n    for (1..$n) {\n\tif ($_ % 11 == 0 || $_\
    \ % 13 == 0) {\n\t    for (my $i = 0; $i < length($_); $i++) {\n\t\t$counter++\
    \ if substr($_, $i, 1) == 7;\n\t    }\n\t}\n    }\n    return $counter;\n}", " \
    \   my $result = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i % 11\
    \ == 0 || $i % 13 == 0) {\n            $result += num_7($i);\n        }\n    }\n\
    \    return $result;\n}", "    if ( $n % 11 == 0 or $n % 13 == 0 ) {\n       \
    \ return scalar(grep { $_ == 7 } split(//, $n));\n    }\n    return 0;\n}", " \
    \   my $count = 0;\n    for (my $i = 7; $i < $n; $i++) {\n        $count++ if\
    \ ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n    }\n    return $count;\n}",
  "    my $count;\n    my $digit;\n    for(my $i = 7; $i < $n; $i++) {\n        next\
    \ if($i % 11 and $i % 13);\n        $digit = $i;\n        while($digit) {\n  \
    \          $count++ if($digit % 10 == 7);\n            $digit /= 10;\n       \
    \ }\n    }\n    return $count;\n}", "    my $number_of_7s = 0;\n    for my $i\
    \ (1..$n) {\n        next if $i % 11 and $i % 13;\n        $number_of_7s += $i\
    \ =~ tr/7//;\n    }\n    return $number_of_7s;\n}", "    my $i = 0;\n    my $count\
    \ = 0;\n    my $div_by_11 = 0;\n    my $div_by_13 = 0;\n    my $num_7s = 0;\n\
    \    my $num = 0;\n    my $div_remainder = 0;\n    my $div_seven = 0;\n    while\
    \ ($i < $n) {\n\t$num = $i;\n\t$div_remainder = $num % 11;\n\t$div_seven = $num\
    \ % 7;\n\tif ($div_remainder == 0) {\n\t    $div_by_11 = 1;\n\t}\n\telse {\n\t\
    \    $div_by_11 = 0;\n\t}\n\t$div_remainder = $num % 13;\n\tif ($div_remainder\
    \ == 0) {\n\t    $div_by_13 = 1;\n\t}\n\telse {\n\t    $div_by_13 = 0;\n\t}\n\t\
    if ($div_by_11 == 1 or $div_by_13 == 1) {\n\t    while ($num > 0) {\n\t\t$div_remainder\
    \ = $num % 10;\n\t\tif ($div_remainder == 7) {\n\t\t    $num_7s = $num_7s + 1;\n\
    \t\t}\n\t\t$num = $num / 10;\n\t    }\n\t    $count = $count + $num_7s;\n\t  \
    \  $num_7s = 0;\n\t}\n\t$i = $i + 1;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    # YOUR CODE HERE\n    for my $x (1..$n) {\n    \tif ($x % 11 == 0\
    \ || $x % 13 == 0) {\n    \t\tmy $n = $x;\n    \t\tmy $count2 = 0;\n    \t\twhile\
    \ ($n > 0) {\n    \t\t\tif ($n % 10 == 7) {\n    \t\t\t\t$count2++;\n    \t\t\t\
    }\n    \t\t\t$n = int($n / 10);\n    \t\t}\n    \t\t$count += $count2;\n    \t\
    }\n    }\n    return $count;\n}", "    my $count = 0;\n    for my $i (1..$n-1)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $num = $i;\n\
    \            while ($num > 0) {\n                if ($num % 10 == 7) {\n     \
    \               $count++;\n                }\n                $num = int($num\
    \ / 10);\n            }\n        }\n    }\n    return $count;\n}", "    my($count)\
    \ = 0;\n    for(my($i) = 11; $i < $n; $i++) {\n        if($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            my($tmp) = $i;\n            while($tmp != 0) {\n   \
    \             $count++ if($tmp % 10 == 7);\n                $tmp /= 10;\n    \
    \        }\n        }\n    }\n    return $count;\n}", "    my $total = 0;\n  \
    \  for (1..$n) {\n        next unless $_ % 11 == 0 or $_ % 13 == 0;\n        $total\
    \ += count_sevens($_);\n    }\n    return $total;\n}", "    my $result = 0;\n\
    \    foreach my $i (0..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n\
    \            $result += $i  =~ tr/7//;\n        }\n    }\n    return $result;\n\
    }", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            my $s = $i;\n            while ($s\
    \ > 0) {\n                $count++ if $s % 10 == 7;\n                $s /= 10;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for my $i (1..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n    \
    \        while ($i > 0) {\n                if ($i % 10 == 7) {\n             \
    \       $count++;\n                }\n                $i = int($i / 10);\n   \
    \         }\n        }\n    }\n    return $count;\n}", "    my $counter = 0;\n\
    \    foreach my $i (1..$n-1) {\n        if (($i % 11 == 0 || $i % 13 == 0) &&\
    \ $i % 10 == 7) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }", "    # Your code here\n    my $count = 0;\n    my $i;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        if ( ($i % 11 == 0) || ($i % 13 == 0) ) {\n         \
    \   my $j = $i;\n            while ($j > 0) {\n                if ( $j % 10 ==\
    \ 7 ) {\n                    $count++;\n                }\n                $j\
    \ = $j / 10;\n            }\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    foreach my $num (11 .. $n-1) {\n        if (($num % 11 == 0)\
    \ || ($num % 13 == 0)) {\n            my $digit = $num % 10;\n            while\
    \ ($num > 0) {\n                if ($num % 10 == 7) {\n                    $count++;\n\
    \                }\n                $num = $num / 10;\n            }\n       \
    \ }\n    }\n    return $count;\n}", "    return grep {$_ % 11 == 0 || $_ % 13\
    \ == 0} grep {/7/} map {split //} 1..$n-1;\n}", "    my $count = 0;\n    for (1..$n-1)\
    \ {\n        $count++ if ($_ % 11 == 0 or $_ % 13 == 0) and /7/;\n    }\n    return\
    \ $count;\n}", "    my($count);\n    for (my($i) = 0; $i < $n; $i++) {\n     \
    \   if ($i % 11 == 0 || $i % 13 == 0) {\n            my($j) = $i;\n          \
    \  while ($j > 0) {\n                if ($j % 10 == 7) {\n                   \
    \ $count++;\n                }\n                $j = $j / 10;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $seven_count = 0;\n    for\
    \ (my $x = 0; $x < $n; $x++) {\n        my $mod_11 = $x % 11;\n        my $mod_13\
    \ = $x % 13;\n        if ($mod_11 == 0 || $mod_13 == 0) {\n            $seven_count\
    \ += count_7($x);\n        }\n    }\n    return $seven_count;\n}", "    my $count\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 or $i %\
    \ 13 == 0) {\n            while ($i > 0) {\n                if ($i % 10 == 7)\
    \ {\n                    $count++;\n                }\n                $i /= 10;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for (my $i = 7; $i < $n; $i++) {\n        $count++ if (($i % 11 == 0 || $i\
    \ % 13 == 0) && $i =~ /7/);\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for (1..$n-1) {\n        $count++ if /^(?=[13]*7)[13]*$/;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n   \
    \     if ($i % 11 == 0 || $i % 13 == 0) {\n            $count += count_sevens($i);\n\
    \        }\n    }\n    return $count;\n}", "    # Your code here\n    my $count\
    \ = 0;\n    foreach my $i (1..$n-1) {\n        if (($i % 11 == 0 || $i % 13 ==\
    \ 0) && $i =~ /7/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    # Your code here\n    if($n<=0){\n        return 0;\n    }\n    else{\n\
    \        my $count = 0;\n        for (my $i = 11; $i <= $n-1; $i+=11) {\n    \
    \        $count += count_7s($i);\n        }\n        for (my $i = 13; $i <= $n-1;\
    \ $i+=13) {\n            $count += count_7s($i);\n        }\n        return $count;\n\
    \    }\n}", "    return int($n/11) + int($n/13) - int($n/143);\n}", "    my $count\
    \ = 0;\n    for (1..$n-1) {\n        my $s = $_;\n        my $t = 0;\n       \
    \ do {\n            $t++ if $s % 10 == 7;\n            $s = int($s / 10);\n  \
    \      } while $s > 0;\n        $count += $t if $_ % 11 == 0 || $_ % 13 == 0;\n\
    \    }\n    return $count;\n}", "    my $r = 0;\n    for (my $i = 0; $i < $n;\
    \ $i++) {\n        $r++ if ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n   \
    \ }\n    return $r;\n}", "    my $count = 0;\n    for (1..$n) {\n\t$count++ if\
    \ ($_ % 11 == 0 || $_ % 13 == 0) && $_ % 10 == 7;\n    }\n    return $count;\n\
    }", "    # Your code here\n}", "    my $i = 1;\n    my $count = 0;\n    while($i\
    \ < $n) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n            if($i =~ /7/)\
    \ {\n                $count++;\n            }\n        }\n        $i++;\n    }\n\
    \    return $count;\n}", "    my($count, $num);\n    for ($num = 10; $num < $n;\
    \ $num++) {\n\t$count++ if ($num % 11 == 0 || $num % 13 == 0) && $num =~ /7/;\n\
    \    }\n    return $count;\n}", "    return 1 if $n <= 7;\n    return fizz_buzz($n-1)\
    \ + ($n % 11 == 0 || $n % 13 == 0 ? int($n/10) : 0);\n}", "    return _fizz_buzz($n,\
    \ 0);\n}", '    return 0 if ($n < 11);', "    my $ans = 0;\n    # TODO\n    return\
    \ $ans;\n}", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n     \
    \   if ($i % 11 == 0 || $i % 13 == 0) {\n            my $i_dup = $i;\n       \
    \     while ($i_dup > 0) {\n                if ($i_dup % 10 == 7) {\n        \
    \            $count++;\n                }\n                $i_dup = $i_dup / 10;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $sum = 0;\n\
    \    for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13\
    \ == 0)) {\n            my $temp = $i;\n            while ($temp > 0) {\n    \
    \            if ($temp % 10 == 7) {\n                    $sum++;\n           \
    \     }\n                $temp = int($temp / 10);\n            }\n        }\n\
    \    }\n    return $sum;\n}", "    my $result = 0;\n    for (my $i = 1; $i < $n;\
    \ $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            $result\
    \ += count_7s($i);\n        }\n    }\n    return $result;\n}", "    if ($n ==\
    \ 0) { return 0; }\n    my $res = 0;\n    for (my $i = 1; $i < $n; $i++) {\n \
    \       if ($i % 11 == 0 || $i % 13 == 0) {\n            $res += grep { $_ ==\
    \ 7 } split('', $i);\n        }\n    }\n    return $res;\n}", "    my $counter\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 7 == 0) {\n   \
    \         $counter++;\n        }\n    }\n    return $counter;\n}", "    my $ret\
    \ = 0;\n    my $cur = 7;\n    my $fac = 11;\n    do {\n        if ($cur % $fac\
    \ == 0) {\n            $ret++;\n        }\n        $cur += 10;\n    } while ($cur\
    \ < $n);\n    $fac = 13;\n    $cur = 7;\n    do {\n        if ($cur % $fac ==\
    \ 0) {\n            $ret++;\n        }\n        $cur += 10;\n    } while ($cur\
    \ < $n);\n    return $ret;\n}", "    my $sum = 0;\n    for (my $i = 7; $i < $n;\
    \ $i += 14) {\n        if ($i % 11 == 0) {\n            $sum++;\n        }\n \
    \       elsif ($i % 13 == 0) {\n            $sum++;\n        }\n    }\n    return\
    \ $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_36_fizz_buzz
language: pl
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nsub fizz_buzz {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fizz_buzz;\n\
  \        if(eq_deeply($candidate->(50),0)) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(78),2)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(79),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(200),6))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4000),192))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10000),639))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100000),8026))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        $count++\
    \ if ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            $count += tr/7//;\n        }\n   \
    \ }\n    return $count;\n}", "    my $num_7s = 0;\n    foreach my $num (11..$n-1)\
    \ {\n        if (($num % 11 == 0 || $num % 13 == 0) && $num =~ /7/) {\n      \
    \      $num_7s++;\n        }\n    }\n    return $num_7s;\n}", "    my $count =\
    \ 0;\n    for (my $i = 7; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i\
    \ % 13 == 0)) {\n            my $temp = $i;\n            while ($temp > 0) {\n\
    \                if ($temp % 10 == 7) {\n                    $count++;\n     \
    \           }\n                $temp = $temp / 10;\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i = 11; $i <\
    \ $n; $i += 11) {\n        $count += () = ($i =~ /7/g);\n    }\n    for (my $i\
    \ = 13; $i < $n; $i += 13) {\n        $count += () = ($i =~ /7/g);\n    }\n  \
    \  return $count;\n}", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++)\
    \ {\n        next if $i % 11 == 0 or $i % 13 == 0;\n        $count++ if $i =~\
    \ /7/;\n    }\n    return $count;\n}", "    my $total = 0;\n    for (my $i = 0;\
    \ $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my\
    \ $j = $i;\n            while ($j > 0) {\n                if ($j % 10 == 7) {\n\
    \                    $total++;\n                }\n                $j = $j / 10;\n\
    \            }\n        }\n    }\n    return $total;\n}", "    return 0 if $n\
    \ < 11;\n    my $fizz = $n / 11;\n    my $buzz = $n / 13;\n    my $fb = $n / 11\
    \ / 13;\n    my $count = 0;\n    while($fizz >= 1) {\n        $count += $fizz\
    \ % 10 == 7 ? 1 : 0;\n        $fizz /= 10;\n    }\n    while($buzz >= 1) {\n \
    \       $count += $buzz % 10 == 7 ? 1 : 0;\n        $buzz /= 10;\n    }\n    while($fb\
    \ >= 1) {\n        $count += $fb % 10 == 7 ? 1 : 0;\n        $fb /= 10;\n    }\n\
    \    return $count;\n}", "    my($i, $j, $num, $count);\n    $count = 0;\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        $num = $i;\n        while ($num != 0)\
    \ {\n            $j = $num % 10;\n            if ($j == 7) {\n               \
    \ $count++;\n            }\n            $num = int($num / 10);\n        }\n  \
    \  }\n    return $count;\n}", "    die 'Invalid n (must be > 0)' if $n <= 0;\n\
    \    return $n if $n < 10;\n    my $result = 0;\n    $result++ if $n % 13 == 7\
    \ || $n % 11 == 7;\n    $result += fizz_buzz($n/10);\n    return $result;\n}",
  "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $count += () = $i =~ /7/g;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    if($n % 11 == 0) {\n       \
    \ $count += int($n / 11);\n    }\n    elsif($n % 11 > 7) {\n        $count +=\
    \ int($n / 11) + 1;\n    }\n    if($n % 13 == 0) {\n        $count += int($n /\
    \ 13);\n    }\n    elsif($n % 13 > 7) {\n        $count += int($n / 13) + 1;\n\
    \    }\n    return $count;\n}", "    # Your code here\n    my $count = 0;\n  \
    \  for(my $i = 0; $i < $n; $i++){\n        if($i % 11 == 0 || $i % 13 == 0){\n\
    \            my $num = $i;\n            while($num){\n                if($num\
    \ % 10 == 7){\n                    $count++;\n                }\n            \
    \    $num = int($num / 10);\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for (my $i = $n; $i > 0; $i--) {\n        next if($i\
    \ % 11 != 0 && $i % 13 != 0);\n        $count += ($i =~ tr/7//);\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for my $i (1..$n) {\n        next if($i\
    \ % 11 and $i % 13);\n        $count += $i =~ tr/7//;\n    }\n    return $count;\n\
    }", "    my $f = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        $f++ if (substr(\"\
    $i\", -1) == 7) and ($i % 11 == 0 or $i % 13 == 0);\n    }\n    return $f;\n}",
  "    my $total = 0;\n    for (1..$n) {\n        next unless $_ % 11 == 0 || $_ %\
    \ 13 == 0;\n        $total += () = /7/g;\n    }\n    return $total;\n}", "   \
    \ my $count = 0;\n    foreach my $num (1..$n) {\n\tnext if ($num % 11 && $num\
    \ % 13);\n\twhile ($num > 0) {\n\t    $count++ if ($num % 10 == 7);\n\t    $num\
    \ /= 10;\n\t}\n    }\n    return $count;\n}", "    return 0 if $n < 11;\n    return\
    \ scalar grep { $_ % 11 == 0 || $_ % 13 == 0 && /7/ } 11 .. $n - 1;\n}", "   \
    \ my($i);\n    my($ans) = 0;\n    for($i = 1; $i < $n; $i++) {\n        next if\
    \ $i % 11 and $i % 13;\n        my($num) = $i;\n        while($num) {\n      \
    \      $ans++ if $num % 10 == 7;\n            $num /= 10;\n        }\n    }\n\
    \    return $ans;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $n = $i;\n  \
    \          while ($n > 0) {\n                $count++ if $n % 10 == 7;\n     \
    \           $n /= 10;\n            }\n        }\n    }\n    return $count;\n}",
  "    my $cnt = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            while ($i > 0) {\n                if ($i %\
    \ 10 == 7) {\n                    $cnt++;\n                }\n               \
    \ $i /= 10;\n            }\n        }\n    }\n    return $cnt;\n}", "    my $m\
    \ = max(1, $n - 10);\n    my $r = sum map { $_ % 11 == 0 or $_ % 13 == 0 } m..$m..;\n\
    \    grep { s/[^7]//g } ($r);\n    return $r;\n}", "    my $count = 0;\n    for\
    \ (my $i = 0; $i < $n; $i++) {\n        $count++ if $i % 11 == 0 || $i % 13 ==\
    \ 0 && $i =~ m/7/;\n    }\n    return $count;\n}", "    my $count = 0;\n    for\
    \ (my $i = 1; $i < $n; $i++){\n        if (($i % 11 == 0) or ($i % 13 == 0)){\n\
    \            $count += $i =~ tr/7//;\n        }\n    }\n    return $count;\n}",
  "    if ($n < 1) {\n        return 0;\n    }\n    my $sum = 0;\n    for my $i (1..$n)\
    \ {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n            $sum += grep { $_\
    \ == 7 } split //, $i;\n        }\n    }\n    return $sum;\n}", "    my $count\
    \ = 0;\n    for my $i (0..$n) {\n        $count++ if ($i % 11 == 0 or $i % 13\
    \ == 0) and $i =~ /7/;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   for (my $i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 ==\
    \ 0) && $i =~ /7/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my($i, $count);\n    for($i = 1; $i < $n; $i++) {\n        if(($i % 11\
    \ == 0) || ($i % 13 == 0)) {\n            $count += $i =~ s/7//g;\n        }\n\
    \    }\n    return $count;\n}", "    my $cnt = 0;\n    for (my $i = 1; $i < $n;\
    \ $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $chk\
    \ = $i;\n            while ($chk > 0) {\n                if ($chk % 10 == 7) {\n\
    \                    $cnt++;\n                }\n                $chk = int($chk\
    \ / 10);\n            }\n        }\n    }\n    return $cnt;\n}", "    my($number_7s)\
    \ = 0;\n    my($dividend) = 0;\n    my($remainder) = 0;\n    my($quotient) = 0;\n\
    \    ######################################################################\n\
    \    # INPUT VALIDATION:\n    # Ensure we have a positive integer n.\n    ######################################################################\n\
    \    unless($n > 0) {\n        croak(\"n must be a positive integer: $n\");\n\
    \    }\n    $number_7s = grep {$_ eq '7'} divisors_of_n($n);\n    ######################################################################\n\
    \    # The number of 7s in the divisors of n is the number of 7s in the\n    #\
    \ quotient of our division problem.\n    ######################################################################\n\
    \    return $number_7s;\n}", "    my $count = 0;\n    for ( my $i = 1; $i < $n;\
    \ $i++ ) {\n        if ( $i % 11 == 0 || $i % 13 == 0 ) {\n            $count\
    \ += num_7($i);\n        }\n    }\n    return $count;\n}", "    my $sum = 0;\n\
    \    while ($n >= 1) {\n        my $x = int($n / 10);\n        my $y = $n % 10;\n\
    \        $sum += 1 if $y == 7 && ($x % 11 == 0 || $x % 13 == 0);\n        $n =\
    \ $x;\n    }\n    return $sum;\n}", "    my $fizz = int($n / 11);\n    my $buzz\
    \ = int($n / 13);\n    my $fizzbuzz = int($n / (11 * 13));\n    my $result = $fizz\
    \ + $buzz - $fizzbuzz;\n    $result = 0 if $result < 0;\n    return $result;\n\
    }", "    my $counter = 0;\n    for (my $i = 7; $i < $n; $i++) {\n        if (($i\
    \ % 11 == 0 || $i % 13 == 0) && $i =~ /7/) {\n            $counter++;\n      \
    \  }\n    }\n    return $counter;\n}", "    my $count = 0;\n    my $buzz = 0;\n\
    \    for(my $i = 0; $i < $n; $i++) {\n        if($i % 11 == 0) {\n           \
    \ $buzz = $i;\n        }\n        if($i % 13 == 0) {\n            $buzz = $i;\n\
    \        }\n        if($buzz > 0) {\n            $count += count7($buzz);\n  \
    \      }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i =\
    \ 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n         \
    \   $count += count_7s($i);\n        }\n    }\n    return $count;\n}", "    #\
    \ Your code here\n}", "    my $count;\n    my $i;\n    for $i (1..$n) {\n    \
    \    if ($i % 11 == 0 || $i % 13 == 0) {\n            while ($i > 0) {\n     \
    \           if ($i % 10 == 7) {\n                    $count++;\n             \
    \   }\n                $i = int($i / 10);\n            }\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    for my $number (11..$n-1) {\n\
    \        $count++ if ($number % 11 == 0 || $number % 13 == 0) && $number =~ /7/;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n\
    \        if (grep {$i % $_ == 0} (11, 13)) {\n            $count += $i =~ s/7//g;\n\
    \        }\n    }\n    return $count;\n}", "    my($i, $count);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        $count++ if (($i % 11 == 0) || ($i % 13 == 0))\
    \ && ($i =~ /7/);\n    }\n    return $count;\n}", "    return 0 if $n < 11;\n\
    \    my $count = 0;\n    for (my $i = 11; $i < $n; $i++) {\n        $count++ if\
    \ ($i % 11 == 0 || $i % 13 == 0) && _count_sevens($i) > 0;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $i = 0;\n    while ($i < $n) {\n  \
    \      if (($i % 11 == 0 || $i % 13 == 0) && $i =~ m/7/) {\n            $count++;\n\
    \        }\n        $i++;\n    }\n    return $count;\n}", "    my $i = 0;\n  \
    \  foreach (1..$n-1) {\n        next if $_ % 7 == 0;\n        $i++ if $_ % 11\
    \ == 0 || $_ % 13 == 0;\n    }\n    return $i;\n}", "    my $count = 0;\n    for\
    \ my $i (1..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n           \
    \ $count += count_7($i);\n        }\n    }\n    return $count;\n}", "    my $count;\n\
    \    for (my $i = 0; $i < $n; $i++) {\n        next unless ($i % 11 == 0 || $i\
    \ % 13 == 0);\n        $count++ if ($i =~ /7/);\n    }\n    return $count;\n}",
  "    my $result = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11\
    \ == 0 || $i % 13 == 0) {\n            my $num = $i;\n            while ($num\
    \ > 0) {\n                if ($num % 10 == 7) {\n                    $result++;\n\
    \                }\n                $num = int($num / 10);\n            }\n  \
    \      }\n    }\n    return $result;\n}", "    return 0 if $n < 7;\n    my $sum\
    \ = 0;\n    foreach my $divisor (11, 13) {\n        next if $n % $divisor != 0;\n\
    \        $sum += $n / $divisor;\n    }\n    my $num_digits = length($n) - 1;\n\
    \    my $num_prefixes = 10 ** $num_digits;\n    $sum += fizz_buzz($num_prefixes\
    \ - 1);\n    return $sum;\n}", "    $n--;\n    my $sum = 0;\n    for(1..$n) {\n\
    \        $sum++ if($_ % 11 == 0 or $_ % 13 == 0) and $_ =~ /7/;\n    }\n    return\
    \ $sum;\n}", "    my $x = 0;\n    for my $num (0..$n-1) {\n        my $digit =\
    \ $num;\n        while($digit != 0) {\n            if($digit % 10 == 7 && ($num\
    \ % 11 == 0 || $num % 13 == 0)) {\n                $x++;\n            }\n    \
    \        $digit = int($digit / 10);\n        }\n    }\n    return $x;\n}", " \
    \   my $count = 0;\n    for (1..$n-1) {\n        if ($_ % 11 == 0 or $_ % 13 ==\
    \ 0) {\n            while ($_ > 0) {\n                if ($_ % 10 == 7) {\n  \
    \                  $count++;\n                }\n                $_ /= 10;\n \
    \           }\n        }\n    }\n    return $count;\n}", "    my $i = 0;\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        # print \"$i \\n\";\n        my $d =\
    \ $i % 11;\n        my $e = $i % 13;\n        if (($d == 0 || $e == 0) && $i !=\
    \ 0) {\n            print \"check $i \\n\";\n            my $count = 0;\n    \
    \        my $j = $i;\n            my $k = 7;\n            while ($j != 0) {\n\
    \                # print \"$j \\n\";\n                my $d = $j % 10;\n     \
    \           if ($d == $k) {\n                    $count++;\n                }\n\
    \                $j = $j / 10;\n            }\n            print \"Count $count\
    \ \\n\";\n        }\n    }\n}", "    my $c = 0;\n    for (1..$n-1) {\n       \
    \ $c++ if /7/ && ($_ % 11 == 0 || $_ % 13 == 0);\n    }\n    return $c;\n}", " \
    \   my $sum = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            my $num = $i;\n            while ($num > 0)\
    \ {\n                if ($num % 10 == 7) {\n                    $sum++;\n    \
    \            }\n                $num = int($num / 10);\n            }\n      \
    \  }\n    }\n    return $sum;\n}", "    my $count = 0;\n    my $string;\n    for\
    \ (my $i = 1; $i < $n; $i++) {\n        $string = $i;\n        $count++ if ($string\
    \ =~ /7/);\n    }\n    return $count;\n}", "    return 0 if $n < 77;\n    my $num\
    \ = 0;\n    my $x = 77;\n    while($x < $n) {\n        $num++ if $x =~ /7/;\n\
    \        $x += 11;\n    }\n    $x = 91;\n    while($x < $n) {\n        $num++\
    \ if $x =~ /7/;\n        $x += 13;\n    }\n    return $num;\n}", "    my $x =\
    \ 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($i % 11 == 0 or $i % 13\
    \ == 0) {\n            $x += digit_seven($i);\n        }\n    }\n    return $x;\n\
    }", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            if ($i =~ /7/) {\n               \
    \ $count++;\n            }\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ( $i % 11 == 0\
    \ or $i % 13 == 0 ) {\n            $count += num_sevens($i);\n        }\n    }\n\
    \    return $count;\n}", "    my $fb_res = 0;\n    my $i = 0;\n    my $fbn;\n\
    \    while ($i < $n) {\n        $fbn = $i;\n        $i += 11;\n        if ($fbn\
    \ =~ m/7/) { $fb_res++ };\n    }\n    $i = 0;\n    while ($i < $n) {\n       \
    \ $fbn = $i;\n        $i += 13;\n        if ($fbn =~ m/7/) { $fb_res++ };\n  \
    \  }\n    return $fb_res;\n}", "    if ($n < 11) {\n        return 0;\n    }",
  "    my $i = 7;\n    my $count = 0;\n    for ($i = 7; $i < $n; $i += 14) {\n   \
    \     if (is_divisible($i, 7)) {\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}", "    my $retval = 0;\n    my $i = 0;\n    while ( $i <\
    \ $n ) {\n        my $mult = 1;\n        while ( $i < $n ) {\n            if (\
    \ $i % 11 == 0 ) {\n                last;\n            }\n            if ( $i\
    \ % 13 == 0 ) {\n                last;\n            }\n            $i++;\n   \
    \     }\n        $i = $i * $mult;\n        my $val = $i;\n        if ( $val =~\
    \ /7/ ) {\n            $retval++;\n        }\n        $mult++;\n    }\n    return\
    \ $retval;\n}", "    my $ct = 0;\n    foreach my $i (1..$n-1) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            my $s = $i;\n            while ($s\
    \ > 0) {\n                $ct++ if $s % 10 == 7;\n                $s /= 10;\n\
    \            }\n        }\n    }\n    return $ct;\n}", "    my $c = 0;\n    for\
    \ my $i (1..$n-1) {\n        $c++ if ($i % 11 == 0 or $i % 13 == 0) and $i =~\
    \ /7/;\n    }\n    return $c;\n}", "    my $count = 0;\n    while ($n >= 1) {\n\
    \        if ($n % 11 == 0 || $n % 13 == 0) {\n            my $m = $n;\n      \
    \      while ($m > 0) {\n                $count++ if $m % 10 == 7;\n         \
    \       $m /= 10;\n            }\n        }\n        $n--;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n   \
    \     if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $number = $i;\n\
    \            while ($number > 0) {\n                my $digit = $number % 10;\n\
    \                if ($digit == 7) {\n                    $count++;\n         \
    \       }\n                $number = $number / 10;\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my $result = 0;\n    for my $int (1..$n)\
    \ {\n        $result++ if $int % 11 == 0 || $int % 13 == 0;\n    }\n    return\
    \ $result;\n}", "    # Your code here\n    my $count = 0;\n    for(my $i = 0;\
    \ $i < $n; $i++){\n    \tif($i % 11 == 0 || $i % 13 == 0){\n    \t\tmy $test =\
    \ $i;\n    \t\twhile($test > 0){\n    \t\t\tif($test % 10 == 7){\n    \t\t\t\t\
    $count++;\n    \t\t\t}\n    \t\t\t$test = $test / 10;\n    \t\t}\n    \t}\n  \
    \  }\n    return $count;\n}", "    my $r = int($n / 11) + int($n / 13);\n    $r\
    \ = int($r / 10) if $n >= 110;\n    $r = int($r / 10) if $n >= 130;\n    return\
    \ $r;\n}", "    my $count = 0;\n    while ($n > 0) {\n        $count++ if ($n\
    \ % 11 == 0 || $n % 13 == 0) && $n % 10 == 7;\n        $n /= 10;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if\
    \ ($i % 11 == 0 || $i % 13 == 0) {\n            $count += count_digit($i, 7);\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (1..$n-1)\
    \ {\n        if ($_ % 11 == 0 or $_ % 13 == 0) {\n            $count += ($_ =~\
    \ tr/7//);\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n  \
    \  for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n            $count += count_7($i);\n        }\n    }\n    return $count;\n\
    }", "    my $f;\n    for my $i ( 11 .. $n - 1 ) {\n        $f++ if $i % 11 ==\
    \ 0 or $i % 13 == 0 and $i =~ /7/g;\n    }\n    return $f;\n}", "    my $count\
    \ = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $count++ if ($i % 11 ==\
    \ 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        $count++ if (($i % 11 ==\
    \ 0) || ($i % 13 == 0)) && $i =~ m/7/;\n    }\n    return $count;\n}", "    my($num)\
    \ = 0;\n    my($i);\n    for($i = 0; $i < $n; $i++) {\n        if($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num += fizz_buzz_div($i);\n        }\n    }\n\
    \    return $num;\n}", "    my $result = 0;\n    if ($n % 11 == 0) {\n       \
    \ $result++;\n    }\n    if ($n % 13 == 0) {\n        $result++;\n    }\n    if\
    \ ($n < 10) {\n        if ($n == 7) {\n            $result++;\n        }\n   \
    \ } else {\n        $result += fizz_buzz($n / 10);\n    }\n    return $result;\n\
    }", "    $n=0 if $n < 0;\n    my $count = 0;\n    while ($n>10) {\n        $count\
    \ += ($n%10 == 7) ? 1 : 0;\n        $n = int($n/10);\n    }\n    return $count;\n\
    }", "    my $num = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i %\
    \ 11 == 0) {\n            $num += count_seven($i);\n        }\n        elsif ($i\
    \ % 13 == 0) {\n            $num += count_seven($i);\n        }\n    }\n    return\
    \ $num;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n     \
    \   if ($i % 11 == 0 or $i % 13 == 0) {\n            $count += char_count($i,\
    \ 7);\n        }\n    }\n    return $count;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (1..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n           \
    \ $sum += $i =~ tr/7//;\n        }\n    }\n    return $sum;\n}", "    my $r =\
    \ 0;\n    foreach my $i (1..$n-1) {\n        if (($i % 11 == 0) || ($i % 13 ==\
    \ 0)) {\n            $r += digit_sum($i);\n        }\n    }\n    return $r;\n}",
  "    return 0 if $n < 70;\n    my $count = 0;\n    for my $i (70..$n-1) {\n    \
    \    $count++ if $i % 11 == 0 && $i =~ /7/;\n        $count++ if $i % 13 == 0\
    \ && $i =~ /7/;\n    }\n    return $count;\n}", "    my $tally = 0;\n    for (my\
    \ $i = 0; $i < $n; $i++) {\n        next unless $i % 11 == 0 || $i % 13 == 0;\n\
    \        $tally += num_sevens($i);\n    }\n    return $tally;\n}", "    my $total\
    \ = 0;\n    for (1..$n-1) {\n        $total++ if /7/ && /[13]$/;\n    }\n    return\
    \ $total;\n}", "    my $count = 0;\n    while ($n >= 1) {\n        if ($n % 11\
    \ == 0 or $n % 13 == 0) {\n            my $digit = $n % 10;\n            if ($digit\
    \ == 7) {\n                $count += 1;\n            }\n        }\n        $n\
    \ /= 10;\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i =\
    \ 0; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 == 0) && count_sevens($i)\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   my $fizz = 0;\n    for (1..$n) {\n        my $num = $_;\n        while ($num)\
    \ {\n            if ($num % 10 == 7) {\n                $fizz++;\n           \
    \ }\n            $num /= 10;\n        }\n    }\n    return $fizz;\n}", "    my\
    \ $s = '';\n    for my $i (1..$n) {\n        if($i % 11 == 0 || $i % 13 == 0)\
    \ {\n            $s .= $i;\n        }\n    }\n    $s =~ tr/7//;\n    return length($s);\n\
    }", "    my $count = 0;\n    for (my $i = 7; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            while ($i > 0) {\n               \
    \ $count++ if $i % 10 == 7;\n                $i /= 10;\n            }\n      \
    \  }\n    }\n    return $count;\n}", "    my $count = 0;\n    while ($n--) {\n\
    \        $count++ if ($n % 11 == 0 or $n % 13 == 0) and $n =~ /7/;\n    }\n  \
    \  return $count;\n}", "    return 0 if $n < 0;\n    return fizz_buzz($n - 1)\
    \ + 1 if $n % 11 == 0 or $n % 13 == 0;\n    return fizz_buzz($n - 1);\n}", " \
    \   my($count) = 0;\n    for my $i (1..$n-1) {\n        if (($i % 11 == 0) ||\
    \ ($i % 13 == 0)) {\n            $count += $i =~ s/7//g;\n        }\n    }\n \
    \   return $count;\n}", "    my $num=0;\n    for(my $i=1;$i<$n;$i++){\n\tif($i%7==0\
    \ && $i%11==0){\n\t    $num++;\n\t}\n\telsif($i%7==0 && $i%13==0){\n\t    $num++;\n\
    \t}\n    }\n    return $num;\n}", "    my $count = 0;\n    for (my $i = 1; $i\
    \ < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $num\
    \ = $i;\n            while ($num > 0) {\n                $count++ if $num % 10\
    \ == 7;\n                $num /= 10;\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    return 0 if ($n < 11);\n    my $i = 11;\n    my $result =\
    \ 0;\n    my $digit = 0;\n    my $mod = 0;\n    my $value = 0;\n    my $div =\
    \ 0;\n    for ($i; $i <= $n; $i++) {\n        $value = $i;\n        $mod = $value\
    \ % 11;\n        if ($mod == 0) {\n            $result++;\n            print \"\
    Mod 11: $i\\n\";\n        } else {\n            $mod = $value % 13;\n        \
    \    if ($mod == 0) {\n                $result++;\n                print \"Mod\
    \ 13: $i\\n\";\n            }\n        }\n    }\n    print \"Result: $result\\\
    n\";\n    return $result;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1)\
    \ {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n            my $str = $i;\n\
    \            while ($str =~ /(7)/g) {\n                $count++;\n           \
    \ }\n        }\n    }\n    return $count;\n}", "    my($sum);\n    foreach my\
    \ $i (11..$n-1) {\n        if(($i % 11 == 0) || ($i % 13 == 0)) {\n          \
    \  $sum += () = $i =~ /7/g;\n        }\n    }\n    return $sum;\n}", "    return\
    \ 7 if $n <= 7;\n    return 11 if $n < 100 && $n % 11 == 0;\n    return $n =~\
    \ tr/7//;\n}", "    my $count = 0;\n    my $i = 0;\n    while ($i < $n) {\n  \
    \      if ($i % 11 == 0 or $i % 13 == 0) {\n            $count += () = ($i =~\
    \ /7/g);\n        }\n        $i++;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $i (1..$n-1) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n\
    \            $count += $i =~ s/7/7/g;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    if ($n < 7) {\n        return 0;\n    }\n    for (my $i\
    \ = 7; $i < $n; $i += 11) {\n        if (index($i, \"7\") != -1) {\n         \
    \   $count += 1;\n        }\n    }\n    for (my $i = 13; $i < $n; $i += 13) {\n\
    \        if (index($i, \"7\") != -1) {\n            $count += 1;\n        }\n\
    \    }\n    return $count;\n}", "    my $k = 0;\n    $k++ if $n % 11 == 0 || $n\
    \ % 13 == 0;\n    $k + (fizz_buzz($n - 1) // 0);\n}", "    my $count = 0;\n  \
    \  my $i = 0;\n    while ($i++ < $n) {\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            my $j = $i;\n            while ($j > 0) {\n              \
    \  if ($j % 10 == 7) {\n                    $count++;\n                }\n   \
    \             $j = int($j / 10);\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    return grep { $_ % 11 == 0 || $_ % 13 == 0 } grep { /7/ }\
    \ 1 .. $n - 1;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n\
    \        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count += count_digit($i,\
    \ 7);\n        }\n    }\n    return $count;\n}", "    # ...\n}", "    my $cnt\
    \ = 0;\n    foreach my $d (1..$n) {\n        my $s = sprintf(\"%d\", $d);\n  \
    \      next unless $d % 11 == 0 or $d % 13 == 0;\n        $cnt += $s =~ tr/7//;\n\
    \    }\n    return $cnt;\n}", "    my $c = 0;\n    foreach my $i (1..$n) {\n \
    \       next if ($i % 11) and ($i % 13);\n        my $i_copy = $i;\n        while\
    \ ($i_copy > 0) {\n            $c++ if ($i_copy % 10) == 7;\n            $i_copy\
    \ /= 10;\n        }\n    }\n    return $c;\n}", "    my $c = 0;\n    for (11..$n-1)\
    \ {\n        $c++ if $_ % 11 == 0 || $_ % 13 == 0 && $c += $_ =~ tr/7//;\n   \
    \ }\n    return $c;\n}", "    my($count);\n    for (my($i) = 0; $i < $n; $i++)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            $count += ($i\
    \ =~ tr/7//);\n        }\n    }\n    return $count;\n}", "    die unless $n>=1;\n\
    \    my $count = 0;\n    for (my $i=1; $i<$n; $i++) {\n        next unless $i%11==0\
    \ || $i%13==0;\n        $count++ while $i =~ /7/g;\n    }\n    return $count;\n\
    }", "    my $c = 0;\n    for my $i (11 .. $n - 1) {\n        if ($i % 11 == 0\
    \ or $i % 13 == 0) {\n            while ($i > 0) {\n                $c++ if $i\
    \ % 10 == 7;\n                $i /= 10;\n            }\n        }\n    }\n   \
    \ return $c;\n}", "    my($cnt) = 0;\n    for (my($i) = 1; $i < $n; $i++) {\n\
    \        if ($i % 11 == 0 or $i % 13 == 0) {\n            $cnt += contains_seven($i);\n\
    \        }\n    }\n    return $cnt;\n}", "    my $counter = 0;\n    for(my $i\
    \ = 0; $i < $n; $i++){\n        $counter++ if(($i % 11 == 0 || $i % 13 == 0) &&\
    \ $i =~ /7/);\n    }\n    return $counter;\n}", "    my $count = 0;\n    for (my\
    \ $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n\
    \            my $j = $i;\n            my $digit = 7;\n            while ($j >\
    \ 0) {\n                if ($j % 10 == $digit) {\n                    $count++;\n\
    \                }\n                $j = int($j / 10);\n            }\n      \
    \  }\n    }\n    return $count;\n}", "    my $total = 0;\n    foreach my $i (11\
    \ .. $n - 1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $val\
    \ = $i;\n            while ($val) {\n                if ($val % 10 == 7) {\n \
    \                   $total++;\n                }\n                $val = int($val\
    \ / 10);\n            }\n        }\n    }\n    return $total;\n}", "    my $num_7s\
    \ = 0;\n    foreach my $i (7 .. $n-1) {\n        if (grep($i % $_ == 0, 11, 13))\
    \ {\n            $num_7s += () = ($i =~ /7/g);\n        }\n    }\n    return $num_7s;\n\
    }", "    my $result = 0;\n    # Insert your code here\n    return $result;\n}",
  "    my $num_sevens = 0;\n    for (my $i = 0; $i < $n; $i += 11) {\n        if (divisible_by_11_or_13($i))\
    \ {\n            $num_sevens += num_sevens($i);\n        }\n    }\n    return\
    \ $num_sevens;\n}", "    if($n <= 0) {\n        return 0;\n    }\n    else {\n\
    \        return fizz_buzz($n-1) + (num7s($n) && $n % 11 == 0 || $n % 13 == 0);\n\
    \    }\n}", "    my $count = 0;\n    for my $i (1..$n) {\n        if ( ($i % 11\
    \ == 0 || $i % 13 == 0) && $i =~ /7/ ) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    $n = int($n);\n    my $count = 0;\n    while($n\
    \ > 0) {\n        if(($n % 11 == 0) || ($n % 13 == 0)) {\n            my $tmp\
    \ = $n;\n            while($tmp > 0) {\n                if($tmp % 10 == 7) {\n\
    \                    $count++;\n                }\n                $tmp = int($tmp\
    \ / 10);\n            }\n        }\n        $n--;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        my $n = $i;\n\
    \        while($n > 0) {\n            if($n % 10 == 7) {\n                $count++;\n\
    \            }\n            $n = $n / 10;\n        }\n    }\n    return $count;\n\
    }", "    return 0 if $n < 7;\n    if ($n % 11 == 0 || $n % 13 == 0) {\n      \
    \  return fizz_buzz($n - 1) + ($n % 10 == 7) + ($n / 10 % 10 == 7);\n    } else\
    \ {\n        return fizz_buzz($n - 1);\n    }\n}", "    my $count = 0;\n    for\
    \ my $i (1..$n-1) {\n        my $div11 = $i % 11 == 0;\n        my $div13 = $i\
    \ % 13 == 0;\n        if ($div11 || $div13) {\n            my $num = $i;\n   \
    \         while ($num) {\n                if ($num % 10 == 7) {\n            \
    \        $count++;\n                }\n                $num = int($num / 10);\n\
    \            }\n        }\n    }\n    return $count;\n}", "    # Your code here\n\
    \    my $ret = 0;\n    for (11..$n) {\n        my $num = $_;\n        $ret++ if\
    \ ($num % 11 == 0 || $num % 13 == 0) && $num =~ /7/;\n    }\n    return $ret;\n\
    }", "    # Good luck!\n    my $count=0;\n    if ($n <= 0) {\n        return 0;\n\
    \    }\n    for(my $i=10; $i<=$n; $i++){\n        if(is_buzz($i) or is_fizz($i)){\n\
    \            my $count_digit = count_digit($i);\n            if($count_digit !=\
    \ 0){\n                $count += $count_digit;\n            }\n        }\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    foreach my $i (11..$n-1)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            while ($i != 0)\
    \ {\n                $count++ if $i % 10 == 7;\n                $i /= 10;\n  \
    \          }\n        }\n    }\n    return $count;\n}", "    my($cnt) = 0;\n \
    \   foreach my $i (1..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n \
    \           my @digits = split(//, $i);\n            foreach my $j (@digits) {\n\
    \                if ($j == 7) {\n                    $cnt++;\n               \
    \ }\n            }\n        }\n    }\n    return $cnt;\n}", "    return scalar(grep\
    \ {/7/ && ($_ % 11 == 0 || $_ % 13 == 0)} 1..$n-1);\n}", "    my $count = 0;\n\
    \    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            my $tmp = $i;\n            while ($tmp != 0) {\n         \
    \       if ($tmp % 10 == 7) {\n                    $count++;\n               \
    \ }\n                $tmp = int($tmp / 10);\n            }\n        }\n    }\n\
    \    return $count;\n}", "    my $res = 0;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $res += number_of_7s($i);\n\
    \        }\n    }\n    return $res;\n}", "    my $i = 0;\n    my $total = 0;\n\
    \    while ($i < $n) {\n        $i++;\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            $total += count_sevens($i);\n        }\n    }\n    return\
    \ $total;\n}", "    return 0 if $n < 22;\n    return int(($n - 22) / 11) + 1 if\
    \ $n < 77;\n    return int(($n - 77) / 11) + 2;\n}", "    my($cnt) = 0;\n    for(my($i)\
    \ = 1; $i < $n; $i++) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n        \
    \    if($i =~ /7/) {\n                $cnt++;\n            }\n        }\n    }\n\
    \    return $cnt;\n}", "    my $count = 0;\n    for my $i (0..$n) {\n        $count++\
    \ if $i % 11 == 0 || $i % 13 == 0;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    while ($n) {\n        $count++ if ($n % 10 == 7);\n        $n /= 10;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    my $num\
    \ = 0;\n    my $len = 0;\n    my $j = 0;\n    my $element = 0;\n    while($i <\
    \ $n) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n            $num = $i;\n\
    \            $len = length($num);\n            while($len > 0) {\n           \
    \     $element = $num % 10;\n                if($element == 7) {\n           \
    \         $count++;\n                }\n                $num = $num / 10;\n  \
    \              $len--;\n            }\n        }\n        $i++;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if\
    \ (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $number = $i;\n       \
    \     while ($number > 0) {\n                my $digit = $number % 10;\n     \
    \           if ($digit == 7) {\n                    $count++;\n              \
    \  }\n                $number = int($number / 10);\n            }\n        }\n\
    \    }\n    return $count;\n}", "    # Your code here\n}", "    my $count = 0;\n\
    \    for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13\
    \ == 0)) {\n            my $digit = $i;\n            while ($digit > 0) {\n  \
    \              if ($digit % 10 == 7) {\n                    $count++;\n      \
    \          }\n                $digit = int($digit / 10);\n            }\n    \
    \    }\n    }\n    return $count;\n}", "    return 0 unless $n;\n    my $current\
    \ = fizz_buzz( $n - 1 ) + 1;\n    my $count = 0;\n    my $num = $n;\n    while(\
    \ $num > 0 ) {\n        if( $num % 10 == 7 ) {\n            $count++;\n      \
    \  }\n        $num /= 10;\n    }\n    return $count + $current if $n % 11 == 0\
    \ || $n % 13 == 0;\n    return $current;\n}", "    my $count = 0;\n    for my\
    \ $i (1..$n) {\n        next if $i % 11 == 0 || $i % 13 == 0;\n        $count++\
    \ if $i =~ /7/;\n    }\n    return $count;\n}", "    my $count = 0;\n    for my\
    \ $i (1..$n-1) {\n        if($i % 11 == 0 || $i % 13 == 0) {\n            $count\
    \ += ($i =~ tr/7//);\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            my $num = $i;\n            while ($num > 0) {\n    \
    \            if ($num % 10 == 7) {\n                    $count++;\n          \
    \      }\n                $num = int($num / 10);\n            }\n        }\n \
    \   }\n    return $count;\n}", "    # your code here\n}", "    my $fb_sum = 0;\n\
    \    for (1..$n) {\n        if (($_ % 11 == 0 || $_ % 13 == 0) && $_ =~ /7/) {\n\
    \            $fb_sum++;\n        }\n    }\n    return $fb_sum;\n}", "    return\
    \ scalar grep { $_ =~ /7/ } (11..$n-1,13..$n-1);\n}", "    # Your code here\n\
    \    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n      if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n        $count += count_digits($i,7);\n      }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    for (11..$n-1) {\n        if\
    \ ($_ % 11 == 0 || $_ % 13 == 0) {\n            $count += () = /7/g;\n       \
    \ }\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach my $i (1..$n)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            $count += _count_7($i);\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach my\
    \ $i (0..$n-1) {\n        if (($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $i (1..$n) {\n        if ($i % (11 * 13) == 0) {\n        \
    \    $count += 7;\n        } elsif ($i % 11 == 0) {\n            $count += 3;\n\
    \        } elsif ($i % 13 == 0) {\n            $count += 2;\n        } else {\n\
    \            my $test = $i;\n            while ($test) {\n                $count++\
    \ if $test % 10 == 7;\n                $test /= 10;\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    my $fb\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n\t$fb = fizz_buzz_sub($i);\n\tif ($fb)\
    \ {\n\t    $count++ if ($fb =~ /7/);\n\t}\n    }\n    return $count;\n}", "  \
    \  return 0 if $n <= 0;\n    my $mod = 11 * 13;\n    my $res = int($n / $mod)\
    \ * 3;\n    my $rest = $n % $mod;\n    return $res +\n        ($rest >= 11 * 7\
    \ ? 1 : 0) +\n        ($rest >= 13 * 7 ? 1 : 0) +\n        ($rest >= 11 * 13 ?\
    \ 1 : 0);\n}", "    ...\n}", "    my $sum = 0;\n    for (1..$n) {\n        if\
    \ ($_ % 11 == 0 || $_ % 13 == 0) {\n            $sum += count_sevens($_);\n  \
    \      }\n    }\n    return $sum;\n}", "    # Your code here\n}", "    my $cnt\
    \ = 0;\n    foreach (1..$n) {\n        next if $_ % 11 and $_ % 13;\n        my\
    \ $str = $_;\n        $cnt += $str =~ tr/7//;\n    }\n    return $cnt;\n}", " \
    \   my $n_of_7 = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11\
    \ == 0 or $i % 13 == 0) {\n            my $s = $i;\n            while($s != 0)\
    \ {\n                if ($s % 10 == 7) {\n                    $n_of_7++;\n   \
    \             }\n                $s = $s / 10;\n            }\n        }\n   \
    \ }\n    return $n_of_7;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1)\
    \ {\n        $count++ if ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n    }\n\
    \    return $count;\n}", "    my $counter = 0;\n    my $i = 0;\n    while ($i\
    \ < $n) {\n        if (($i % 11 == 0) or ($i % 13 == 0)) {\n            my $temp\
    \ = $i;\n            while ($temp > 0) {\n                if ($temp % 10 == 7)\
    \ {\n                    $counter++;\n                }\n                $temp\
    \ = $temp / 10;\n            }\n        }\n        $i++;\n    }\n    return $counter;\n\
    }", "    # ... your code here ...\n    my $count = 0;\n    for(my $i = 1; $i <\
    \ $n; $i++){\n        if($i % 11 == 0 or $i % 13 == 0){\n            if($i =~\
    \ /7/){\n                $count += 1;\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    return 0 if ($n < 10);\n    return 1 if ($n == 17 or $n ==\
    \ 27 or $n == 37 or $n == 47);\n    return fizz_buzz($n-10) + fizz_buzz($n-11)\
    \ + fizz_buzz($n-13);\n}", "    my $i = 0;\n    foreach my $num (grep {$_ % 11\
    \ == 0 || $_ % 13 == 0} (1..$n)) {\n\twhile ($num > 0) {\n\t    $i++ if ($num\
    \ % 10 == 7);\n\t    $num /= 10;\n\t}\n    }\n    return $i;\n}", "    my($i,\
    \ $cnt);\n    $cnt = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($i % 11\
    \ == 0 or $i % 13 == 0) {\n            $cnt += contains_digit($i, 7);\n      \
    \  }\n    }\n    return $cnt;\n}\n1;", "    return unless $n > 0;\n    $n--;\n\
    \    my $n_div_13 = int($n / 13);\n    my $n_div_11 = int($n / 11);\n    my $res\
    \ = $n_div_13 + $n_div_11;\n    my $t = $n_div_13 * 13;\n    for (; $t < $n_div_11\
    \ * 11; $t += 13) {\n        $res++ if int($t / 10) % 10 == 7;\n    }\n    return\
    \ $res;\n}", "    my $count = 0;\n    foreach my $i (1..$n) {\n        $count++\
    \ if ($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $count;\n\
    }", "    my $result = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            my $num = $i;\n            while ($num\
    \ > 0) {\n                if ($num % 10 == 7) {\n                    $result++;\n\
    \                }\n                $num = $num / 10;\n            }\n       \
    \ }\n    }\n    return $result;\n}", "    my $count = 0;\n    for (1..$n-1) {\n\
    \        $count++ if (($_ % 11 == 0 or $_ % 13 == 0) and $_ =~ /7/);\n    }\n\
    \    return $count;\n}", "    my $result = 0;\n    foreach my $i (1..$n-1) {\n\
    \        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $j = $i;\n      \
    \      while ($j > 0) {\n                if ($j % 10 == 7) {\n               \
    \     $result++;\n                }\n                $j = $j / 10;\n         \
    \   }\n        }\n    }\n    return $result;\n}", "    my $count = 0;\n    for\
    \ my $i (1..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n           \
    \ $count += num_sevens($i);\n        }\n    }\n    return $count;\n}", "    my\
    \ $total = 0;\n    foreach my $i (11..$n-1) {\n        if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n            my $j = $i;\n            while ($j > 0) {\n      \
    \          $total++ if $j % 10 == 7;\n                $j = int($j / 10);\n   \
    \         }\n        }\n    }\n    return $total;\n}", "    my $count = 0;\n \
    \   foreach my $i (1..$n) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n   \
    \         my $num = $i;\n            while ($num > 0) {\n                if ($num\
    \ % 10 == 7) {\n                    $count++;\n                }\n           \
    \     $num = int($num / 10);\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $i (0..$n-1) {\n        my $num = $i;\n\
    \        if ($num % 11 == 0 || $num % 13 == 0) {\n            my $digit;\n   \
    \         while ($num > 0) {\n                $digit = $num % 10;\n          \
    \      if ($digit == 7) {\n                    $count++;\n                }\n\
    \                $num = int($num / 10);\n            }\n        }\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    for my $i (11..$n-1) {\n      \
    \  $count++ if $i % 11 == 0 or $i % 13 == 0 and $i =~ /7/;\n    }\n    return\
    \ $count;\n}", "    my $result = 0;\n    for my $i (0..$n) {\n        $result++\
    \ if $i % 11 == 0 || $i % 13 == 0 && $i =~ /7/;\n    }\n    return $result;\n}",
  "    my $count = 0;\n    for my $i (1..$n-1) {\n        next unless ($i % 11 ==\
    \ 0 || $i % 13 == 0);\n        next unless $i =~ /7/;\n        $count++;\n   \
    \ }\n    return $count;\n}", "    my($count) = 0;\n    foreach my $m (1..$n) {\n\
    \        if ($m % 11 == 0) {\n            ++$count if ($m % 100) =~ /7/;\n   \
    \     }\n        elsif ($m % 13 == 0) {\n            ++$count if ($m % 100) =~\
    \ /7/;\n        }\n    }\n    return $count;\n}", "    my $t = 0;\n    foreach\
    \ my $x (1..$n-1) {\n        if (($x % 11 == 0) || ($x % 13 == 0)) {\n       \
    \     my $s = \"$x\";\n            $t += $s =~ tr/7//;\n        }\n    }\n   \
    \ return $t;\n}", "    my $count = 0;\n    while ($n > 0) {\n        my $digit\
    \ = $n % 10;\n        $count++ if ($digit == 7);\n        $n /= 10;\n    }\n \
    \   return $count;\n}", "    my $num_7s = 0;\n    foreach (11..$n) {\n\tif ($_\
    \ % 11 == 0 or $_ % 13 == 0) {\n\t    $num_7s++ while /7/g;\n\t}\n    }\n    return\
    \ $num_7s;\n}", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n  \
    \      if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $num = $i;\n  \
    \          while ($num > 0) {\n                if ($num % 10 == 7) {\n       \
    \             $count++;\n                }\n                $num = int($num /\
    \ 10);\n            }\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    foreach (1..$n-1) {\n        if (($_ % 11 == 0 || $_ % 13 == 0) &&\
    \ $_ =~ /7/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    return(0) if ($n < 11);\n    my $count = 0;\n    for (my $i = 11; $i < $n;\
    \ $i++) {\n        next if ($i % 11 == 0);\n        next if ($i % 13 == 0);\n\
    \        $count++ if ($i =~ /7/);\n    }\n    return($count);\n}", "    my $f=int($n/11);\n\
    \    my $b=int($n/13);\n    my $c=int($n/143);\n    my $sevens = 0;\n    for(my\
    \ $i=0;$i<=$f;$i++){\n        my $num = $i*11;\n        $sevens += get_digits($num,7);\n\
    \    }\n    for(my $i=0;$i<=$b;$i++){\n        my $num = $i*13;\n        $sevens\
    \ += get_digits($num,7);\n    }\n    for(my $i=0;$i<=$c;$i++){\n        my $num\
    \ = $i*143;\n        $sevens -= get_digits($num,7);\n    }\n    return $sevens;\n\
    }", "    my $counter = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            $counter += has_seven($i);\n     \
    \   }\n    }\n    return $counter;\n}", "    return(1) if $n == 7;\n    return(0)\
    \ if $n < 11;\n    return(fizz_buzz($n-11) + fizz_buzz($n-13) + 0) if $n > 20;\n\
    \    return(fizz_buzz($n-11) + fizz_buzz($n-13) + 1) if $n % 11 == 0;\n    return(fizz_buzz($n-11)\
    \ + fizz_buzz($n-13) + 1) if $n % 13 == 0;\n    return(fizz_buzz($n-11) + fizz_buzz($n-13)\
    \ + 0);\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n     \
    \   if ($i % 11 == 0 || $i % 13 == 0) {\n            my $temp = $i;\n        \
    \    while ($temp > 0) {\n                if ($temp % 10 == 7) {\n           \
    \         $count++;\n                }\n                $temp = int($temp / 10);\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $digit = 7;\n\
    \    my $factor = [11, 13];\n    my $count = 0;\n    for (my $i = $digit; $i <\
    \ $n; $i += $digit) {\n        if (grep { !($i % $_) } @$factor) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for (1..$n-1) {\n        if ($_ % 11 == 0) {\n            $count += count_seven($_);\n\
    \        }\n        elsif ($_ % 13 == 0) {\n            $count += count_seven($_);\n\
    \        }\n    }\n    return $count;\n}", "    return 0 if $n < 7;\n    my $index\
    \ = 1;\n    my $count = 0;\n    while (1) {\n        my $multiplier = ($index\
    \ * 11);\n        last if $multiplier >= $n;\n        $count += $index if $multiplier\
    \ =~ /7/;\n        $index += 1;\n    }\n    $index = 1;\n    while (1) {\n   \
    \     my $multiplier = ($index * 13);\n        last if $multiplier >= $n;\n  \
    \      $count += $index if $multiplier =~ /7/;\n        $index += 1;\n    }\n\
    \    return $count;\n}", "    #your code here\n    my $cnt=0;\n    for(my $i=0;$i<$n;$i++){\n\
    \        if(($i%11==0||$i%13==0)&&($i=~/7/)){\n            $cnt++;\n        }\n\
    \    }\n    return $cnt;\n}", "    my($a, $b, $c, $d);\n    my($k) = 7;\n    my($t)\
    \ = 0;\n    ($a, $b) = ($n - 1) x 2;\n    $a %= 100;\n    $b %= 100;\n    $c =\
    \ ($a - $b) % 11;\n    $d = ($a - $b) % 13;\n    if (($c == 0) || ($d == 0)) {\n\
    \        $t = $k;\n    }\n    $a = ($n - 1) % 1000;\n    $b = ($n - 1) % 10000;\n\
    \    $c = ($a - $b) % 11;\n    $d = ($a - $b) % 13;\n    if (($c == 0) || ($d\
    \ == 0)) {\n        $t += $k;\n    }\n    $a = ($n - 1) % 100000;\n    $b = ($n\
    \ - 1) % 1000000;\n    $c = ($a - $b) % 11;\n    $d = ($a - $b) % 13;\n    if\
    \ (($c == 0) || ($d == 0)) {\n        $t += $k;\n    }\n    $a = ($n - 1) % 10000000;\n\
    \    $b = ($n - 1) % 100000000;\n    $c = ($a - $b) % 11;\n    $d = ($a - $b)\
    \ % 13;\n    if (($c == 0) || ($d == 0)) {\n        $t += $k;\n    }\n    return\
    \ $t;\n}\n1;", "    my $count = 0;\n    for my $i (1..$n-1) {\n        if ($i\
    \ % 11 == 0 or $i % 13 == 0) {\n            my $val = $i;\n            while ($val)\
    \ {\n                $count++ if $val % 10 == 7;\n                $val /= 10;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my($n7);\n    for(my($i)\
    \ = 1; $i <= $n; $i++){\n        if($i % 11 == 0 || $i % 13 == 0){\n         \
    \   my(@arr) = split('', $i);\n            for(my($j) = 0; $j < @arr; $j++){\n\
    \                if($arr[$j] == 7){\n                    $n7++;\n            \
    \    }\n            }\n        }\n    }\n    return $n7;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

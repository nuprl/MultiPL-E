name: HumanEval_36_fizz_buzz
language: pl
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nsub fizz_buzz {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fizz_buzz;\n\
  \        if(eq_deeply($candidate->(50),0)) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(78),2)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(79),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(200),6))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4000),192))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10000),639))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100000),8026))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $c = 0;\n    foreach my $i (0..$n-1) {\n        if (($i % 11\
    \ == 0) || ($i % 13 == 0)) {\n            $c += grep { $_ == 7 } split(//, $i);\n\
    \        }\n    }\n    return $c;\n}", "    my $count = 0;\n    foreach my $x\
    \ (1..$n-1) {\n        if ($x % 11 == 0 || $x % 13 == 0) {\n            my $tmp\
    \ = $x;\n            while ($tmp > 0) {\n                if ($tmp % 10 == 7) {\n\
    \                    $count++;\n                }\n                $tmp = int($tmp\
    \ / 10);\n            }\n        }\n    }\n    return $count;\n}", "    my($i);\n\
    \    my($count) = 0;\n    for($i = 1; $i < $n; $i++) {\n        if($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $count += count_digit($i, 7);\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    while ($n > 0) {\n  \
    \      my $d = $n % 10;\n        if ($d == 7) {\n            $count++;\n     \
    \   }\n        $n = int($n / 10);\n    }\n    return $count;\n}", "    return\
    \ grep { (my $i = $_) =~ s/7//g; length($i) }\n        grep { $_ % 11 == 0 ||\
    \ $_ % 13 == 0 } 1 .. $n - 1;\n}", "    my $res = 0;\n    for (my $i = 7; $i <\
    \ $n; $i++) {\n        $res++ if ($i % 11 == 0 || $i % 13 == 0) && grep(/7/, split(//,\
    \ $i));\n    }\n    return $res;\n}", "    my $result = 0;\n    my $num;\n   \
    \ for($num = 7; $num < $n; $num += 11) {\n        $result += is_seven($num);\n\
    \    }\n    for($num = 13; $num < $n; $num += 13) {\n        $result += is_seven($num);\n\
    \    }\n    return $result;\n}", "    my $num_of_7s = 0;\n    for(my $i = 1; $i\
    \ < $n; $i++) {\n        if(($i % 11 == 0 || $i % 13 == 0) && ($i % 100 != 0))\
    \ {\n            $num_of_7s += number_of_sevens($i);\n        }\n    }\n    return\
    \ $num_of_7s;\n}", "    return sum map {\n        scalar grep { $_ eq '7' } split\
    \ //, \"$_\"\n    } grep {\n        ($_ % 11 == 0 || $_ % 13 == 0) && $_ < $n\n\
    \    } 1 .. $n;\n}", "    # +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \    # VERY IMPORTANT\n    # +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \    $n = int($n) - 1;", "    my $times = 0;\n    for (my $i = 11; $i < $n; $i++)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            $times += ($i\
    \ =~ tr/7//);\n        }\n    }\n    return $times;\n}", "    my $sum = 0;\n \
    \   for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 ==\
    \ 0)) {\n            $sum += $i =~ tr/7//;\n        }\n    }\n    return $sum;\n\
    }", "    my $result = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 or $i % 13 == 0) {\n            $result += count_seven($i);\n    \
    \    }\n    }\n    return $result;\n}", "    die \"need n\" unless defined $n;\n\
    \    my $cnt = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        $cnt++ if ($i\
    \ % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $cnt;\n}", "   \
    \ my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        next unless ($i\
    \ % 11 == 0 || $i % 13 == 0);\n        $count++ if $i =~ /7/;\n    }\n    return\
    \ $count;\n}", "    my $c = 0;\n    for (my $i = 1; $i < $n; $i++) {\n       \
    \ if ($i % 11 == 0 or $i % 13 == 0) {\n            my $num = $i;\n           \
    \ while ($num > 0) {\n                $c++ if $num % 10 == 7;\n              \
    \  $num /= 10;\n            }\n        }\n    }\n    return $c;\n}", "    return\
    \ 0 if $n < 7;\n    $n--;", "    my $count = 0;\n    for (1..$n-1) {\n       \
    \ if ($_ % 11 == 0 or $_ % 13 == 0) {\n            $count += ($_ =~ tr/7//);\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for my $i\
    \ (1..$n-1) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $s\
    \ = $i;\n            while ($s) {\n                $count++ if $s % 10 == 7;\n\
    \                $s /= 10;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for (my $i = 7; $i < $n; $i++) {\n        $count++\
    \ if ($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        next unless ($i\
    \ % 11 == 0 || $i % 13 == 0);\n        if ($i =~ m/7/) {\n            ++$count;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (1..$n-1)\
    \ {\n\tnext unless $_ % 11 == 0 or $_ % 13 == 0;\n\twhile ($_ > 0) {\n\t    $count++\
    \ if $_ % 10 == 7;\n\t    $_ /= 10;\n\t}\n    }\n    return $count;\n}", "   \
    \ my $sum = 0;\n    my $fizz = 0;\n    while ($fizz < $n) {\n        $fizz +=\
    \ 11;\n        $sum += has_seven($fizz);\n    }\n    $fizz = 0;\n    while ($fizz\
    \ < $n) {\n        $fizz += 13;\n        $sum += has_seven($fizz);\n    }\n  \
    \  return $sum;\n}", "    # We need this because the test cases use a different\
    \ variable name\n    # than the variable name in the problem statement\n    $n\
    \ = $n + 0;\n    my $count = 0;\n    for my $i (1..$n) {\n        $count += 1\
    \ if $i % 11 == 0 || $i % 13 == 0 && $i =~ m/7/;\n    }\n    return $count;\n}",
  "    my $s = 0;\n    foreach my $i (11..$n-1) {\n        $s += () = $i =~ /7/g if\
    \ $i % 11 == 0 || $i % 13 == 0;\n    }\n    return $s;\n}", "    # Your code here\n\
    \    my $count = 0;\n    foreach (1..$n-1) {\n    \tif (($_ % 11 == 0 || $_ %\
    \ 13 == 0) && $_ =~ /7/) {\n    \t\t$count++;\n    \t}\n    }\n    return $count;\n\
    }", "    my($i);\n    my($count);\n    $count = 0;\n    for($i = 1; $i < $n; $i++)\
    \ {\n        if($i % 11 == 0 or $i % 13 == 0) {\n            if($i % 10 == 7)\
    \ {\n                $count++;\n            }\n            elsif($i >= 10 and\
    \ int($i / 10) % 10 == 7) {\n                $count++;\n            }\n      \
    \  }\n    }\n    return $count;\n}", "    my $result = 0;\n    for (my $i = 7;\
    \ $i < $n; $i += 11) {\n        if ($i % 13 == 0) {\n            $result++;\n\
    \        } else {\n            while ($i > 0) {\n                if ($i % 10 ==\
    \ 7) {\n                    $result++;\n                    last;\n          \
    \      }\n                $i /= 10;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n  \
    \      if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $temp = $i;\n \
    \           while ($temp > 0) {\n                if ($temp % 10 == 7) {\n    \
    \                $count++;\n                }\n                $temp = int($temp\
    \ / 10);\n            }\n        }\n    }\n    return $count;\n}", "    my($total)\
    \ = 0;\n    for(my($i) = 0; $i < $n; $i++) {\n        if(($i % 11 == 0) || ($i\
    \ % 13 == 0)) {\n            $total += grep { $_ == 7 } split(//, $i);\n     \
    \   }\n    }\n    return $total;\n}", "    my $count = 0;\n    for (my $i = 11;\
    \ $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n        \
    \    while ($i > 0) {\n                if ($i % 10 == 7) {\n                 \
    \   $count++;\n                }\n                $i = int($i / 10);\n       \
    \     }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for\
    \ (my $i = 0; $i < $n; $i++) {\n        next if ($i % 11 != 0 && $i % 13 != 0);\n\
    \        my $digits = $i;\n        while ($digits > 0) {\n            if ($digits\
    \ % 10 == 7) {\n                $count++;\n            }\n            $digits\
    \ /= 10;\n        }\n    }\n    return $count;\n}", "    my($count, $i);\n   \
    \ for($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n\
    \            $count += count_sevens($i);\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $i ( 0 .. $n-1 ) {\n        my $string\
    \ = $i;\n        $count++ if ( $string =~ /7/ ) and ( ( $i % 11 == 0 ) or ( $i\
    \ % 13 == 0 ) );\n    }\n    return $count;\n}", "    my $count;\n    for (1..$n)\
    \ {\n        $count++ if /7/ && $_ % 11 == 0 || $_ % 13 == 0;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    if ($n % 11 == 0 || $n % 13 == 0) {\n\t\
    $count += scalar(grep /7/, split(//, $n));\n    }\n    return $count;\n}", " \
    \   my $result = 0;\n    for my $i (1..$n-1) {\n        my $str = $i;\n      \
    \  if (($i % 11 == 0) || ($i % 13 == 0)) {\n            while (index($str, '7')\
    \ != -1) {\n                $result++;\n                $str = substr($str, index($str,\
    \ '7') + 1);\n            }\n        }\n    }\n    return $result;\n}", "    my\
    \ $count = 0;\n    for my $i ( 1 .. $n - 1 ) {\n        if ( ($i % 11 == 0) ||\
    \ ($i % 13 == 0) ) {\n            $count += scalar(grep { $_ eq \"7\" } split('',\
    \ $i));\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n    for\
    \ (my $i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0))\
    \ {\n            $count += count_7($i);\n        }\n    }\n    return $count;\n\
    }", "    my $cnt = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        $cnt++ if\
    \ (($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/);\n    }\n    return $cnt;\n}",
  "    my $fizz_buzz_times = 0;\n    foreach my $m (1..$n-1) {\n        if ($m % 11\
    \ == 0 || $m % 13 == 0) {\n            $fizz_buzz_times += _contains_digit($m,\
    \ 7);\n        }\n    }\n    return $fizz_buzz_times;\n}", "    my $found = 0;\n\
    \    for (1..$n-1) {\n        my $d = substr($_, -1);\n        $found++ if ($d\
    \ eq 7 && ($_ % 11 == 0 || $_ % 13 == 0));\n    }\n    return $found;\n}", " \
    \   return _fizz_buzz_helper($n, 0);\n}", "    return 0 if $n < 11;\n    return\
    \ int($n / 11) + int($n / 13) - int($n / 143);\n}", "    my $c = 0;\n    foreach\
    \ my $i (1..$n-1) {\n        if (length(sprintf(\"%d\", $i)) < 2) {\n        \
    \    next;\n        }\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n     \
    \       my $x = $i;\n            while ($x > 0) {\n                if ($x % 10\
    \ == 7) {\n                    $c++;\n                }\n                $x =\
    \ int($x / 10);\n            }\n        }\n    }\n    return $c;\n}", "    my\
    \ $count = 0;\n    for my $i (1..$n-1) {\n        if (($i % 11 == 0 || $i % 13\
    \ == 0) && $i % 10 == 7) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my $total = 0;\n    for my $i (1..$n) {\n        $total++\
    \ if ($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $total;\n\
    }", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            my $str = $i;\n            $count\
    \ += $str =~ tr/7//;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $i (0..$n) {\n        if($i % 11 == 0 or $i % 13 == 0) {\n\
    \            my $x = $i;\n            while($x > 0) {\n                $count++\
    \ if($x % 10 == 7);\n                $x /= 10;\n            }\n        }\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    for (my $i = 7; $i < $n;\
    \ $i += 11) {\n        $count += 1 if $i % 13 == 0;\n        $count += count_sevens($i);\n\
    \    }\n    for (my $i = 13; $i < $n; $i += 13) {\n        $count += count_sevens($i);\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    while ( $n-- > 0 ) {\n\
    \        next if $n % 11 and $n % 13;\n        $count++ while ( $n /= 10 ) % 10\
    \ == 7;\n    }\n    return $count;\n}", "    my $ret;\n    for (my $i = 1; $i\
    \ < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n           \
    \ $ret += $i =~ tr/7//;\n        }\n    }\n    return $ret;\n}", "    my $digit\
    \ = 7;\n    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if (is_divisible($i,\
    \ $digit)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $sum = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $sum += _num_sevens($i);\n        }\n    }\n\
    \    return $sum;\n}", "    my $count = 0;\n    foreach my $i ($n-1..0) {\n  \
    \      next if ($i % 11 != 0 && $i % 13 != 0);\n        my $tmp = $i;\n      \
    \  while ($tmp) {\n            if ($tmp % 10 == 7) {\n                $count++;\n\
    \            }\n            $tmp /= 10;\n        }\n    }\n    return $count;\n\
    }", "    my($cnt) = 0;\n    for(my($i) = 0; $i < $n; $i++){\n        if(($i %\
    \ 11 == 0 || $i % 13 == 0) && $i =~ /7/){\n            $cnt += (() = $i =~ /7/g);\n\
    \        }\n    }\n    return $cnt;\n}", "    # your code goes here\n    my $cnt\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i\
    \ % 13 == 0)) {\n            my $j = $i;\n            while ($j > 0) {\n     \
    \           if ($j % 10 == 7) {\n                    $cnt++;\n               \
    \ }\n                $j = $j / 10;\n            }\n        }\n    }\n    return\
    \ $cnt;\n}", "    my $count = 0;\n    for my $i (7..$n-1) {\n        if ($i %\
    \ 11 == 0 || $i % 13 == 0) {\n            my $digit = $i % 10;\n            if\
    \ ($digit == 7) {\n                $count++;\n            }\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my $term = 0;\n    while ($term\
    \ < $n) {\n        $term += 11;\n        $count += $term =~ tr/7//;\n    }\n \
    \   $term = 0;\n    while ($term < $n) {\n        $term += 13;\n        $count\
    \ += $term =~ tr/7//;\n    }\n    return $count;\n}", "    my $cnt = 0;\n    for\
    \ (my $i = 7; $i < $n; $i += 7) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n\
    \            ++$cnt;\n        }\n    }\n    return $cnt;\n}", "    my $count =\
    \ 0;\n    for (my $i = 11; $i < $n; $i += 11) {\n        $count += _digit_seven($i);\n\
    \    }\n    for (my $i = 13; $i < $n; $i += 13) {\n        $count += _digit_seven($i);\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for my $i (1..$n) {\n\
    \        $count++ if $i % 11 == 0 || $i % 13 == 0 && $i =~ /7/;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for my $num (0..$n-1) {\n        if ($num\
    \ % 11 == 0 or $num % 13 == 0) {\n            my $num_copy = $num;\n         \
    \   while ($num_copy > 0) {\n                if ($num_copy % 10 == 7) {\n    \
    \                $count++;\n                }\n                $num_copy = $num_copy\
    \ / 10;\n            }\n        }\n    }\n    return $count;\n}", "    return\
    \ (grep {\n        $b % $_ == 0 && $b =~ /7/\n    } (11, 13))\n}", "    die \"\
    Invalid input\" if ($n <= 0);\n    my $count = 0;\n    for (my $i = 1; $i < $n;\
    \ $i++) {\n        $count++ if ($i % 11 == 0 or $i % 13 == 0 and $i =~ /7/);\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    foreach my $i (1..$n-1)\
    \ {\n        $count++ if ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n    }\n\
    \    return $count;\n}", "    my $i = 11;\n    my $r = 0;\n    while ($i < $n)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $r += $i =~ s/7/\
    \ /gr;\n        }\n        $i++;\n    }\n    return $r;\n}", "    return -1 unless\
    \ $n =~ /^\\d+$/ && $n > 0;\n    my $count = 0;\n    for (11..$n) {\n        $count++\
    \ if /7/ && ($_ % 11 == 0 || $_ % 13 == 0);\n    }\n    return $count;\n}", " \
    \   my $count;\n    for ( my $i = 1; $i < $n; $i++ ) {\n        if ( $i % 11 ==\
    \ 0 || $i % 13 == 0 ) {\n            $count += $i =~ s/7//g;\n        }\n    }\n\
    \    return $count;\n}", "    my $ret = 0;\n    for (1..$n) {\n        $ret++\
    \ if (divisible($_, 11) or divisible($_, 13)) and occ($_, 7);\n    }\n    return\
    \ $ret;\n}", "    my $num = 0;\n    for (my $i = 11; $i < $n; $i++) {\n      \
    \  if ($i % 11 == 0 || $i % 13 == 0) {\n            $num += $i =~ tr/7//;\n  \
    \      }\n    }\n    return $num;\n}", "    my $r = 0;\n    my $b = 1;\n    my\
    \ $m = 0;\n    while ($b <= $n) {\n        $m = ($m * 10 + 7) % 11;\n        $b\
    \ *= 10;\n        $r += floor($n / $b) * $m;\n        $m = ($m * 10 + 7) % 13;\n\
    \        $r += floor($n / $b) * $m;\n        $r -= floor($n / ($b * 11)) * $m;\n\
    \        $r -= floor($n / ($b * 13)) * $m;\n    }\n    return $r;\n}", "    #\
    \ your code goes here\n}", "    my $count = 0;\n    for my $i (0..$n) {\n    \
    \    if ($i % 11 == 0 or $i % 13 == 0) {\n            $count += () = $i =~ /7/g;\n\
    \        }\n    }\n    return $count;\n}", "    return 0 if $n < 11;\n    my($c)\
    \ = 0;\n    $c += fizz_buzz($n - 1) if $n % 11 != 0 && $n % 13 != 0;\n    $c +=\
    \ 1 if (split //, $n)[-1] == 7;\n    return $c;\n}", "    my $count = 0;\n   \
    \ for my $i (7..$n) {\n        next if $i % 11 != 0 && $i % 13 != 0;\n       \
    \ $count++ if $i =~ /7/;\n    }\n    return $count;\n}", "    my $i = 0;\n   \
    \ my $count = 0;\n    while($i < $n) {\n        if ($i % 11 == 0 or $i % 13 ==\
    \ 0) {\n            $count += number_of_7s($i);\n        }\n        $i++;\n  \
    \  }\n    return $count;\n}", "    my $count = 0;\n    foreach (0..$n-1) {\n \
    \       # Your code here...\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    foreach my $i (1..$n) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n  \
    \          $count += () = $i =~ /7/g;\n        }\n    }\n    return $count;\n}",
  "    my $digit = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11\
    \ == 0) || ($i % 13 == 0)) {\n            my $num = $i;\n            while ($num)\
    \ {\n                $digit++ if ($num % 10 == 7);\n                $num /= 10;\n\
    \            }\n        }\n    }\n    return $digit;\n}", "    my $r = 0;\n  \
    \  for my $i (1..$n-1) {\n        $r++ if ($i % 11 == 0 || $i % 13 == 0) && $i\
    \ =~ /7/;\n    }\n    return $r;\n}", "    my $ans = 0;\n    for my $i (1..$n-1)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            $ans += count_sevens($i);\n\
    \        }\n    }\n    return $ans;\n}", "    my $f = 0;\n    for (my $i = 0;\
    \ $i < $n; $i++) {\n        if ( ($i % 11 == 0 || $i % 13 == 0) && $i =~ m/7/)\
    \ {\n            $f++;\n        }\n    }\n    return $f;\n}", "    my $count =\
    \ 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 or $i % 13\
    \ == 0) {\n            my $tmp = $i;\n            while ($tmp > 0) {\n       \
    \         $count++ if $tmp % 10 == 7;\n                $tmp /= 10;\n         \
    \   }\n        }\n    }\n    return $count;\n}", "    return sum(map {($_ =~ /7/)\
    \ ? (occ($_, '7')) : 0} grep {(($_ % 11) == 0) || (($_ % 13) == 0)} (1..($n -\
    \ 1)));\n}", "    return 0 if $n < 7;\n    my $c = 0;\n    for my $i (7 .. $n\
    \ - 1) {\n        next if $i % 7 == 0;\n        next if $i % 11 != 0 && $i % 13\
    \ != 0;\n        my $n = $i;\n        while ($n) {\n            $c++ if $n % 10\
    \ == 7;\n            $n /= 10;\n        }\n    }\n    return $c;\n}", "    my\
    \ $count = 0;\n    for (1..$n-1) {\n        my $divisible_by_11 = ($_ % 11 ==\
    \ 0);\n        my $divisible_by_13 = ($_ % 13 == 0);\n        if ($divisible_by_11\
    \ || $divisible_by_13) {\n            my $str = $_;\n            while ($str =~\
    \ /7/g) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    return 0 if $n < 0;\n    my $res = 0;\n    my $divisor = 1;\n\
    \    while ($divisor <= $n) {\n        $res += count_digit($divisor, 7) if ($divisor\
    \ % 11 == 0 || $divisor % 13 == 0);\n        $divisor += 1;\n    }\n    return\
    \ $res;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n     \
    \   if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $temp = $i;\n    \
    \        while ($temp > 0) {\n                my $remainder = $temp % 10;\n  \
    \              if ($remainder == 7) {\n                    $count++;\n       \
    \         }\n                $temp = int($temp / 10);\n            }\n       \
    \ }\n    }\n    return $count;\n}", "    my($result) = 0;\n    my($i);\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $result += num_sevens($i);\n        }\n    }\n    return $result;\n}",
  "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 == 0 or\
    \ $i % 13 == 0) {\n            $count += count_7s($i);\n        }\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    my $i = 1;\n    while ($i < $n)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $j = $i;\n  \
    \          while ($j > 0) {\n                if ($j % 10 == 7) {\n           \
    \         $count++;\n                }\n                $j = $j / 10;\n      \
    \      }\n        }\n        $i++;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $i (1..$n-1) {\n        if ( $i % 11 == 0 or $i % 13 == 0 )\
    \ {\n            $count += count_7($i);\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for my $i (1..$n) {\n        if ( $i % 11 == 0 ||\
    \ $i % 13 == 0 ) {\n            $count += num_sevens($i);\n        }\n    }\n\
    \    return $count;\n}", "    my $sum = 0;\n    foreach (1..$n-1) {\n        $sum++\
    \ if ($_ % 11 == 0 || $_ % 13 == 0) && $_ =~ /7/;\n    }\n    return $sum;\n}",
  "    my $count = 0;\n    for my $i (1..$n) {\n        next if $i % 11 && $i % 13;\n\
    \        $count++ while ($i /= 10) =~ s/7//;\n    }\n    return $count;\n}", " \
    \   return sum(\n        map {\n            (\n                $_ % 11 == 0 ||\n\
    \                $_ % 13 == 0\n            ) &&\n            $_ < $n &&\n    \
    \        tr/7//;\n        } (1 .. $n)\n    );\n}", "    my $count = 0;\n    for\
    \ my $m ($n ? 1..$n-1 : 1..50) {\n        next unless $m % 11 == 0 || $m % 13\
    \ == 0;\n        $count++ if $m =~ /7/;\n    }\n    return $count;\n}", "    my\
    \ $sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $sum += 7 if ($i %\
    \ 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $sum;\n}", "    my\
    \ $num_sevens = 0;\n    for (my $i = 7; $i < $n; $i += 7) {\n        if ($i %\
    \ 11 == 0 || $i % 13 == 0) {\n            $num_sevens++;\n        }\n    }\n \
    \   return $num_sevens;\n}", "    my $i = 0;\n    my $c = 0;\n    while($i < $n)\
    \ {\n        if($i % 11 == 0 || $i % 13 == 0) {\n            my $t = $i;\n   \
    \         while($t) {\n                if($t % 10 == 7) {\n                  \
    \  $c++;\n                }\n                $t /= 10;\n            }\n      \
    \  }\n        $i++;\n    }\n    return $c;\n}", "    my $count = 0;\n    foreach\
    \ my $i (1..$n-1) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n           \
    \ $count += get_seven_count($i);\n        }\n    }\n    return $count;\n}", " \
    \   # Your code here\n    my $count = 0;\n    foreach my $i (0..$n-1) {\n    \
    \    if ($i % 11 == 0 || $i % 13 == 0) {\n            $count += count_seven($i);\n\
    \        }\n    }\n    return $count;\n}", "    my $out = 0;\n    foreach my $x\
    \ ($n - 1 .. 0) {\n        my $tmp = $x;\n        $tmp =~ s/7//g;\n        if\
    \ ($x % 11 == 0 || $x % 13 == 0) {\n            $out += length($tmp);\n      \
    \  }\n    }\n    return $out;\n}", "    my $count = 0;\n    for my $i (1..$n-1)\
    \ {\n        if (($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    # your code here\n}", "    # ...\n\
    }", "    my $total = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n            $total += scalar(grep { $_ == 7 }\
    \ split(//, $i));\n        }\n    }\n    return $total;\n}", "    # Return the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n    my @numbers = grep { $_ % 11 == 0 || $_ % 13 == 0 } 1..$n-1;\n\
    \    my $regex = qr/(?=(7))/;\n    my $count = 0;\n    foreach (@numbers) {\n\
    \        my @digits = split(//, $_);\n        foreach (@digits) {\n          \
    \  $count++ if /$regex/;\n        }\n    }\n    return $count;\n}", "    my $i\
    \ = 0;\n    my $count = 0;\n    while ($i < $n) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            my $i_string = \"$i\";\n            $count\
    \ += () = $i_string =~ /7/g;\n        }\n        $i += 1;\n    }\n    return $count;\n\
    }", "    return $n == 0 ? 0 : fizz_buzz($n - 1) + ( is_divisible_by_11_or_13(\
    \ $n ) ? num_7s( $n ) : 0 );\n}", "    my($count) = 0;\n    for (my($i) = 1; $i\
    \ < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n           \
    \ if ($i =~ /7/) {\n                $count++;\n            }\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    foreach my $i (1..$n) {\n  \
    \      if($i % 11 == 0 || $i % 13 == 0) {\n            if($i =~ /7/) {\n     \
    \           $count++;\n            }\n        }\n    }\n    return $count;\n}",
  "    die \"Invalid n!\" if $n < 0;\n    die \"Invalid n!\" if $n >= 10 ** 9;\n \
    \   my $n_fizz_buzz = 0;\n    for my $i (0 .. $n - 1) {\n        next if $i %\
    \ 11 != 0 && $i % 13 != 0;\n        $n_fizz_buzz++ if $i =~ /7/;\n    }\n    return\
    \ $n_fizz_buzz;\n}", "    my $count = 0;\n    while ($n > 0) {\n        $count++\
    \ if $n % 10 == 7;\n        $n = int($n / 10);\n    }\n    return $count;\n}",
  "    my $sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $sum += 7 if $i\
    \ % 11 == 0 or $i % 13 == 0;\n    }\n    return $sum;\n}", "    my $count = 0;\n\
    \    foreach my $number ($n..13..$n) {\n        $count++ if $number % 7 == 0;\n\
    \    }\n    return $count;\n}", "    my $c = 0;\n    for (my $i = 1; $i < $n;\
    \ $i++) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n            $c += grep\
    \ { $_ == 7 } split(//, $i);\n        }\n    }\n    return $c;\n}", "    my $occurences\
    \ = 0;\n    for(my $i = 0; $i < $n; $i++){\n        if($i % 11 == 0 || $i % 13\
    \ == 0){\n            my $s = $i;\n            while($s > 0){\n              \
    \  $occurences++ if($s % 10 == 7);\n                $s /= 10;\n            }\n\
    \        }\n    }\n    return $occurences;\n}", "    my $count = 0;\n    for (my\
    \ $i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n\
    \            $count += count_digit(7, $i);\n        }\n    }\n    return $count;\n\
    }", "    $n--;\n    my($f, $b, $c) = (0, 0, 0);\n    for (my($i) = 0; $i < $n;\
    \ $i++) {\n        if ($i % 11 == 0) {\n            $f++;\n        }\n       \
    \ if ($i % 13 == 0) {\n            $b++;\n        }\n        if ($i % 11 == 0\
    \ && $i % 13 == 0) {\n            $c++;\n        }\n    }\n    my($fb) = $f +\
    \ $b - $c;\n    my($s) = 0;\n    while ($fb > 0) {\n        $s += $fb % 10 ==\
    \ 7 ? 1 : 0;\n        $fb /= 10;\n    }\n    return $s;\n}", "    my $count =\
    \ 0;\n    for my $i (1..$n-1) {\n        $count++ if ($i % 11 == 0 || $i % 13\
    \ == 0) && $i =~ /7/;\n    }\n    return $count;\n}", "    my $num = 0;\n    while\
    \ ($n > 0) {\n        $num += $n % 10 == 7 ? 1 : 0;\n        $n /= 10;\n    }\n\
    \    return $num;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n      \
    \  if ($i % 11 == 0 || $i % 13 == 0) {\n            my $i_string = $i;\n     \
    \       while ($i_string =~ s/7//) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $sum = 0;\n    my $curr = 1;\n\
    \    while($curr < $n) {\n        if($curr % 11 == 0 || $curr % 13 == 0) {\n \
    \           while($curr > 0) {\n                if($curr % 10 == 7) {\n      \
    \              $sum++;\n                }\n                $curr /= 10;\n    \
    \        }\n        }\n        $curr++;\n    }\n    return $sum;\n}", "    my\
    \ $count = 0;\n    for my $i (1..$n-1) {\n        next unless $i % 11 == 0 ||\
    \ $i % 13 == 0;\n        $count++ if $i =~ /7/;\n    }\n    return $count;\n}",
  "    my($result) = 0;\n    my($cur) = 0;\n    while($cur < $n) {\n        if($cur\
    \ % 11 == 0 or $cur % 13 == 0) {\n            while($cur > 0) {\n            \
    \    if($cur % 10 == 7) {\n                    $result++;\n                }\n\
    \                $cur /= 10;\n            }\n        }\n        $cur++;\n    }\n\
    \    return $result;\n}", "    return scalar grep {/7/} grep {$_ % 11 == 0 or\
    \ $_ % 13 == 0} 0..$n-1;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n\
    \        $count++ if ($i % 11 == 0 or $i % 13 == 0) and $i =~ /7/;\n    }\n  \
    \  return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    while ($i < $n)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            while ($i > 0) {\n\
    \                if ($i % 10 == 7) {\n                    $count += 1;\n     \
    \           }\n                $i = int $i / 10;\n            }\n        }\n \
    \       $i += 1;\n    }\n    return $count;\n}", "    my $count = 0;\n    for\
    \ my $i (1..$n-1) {\n        if($i % 11 == 0 or $i % 13 == 0) {\n            $count\
    \ += (grep {$_ == 7} split(//, $i))\n        }\n    }\n    return $count;\n}",
  "    my($count) = 0;\n    for (my($i) = 1; $i < $n; $i++) {\n        if ( ( ($i\
    \ % 11) == 0 ) || ($i % 13) == 0 ) {\n            if (index($i, \"7\") >= 0) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $fizz_buzz = 0;\n    my $div_13 = 0;\n    my $div_11 = 0;\n    if\
    \ ($n % 13 == 0) {\n        $div_13 = 1;\n    }\n    if ($n % 11 == 0) {\n   \
    \     $div_11 = 1;\n    }\n    my $fizz_buzz = ($n / 13) * $div_13 + ($n / 11)\
    \ * $div_11;\n    return $fizz_buzz;\n}", "    my $count = 0;\n    for my $i (1..$n)\
    \ {\n        next if $i % 7 == 0;\n        $count++ if $i % 11 == 0 or $i % 13\
    \ == 0;\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i =\
    \ 7; $i < $n; $i += 11) {\n        if ($i % 13 == 0) {\n            $count +=\
    \ buzz_count($i);\n        }\n        else {\n            $count += count_7($i);\n\
    \        }\n    }\n    return $count;\n}", "    my $num_of_sevens = 0;\n    foreach\
    \ my $i (11..$n-1) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n          \
    \  my $number = $i;\n            while ($number > 0) {\n                my $digit\
    \ = $number % 10;\n                if ($digit == 7) {\n                    $num_of_sevens\
    \ += 1;\n                }\n                $number = int($number / 10);\n   \
    \         }\n        }\n    }\n    return $num_of_sevens;\n}", "    my $r = 0;\n\
    \    foreach (1..$n) {\n\tif (($_ % 11 == 0) || ($_ % 13 == 0)) {\n\t    my $num\
    \ = $_;\n\t    while($num > 0) {\n\t\tif ($num % 10 == 7) {\n\t\t    $r++;\n\t\
    \t}\n\t\t$num = int($num / 10);\n\t    }\n\t}\n    }\n    return $r;\n}", "  \
    \  my $count = 0;\n    my $i = 0;\n    while ($i < $n) {\n        if ($i % 11\
    \ == 0 || $i % 13 == 0) {\n            while ($i > 0) {\n                if ($i\
    \ % 10 == 7) {\n                    $count++;\n                }\n           \
    \     $i = int($i / 10);\n            }\n        }\n        $i++;\n    }\n   \
    \ return $count;\n}", "    #code here\n    my $buzz = \"0\";\n    my $i;\n   \
    \ for($i = 1; $i < $n; $i++){\n        if($i % 11 == 0 || $i % 13 == 0){\n   \
    \         my $tmp = $i;\n            while($tmp > 0){\n                if($tmp\
    \ % 10 == 7){\n                    $buzz++;\n                }\n             \
    \   $tmp = $tmp / 10;\n            }\n        }\n    }\n    return $buzz;\n}",
  "    my $count = 0;\n    my $i = 1;\n    while($i < $n) {\n        if($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            if($i =~ /7/) {\n                $count++;\n\
    \            }\n        }\n        $i++;\n    }\n    return $count;\n}", "   \
    \ my $count = 0;\n    for my $i (1..$n) {\n        $count++ if(($i % 11 == 0 or\
    \ $i % 13 == 0) and digit_seven($i));\n    }\n    return $count;\n}", "    my\
    \ $fizz_buzz_count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            my $count = 0;\n            foreach my $j\
    \ (split //, $i) {\n                if ($j == 7) {\n                    $count++;\n\
    \                }\n            }\n            $fizz_buzz_count += $count;\n \
    \       }\n    }\n    return $fizz_buzz_count;\n}", "    my $num_7 = 0;\n    for\
    \ (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 or $i % 13 == 0) {\n\
    \            $num_7 += num_7($i);\n        }\n    }\n    return $num_7;\n}", " \
    \   my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if (($i % 11\
    \ == 0) || ($i % 13 == 0)) {\n            while ($i > 0) {\n                if\
    \ ($i % 10 == 7) {\n                    $count++;\n                }\n       \
    \         $i /= 10;\n            }\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    while($n>7){\n        my $m = $n;\n        while($m>0){\n\
    \            if($m%10==7){\n                $count++;\n            }\n       \
    \     $m = int($m/10);\n        }\n        $n--;\n    }\n    return $count;\n}",
  "    my $a = $n % 11;\n    my $b = $n % 13;\n    my $c = $n - 1;\n    my $d = $c\
    \ % 11;\n    my $e = $c % 13;\n    my $f = $a + $b + $d + $e;\n    my $g = $f\
    \ / 11;\n    my $h = $f / 13;\n    my $i = $g + $h;\n    return $i;\n}", "   \
    \ my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        next if $i % 11\
    \ != 0 and $i % 13 != 0;\n        $count++ if $i =~ /7/;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    while ($n > 0) {\n        my $digit = $n % 10;\n\
    \        $count++ if ($digit == 7);\n        $n /= 10;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $number (0..$n-1) {\n        next if ($number\
    \ % 11 and $number % 13);\n        $count++ if ($number =~ /7/);\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for (my $i = 11; $i < $n; $i++) {\n  \
    \      if (($i % 11 == 0) || ($i % 13 == 0)) {\n            if ($i % 10 == 7)\
    \ {\n                $count++;\n            }\n            if ($i > 9) {\n   \
    \             if ($i % 100 == 17) {\n                    $count++;\n         \
    \       }\n                if ($i > 99) {\n                    if ($i % 1000 ==\
    \ 717) {\n                        $count++;\n                    }\n         \
    \       }\n            }\n        }\n    }\n    return $count;\n}", "    my $result\
    \ = 0;\n    for my $i (1..$n-1) {\n        next unless $i % 11 == 0 || $i % 13\
    \ == 0;\n        while ($i > 0) {\n            $result++ if $i % 10 == 7;\n  \
    \          $i /= 10;\n        }\n    }\n    return $result;\n}", "    my $count\
    \ = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            my $s = \"$i\";\n            $count += $s =~ tr/7//;\n\
    \        }\n    }\n    return $count;\n}", "    return sum(grep(/7/, grep($_ %\
    \ 11 == 0 || $_ % 13 == 0, 1..$n-1)));\n}", "    my $count = 0;\n    for (my $i\
    \ = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n       \
    \     my $num = $i;\n            while ($num > 0) {\n                if ($num\
    \ % 10 == 7) {\n                    $count++;\n                }\n           \
    \     $num = int($num / 10);\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i\
    \ % 11 == 0 or $i % 13 == 0) {\n            while ($i != 0) {\n              \
    \  if ($i % 10 == 7) {\n                    $count++;\n                }\n   \
    \             $i /= 10;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $i (1..$n-1) {\n        if($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            my $m = $i;\n            while($m) {\n   \
    \             if($m % 10 == 7) {\n                    $count++;\n            \
    \    }\n                $m = int($m / 10);\n            }\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            my $number = $i;\n\
    \            while ($number > 0) {\n                if ($number % 10 == 7) {\n\
    \                    $count++;\n                }\n                $number = int($number\
    \ / 10);\n            }\n        }\n    }\n    return $count;\n}", "    my $c\
    \ = 0;\n    for (my $i = 11; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n            while ($i > 0) {\n                $c++ if $i % 10\
    \ == 7;\n                $i /= 10;\n            }\n        }\n    }\n    return\
    \ $c;\n}", "    my $count = 0;\n    my $i = 0;\n    while ($i < $n) {\n      \
    \  $i += 11;\n        $count += $i < $n && $i % 13 == 0 && $i =~ tr/7//;\n   \
    \ }\n    return $count;\n}", "    my $res = 0;\n    for my $x (1..$n) {\n    \
    \    if (($x % 11 == 0 || $x % 13 == 0) && $x =~ /7/) {\n            $res++;\n\
    \        }\n    }\n    return $res;\n}", "    return 0 if $n < 70;\n    $n--;\n\
    \    return _fizz_buzz($n) - 7 if $n % 70 == 69;\n    return _fizz_buzz($n) -\
    \ 1 if $n % 70 == 69 - 1;\n    return _fizz_buzz($n) - 2 if $n % 70 == 69 - 2;\n\
    \    return _fizz_buzz($n) - 3 if $n % 70 == 69 - 3;\n    return _fizz_buzz($n)\
    \ - 5 if $n % 70 == 69 - 5;\n    return _fizz_buzz($n) - 6 if $n % 70 == 69 -\
    \ 6;\n    return _fizz_buzz($n) - 8 if $n % 70 == 69 - 8;\n    return _fizz_buzz($n)\
    \ - 10 if $n % 70 == 69 - 10;\n    return _fizz_buzz($n) - 11 if $n % 70 == 69\
    \ - 11;\n    return _fizz_buzz($n) - 12 if $n % 70 == 69 - 12;\n    return _fizz_buzz($n)\
    \ - 4 if $n % 70 == 69 - 4;\n    return _fizz_buzz($n) - 9 if $n % 70 == 69 -\
    \ 9;\n    return _fizz_buzz($n) - 13 if $n % 70 == 69 - 13;\n    return _fizz_buzz($n)\
    \ - 14 if $n % 70 == 69 - 14;\n    return _fizz_buzz($n) - 15 if $n % 70 == 69\
    \ - 15;\n    return _fizz_buzz($n) - 17 if $n % 70 == 69 - 17;\n    return _fizz_buzz($n)\
    \ - 18 if $n % 70 == 69 - 18;\n    return _fizz_buzz($n) - 19 if $n % 70 == 69\
    \ - 19;\n    return _fizz_buzz($n) - 20 if $n % 70 == 69 - 20;\n    return _fizz_buzz($n)\
    \ - 22 if $n % 70 == 69 - 22;\n    return _fizz_buzz($n) - 23 if $n %", "    my\
    \ $count = 0;\n    my $i = 1;\n    while ($i < $n) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            my $num = $i;\n            while ($num > 0)\
    \ {\n                if ($num % 10 == 7) {\n                    $count++;\n  \
    \              }\n                $num = $num / 10;\n            }\n        }\n\
    \        $i++;\n    }\n    return $count;\n}", "    my $count = 0;\n    for (1..$n-1)\
    \ {\n        if ($_ % 11 == 0 || $_ % 13 == 0) {\n            for my $digit (split\
    \ //, $_) {\n                if ($digit == 7) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}", " \
    \   my $ans = 0;\n    foreach my $i (1..$n) {\n        $ans++ if ($i % 11 == 0\
    \ || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $ans;\n}", "    my $c = 0;\n\
    \    for (1..$n-1) {\n        next unless $_ % 11 == 0 || $_ % 13 == 0;\n    \
    \    $c++ while $_ =~ /7/g;\n    }\n    return $c;\n}", "    my $x = 0;\n    for\
    \ my $i (1..$n-1) {\n        next unless ($i % 11 == 0 or $i % 13 == 0);\n   \
    \     $x++ while ($i = int($i / 10)) % 10 == 7;\n    }\n    return $x;\n}", " \
    \   my $count = 0;\n    for my $i (1..$n-1) {\n        $count++ if ($i % 11 ==\
    \ 0 or $i % 13 == 0) and ($i =~ /7/);\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    for my $i (0..$n) {\n        next if $i % 7 == 0;\n       \
    \ next if $i % 11 == 0;\n        next if $i % 13 == 0;\n        $count++ if $i\
    \ =~ /[7]/;\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach (11..$n)\
    \ {\n        $count++ if ($_ % 11 == 0 || $_ % 13 == 0) && /7/;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++) {\n   \
    \     if ($i % 11 == 0 || $i % 13 == 0) {\n            $count += num_of_7($i);\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach my\
    \ $number ( 1 .. $n - 1 ) {\n        if ( $number % 11 == 0 ) {\n            $count\
    \ += char_count( $number, '7' );\n        }\n        elsif ( $number % 13 == 0\
    \ ) {\n            $count += char_count( $number, '7' );\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    foreach my $i (0..$n) {\n   \
    \     $count++ if $i % 11 == 0 || $i % 13 == 0;\n    }\n    return $count;\n}",
  "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if (($i % 11\
    \ == 0 || $i % 13 == 0) && $i =~ /7/) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}", "    return 0 if $n < 7;\n    my $result = 0;\n\
    \    for (my $i = 7; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            $result += count_digit($i, 7);\n        }\n    }\n    return\
    \ $result;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n        $count++\
    \ if ($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    if ($n <= 1) {\n\treturn 0;\n    }\n    for (my $i\
    \ = 2; $i < $n; $i++) {\n\t$count++ if (($i % 11 == 0) || ($i % 13 == 0)) && ($i\
    \ =~ /7/);\n    }\n    return $count;\n}", "    return sum(\n            map {/7/g}\n\
    \                grep {!($_ % 11) || !($_ % 13)}\n                    (1 .. $n\
    \ - 1)\n            );\n}", "    my $count = 0;\n    for (my $i = 0; $i < $n;\
    \ $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count +=\
    \ () = ($i =~ /7/g);\n        }\n    }\n    return $count;\n}", "    return 0\
    \ unless $n > 0;\n    return 1 + fizz_buzz($n - 1) if $n % 11 == 0 || $n % 13\
    \ == 0;\n    return fizz_buzz($n - 1);\n}", "    my $count = 0;\n    foreach my\
    \ $i (1..$n) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count\
    \ += grep { $_ == 7 } split(//, $i);\n        }\n    }\n    return $count;\n}",
  "    return 0 unless defined $n;\n    return 0 unless $n =~ /^\\d+$/;\n    my $count\
    \ = 0;\n    for (1..$n-1) {\n        $count++ if $_ % 11 == 0 || $_ % 13 == 0\
    \ && $_ =~ /7/;\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach\
    \ my $i (1..$n-1) {\n        if ( $i % 11 == 0 || $i % 13 == 0 ) {\n         \
    \   $count += grep {$_ == 7} split(//, $i);\n        }\n    }\n    return $count;\n\
    }", "    return 0 if $n < 1;\n    return 0 if $n < 7;\n    my $count = int(($n\
    \ - 7) / 11) + int(($n - 7) / 13);\n    return $count + fizz_buzz(int($n / 10));\n\
    }", "    my $count = 0;\n    for my $i (1..$n) {\n        $count++ if $i % 11\
    \ == 0 or $i % 13 == 0 and $i =~ /7/;\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    for (my $i = 7; $i < $n; $i += 7) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $seven_count = 0;\n    for (my $i = 7; $i < $n; $i++) {\n        next\
    \ if $i % 11 and $i % 13;\n        my $num = $i;\n        while ($num) {\n   \
    \         $seven_count++ if $num % 10 == 7;\n            $num /= 10;\n       \
    \ }\n    }\n    return $seven_count;\n}", "    my($res) = 0;\n    for(my($i) =\
    \ 1; $i < $n; $i++){\n\tif($i % 11 == 0){\n\t    $res += digit_seven($i);\n\t\
    }\n\telsif($i % 13 == 0){\n\t    $res += digit_seven($i);\n\t}\n    }\n    return\
    \ $res;\n}", "    my $c = 0;\n    foreach (1..$n) {\n        my $m = $_;\n   \
    \     while ($m > 0) {\n            if ($m % 10 == 7) {\n                $c++;\n\
    \            }\n            $m = int($m / 10);\n        }\n    }\n    return $c;\n\
    }", "    # Your code here\n    my $count = 0;\n    for (my $i = 1; $i < $n; $i++){\n\
    \        $count++ if ($i % 11 == 0 || $i % 13 == 0) && $i =~ /7/;\n    }\n   \
    \ return $count;\n}", "    return sum(map { (11*$_%10==7 || 13*$_%10==7) ? (split\
    \ //,$_) : () } grep { !($_%11 && $_%13) } 1..$n-1);\n}", "    my $n7 = 0;\n \
    \   my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $w = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $t = 0;\n    my $m = 0;\n    for (my $i = 1; $i < $n;\
    \ $i++) {\n        $x = $i % 11;\n        $y = $i % 13;\n        $z = $i % 7;\n\
    \        $w = $i % 3;\n        $q = $i % 4;\n        $r = $i % 5;\n        $t\
    \ = $i % 2;\n        $m = $i % 6;\n        if ($z == 0 and $x == 0) {\n      \
    \      $n7 = $n7 + 1;\n        }\n        if ($z == 0 and $y == 0) {\n       \
    \     $n7 = $n7 + 1;\n        }\n        if ($z == 0 and $x == 0 and $y == 0)\
    \ {\n            $n7 = $n7 - 1;\n        }\n        if ($x == 0 and $y == 0 and\
    \ $t == 0) {\n            $n7 = $n7 + 1;\n        }\n        if ($x == 0 and $y\
    \ == 0 and $w == 0) {\n            $n7 = $n7 + 1;\n        }\n        if ($x ==\
    \ 0 and $y == 0 and $q == 0) {\n            $n7 = $n7 + 1;\n        }\n      \
    \  if ($x == 0 and $y == 0 and $r == 0) {\n            $n7 = $n7 + 1;\n      \
    \  }\n        if ($x == 0 and $y == 0 and $m == 0) {\n            $n7 = $n7 +\
    \ 1;\n        }\n    }\n    return $n7;\n}", "    my $retval = 0;\n    # @_ now\
    \ contains the list of args passed to the subroutine\n    foreach my $i (1..$n-1)\
    \ {\n        if ( ($i % 11 == 0) || ($i % 13 == 0) ) {\n            my $s = $i;\n\
    \            while ($s > 0) {\n                if ($s % 10 == 7) {\n         \
    \           $retval++;\n                }\n                $s = int($s / 10);\n\
    \            }\n        }\n    }\n    return $retval;\n}", "    my $result = 0;\n\
    \    for (my $i = 0; $i < $n; $i++) {\n        $result++ if ($i % 11 == 0 || $i\
    \ % 13 == 0) && $i =~ /7/;\n    }\n    return $result;\n}", "    my $count = 0;\n\
    \    for (my $i = 11; $i < $n; $i++) {\n        $count++ if ($i % 11 == 0 || $i\
    \ % 13 == 0) && $i =~ /7/;\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $i = 0;\n    for( $i=0; $i<$n; $i++ ) {\n        if( $i % 11 == 0 || $i\
    \ % 13 == 0 ) {\n            $count += fizz_buzz_util($i);\n        }\n    }\n\
    \    return $count;\n}", "    return sum_n_to_k_digits($n-1, 7, 11, 13);\n}",
  "    my $count;\n    for (my $i = 0; $i < $n; $i++) {\n        if ( ($i % 11 ==\
    \ 0 || $i % 13 == 0) && digit_seven($i) ) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i = 0; $i <\
    \ $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 == 0) && ($i =~ /7/)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my($count)\
    \ = 0;\n    my($i);\n    my($j);\n    for ($i = 1; $i < $n; $i++) {\n        if\
    \ (($i % 11 == 0) || ($i % 13 == 0)) {\n            $j = $i;\n            while\
    \ ($j > 0) {\n                if ($j % 10 == 7) {\n                    $count++;\n\
    \                }\n                $j = int($j / 10);\n            }\n      \
    \  }\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my $i = 1;\
    \ $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count\
    \ += () = $i =~ /7/g;\n        }\n    }\n    return $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

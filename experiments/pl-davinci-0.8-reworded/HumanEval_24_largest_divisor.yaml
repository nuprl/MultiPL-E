name: HumanEval_24_largest_divisor
language: pl
prompt: "# For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n# >>> largest_divisor(15)\n# 5\nsub largest_divisor {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&largest_divisor;\n\
  \        if(eq_deeply($candidate->(3),1)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->(7),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),5))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100),50))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(49),7))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $divisor = int(sqrt($n));\n    while ($divisor > 1) {\n    \
    \    if ($n % $divisor == 0) {\n            return $divisor;\n        }\n    \
    \    $divisor--;\n    }\n    return 1;\n}", "    my $larger = 1;\n    my $candidate\
    \ = 2;\n    while ($candidate < $n) {\n        if ($n % $candidate == 0) {\n \
    \           $larger = $candidate;\n        }\n        $candidate += 1;\n    }\n\
    \    return $larger;\n}", "    my $largest_divisor = -1;\n    for (my $i = 2;\
    \ $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor\
    \ = $i;\n        }\n    }\n    return $largest_divisor;\n}", "    my $d = 2;\n\
    \    while ($n >= $d**2) {\n        if ($n % $d == 0) {\n            $n /= $d;\n\
    \        } else {\n            $d += 1;\n        }\n    }\n    return $n;\n}",
  "    my $i = $n - 1;\n    while ($i > 0) {\n        return $i if $n % $i == 0;\n\
    \        $i -= 1;\n    }\n}", "    return 0 if ($n < 2);\n    for (my $i = int($n/2);\
    \ $i > 1; $i--) {\n        return $i if ($n % $i == 0);\n    }\n    return 1;\n\
    }", "    for(my $i=$n-1; $i>0; $i--) {\n        return $i if $n % $i == 0;\n \
    \   }\n}", "    my $largest = 1;\n    foreach my $i (2..$n/2) {\n        if ($n\
    \ % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n\
    }", "    $n-- while ($n && $n % $n--);\n    return $n;\n}", "    return $n if\
    \ $n == 1;\n    for (my $i = $n - 1; $i > 1; $i--) {\n        return $i if $n\
    \ % $i == 0;\n    }\n    return 1;\n}", "    for my $i (reverse(2..$n-1)) {\n\
    \        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n    return\
    \ 1;\n}", "    $n-- while $n % $n;\n    return $n;\n}", "    for (my $i = $n-1;\
    \ $i >= 1; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n    \
    \    }\n    }\n}", "    return 1 if ($n <= 1);\n    return $n if ($n == 2);\n\
    \    return largest_divisor($n - 1) if ($n % ( $n - 1 ) != 0);\n    return largest_divisor($n\
    \ - 2) if ($n % ( $n - 2 ) != 0);\n    return $n - 1;\n}", "    if ($n % 2 ==\
    \ 0) {\n        return 2;\n    } else {\n        return $n - 1;\n    }\n}", " \
    \   my $k = int( sqrt($n) );\n    while ( ($n % $k) != 0 ) {\n        $k--;\n\
    \    }\n    return $k;\n}", "    for (my $i = $n - 1; $i > 0; $i--) {\n      \
    \  return $i if $n % $i == 0;\n    }\n}", "    for my $i (reverse 1..$n-1) {\n\
    \        return $i if $n % $i == 0;\n    }\n}", "    my $max = int(sqrt($n));\n\
    \    my $r = 0;\n    for my $i( 2 .. $max ) {\n        if ( $n % $i == 0 ) {\n\
    \            $r = $i;\n        }\n    }\n    return $r;\n}", "    for my $i (reverse\
    \ 1..$n-1) {\n        return $i if ($n % $i == 0);\n    }\n}", "    my $divisor\
    \ = 2;\n    my $limit = sqrt($n);\n    while ($divisor <= $limit) {\n        if\
    \ ($n % $divisor == 0) {\n            return $n / $divisor;\n        }\n     \
    \   $divisor += 1;\n    }\n    return 1;\n}", "    foreach my $i (reverse(1..$n-1))\
    \ {\n        return $i if $n % $i == 0;\n    }\n}", "    my($i) = 2;\n    while\
    \ ($i * $i <= $n) {\n        if ($n % $i == 0) {\n            my($div) = $n /\
    \ $i;\n            return $div if $div > $i;\n            return $i;\n       \
    \ }\n        $i++;\n    }\n    return 1;\n}", "    my $largest = $n - 1;\n   \
    \ while ($largest > 1) {\n        last if $n % $largest == 0;\n        $largest--;\n\
    \    }\n    return $largest;\n}", "    my($i) = $n - 1;\n    while ($i > 0) {\n\
    \        return $i if $n % $i == 0;\n        $i--;\n    }\n}", "    my $divisor\
    \ = 1;\n    while($divisor <= $n/2) {\n        $divisor++;\n        last if $n\
    \ % $divisor == 0;\n    }\n    return $divisor;\n}", "    foreach my $p (reverse\
    \ 1..$n-1) {\n        if( $n % $p == 0 ) {\n            return $p;\n        }\n\
    \    }\n    return undef;\n}", "    my $i = $n - 1;\n    while ($i > 0) {\n  \
    \      if ($n % $i == 0) {\n            return $i;\n        }\n        $i -= 1;\n\
    \    }\n}", "    foreach (reverse(2..sqrt($n))) {\n        return $_ if $n % $_\
    \ == 0;\n    }\n    return 1;\n}", "    my $ret = 0;\n    my $i = 2;\n    while\
    \ ($i < $n) {\n        if ($n % $i == 0) {\n            $ret = $i;\n        }\n\
    \        $i++;\n    }\n    return $ret;\n}", "    foreach my $d (reverse(2..$n-1))\
    \ {\n        if(($n % $d) == 0) {\n            return $d;\n        }\n    }\n\
    \    return 1;\n}", "    my($i) = 1;\n    my($answer) = 0;\n    for ($i = 1; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            $answer = $i;\n    \
    \    }\n    }\n    return $answer;\n}", "    return $n if $n <= 1;\n    return\
    \ largest_divisor($n - 1) if $n % ($n - 1);\n    return $n - 1;\n}", "    foreach\
    \ my $i (reverse(1..($n-1))) {\n        if($n % $i == 0) {\n            return\
    \ $i;\n        }\n    }\n}", "    my $max_divisor = 1;\n    for my $i (2..($n-1))\
    \ {\n        if( $n % $i == 0 ) {\n            $max_divisor = $i;\n        }\n\
    \    }\n    return $max_divisor;\n}", "    for (my $k = $n - 1; $k > 0; $k--)\
    \ {\n        if ($n % $k == 0) {\n            return $k;\n        }\n    }\n \
    \   return 0;\n}", "    my $divisor = $n-1;\n    while ($divisor > 0) {\n    \
    \    return $divisor if $n % $divisor == 0;\n        $divisor -= 1;\n    }\n}",
  "    my($i) = $n - 1;\n    while ($i > 0) {\n        return $i if $n % $i == 0;\n\
    \        $i--;\n    }\n}", "    if (not (numeric($n) and $n > 0)) {\n        return\
    \ undef;\n    }", "    my $i = $n - 1;\n    while ($i > 0) {\n        if ($n %\
    \ $i == 0) {\n            return $i;\n        }\n        $i -= 1;\n    }\n}",
  "    for (my $i = $n-1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n         \
    \   return $i;\n        }\n    }\n}", "    for (my $i = $n - 1; $i > 0; $i--)\
    \ {\n        return $i if $n % $i == 0;\n    }\n}", "    my $d = int($n / 2);\n\
    \    while ($d > 1) {\n        return $d if $n % $d == 0;\n        $d--;\n   \
    \ }\n    return 1;\n}", "    my($max) = int($n / 2);\n    foreach my $d (reverse(2..$max))\
    \ {\n        return $d if ($n % $d == 0);\n    }\n    return 0;\n}", "    my($d);\n\
    \    for ($d = 2; $d < $n; $d++) {\n        if ($n % $d == 0) {\n            return\
    \ $d;\n        }\n    }\n    return 0;\n}", "    die \"Must pass an integer\"\
    \ unless (looks_like_number($n) && int($n) == $n);\n    my $d = $n-1;\n    while\
    \ ($d > 1) {\n        return $d if ($n % $d == 0);\n        $d--;\n    }\n   \
    \ return $d;\n}", "    foreach my $i (reverse(1..$n-1)) {\n        if ( $n % $i\
    \ == 0 ) {\n            return $i;\n        }\n    }\n    return 0;\n}", "   \
    \ my $largest_divisor = 1;\n    for my $i ( 2 .. int(sqrt($n)) ) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}", "    for my $i (reverse(2..$n-1)) {\n        if\
    \ ($n % $i == 0) {\n            return $i;\n        }\n    }\n    return 0;\n}",
  "    my $largest = 1;\n    while ( $n > 1 ) {\n        $largest++;\n        $n /=\
    \ $largest if $n % $largest == 0;\n    }\n    return $largest;\n}", "    my $largest\
    \ = 0;\n    for my $i (1..$n-1) {\n        if ($n % $i == 0) {\n            $largest\
    \ = $i;\n        }\n    }\n    return $largest;\n}", "    my($largest) = 0;\n\
    \    for my $i (1..int($n/2)) {\n        if ($n % $i == 0) {\n            $largest\
    \ = $i;\n        }\n    }\n    return $largest;\n}", "    for (my $i = $n - 1;\
    \ $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n     \
    \   }\n    }\n}", "    for (my $i = $n - 1; $i > 0; $i--) {\n        return $i\
    \ if $n % $i == 0;\n    }\n}", "    return if !defined $n;\n    if($n < 2) {\n\
    \        return;\n    }\n    if($n % 2 == 0) {\n        return $n/2;\n    }\n\
    \    # Since we've eliminated 2, just iterate every other number\n    my $test\
    \ = 3;\n    while($test < $n) {\n        if($n % $test == 0) {\n            return\
    \ $n/$test;\n        }\n        $test += 2;\n    }\n    return;\n}", "    my($max)\
    \ = int(sqrt($n));\n    foreach my $divisor (2..$max) {\n        if ($n % $divisor\
    \ == 0) {\n            return $n / $divisor;\n        }\n    }\n    return 1;\n\
    }", "    if ($n == 1) {\n        return $n;\n    }\n    for my $i (2..($n-1))\
    \ {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n \
    \   return 1;\n}", "    foreach my $divisor (reverse(1..$n-1)) {\n        return\
    \ $divisor if $n % $divisor == 0;\n    }\n}", "    for (my $i = 2; $i < $n; $i++)\
    \ {\n        return $i if $n % $i == 0;\n    }\n    return 1;\n}", "    my $max\
    \ = int($n / 2);\n    return 0 if $max == 0;\n    for my $i (reverse 1..$max)\
    \ {\n        return $i if ($n % $i) == 0;\n    }\n}", "    my $biggest = 1;\n\
    \    for (my $i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n         \
    \   $biggest = $i;\n        }\n    }\n    return $biggest;\n}", "    my $half\
    \ = int($n/2);\n    for my $i ($half .. 1) {\n        return $i if $n % $i ==\
    \ 0;\n    }\n}", "    $n || return;\n    for (my $i = $n - 1; $i > 0; $i--) {\n\
    \        return $i if $n % $i == 0;\n    }\n}", "    $n = abs($n);\n    my $m\
    \ = sqrt($n);\n    for my $i (2..$m) {\n        return $i if $n % $i == 0;\n \
    \   }\n    return 1;\n}", "    my $r = sqrt($n);\n    if ($r != int($r)) {\n \
    \       $r = int($r);\n    }\n    while ($r > 1) {\n        if ($n % $r == 0)\
    \ {\n            return $r;\n        }\n        $r--;\n    }\n    return undef;\n\
    }", "    if ($n < 1) {\n        die \"need positive value\";\n    }\n    my $d\
    \ = 2;\n    my $l = $n;\n    while ($d < $l) {\n        if ($n % $d == 0) {\n\
    \            $l = $n / $d;\n        }\n        $d++;\n    }\n    $l;\n}", "  \
    \  for( my $d = $n-1; $d >= 1; $d-- ) {\n        return $d if $n % $d == 0;\n\
    \    }\n}", "    while ( $n > 1 ) {\n        $n--;\n        return $n if ($n %\
    \ $n == 0);\n    }\n}", "    croak \"largest_divisor requires positive integer\
    \ argument\"\n        unless $n =~ /^\\d+$/ && $n > 0;\n    my $d = int $n / 2;\n\
    \    while ($d > 0) {\n        if ($n % $d == 0) {\n            return $d;\n \
    \       }\n        $d--;\n    }\n    return undef;\n}", "    if ( $n < 1 ) {\n\
    \        die(\"Must pass in a positive integer\");\n    }", "    my $divisor =\
    \ $n - 1;\n    while ($divisor > 0) {\n        return $divisor if ($n % $divisor\
    \ == 0);\n        $divisor--;\n    }\n}", "    my $end = int($n / 2);\n    for\
    \ my $i (reverse(2..$end)) {\n        return $i if $n % $i == 0;\n    }\n    return\
    \ 1;\n}", "    my $x = $n - 1;\n    while($x > 0) {\n        return $x if ($n\
    \ % $x == 0);\n        $x--;\n    }\n}", "    my($i);\n    for($i = 2; $i < $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            return $i;\n        }\n   \
    \ }\n    return 1;\n}", "    my $i = $n;\n    while ($i > 0) {\n        return\
    \ $i if $n % $i == 0;\n        $i--;\n    }\n}", "    my $mid = int($n/2);\n \
    \   for (my $i = $mid; $i > 0; $i--) {\n        if ($n % $i == 0) {\n        \
    \    return $i;\n        }\n    }\n}", "    return $n if $n == 1;\n    my $i =\
    \ 1;\n    while($i < $n) {\n        $i++;\n        return $i-1 if $n % $i == 0;\n\
    \    }\n}", "    my $i = $n - 1;\n    while ($i > 0) {\n        return $i if $n\
    \ % $i == 0;\n        $i--;\n    }\n}", "    my $divisor = $n / 2;\n    while\
    \ ($divisor > 0) {\n        if ($n % $divisor == 0) {\n            return $divisor;\n\
    \        }\n        $divisor--;\n    }\n    return 0;\n}", "    my $i = $n - 1;\n\
    \    while($i > 0) {\n        return $i if $n % $i == 0;\n        $i--;\n    }\n\
    }", "    my $d = $n / 2;\n    while($n % $d != 0) {\n        $d--;\n    }\n  \
    \  return $d;\n}", "    my($i) = $n - 1;\n    while($i > 0) {\n        last if\
    \ $n % $i == 0;\n        $i--;\n    }\n    return $i;\n}", "    for (my $i = $n\
    \ - 1; $i > 0; $i--) {\n        return $i if ($n % $i == 0);\n    }\n}", "   \
    \ return 0 if $n <= 0;\n    return 1 if $n == 1;\n    my $i = 2;\n    while ($i\
    \ < $n) {\n        return $i if $n % $i == 0;\n        $i++;\n    }\n    return\
    \ 1;\n}", "    my $largest = 0;\n    my $sqrt = sqrt($n);\n    for (my $divisor\
    \ = 2; $divisor <= $sqrt; $divisor++) {\n        if ($n % $divisor == 0) {\n \
    \           $largest = $divisor;\n        }\n    }\n    return $largest;\n}",
  "    for (my $i = 1; $i <= $n/2; $i++) {\n        return $i if ($n % $i == 0);\n\
    \    }\n    return 1;\n}", "    foreach my $i (reverse 1..int($n/2)) {\n     \
    \   if ($n % $i == 0) {\n            return $i;\n        }\n    }\n    return\
    \ 1;\n}", "    my $divisor = 1;\n    for my $i (1..$n-1) {\n        if($n % $i\
    \ == 0) {\n            $divisor = $i;\n        }\n    }\n    return $divisor;\n\
    }", "    return 2 if $n == 2;\n    return 1 if $n == 1;\n    return 2 if $n %\
    \ 2 == 0;\n    my $max = $n / 2;\n    my $divisor = 1;\n    foreach my $x (3..$max)\
    \ {\n        if ($n % $x == 0) {\n            $divisor = $x;\n        }\n    }\n\
    \    return $divisor;\n}", "    my($retval) = 0;\n    foreach my $i ( 2 .. int(\
    \ sqrt( $n ) ) ) {\n        if( $n % $i == 0 ) {\n            $retval = $i;\n\
    \        }\n    }\n    return $retval;\n}", "    my($i) = $n - 1;\n    while ($i\
    \ > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n   \
    \     $i--;\n    }\n}", "    foreach my $i (reverse 1..$n-1) {\n        return\
    \ $i if $n % $i == 0;\n    }\n}", "    my($i) = 2;\n    while ($i < $n) {\n  \
    \      if ($n % $i == 0) {\n            return $i;\n        }\n        $i++;\n\
    \    }\n    return $n;\n}", '    my($divisor) = 2;', "    die \"Argument must\
    \ be a positive integer\" unless $n =~ /^\\d+$/;\n    my $d = $n - 1;\n    while\
    \ ($n % $d != 0) {\n        $d--;\n    }\n    return $d;\n}", "    my($i) = $n\
    \ - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return\
    \ $i;\n        }\n        $i--;\n    }\n}", "    my $divisor = 2;\n    for ( $divisor;\
    \ $divisor <= ($n / 2); $divisor++ ) {\n        last if $n % $divisor == 0;\n\
    \    }\n    return ($divisor > $n/2) ? $n : $divisor;\n}", "    my($i) = $n -\
    \ 1;\n    while($i > 0) {\n        if($n % $i == 0) {\n            return $i;\n\
    \        }\n        $i--;\n    }\n}", "    my $divisor = $n - 1;\n    while ($divisor\
    \ > 0) {\n        if ($n % $divisor == 0) {\n            return $divisor;\n  \
    \      }\n        $divisor--;\n    }\n}", "    return undef if $n == 0;\n    my\
    \ $max = 1;\n    for my $divisor ( 2 .. $n - 1 ) {\n        if ( $n % $divisor\
    \ == 0 ) {\n            $max = $divisor;\n        }\n    }\n    return $max;\n\
    }", "    my $answer = undef;\n    foreach my $i (reverse(1..$n-1)) {\n       \
    \ if ($n % $i == 0) {\n            $answer = $i;\n            last;\n        }\n\
    \    }\n    return $answer;\n}", "    for my $divisor (reverse 1..($n / 2)) {\n\
    \        return $divisor if $n % $divisor == 0;\n    }\n    return 1;\n}", " \
    \   my $i = 2;\n    for (; $i < $n; $i++) {\n        return $i if $n % $i == 0;\n\
    \    }\n    return $i;\n}", "    return 1 if $n == 1;\n    my $n2 = $n >> 1;\n\
    \    return 2 if $n2 << 1 == $n;\n    my $divisor = 3;\n    my $prime = 1;\n \
    \   while($n % $divisor) {\n        $divisor += 2;\n        $prime = 0;\n    }\n\
    \    $divisor = $prime ? 1 : $divisor;\n    return $divisor;\n}", "    if($n <=\
    \ 1) {\n        return undef;\n    }\n    for my $i (reverse(2..$n-1)) {\n   \
    \     if($n % $i == 0) {\n            return $i;\n        }\n    }\n    undef;\n\
    }", "    $n--;\n    while ($n > 0) {\n        return $n if ($n % $n == 0);\n \
    \       $n--;\n    }\n}", "    my $m = sqrt($n);\n    for (my $i = int($m); $i\
    \ > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n\
    \    }\n    return 0;\n}", "    foreach (reverse(2..$n-1)) {\n        return $_\
    \ if $n % $_ == 0;\n    }\n    return 1;\n}", "    foreach my $i (2..$n-1) {\n\
    \        return $i if $n % $i == 0;\n    }\n    return 0;\n}", "    my($largest,\
    \ $i);\n    $largest = 1;\n    $i = 2;\n    while ($i < $n) {\n        if ($n\
    \ % $i == 0) {\n            $largest = $i;\n        }\n        $i = $i + 1;\n\
    \    }\n    return $largest;\n}", "    foreach (reverse(2..$n-1)) {\n        return\
    \ $_ if $n % $_ == 0;\n    }\n    return;\n}", "    die \"largest_divisor($n)\
    \ only defined for n > 1\" unless $n > 1;\n    my($d);\n    for ($d = $n - 1;\
    \ !($n % $d) ; $d--) {};\n    return $d;\n}", "    my $i = 2;\n    my $d = 0;\n\
    \    for (; $i < $n && $d == 0; $i++) {\n        $d = $i if $n % $i == 0;\n  \
    \  }\n    return $d;\n}", "    my $largest_divisor = 1;\n    for (my $i = 2; $i\
    \ <= $n/2; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor\
    \ = $i;\n        }\n    }\n    return $largest_divisor;\n}", "    return 1 if\
    \ $n == 1;\n    my $divisor = 2;\n    while($n % $divisor != 0) {\n        $divisor++;\n\
    \    }\n    return $divisor;\n}", "    my $d = 1;\n    foreach my $i (reverse\
    \ 2..$n-1) {\n        if ($n % $i == 0) {\n            $d = $i;\n            last;\n\
    \        }\n    }\n    return $d;\n}", "    my($i);\n    for($i = $n - 1; $i >\
    \ 0; $i--) {\n        if($n % $i == 0) {\n            return $i;\n        }\n\
    \    }\n    return undef;\n}", "    my($i);\n    for ($i = sqrt($n); $i > 0; $i--)\
    \ {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n \
    \   # Should never reach here\n    return 0;\n}", "    my $divisor = $n-1;\n \
    \   until($n % $divisor == 0) { $divisor--; }\n    return $divisor;\n}", "   \
    \ my $i = 1;\n    while($i < $n) {\n        if($n % $i == 0) {\n            $largest\
    \ = $i;\n        }\n        $i++;\n    }\n    return $largest;\n}", "    my($i)\
    \ = $n / 2;\n    while ($i >= 2) {\n        if ($n % $i == 0) {\n            return\
    \ $i;\n        }\n        $i--;\n    }\n    return 1;\n}", "    my $d = $n-1;\n\
    \    while ($d > 1) {\n        if ($n % $d == 0) {\n            return $d;\n \
    \       }\n        $d -= 1;\n    }\n    die \"Largest divisor of $n not found\"\
    ;\n}", "    return 0 if $n <= 0;\n    # check number is integer\n    die \"not\
    \ an integer\" if ($n != int($n));\n    my $max_divisor = $n;\n    my $divisor\
    \ = 2;\n    while (1) {\n        last if ($max_divisor == $divisor);\n       \
    \ if ($n % $divisor == 0) {\n            $max_divisor = $divisor;\n        }\n\
    \        $divisor++;\n    }\n    return $max_divisor;\n}", "    my $largest_divisor\
    \ = 0;\n    my $i = 1;\n    my $limit = int($n / 2);\n    while ($i <= $limit)\
    \ {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n       \
    \ }\n        $i++;\n    }\n    return $largest_divisor;\n}", "    return if $n\
    \ < 2;\n    return 1 if $n == 2;\n    my $x = int($n / 2);\n    return $x if $n\
    \ % $x == 0;\n    while ($x > 1) {\n        $x--;\n        return $x if $n % $x\
    \ == 0;\n    }\n    return 1;\n}", "    my($i) = $n;\n    while($i > 0) {\n  \
    \      return $i if $n % $i == 0;\n        $i--;\n    }\n}", "    if(not $n) {\n\
    \        return undef;\n    }\n    foreach my $divisor (reverse 2..$n-1) {\n \
    \       if($n % $divisor == 0) {\n            return $divisor;\n        }\n  \
    \  }\n    return 1;\n}", "    my $i = int(sqrt($n));\n    while ($i > 0) {\n \
    \       return $i if $n % $i == 0;\n        $i--;\n    }\n    return undef;\n}",
  "    my $largest = 0;\n    my $i = 2;\n    while ($i < $n) {\n        if ($n % $i\
    \ == 0) {\n            $largest = $i;\n        }\n        $i++;\n    }\n    return\
    \ $largest;\n}", "    return 1 if $n == 1;\n    for my $i (2..sqrt($n)) {\n  \
    \      return $i-1 if $n % $i == 0;\n    }\n    return $n-1;\n}", "    my($result)\
    \ = 0;\n    for (2..$n-1) {\n        if ($n % $_ == 0) {\n            $result\
    \ = $_;\n        }\n    }\n    return $result;\n}", "    my $i = int(sqrt($n));\n\
    \    while($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n  \
    \      }\n        $i -= 1;\n    }\n    return undef;\n}", "    # i goes from n-1\
    \ to 2\n    for (my $i = $n-1; $i > 1; $i--) {\n        if ($n % $i == 0) {\n\
    \            return $i;\n        }\n    }\n    return \"no divisor found\";\n}",
  "    my $largest = 0;\n    for (my $i = $n - 1; $i > 0; $i--) {\n        if ($n\
    \ % $i == 0) {\n            $largest = $i;\n            last;\n        }\n   \
    \ }\n    return $largest;\n}", "    my $i = $n - 1;\n    while ($i > 0) {\n  \
    \      if ($n % $i == 0) {\n            return $i;\n        }\n        $i -= 1;\n\
    \    }\n}", "    my $i = 2;\n    my $largest = $n;\n    while ($i <= int($n/2))\
    \ {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    \
    \    $i++;\n    }\n    return $largest;\n}", "    for my $i (reverse 1..$n) {\n\
    \        return $i if $n % $i == 0;\n    }\n}", "    for (my $k = $n - 1; $k >\
    \ 0; $k--) {\n        return $k if ($n % $k == 0);\n    }\n    return 0;\n}",
  "    my $largest = 1;\n    foreach my $divisor (1..$n/2) {\n        if ($n % $divisor\
    \ == 0) {\n            $largest = $divisor;\n        }\n    }\n    return $largest;\n\
    }", "    for (my $i=$n-1; $i>1; $i--) {\n        return $i if ($n % $i == 0);\n\
    \    }\n    return 1;\n}", "    my $max_divisor = 1;\n    for (my $i = 2; $i <\
    \ $n; $i++) {\n        if ($n % $i == 0) {\n            $max_divisor = $i;\n \
    \       }\n    }\n    return $max_divisor;\n}", "    my $m = $n;\n    while($m\
    \ > 1) {\n        if($n % $m == 0) {\n            return $m;\n        }\n    \
    \    $m--;\n    }\n}", "    for my $d (reverse(2..$n-1)) {\n        if ($n % $d\
    \ == 0) {\n            return $d;\n        }\n    }\n    return 1;\n}", "    if\
    \ ($n <= 1) { return undef; }\n    for my $i (reverse 2..int($n/2)) {\n      \
    \  if ($n % $i == 0) { return $i; }\n    }\n    return 1;\n}", "    my $i = 1;\n\
    \    while ($i < $n){\n        $i++ if $n % $i;\n    }\n    return $i;\n}", " \
    \   my($i);\n    for($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n\
    \            return $i;\n        }\n    }\n    return 0;\n}", "    return (($n/2)\
    \ + 1) if $n == 2;\n    return 1 if $n == 1;\n    my $max = $n/2;\n    for (my\
    \ $i = 2; $i <= $max; $i++) {\n        if (($n % $i) == 0) {\n            return\
    \ ($n/$i);\n        }\n    }\n    return 0;\n}", "    die(\"$n must be a positive\
    \ integer\\n\") if $n < 1;\n    my $largest = int(sqrt($n));\n    while($n % $largest)\
    \ {\n        $largest--;\n    }\n    return $largest;\n}", "    for (my $i = int(sqrt($n));\
    \ $i > 0; $i--) {\n        return $i if $n % $i == 0;\n    }\n}", "    for (my\
    \ $i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return\
    \ $i;\n        }\n    }\n}", "    for(my $i = $n - 1; $i > 0; $i--) {\n      \
    \  return $i if $n % $i == 0;\n    }\n}", '    $n = abs($n);', "    my $d = $n\
    \ - 1;\n    while ($n % $d) {\n        $d--;\n    }\n    return $d;\n}", "   \
    \ my $largest = 1;\n    foreach my $d ( 2 .. $n-1 ) {\n        $largest = $d if\
    \ $n % $d == 0 and $d > $largest;\n    }\n    return $largest;\n}", "    for my\
    \ $i (reverse 1..($n-1)) {\n        if ($n % $i == 0) {\n            return $i;\n\
    \        }\n    }\n    return 0;\n}", "    for(my $i = $n - 1; $i > 0; $i--) {\n\
    \        if($n % $i == 0) {\n            return $i;\n        }\n    }\n}", " \
    \   for (my $i = $n-1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n        \
    \    return $i;\n        }\n    }\n}", "    my $d = $n-1;\n    while ($d > 1 &&\
    \ $n % $d != 0) {\n        $d--;\n    }\n    return $d;\n}", "    my($r) = sqrt($n);\n\
    \    for my $i (int($r) .. 2) {\n        return $i if $n % $i == 0;\n    }\n \
    \   return 1;\n}", "    return $n if $n == 1;\n    for (2..($n-1)) {\n       \
    \ if ($n % $_ == 0) {\n            return $_;\n        }\n    }\n    return $n;\n\
    }", "    for (my $i = floor(sqrt($n)); $i > 0; $i--) {\n        return $i if $n\
    \ % $i == 0;\n    }\n    return 0;\n}", "    die \"largest_divisor: first parameter\
    \ to largest_divisor is not a positive integer.\\n\" if(!is_positive_integer($n));\n\
    \    for my $d ( reverse(2..$n-1) ) {\n        return $d if ($n % $d == 0);\n\
    \    }\n    return 0;\n}", "    foreach my $i ( reverse( 1 .. $n - 1 ) ) {\n \
    \       if ( $n % $i == 0 ) {\n            return $i;\n        }\n    }\n    return\
    \ undef;\n}", "    my $i = $n-1;\n    while ($i>0) {\n        return $i if $n\
    \ % $i == 0;\n        $i -= 1;\n    }\n}", "    my $max = int($n / 2);\n    for\
    \ my $d (2..$max) {\n        return $d if $n % $d == 0;\n    }\n    return $n;\n\
    }", "    my $largest = 0;\n    foreach my $d (2..$n/2) {\n        if ($n % $d\
    \ == 0) {\n            $largest = $d;\n        }\n    }\n    return $largest;\n\
    }", "    return 1 if $n == 1;\n    my $end = int(sqrt($n));\n    for (my $i =\
    \ $end; $i > 1; $i--) {\n        return $i if $n % $i == 0;\n    }\n    return\
    \ 1;\n}", "    my($root) = int(sqrt($n));\n    my($i);\n    for ($i = $root; $i\
    \ > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n\
    \    }\n    return 1;\n}", "    my $largest = 0;\n    foreach my $i (2..$n/2)\
    \ {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n\
    \    return $largest;\n}", "    my $d = 0;\n    while ($n % $d) { $d++; }\n  \
    \  return $d;\n}", "    my $factor = 2;\n    while ($n > $factor) {\n        $factor\
    \ = next_prime($factor);\n        if ($n % $factor == 0) {\n            while\
    \ ($n % $factor == 0) {\n                $n /= $factor;\n            }\n     \
    \   }\n    }\n    return $n;\n}", "    # if n is even\n    if($n % 2 == 0) {\n\
    \        $n = $n / 2;\n        while($n % 2 == 0) {\n            $n = $n / 2;\n\
    \        }\n    }", "    return undef if $n == 0;\n    foreach my $m (reverse(1..$n-1))\
    \ {\n        return $m if $n % $m == 0;\n    }\n    return undef;\n}", "    my\
    \ $s = int($n/2);\n    for my $i (reverse(1..$s)) {\n        if ($n % $i == 0)\
    \ {\n            return $i;\n        }\n    }\n    return 0;\n}", "    my $i =\
    \ $n - 1;\n    while ($i > 0) {\n        return $i if $n % $i == 0;\n        $i--;\n\
    \    }\n}", "    my($i) = $n - 1;\n    while ($i > 0) {\n        if ($n % $i ==\
    \ 0) {\n            return $i;\n        }\n        $i--;\n    }\n}", "    my $largest\
    \ = 1;\n    for my $d (2..$n) {\n        $largest = $d if $n % $d == 0;\n    }\n\
    \    return $largest;\n}", "    my $lg = $n-1;\n    while(0 != $n % $lg) {\n \
    \       $lg--;\n    }\n    return $lg;\n}", "    my $max_divisor = 0;\n    for\
    \ my $i (reverse 1..$n-1) {\n        if (is_divisible($n, $i)) {\n           \
    \ $max_divisor = $i;\n            last;\n        }\n    }\n    return $max_divisor;\n\
    }", "    foreach my $i ( reverse( 1 .. $n-1 ) ) {\n        return $i if $n % $i\
    \ == 0;\n    }\n}", "    my($i) = $n - 1;\n    while($i > 0) {\n        return\
    \ $i if $n % $i == 0;\n        $i -= 1;\n    }\n}", "    my $s = int(sqrt($n));\n\
    \    foreach my $d (reverse(2..$s)) {\n        return $d if $n % $d == 0;\n  \
    \  }\n    return 1;\n}", "    croak \"Input must be positive integer\" if ( $n\
    \ < 0 || int($n) != $n );\n    for ( my $i = int(sqrt($n)); $i > 0; $i-- ) {\n\
    \        if ( $n % $i == 0 ) {\n            return $i;\n        }\n    }\n   \
    \ return 0;\n}", "    my $larg_divisor = 1;\n    foreach my $x (2..$n-1) {\n \
    \       if ($n % $x == 0) {\n            $larg_divisor = $x;\n        }\n    }\n\
    \    return $larg_divisor;\n}", "    my $max = 1;\n    for my $i (2..int($n/2))\
    \ {\n        next unless $n % $i == 0;\n        $max = $i;\n    }\n    return\
    \ $max;\n}", "    my $largest = $n-1;\n    while($n % $largest != 0) {\n     \
    \   $largest--;\n    }\n    return $largest;\n}", "    if($n == 1) {\n       \
    \ return 0;\n    }\n    my($divisor) = $n - 1;\n    while($divisor > 0) {\n  \
    \      if($n % $divisor == 0) {\n            return $divisor;\n        }\n   \
    \     $divisor--;\n    }\n}", "    my($i) = 2;\n    while($i < $n) {\n       \
    \ if($n % $i == 0) {\n            $n = $n / $i;\n        } else {\n          \
    \  $i++;\n        }\n    }\n    return $i;\n}", "    my $divisor = 1;\n    for\
    \ my $i (2..$n/2) {\n        next unless $n % $i == 0;\n        $divisor = $i;\n\
    \    }\n    return $divisor;\n}", "    for (my $i = $n - 1; $i > 0; $i--) {\n\
    \        return $i if $n % $i == 0;\n    }\n}", "    for (my $i = $n - 1; $i >\
    \ 0; $i--) {\n        return $i if $n % $i == 0;\n    }\n}", "    my($i) = $n;\n\
    \    while($i > 0) {\n        return($i) if($n % $i == 0);\n        $i--;\n  \
    \  }\n}", "    my $divisor = 2;\n    while($n > $divisor) {\n        if($n % $divisor\
    \ == 0) {\n            return $divisor;\n        }\n        $divisor++;\n    }\n\
    \    return $n;\n}", "    my $divisor = 2;\n    my $max_divisor = 1;\n    while\
    \ ($divisor <= $n / 2) {\n        if ($n % $divisor == 0) {\n            $max_divisor\
    \ = $divisor;\n        }\n        $divisor++;\n    }\n    return $max_divisor;\n\
    }", "    my $divisor = $n - 1;\n    while ($divisor > 0) {\n        return $divisor\
    \ if $n % $divisor == 0;\n        $divisor -= 1;\n    }\n}", "    if ($n == 1)\
    \ {\n        return 1;\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            return $i;\n        }\n    }\n    return 1;\n}",
  "    for (my $i = int($n/2); $i > 1; $i--) {\n        return $i if $n % $i == 0;\n\
    \    }\n    return 1;\n}", "    for (my $i = $n-1; $i > 0; $i--) {\n        if\
    \ ($n % $i == 0) {\n            return $i;\n        }\n    }\n}", "    if (is_prime($n))\
    \ {\n        return $n - 1;\n    }\n    my $i = 2;\n    while($i < $n) {\n   \
    \     if ($n % $i == 0) {\n            return $n / $i;\n        }\n        $i++;\n\
    \    }\n}", "    my($largest) = 0;\n    foreach my $i (1..$n/2) {\n        if($n\
    \ % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

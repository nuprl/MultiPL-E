name: HumanEval_79_decimal_to_binary
language: pl
prompt: "# You will be given a number in decimal form and your task is to convert\
  \ it to\n# binary format. The function should return a string, with each character\
  \ representing a binary\n# number. Each character in the string will be '0' or '1'.\n\
  # There will be an extra couple of characters 'db' at the beginning and at the end\
  \ of the string.\n# The extra characters are there to help with the format.\n# Examples:\n\
  # >>> decimal_to_binary(15)\n# \"db1111db\"\n# >>> decimal_to_binary(32)\n# \"db100000db\"\
  \nsub decimal_to_binary {\n    my($decimal) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&decimal_to_binary;\n\
  \        if(eq_deeply($candidate->(0),\"db0db\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(32),\"db100000db\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(103),\"\
  db1100111db\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(15),\"db1111db\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $binary = sprintf(\"%b\", $decimal);\n    my $extra = \"db\"\
    ;\n    $binary = $extra . $binary . $extra;\n    return $binary;\n}", "    my($binary)\
    \ = 'db';\n    my($remainder);\n    while ($decimal > 0) {\n        $remainder\
    \ = $decimal % 2;\n        $binary = $remainder . $binary;\n        $decimal =\
    \ int($decimal / 2);\n    }\n    $binary .= 'db';\n    return $binary;\n}", " \
    \   return \"db\". unpack(\"B*\", pack(\"N\", $decimal)) .\"db\";\n}", "    return\
    \ undef unless defined $decimal;\n    my @nums = split(//, $decimal);\n    return\
    \ \"db\" . map { format_binary($_) } @nums . \"db\";\n}", "    #\n    # This is\
    \ where you put your code\n    #\n    my $output = \"db\";\n    while ($decimal\
    \ > 0) {\n        $output .= $decimal % 2;\n        $decimal = int($decimal /\
    \ 2);\n    }\n    $output .= \"db\";\n    return $output;\n}", "    my $binary;\n\
    \    my $q;\n    my $r;\n    my $r_string;\n    my $db = \"db\";\n    my $rev_r_string;\n\
    \    my $final_string;\n    while($decimal >= 1) {\n        $q = int($decimal\
    \ / 2);\n        $r = $decimal % 2;\n        $r_string = $r_string . $r;\n   \
    \     $decimal = $q;\n    }\n    $rev_r_string = reverse($r_string);\n    $final_string\
    \ = $db . $rev_r_string . $db;\n    return $final_string;\n}", "    my $binary\
    \ = \"db\";\n    while($decimal > 0) {\n        $binary = ($decimal % 2) . $binary;\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary .= \"db\";\n    return\
    \ $binary;\n}", "    my $binary = unpack(\"B32\", pack(\"N\", $decimal));\n  \
    \  $binary =~ s/^0+(?=\\d)//;\n    return \"db$binary\".\"db\";\n}", "    my $binary;\n\
    \    my $count = $decimal;\n    if($count == 0){\n        $binary = \"db0db\"\
    ;\n    }\n    else{\n        $binary = \"db\";\n        my $quotient = $count;\n\
    \        while($quotient != 0){\n            my $temp = $quotient % 2;\n     \
    \       $binary = $temp.$binary;\n            $quotient = int($quotient / 2);\n\
    \        }\n        $binary = $binary.\"db\";\n    }\n    return $binary;\n}",
  "    my $binary = \"db\";\n    if ($decimal == 0) {\n        $binary .= \"0db\"\
    ;\n    }\n    else {\n        while ($decimal != 0) {\n            my $temp =\
    \ $decimal % 2;\n            $binary .= $temp;\n            $decimal = ($decimal\
    \ - $temp) / 2;\n        }\n        $binary .= \"db\";\n    }\n    return $binary;\n\
    }", "    my $binary = 'db';", "    my $sign = '';\n    if ($decimal < 0) {\n \
    \       $sign = '-';\n        $decimal = -$decimal;\n    }\n    my $result = 'db';\n\
    \    while ($decimal) {\n        $result .= $decimal % 2;\n        $decimal =\
    \ int($decimal / 2);\n    }\n    $result .= 'db';\n    return $sign . reverse($result);\n\
    }", "    my $binary = \"db\";\n    while ($decimal > 0) {\n        my $remainder\
    \ = $decimal % 2;\n        $binary = $remainder . $binary;\n        $decimal =\
    \ int($decimal / 2);\n    }\n    return $binary . \"db\";\n}", "    my $binary\
    \ = '';\n    $binary = 'db';\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = int($decimal / 2);\n    }\n    $binary .= 'db';\n \
    \   return $binary;\n}", "    return sprintf(\"db%bdb\", $decimal);\n}", "   \
    \ my($binary) = '';\n    my($digit);\n    $binary = 'db';\n    while ($decimal\
    \ > 0) {\n        $digit = $decimal % 2;\n        $binary = $digit . $binary;\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary .= 'db';\n    return\
    \ $binary;\n}", "    my $binary = \"db\";\n    while ($decimal > 0) {\n      \
    \  if ($decimal % 2 == 0) {\n            $binary = \"0\".$binary;\n        } else\
    \ {\n            $binary = \"1\".$binary;\n        }\n        $decimal = int($decimal\
    \ / 2);\n    }\n    return $binary.\"db\";\n}", "    return \"db$decimal\" if\
    \ $decimal == 0;\n    my $binary;\n    while ($decimal > 0) {\n        $binary\
    \ = $decimal % 2 . $binary;\n        $decimal = int($decimal / 2);\n    }\n  \
    \  return \"db$binary\" . \"db\";\n}", "    # your code here\n}", "    return\
    \ join(\"\", \"db\", unpack(\"B32\", pack(\"N\", $decimal)), \"db\");\n}", " \
    \   $decimal = int($decimal);\n    my $binary = \"\";\n    my $bit;\n    while($decimal)\
    \ {\n        $bit = $decimal % 2;\n        $decimal = int($decimal / 2);\n   \
    \     $binary = \"$bit$binary\";\n    }\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}", "    #debug(\"d2b($decimal)\");\n    my $bin = \"\"\
    ;\n    while ($decimal) {\n        my $tmp = $decimal % 2;\n        $bin = \"\
    $tmp$bin\";\n        $decimal = int(($decimal - $tmp) / 2);\n    }\n    return\
    \ \"db$bin\" . \"0\" x (8 - length($bin)) . \"db\";\n}", "    my $binary = 'db';\n\
    \    my $remainder;\n    while ($decimal > 0) {\n        $remainder = $decimal\
    \ % 2;\n        $decimal /= 2;\n        $binary = $remainder . $binary;\n    }\n\
    \    $binary .= 'db';\n    return $binary;\n}", "    my $binary = 'db';\n    do\
    \ {\n        $binary = '1' . $binary if $decimal % 2;\n        $binary = '0' .\
    \ $binary if $decimal % 2 == 0;\n        $decimal = int($decimal / 2);\n    }\
    \ while $decimal > 0;\n    $binary .= 'db';\n    return $binary;\n}", "    return\
    \ \"db\" . unpack(\"B32\", pack(\"N\", $decimal)) . \"db\";\n}", "    my $binary\
    \ = \"db\";\n    my $remainder;\n    my $quotient = $decimal;\n    while ($quotient\
    \ > 0) {\n        $remainder = $quotient % 2;\n        $quotient = int($quotient\
    \ / 2);\n        $binary = $remainder . $binary;\n    }\n    $binary .= \"db\"\
    ;\n    return $binary;\n}", "    my $binary = 'db';\n    while ($decimal > 0)\
    \ {\n        $binary = ($decimal % 2) . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    $binary .= 'db';\n    return $binary;\n}", "    my $binary\
    \ = \"db\";\n    my $dividend = $decimal;\n    my $remainder = 1;\n    while ($remainder\
    \ != 0) {\n        $remainder = $dividend % 2;\n        $dividend = $dividend\
    \ / 2;\n        $binary = $remainder . $binary;\n    }\n    $binary = $binary\
    \ . \"db\";\n    return $binary;\n}", "    my $bin = sprintf(\"%b\", $decimal);\n\
    \    $bin = \"db$bin\";\n    $bin .= \"db\";\n    return $bin;\n}", "    my $binary\
    \ = unpack(\"B32\", pack(\"N\", $decimal));\n    $binary =~ s/^0+(?=\\d)//;  \
    \ # strip off leading zeros\n    return \"db$binary\".\"db\";\n}", "    my $binary\
    \ = \"db\";\n    if ($decimal >= 0){\n        while ($decimal > 0){\n        \
    \    $binary = $binary . ($decimal % 2);\n            $decimal = int($decimal\
    \ / 2);\n        }\n    }else{\n        $decimal = abs($decimal);\n        while\
    \ ($decimal > 0){\n            $binary = $binary . ($decimal % 2);\n         \
    \   $decimal = int($decimal / 2);\n        }\n        $binary = \"-\" . $binary;\n\
    \    }\n    $binary = $binary . \"db\";\n    return $binary;\n}", "    my $binary\
    \ = unpack(\"B32\", pack(\"N\", $decimal));\n    $binary =~ s/^0+(?=\\d)//;  \
    \ # otherwise you'll get leading zeros\n    return \"db$binary\\db\";\n}", " \
    \   my $binary = '';\n    while ($decimal > 0) {\n        $binary = ($decimal\
    \ % 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n    return \"\
    db\" . $binary . \"db\";\n}", "    my $binary = \"db\";\n    while ($decimal !=\
    \ 0) {\n        my $remainder = $decimal % 2;\n        $binary = $remainder .\
    \ $binary;\n        $decimal = int($decimal / 2);\n    }\n    return $binary .\
    \ \"db\";\n}", "    my $binary;\n    while($decimal > 0) {\n        my $remainder\
    \ = $decimal % 2;\n        $binary = $remainder . $binary;\n        $decimal =\
    \ int($decimal / 2);\n    }\n    $binary = \"db\" . $binary . \"db\";\n    return\
    \ $binary;\n}", "    my($binary) = \"db\";\n    my($binary_digit) = 0;\n    my($digit_position)\
    \ = 0;\n    my($remainder) = 0;\n    while($decimal > 0) {\n\t$remainder = $decimal\
    \ % 2;\n\t$binary_digit = $binary_digit + $remainder * (10 ** $digit_position);\n\
    \t$decimal = $decimal / 2;\n\t$digit_position++;\n    }\n    $binary = $binary\
    \ . $binary_digit . \"db\";\n    return $binary;\n}", "    my $bin = '';\n   \
    \ for( my $i=32; $i>=0; $i-- ) {\n        if( $decimal >= 2**$i ) {\n        \
    \    $bin .= '1';\n            $decimal -= 2**$i;\n        }\n        else {\n\
    \            $bin .= '0';\n        }\n    }\n    return \"db$bin\".\"db\";\n}",
  "    $decimal =~ s/\\D//g;\n    my $binary = unpack(\"B32\", pack(\"N\", $decimal));\n\
    \    $binary =~ s/^0+(?=\\d)//;\n    return 'db' . $binary . 'db';\n}", "    my\
    \ $binary = \"db\";\n    while($decimal != 0) {\n        $binary = \"db\" . (($decimal\
    \ % 2) . $binary);\n        $decimal = int($decimal / 2);\n    }\n    return $binary;\n\
    }", "    my $binary;\n    my $bin_char;\n    my $binary_string = \"db\";\n   \
    \ my $first_bit = 1;\n    my $last_bit = 0;\n    # find the greatest power of\
    \ 2 in the number\n    my $power = 0;\n    my $greatest_power = 0;\n    my $greatest_power_less_one\
    \ = 0;\n    my $max_power = $decimal;\n    my $power_of_two = 0;\n    my $decimal_remainder\
    \ = $decimal;\n    my $binary_value = 0;\n    while ($power <= $max_power) {\n\
    \        $power_of_two = 2 ** $power;\n        if ($power_of_two <= $decimal)\
    \ {\n            $greatest_power = $power;\n            $greatest_power_less_one\
    \ = $power - 1;\n        }\n        $power++;\n    }\n    $max_power = $greatest_power;\n\
    \    $power = $greatest_power;\n    while ($power >= 0) {\n        $power_of_two\
    \ = 2 ** $power;\n        $binary_value = 0;\n        if ($power_of_two <= $decimal_remainder)\
    \ {\n            $binary_value = 1;\n            $decimal_remainder = $decimal_remainder\
    \ - $power_of_two;\n        }\n        $binary_string = $binary_string . $binary_value;\n\
    \        $power--;\n    }\n    $binary_string = $binary_string . \"db\";\n   \
    \ return $binary_string;\n}", "    my $binary = \"db\";\n    $binary .= unpack(\"\
    B32\", pack(\"N\", $decimal));\n    $binary =~ s/^0+(?=\\d)//;\n    $binary .=\
    \ \"db\";\n    return $binary;\n}", "    return \"db\".join(\"\",map {($decimal\
    \ & (1 << $_))?\"1\":\"0\"} reverse(0..log($decimal)/log(2))).\"db\";\n}", " \
    \   return \"db\" . unpack(\"B32\", pack(\"N\", $decimal)) . \"db\";\n}", "  \
    \  return \"db\" . unpack('B32', pack('N', $decimal)) . \"db\";\n}", "    my $binary;\n\
    \    while ($decimal > 0) {\n        $binary = ($decimal % 2) . $binary;\n   \
    \     $decimal = int($decimal / 2);\n    }\n    $binary = \"db$binary\" . \"db\"\
    ;\n    return $binary;\n}", "    my $binary = \"db\";\n    while ($decimal > 0)\
    \ {\n        $binary = \"\".$decimal%2.$binary;\n        $decimal = int($decimal/2);\n\
    \    }\n    return $binary.\"db\";\n}", "    my $binary = \"db\";\n    while ($decimal\
    \ > 0) {\n        my $remainder = $decimal % 2;\n        $binary = $remainder\
    \ . $binary;\n        $decimal = $decimal / 2;\n    }\n    $binary .= \"db\";\n\
    \    return $binary;\n}", "    my $binary = 'db';\n    while ($decimal > 0) {\n\
    \        $binary = ($decimal & 1) . $binary;\n        $decimal = $decimal >> 1;\n\
    \    }\n    return $binary . 'db';\n}", "    $decimal = 'db' . unpack(\"B*\",\
    \ pack(\"N\", $decimal)) . 'db';\n    return $decimal;\n}", "    my $binary =\
    \ \"db\";\n    while ($decimal > 0) {\n        $binary = ($decimal % 2).$binary;\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary .= \"db\";\n    return\
    \ $binary;\n}", "    my($bin);\n    my($dec);\n    $bin = \"db\";\n    while (1)\
    \ {\n        if ($decimal == 0) {\n            $bin .= \"0\";\n            last;\n\
    \        }\n        $dec = $decimal % 2;\n        $decimal = int($decimal / 2);\n\
    \        $bin .= $dec;\n    }\n    $bin .= \"db\";\n    $bin = reverse($bin);\n\
    \    return $bin;\n}", "    my $binary = sprintf(\"%b\", $decimal);\n    my $db\
    \    = 'db';\n    return $db . $binary . $db;\n}", "    return 'db' . unpack('B32',\
    \ pack('N', $decimal)) . 'db';\n}", "    # Your code here\n    my $binary = \"\
    db\";\n    my $result = \"\";\n    my $first = $decimal;\n    if($decimal == 0){\n\
    \        $binary = $binary.\"0\".$binary;\n    }\n    else{\n        while($decimal\
    \ >= 1){\n            my $quotient = int($decimal/2);\n            my $remainder\
    \ = $decimal%2;\n            $result = $remainder.$result;\n            $decimal\
    \ = $quotient;\n        }\n        $binary = $binary.$result.$binary;\n    }\n\
    \    return $binary;\n}", "    my $binary = \"db\";\n    if ($decimal == 0) {\n\
    \        $binary .= \"0\";\n    }\n    else {\n        while ($decimal > 0) {\n\
    \            $binary .= ($decimal % 2);\n            $decimal = int($decimal /\
    \ 2);\n        }\n    }\n    return reverse($binary) . \"db\";\n}", "    my $binary\
    \ = 'db';\n    my $remainder;\n    my $quotient = $decimal;\n    while ($quotient\
    \ != 0) {\n        $remainder = $quotient % 2;\n        $quotient = int($quotient\
    \ / 2);\n        $binary = $remainder . $binary;\n    }\n    return $binary .\
    \ 'db';\n}", "    return $decimal;\n}", "    my $string = \"db\";\n    while($decimal\
    \ != 0) {\n        $string = ($decimal % 2) . $string;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    return $string . \"db\";\n}", '    my($binary) = sprintf("%b",
    $decimal);', "    my $binary = \"db\";\n    while($decimal != 0) {\n        $binary\
    \ = ($decimal % 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n\
    \    return $binary . \"db\";\n}", "    my $result = \"db\";\n    my $remainder;\n\
    \    my $quotient = $decimal;\n    while ($quotient > 0) {\n        $remainder\
    \ = $quotient % 2;\n        $quotient = int($quotient / 2);\n        $result =\
    \ $remainder . $result;\n    }\n    $result .= \"db\";\n    return $result;\n}",
  "    my $binary = 'db';\n    my $i = 1;\n    my $d = 2 ** $i;\n    while($d <= $decimal)\
    \ {\n        $i++;\n        $d = 2 ** $i;\n    }\n    while($i > 0) {\n      \
    \  if($decimal >= $d) {\n            $binary .= '1';\n            $decimal -=\
    \ $d;\n        } else {\n            $binary .= '0';\n        }\n        $i--;\n\
    \        $d = 2 ** $i;\n    }\n    $binary .= 'db';\n    return $binary;\n}",
  "    my $binary = \"db\";\n    while ($decimal > 0) {\n        my $remainder = $decimal\
    \ % 2;\n        $binary = $remainder . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    $binary .= \"db\";\n    return $binary;\n}", "    my $binary\
    \ = '';\n    while ($decimal > 0) {\n        $binary = ($decimal % 2).$binary;\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary = \"db$binary\".\"\
    db\";\n    return $binary;\n}", "    my $binary = \"db\";\n    my $remainder;\n\
    \    my $quotient = $decimal;\n    while ($quotient != 0) {\n        $remainder\
    \ = $quotient % 2;\n        $quotient = int($quotient / 2);\n        $binary =\
    \ $remainder . $binary;\n    }\n    $binary .= \"db\";\n    return $binary;\n}",
  "    my $binary = \"db\";\n    while ($decimal > 0) {\n        $binary = \"db\"\
    \ . ($decimal % 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n\
    \    return $binary;\n}", "    my $binary;\n    my $remainder;\n    my $quotient;\n\
    \    if($decimal>=0) {\n        $binary='db';\n        $quotient=$decimal;\n \
    \       while($quotient>0) {\n            $remainder=$quotient%2;\n          \
    \  $quotient=int($quotient/2);\n            $binary=$remainder.$binary;\n    \
    \    }\n        $binary=$binary.'db';\n    }\n    return $binary;\n}", "    my\
    \ $binary = '';\n    while($decimal > 0) {\n        $binary = ($decimal%2) . $binary;\n\
    \        $decimal = int($decimal/2);\n    }\n    return \"db$binary\" . \"0\"\
    \ x (7 - length($binary)) . \"db\";\n}", "    return 'db' . unpack(\"B*\", pack(\"\
    N\", $decimal)) . 'db';\n}", "    my $binary;\n    while ($decimal > 0) {\n  \
    \      $binary = ($decimal % 2) . $binary;\n        $decimal /= 2;\n    }\n  \
    \  return \"db$binary\" . (\"0\" x (8 - length($binary))) . \"db\";\n}", "   \
    \ my $binary = unpack(\"B32\", pack(\"N\", $decimal));\n    $binary =~ s/^0+(?=\\\
    d)//;\n    return \"db$binary\";\n}", "    my $binary = 'db';\n    while ($decimal\
    \ > 0) {\n        my $remainder = $decimal % 2;\n        $binary = $remainder\
    \ . $binary;\n        $decimal = int($decimal / 2);\n    }\n    return $binary\
    \ . 'db';\n}", "    my $str = \"db\";\n    # add your code here\n    # for example:\n\
    \    # $str .= 1;\n    # $str .= 0;\n    # ...\n    $str .= 1 if $decimal == 1;\n\
    \    $str .= \"db\";\n    return $str;\n}", "    my $binary = 'db';\n    while($decimal\
    \ > 0) {\n        $binary = ( $decimal % 2 ) . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    $binary .= 'db';\n    return $binary;\n}", "    my $binary\
    \ = 'db';", "    #your code here\n    return $decimal;\n}", "    my $binary =\
    \ '';\n    my $prepend = 'db';\n    my $append = 'db';\n    while ($decimal >=\
    \ 1) {\n        $binary = $decimal % 2 . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    return $prepend . $binary . $append;\n}", "    my $bin = \"\
    db\";\n    while ($decimal != 0) {\n        if ($decimal % 2 == 0) {\n       \
    \     $bin = $bin . \"0\";\n        }\n        else {\n            $bin = $bin\
    \ . \"1\";\n        }\n        $decimal = int($decimal / 2);\n    }\n    return\
    \ reverse($bin) . \"db\";\n}", "    return \"db\" . unpack('B32', pack('N', $decimal))\
    \ . \"db\";\n}", '    my $binary_string = "db";', "    my $binary;\n    while\
    \ ($decimal != 0) {\n        $binary = ($decimal % 2) . $binary;\n        $decimal\
    \ = int($decimal / 2);\n    }\n    return 'db' . $binary . 'db';\n}", "    return\
    \ \"db$decimal db\";\n}", "    # ... write your solution here ...\n}", "    my\
    \ $binary = '';\n    while ($decimal > 0) {\n        $binary = ($decimal % 2).$binary;\n\
    \        $decimal = floor($decimal / 2);\n    }\n    return 'db'.$binary.'db';\n\
    }", "    my($binary) = \"db\";\n    while ($decimal > 0) {\n        $binary =\
    \ $binary . ($decimal % 2);\n        $decimal = int($decimal / 2);\n    }\n  \
    \  $binary = $binary . \"db\";\n    return $binary;\n}", "    my $binary = \"\
    db\";\n    my $remainder;\n    do {\n        $remainder = $decimal % 2;\n    \
    \    $decimal = int($decimal / 2);\n        $binary = $remainder . $binary;\n\
    \    } while ($decimal > 0);\n    $binary .= \"db\";\n    return $binary;\n}",
  "    my $binary = \"db\";\n    my $remainder;\n    while($decimal != 0) {\n    \
    \    $remainder = $decimal % 2;\n        $decimal = int($decimal / 2);\n     \
    \   $binary = $remainder . $binary;\n    }\n    return $binary . \"db\";\n}",
  "    my $binary = '';\n    while ($decimal > 0) {\n        $binary = ($decimal %\
    \ 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n    $binary =~\
    \ s/^0*//;\n    return \"db$binary\" . \"db\";\n}", "    # your code here\n  \
    \  return \"db$decimal\\db\";\n}", "    my $binary;\n    while($decimal > 0) {\n\
    \        $binary = ($decimal % 2).$binary;\n        $decimal = int($decimal /\
    \ 2);\n    }\n    $binary = \"0\" x (8 - length($binary)) . $binary;\n    return\
    \ \"db\".$binary.\"db\";\n}", "    return 'db' . unpack(\"B32\", pack(\"N\", $decimal))\
    \ . 'db';\n}", "    my $string = \"db\";\n    while($decimal > 0) {\n        $string\
    \ = $string . ($decimal % 2);\n        $decimal = int($decimal / 2);\n    }\n\
    \    $string = $string . \"db\";\n    return $string;\n}", "    my $result = '';\n\
    \    # add your code here\n    return $result;\n}", "    $decimal =  reverse(unpack(\"\
    B32\", pack(\"N\", $decimal)));\n    $decimal =~ s/^0+(?=\\d)//;   # otherwise\
    \ you'll get leading zeros\n    $decimal =~ s/^0*//;\n    $decimal =~ s/0+$//;\n\
    \    return \"db$decimal\".\"db\";\n}", "    my $binary = \"db\";\n    while($decimal\
    \ > 0) {\n        my $remainder = $decimal % 2;\n        $binary = $remainder\
    \ . $binary;\n        $decimal = $decimal / 2;\n    }\n    return $binary . \"\
    db\";\n}", "    my $bin = unpack(\"B32\", pack(\"N\", $decimal));\n    $bin =~\
    \ s/^0+(?=\\d)//; # remove any leading zeros to make the \"db\" look clean\n \
    \   return \"db\" . $bin . \"db\";\n}", "    my $binary;\n    while($decimal !=\
    \ 0) {\n        my $remainder = $decimal % 2;\n        $binary = \"$remainder$binary\"\
    ;\n        $decimal = int($decimal / 2);\n    }\n    return \"db$binary\" . \"\
    0\" x (8 - length($binary)) . \"db\";\n}", "    my $binary = \"db\";\n    while($decimal\
    \ > 0) {\n        $binary = ($decimal % 2) . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    return $binary.\"db\";\n}", "    my $binary = 'db';", "  \
    \  my $binary = dec2bin($decimal);\n    return \"db$binary\".\"db\";\n}", "  \
    \  my $binary = sprintf('%b', $decimal);\n    return \"db$binary\" . \"db\";\n\
    }", "    my $binary = '';\n    do {\n        $binary = ($decimal % 2).$binary;\n\
    \        $decimal = int($decimal / 2);\n    } until ($decimal == 0);\n    $binary\
    \ = \"db$binary\".\"db\";\n    return $binary;\n}", "    my($binstring) = 'db';",
  "    my $binary = 'db';\n    while($decimal > 0) {\n        $binary = (($decimal\
    \ % 2) ? '1' : '0') . $binary;\n        $decimal = int($decimal / 2);\n    }\n\
    \    $binary .= 'db';\n    return $binary;\n}", "    my $binary = \"db\";\n  \
    \  my $bit_num = 0;\n    my $dec_num = $decimal;\n    my $max_bits = 8;", "  \
    \  my $result = 'db';\n    while ($decimal > 0) {\n        $result = $result .\
    \ (($decimal % 2) ? '1' : '0');\n        $decimal = int($decimal / 2);\n    }\n\
    \    $result = $result . 'db';\n    return $result;\n}", "    return \"db\" .\
    \ unpack(\"B32\", pack(\"N\", $decimal)) . \"db\";\n}", "    my $binary = \"db\"\
    ;\n    while ($decimal > 0) {\n        my $remainder = $decimal % 2;\n       \
    \ $binary = $remainder . $binary;\n        $decimal = int($decimal / 2);\n   \
    \ }\n    $binary .= \"db\";\n    return $binary;\n}", "    my $binary = dec2bin($decimal);\n\
    \    return \"db$binary\".\"db\";\n}", "    my $binary = 'db';\n    while ($decimal\
    \ >= 1) {\n        $binary .= $decimal % 2;\n        $decimal = int($decimal /\
    \ 2);\n    }\n    return reverse($binary) . 'db';\n}", "    my $binary;\n    my\
    \ $digits = int(log($decimal)/log(2)+1);\n    for(my $i = 0; $i < $digits; $i++)\
    \ {\n        $binary = ($decimal % 2).$binary;\n        $decimal = int($decimal/2);\n\
    \    }\n    return \"db$binary\\@\"\n}", "    my $binary = \"db\";\n    while\
    \ ($decimal > 0) {\n        $binary = $binary . ($decimal % 2);\n        $decimal\
    \ = int($decimal / 2);\n    }\n    return reverse($binary) . \"db\";\n}", "  \
    \  # The extra characters are there to help with the format.\n    return \"db\"\
    \ . sprintf(\"%b\", $decimal) . \"db\";\n}", "    $decimal =~ s/[^0-9]//g;\n \
    \   my $binary = '';\n    while ($decimal >= 1) {\n        $binary = ($decimal\
    \ % 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n    $binary =\
    \ \"db$binary\" . \"db\";\n    return $binary;\n}", "    my $binary = \"db\";\n\
    \    while($decimal != 0) {\n        if($decimal % 2 == 0) {\n            $binary\
    \ = \"0\".$binary;\n        }\n        else {\n            $binary = \"1\".$binary;\n\
    \        }\n        $decimal = int($decimal / 2);\n    }\n    $binary = $binary.\"\
    db\";\n    return $binary;\n}", "    my($binary) = '';\n    while ($decimal >\
    \ 0) {\n        $binary = ($decimal % 2) . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    return 'db' . $binary . 'db';\n}", "    my($binary) = unpack(\"\
    B32\", pack(\"N\", $decimal));\n    return \"db\" . substr($binary, -32) . \"\
    db\";\n}", "    my $binary = dec_to_bin($decimal);\n    return 'db' . $binary\
    \ . 'db';\n}", "    # TODO: Write this function\n    my $binary = \"db\";\n  \
    \  my $binaryFinal = \"db\";\n    my $i = 0;\n    my $decimalTemp = $decimal;\n\
    \    while ($decimalTemp > 0) {\n        $binary = $decimalTemp % 2;\n       \
    \ $decimalTemp = int($decimalTemp / 2);\n        $binaryFinal = $binary . $binaryFinal;\n\
    \    }\n    return $binaryFinal;\n}", '    return undef if $decimal > 255 || $decimal
    < 0;', '    my $binary = substr(unpack("B32", pack("N", $decimal)), -8);', " \
    \   # Your code goes here\n}", "    my $binary = \"db\";\n    while ($decimal\
    \ > 0) {\n        my $remainder = $decimal % 2;\n        $binary = $remainder\
    \ . $binary;\n        $decimal = int($decimal / 2);\n    }\n    $binary .= \"\
    db\";\n    return $binary;\n}", "    my $binary = \"db\";\n    while ($decimal)\
    \ {\n        $binary .= int($decimal % 2);\n        $decimal = int($decimal /\
    \ 2);\n    }\n    return scalar reverse $binary . \"db\";\n}", "    my $binary\
    \ = \"db\";\n    my $bin_char;\n    # TODO: complete this function!\n    while($decimal\
    \ > 0) {\n        $bin_char = $decimal % 2;\n        $binary = $bin_char . $binary;\n\
    \        $decimal = $decimal / 2;\n    }\n    $binary = $binary . \"db\";\n  \
    \  return $binary;\n}", '    my $binary_string = "db";', "    my($result) = \"\
    db\";\n    while ($decimal > 0) {\n        my($temp) = $decimal % 2;\n       \
    \ $result = $temp . $result;\n        $decimal = int($decimal / 2);\n    }\n \
    \   $result .= \"db\";\n    return $result;\n}", "    return 'db' . unpack('B*',\
    \ pack('N', $decimal)) . 'db';\n}", "    return \"db$decimal\" if $decimal < 0;\n\
    \    return \"db\" unless $decimal;\n    my $binary = \"\";\n    $binary .= decimal_to_binary($decimal/2)\
    \ . ($decimal % 2);\n    $binary =~ s/^.*?(.{8})$/$1/;\n    return \"db$binary\"\
    ;\n}", "    my $output;\n    my $remainder;\n    my $quotient;\n    my $remainder_string;\n\
    \    my $binary;\n    my $binary_string;\n    $binary_string = \"db\";\n    $remainder_string\
    \ = \"\";\n    $output = \"\";\n    $quotient = $decimal;\n    do {\n        $remainder\
    \ = $quotient % 2;\n        $quotient = $quotient / 2;\n        $remainder_string\
    \ = $remainder . $remainder_string;\n    } while ($quotient >= 1);\n    $binary_string\
    \ = $binary_string . $remainder_string . \"db\";\n    return $binary_string;\n\
    }", "    my($binary);\n    while($decimal > 0) {\n        $binary = ($decimal\
    \ % 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n    return \"\
    db$binary\" . \"0\" x (8 - length($binary)) . \"db\";\n}", "    my $binary = \"\
    db\";\n    while ($decimal > 0) {\n        $binary = $binary.($decimal % 2);\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary = $binary.\"db\";\n\
    \    return $binary;\n}", "    my $binary = 'db';\n    my $temp = $decimal;\n\
    \    my $remainder;\n    my $digit;\n    while($temp > 0) {\n        $remainder\
    \ = $temp % 2;\n        $temp = int($temp / 2);\n        $digit = $remainder >\
    \ 0 ? 1 : 0;\n        $binary = \"$digit$binary\";\n    }\n    $binary .= 'db';\n\
    \    return $binary;\n}", "    return 'db' . unpack('B32', pack('I', $decimal))\
    \ . 'db';\n}", "    my $binary = \"db\";\n    while($decimal != 0) {\n       \
    \ $binary = $binary . ($decimal % 2);\n        $decimal = int($decimal / 2);\n\
    \    }\n    return $binary . \"db\";\n}", "    my $result = \"db\";\n    while\
    \ ($decimal != 0) {\n        $result = ($decimal % 2) . $result;\n        $decimal\
    \ = int($decimal / 2);\n    }\n    $result .= \"db\";\n    return $result;\n}",
  "    my $binary = dec2bin($decimal);\n    return sprintf(\"db%sdb\", $binary);\n\
    }", "    my $binary = \"db\";\n    while ($decimal > 0) {\n        $binary = $binary\
    \ . ($decimal % 2);\n        $decimal = int($decimal / 2);\n    }\n    $binary\
    \ = $binary . \"db\";\n    $binary = reverse($binary);\n    return $binary;\n}",
  "    my $binary;\n    my $digit;\n    my $max_bit = 8;\n    my $i;\n    my $j;\n\
    \    my $temp;\n    my $char;\n    my $bitmask;\n    $decimal = sprintf(\"%d\"\
    , $decimal);\n    $binary = \"db\";\n    for($i = 0; $i < $max_bit; $i++) {\n\
    \        $digit = 0;\n        $bitmask = 1 << $i;\n        $temp = $decimal &\
    \ $bitmask;\n        if($temp) {\n            $digit = 1;\n        }\n       \
    \ $char = sprintf(\"%d\", $digit);\n        $binary = $binary . $char;\n    }\n\
    \    $binary = $binary . \"db\";\n    return $binary;\n}", "    my $binary = \"\
    db\";\n    while ($decimal != 0) {\n        my $remainder = $decimal % 2;\n  \
    \      $binary = $remainder . $binary;\n        $decimal = int($decimal / 2);\n\
    \    }\n    return $binary . \"db\";\n}", "    my $binary = sprintf(\"%b\", $decimal);\n\
    \    return \"db$binary\" . \"db\";\n}", "    my $binary = 'db';", "    my $binary\
    \ = 'db';\n    while ($decimal > 0) {\n        $binary = ($decimal % 2).$binary;\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary .= 'db';\n    return\
    \ $binary;\n}", "    my $binary = '';\n    # convert $decimal to binary\n    return\
    \ \"db\" . $binary . \"db\";\n}", "    my $binary = \"db\";\n    while($decimal\
    \ > 0) {\n        my $rem = $decimal % 2;\n        $binary = $rem . $binary;\n\
    \        $decimal = $decimal / 2;\n    }\n    $binary = $binary . \"db\";\n  \
    \  return $binary;\n}", "    my($binary) = \"db\";\n    while ($decimal) {\n \
    \       $binary = ($decimal % 2 == 0 ? \"0\" : \"1\") . $binary;\n        $decimal\
    \ = int($decimal / 2);\n    }\n    $binary .= \"db\";\n    return $binary;\n}",
  "    my $binary = 'db';\n    my $quotient = $decimal;\n    while ($quotient > 0)\
    \ {\n        $binary = $binary . ($quotient % 2);\n        $quotient = int($quotient\
    \ / 2);\n    }\n    $binary = $binary . 'db';\n    return reverse($binary);\n}",
  "    my $binary_number = \"\";\n    while($decimal > 0) {\n        $binary_number\
    \ = ($decimal % 2) . $binary_number;\n        $decimal = int($decimal / 2);\n\
    \    }\n    return \"db\" . $binary_number . \"db\";\n}", "    # your code goes\
    \ here\n\tmy $binary = '';\n\tmy $i = 0;\n\tif ($decimal == 0) {\n\t\t$binary\
    \ = \"db0db\";\n\t} else {\n\t\t$binary = \"db\";\n\t\twhile ($decimal > 0) {\n\
    \t\t\tif ($decimal % 2 == 0) {\n\t\t\t\t$binary = \"0\".$binary;\n\t\t\t} else\
    \ {\n\t\t\t\t$binary = \"1\".$binary;\n\t\t\t}\n\t\t\t$decimal = int($decimal/2);\n\
    \t\t}\n\t\t$binary = $binary.\"db\";\n\t}\n\treturn $binary;\n}", "    my $binary\
    \ = \"db\";\n    while($decimal != 0) {\n        $binary = ($decimal % 2) . $binary;\n\
    \        $decimal = int($decimal / 2);\n    }\n    $binary .= \"db\";\n    return\
    \ $binary;\n}", "    my $binary = 'db';\n    while($decimal >= 1) {\n        $binary\
    \ .= $decimal % 2;\n        $decimal = int($decimal / 2);\n    }\n    $binary\
    \ .= 'db';\n    return reverse($binary);\n}", "    my($binary) = \"db\";\n   \
    \ while ($decimal > 0) {\n        $binary = $binary . ($decimal % 2);\n      \
    \  $decimal = int($decimal / 2);\n    }\n    return $binary . \"db\";\n}", " \
    \   my $binary = \"db\";\n    while($decimal != 0) {\n        if($decimal % 2\
    \ == 0) {\n            $binary = \"0\" . $binary;\n        } else {\n        \
    \    $binary = \"1\" . $binary;\n        }\n        $decimal = int($decimal /\
    \ 2);\n    }\n    return $binary . \"db\";\n}", "    my $binary = sprintf(\"%b\"\
    , $decimal);\n    return \"db$binary\\bd\";\n}", "    my($binary) = \"db\";\n\
    \    while($decimal > 0) {\n        $binary = $binary . ($decimal % 2);\n    \
    \    $decimal = int($decimal / 2);\n    }\n    $binary = $binary . \"db\";\n \
    \   return $binary;\n}", "    my $string = \"db\";\n    while ($decimal > 0) {\n\
    \        my $binary = $decimal % 2;\n        $string = $binary . $string;\n  \
    \      $decimal = int($decimal / 2);\n    }\n    $string = $string . \"db\";\n\
    \    return $string;\n}", "    my $binary = 'db';\n    while ($decimal > 0) {\n\
    \        $binary = ($decimal % 2) . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    }\n    return \"$binary$binary\";\n}", "    my($hex) = sprintf(\"\
    %x\", $decimal);\n    my($binary) = pack(\"H*\", $hex);\n    my($res) = \"db\"\
    ;\n    foreach my $char (split(//, $binary)) {\n        my($ascii) = ord($char);\n\
    \        my($bin) = unpack(\"B8\", $char);\n        $res .= $bin;\n    }\n   \
    \ $res .= \"db\";\n    return $res;\n}", "    my $binary;\n    $binary = 'db';\n\
    \    my $power = 1;\n    my $count = 0;\n    my $multiplyer = 1;\n    while ($power\
    \ <= $decimal) {\n        $count = $count + 1;\n        $power = $power * 2;\n\
    \    }\n    while ($count > 0) {\n        $multiplyer = 2 ** ($count - 1);\n \
    \       if ($decimal >= $multiplyer) {\n            $binary = $binary . '1';\n\
    \            $decimal = $decimal - $multiplyer;\n        } else {\n          \
    \  $binary = $binary . '0';\n        }\n        $count = $count - 1;\n    }\n\
    \    $binary = $binary . 'db';\n    return $binary;\n}", "    my $binary;\n  \
    \  while($decimal) {\n        $binary = $decimal % 2 . $binary;\n        $decimal\
    \ /= 2;\n    }\n    $binary = \"db$binary\" . \"db\";\n    return $binary;\n}",
  "    my $binary = 'db';\n    $binary .= $decimal % 2 ? '1' : '0';\n    $decimal\
    \ /= 2 while $decimal;\n    $binary .= 'db';\n    $binary = reverse $binary;\n\
    \    return $binary;\n}", "    my $binary = 'db';\n    while ($decimal > 0) {\n\
    \        $binary = substr($binary, 0, length($binary)-1) . ($decimal % 2) . 'db';\n\
    \        $decimal = int($decimal / 2);\n    }\n    return $binary;\n}", "    my\
    \ $binary = 'db';\n    my $remainder;\n    while ($decimal > 0) {\n        $remainder\
    \ = $decimal % 2;\n        $decimal = int($decimal / 2);\n        $binary = $remainder\
    \ . $binary;\n    }\n    $binary .= 'db';\n    return $binary;\n}", "    # TODO:\
    \ YOUR CODE HERE\n    my $binary = 'db';\n    while ($decimal > 0) {\n       \
    \ my $remainder = $decimal % 2;\n        $binary = $remainder . $binary;\n   \
    \     $decimal = int($decimal / 2);\n    }\n    $binary .= 'db';\n    return $binary;\n\
    }", "    my $binary = \"db\";\n    my $remainder;\n    my $quotient = $decimal;\n\
    \    while($quotient >= 1) {\n        $remainder = $quotient % 2;\n        $quotient\
    \ = $quotient / 2;\n        $binary = \"$remainder$binary\";\n    }\n    return\
    \ $binary . \"db\";\n}", "    return sprintf(\"db%bdb\", $decimal);\n}", "   \
    \ $decimal = sprintf(\"%b\", $decimal);\n    $decimal = \"db\" . $decimal . \"\
    db\";\n    return $decimal;\n}", "    my $binary = \"db\";\n    while ($decimal\
    \ > 0) {\n        $binary = $binary . int($decimal % 2);\n        $decimal = int($decimal\
    \ / 2);\n    }\n    $binary = $binary . \"db\";\n    $binary = reverse($binary);\n\
    \    return $binary;\n}", "    return '' if (!defined $decimal);\n    return 'db0db'\
    \ if ($decimal == 0);\n    my $binary = \"db\";\n    while ($decimal > 0) {\n\
    \        $binary .= $decimal % 2;\n        $decimal /= 2;\n    }\n    $binary\
    \ .= 'db';\n    return scalar reverse $binary;\n}", "    my $result = \"db\";\n\
    \    while ($decimal != 0) {\n        if ($decimal % 2 == 0) {\n            $result\
    \ = $result . \"0\";\n        } else {\n            $result = $result . \"1\"\
    ;\n        }\n        $decimal = int($decimal / 2);\n    }\n    return reverse($result)\
    \ . \"db\";\n}", "    my $binary = '';\n    my $int_part = int($decimal);\n  \
    \  my $float_part = $decimal - $int_part;\n    my $int_value = '';\n    while\
    \ ($int_part > 0) {\n        $int_value = $int_part % 2 . $int_value;\n      \
    \  $int_part = int($int_part / 2);\n    }\n    my $float_value = '';\n    while\
    \ ($float_part > 0) {\n        $float_part *= 2;\n        $float_value .= int($float_part);\n\
    \        $float_part -= int($float_part);\n    }\n    $binary = 'db' . $int_value\
    \ . 'db' . '.' . $float_value . 'db';\n    return $binary;\n}", "    my($binary)\
    \ = '';\n    $binary = 'db';\n    while ($decimal != 0) {\n        if ($decimal\
    \ % 2 == 0) {\n            $binary = '0' . $binary;\n        } else {\n      \
    \      $binary = '1' . $binary;\n        }\n        $decimal = int($decimal /\
    \ 2);\n    }\n    $binary = $binary . 'db';\n    return $binary;\n}", "    my\
    \ $binary = \"db\";\n    if ($decimal == 0) {\n        $binary .= \"0\";\n   \
    \ } else {\n        while ($decimal != 0) {\n            my $temp = $decimal %\
    \ 2;\n            $binary .= $temp;\n            $decimal = int($decimal / 2);\n\
    \        }\n    }\n    $binary .= \"db\";\n    return $binary;\n}", '    my $binary_string
    = "db";', "    my $binary = '';\n    my $sign = 1;\n    if ($decimal < 0) {\n\
    \        $sign = -1;\n        $decimal = -$decimal;\n    }\n    while ($decimal\
    \ > 0) {\n        my $remainder = $decimal % 2;\n        $binary = $remainder\
    \ . $binary;\n        $decimal = int($decimal / 2);\n    }\n    if ($sign == -1)\
    \ {\n        $binary = '-' . $binary;\n    }\n    return 'db' . $binary . 'db';\n\
    }", "    my $binary = \"db\";\n    my $binary2 = \"db\";\n    my $binary3 = \"\
    \";\n    my $remainder = $decimal;\n    my $count = 0;\n    #return \"$decimal\\\
    n\";\n    for ($count = 0; $count <= $decimal; $count++) {\n        if ($count\
    \ == 0) {\n            $binary = $binary . 0;\n        }\n        elsif ($count\
    \ == 1) {\n            $binary = $binary . 1;\n        }\n        else {\n   \
    \         $binary = $binary . 0;\n        }\n    }\n    while ($remainder > 0)\
    \ {\n        $remainder = $decimal / 2;\n        $remainder = int($remainder);\n\
    \        $decimal = $decimal % 2;\n        if ($decimal == 0) {\n            $binary2\
    \ = $binary2 . 0;\n        }\n        else {\n            $binary2 = $binary2\
    \ . 1;\n        }\n        $decimal = $remainder;\n    }\n    for ($count = length($binary2)\
    \ - 1; $count >= 0; $count--) {\n        $binary3 = $binary3 . substr($binary2,\
    \ $count, 1);\n    }\n    return $binary3;\n}", "    my $binary = '';\n    while\
    \ ($decimal > 0) {\n        $binary = ($decimal % 2) . $binary;\n        $decimal\
    \ = int($decimal / 2);\n    }\n    my $length = length($binary);\n    if ($length\
    \ < 8) {\n        my $db_length = 8 - $length;\n        my $db = '0' x $db_length;\n\
    \        $binary = $db . $binary;\n    }\n    return 'db' . $binary . 'db';\n}",
  "    my $binary = 'db';\n    while($decimal != 0) {\n        if($decimal % 2 ==\
    \ 0) {\n            $binary = '0' . $binary;\n        }\n        else {\n    \
    \        $binary = '1' . $binary;\n        }\n        $decimal = int($decimal\
    \ / 2);\n    }\n    $binary .= 'db';\n    return $binary;\n}", "    my $binary\
    \ = \"db\";\n    while ($decimal != 0) {\n        my $remainder = $decimal % 2;\n\
    \        $binary = $remainder . $binary;\n        $decimal = int($decimal / 2);\n\
    \    }\n    $binary .= \"db\";\n    return $binary;\n}", "    return \"db\". sprintf(\"\
    %b\", $decimal). \"db\";\n}", "    my $binary = unpack(\"B32\", pack(\"N\", $decimal));\n\
    \    $binary =~ s/^0+(?=\\d)//;\n    return \"db$binary\".\"db\";\n}", "    my\
    \ $binary = '';\n    while ($decimal >= 1) {\n        $binary = $decimal % 2 .\
    \ $binary;\n        $decimal = int($decimal / 2);\n    }\n    return \"db$binary\"\
    \ . \"0\" x (8 - length($binary)) . \"db\";\n}", "    my $binary = 'db';\n   \
    \ $binary .= $decimal % 2;\n    $decimal = int($decimal / 2);\n    while($decimal\
    \ > 0) {\n        $binary .= $decimal % 2;\n        $decimal = int($decimal /\
    \ 2);\n    }\n    $binary .= 'db';\n    return $binary;\n}", "    my($quotient,\
    \ $remainder, $binary) = (0, 0, \"\");\n    $quotient = $decimal;\n    while($quotient\
    \ > 0) {\n        $remainder = $quotient % 2;\n        $quotient = int($quotient\
    \ / 2);\n        $binary = $remainder . $binary;\n    }\n    return \"db\" . $binary\
    \ . \"db\";\n}", "    my $binary = \"db\";\n    while($decimal > 0) {\n      \
    \  $binary = ($decimal % 2).$binary;\n        $decimal = int($decimal / 2);\n\
    \    }\n    $binary .= \"db\";\n    return $binary;\n}", "    my $binary = \"\
    db\";\n    while ($decimal >= 1) {\n        $binary .= $decimal % 2;\n       \
    \ $decimal = int($decimal / 2);\n    }\n    $binary .= \"db\";\n    return $binary;\n\
    }", "    my $binary = substr( unpack( \"B32\", pack( \"N\", $decimal ) ), -8 );\n\
    \    return \"db$binary\" . \"db\";\n}", "    return 'db' . unpack(\"B*\", pack(\"\
    N\", $decimal)) . 'db';\n}", "    return \"db\".unpack(\"B32\", pack(\"N\", $decimal)).\"\
    db\";\n}", "    my $binary;\n    while ($decimal > 0) {\n        $binary = ($decimal\
    \ % 2) . $binary;\n        $decimal = int($decimal / 2);\n    }\n    $binary =\
    \ \"db\" . $binary . \"db\";\n    return $binary;\n}", "    my $binary = 'db';\n\
    \    my $digit;\n    while($decimal != 0) {\n        $digit = $decimal % 2;\n\
    \        $binary = $digit . $binary;\n        $decimal = int($decimal / 2);\n\
    \    }\n    $binary .= 'db';\n    return $binary;\n}", "    my $binary;\n    do\
    \ {\n        $binary = $decimal % 2 . $binary;\n        $decimal = int($decimal\
    \ / 2);\n    } while($decimal > 0);\n    return \"db\" . $binary . \"db\";\n}",
  "    my $bin = \"\";\n    my $j = 1;\n    my $binary_digit = 0;\n    while ($j <\
    \ $decimal) {\n        $j *= 2;\n    }\n    while ($j > 1) {\n        $j /= 2;\n\
    \        if (($j * int($decimal / $j)) < $decimal) {\n            $binary_digit\
    \ = 1;\n            $decimal -= $j;\n        }\n        $bin .= $binary_digit;\n\
    \        $binary_digit = 0;\n    }\n    return \"db$bin\" . \"db\";\n}", "   \
    \ return \"db\" . unpack(\"B32\", pack(\"N\", $decimal)) . \"db\";\n}", "    my\
    \ $binary = dec2bin($decimal);\n    my $result = \"db\" . $binary . \"db\";\n\
    \    return $result;\n}", "    my $bin = \"\";\n    my $db = \"db\";\n    my $max_length\
    \ = 16;\n    my $total_length = $max_length + length($db) * 2;\n    my $blank\
    \ = \"0\" x $max_length;\n    my $blanks = \"\";\n    $blanks = $db . $blank .\
    \ $db;\n    if ($decimal > 0) {\n        $bin = $db . unpack(\"B16\", pack(\"\
    N\", $decimal)) . $db;\n    } else {\n        $bin = $blanks;\n    }\n    #print\
    \ \"bin='$bin'\\n\";\n    #print \"blank='$blank'\\n\";\n    $bin = substr($bin,\
    \ -1 * $total_length, $total_length);\n    #print \"bin='$bin'\\n\";\n    return\
    \ $bin;\n}", "    my $binary = sprintf(\"%b\", $decimal);\n    return 'db' . $binary\
    \ . 'db';\n}", "    #Your code here\n}", "    my $binary = \"db\";\n    while($decimal\
    \ != 0) {\n        my $rem = $decimal % 2;\n        $binary = \"$rem$binary\"\
    ;\n        $decimal = int($decimal / 2);\n    }\n    return $binary . \"db\";\n\
    }", "    my $binary = '';\n    #\n    # From: http://www.perlmonks.org/?node_id=73841\n\
    \    while($decimal >= 1) {\n        if($decimal % 2){\n            $binary =\
    \ 1 . $binary;\n        }\n        else{\n            $binary = 0 . $binary;\n\
    \        }\n        $decimal = int($decimal / 2);\n    }\n    #\n    my $len =\
    \ length($binary);\n    if ($len < 8) {\n        $binary = '0' x (8 - $len) .\
    \ $binary;\n    }\n    $binary = 'db' . $binary . 'db';\n    return $binary;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_141_file_name_check
language: pl
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# >>> file_name_check(\"example.txt\"\
  )\n# \"Yes\"\n# >>> file_name_check(\"1example.dll\")\n# \"No\"\nsub file_name_check\
  \ {\n    my($file_name) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&file_name_check;\n\
  \        if(eq_deeply($candidate->(\"example.txt\"),\"Yes\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1example.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"s1sdf3.asd\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"K.dll\"),\"Yes\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  MY16FILE3.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"His12FILE94.exe\"),\"No\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _Y.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"?aREYA.exe\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"/this_is_valid.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"this_is_valid.wow\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"this_is_valid.txt\"\
  ),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"this_is_valid.txtexe\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #this2_i4s_5valid.ten\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"@this1_is6_valid.exe\"),\"\
  No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  this_is_12valid.6exe4.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"all.exe.txt\"),\"No\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_No.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(\"Is3youfault.txt\"),\"Yes\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  no_one#knows.dll\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"1I563_Yes3.exe\"),\"No\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_Yes3.txtt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"final..txt\"),\"No\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  final132\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"_f4indsartal132.\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  .txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\"s.\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return \"No\" if not defined $file_name;\n    return \"No\" if\
    \ $file_name =~ /\\d{4}/;\n    return \"No\" if ($file_name =~ s/\\d+//g)>3;\n\
    \    return \"No\" if not $file_name =~ /^[a-zA-Z]+\\.txt|exe|dll$/;\n    return\
    \ \"Yes\";\n}", "    my $result = \"No\";\n    # YOUR CODE HERE\n    # check for\
    \ digits\n    if($file_name =~ /[0-9]{4,}/){\n        $result = \"No\";\n    }\n\
    \    # check for dot\n    elsif($file_name !~ /[.]/){\n        $result = \"No\"\
    ;\n    }\n    # check for substrings\n    elsif($file_name =~ /^[A-Za-z].+[.][txt,\
    \ exe, dll]$/){\n        $result = \"Yes\";\n    }\n    return $result;\n}", " \
    \   return \"No\" if $file_name =~ /[^a-zA-Z0-9. ]/;\n    my ($before_dot, $after_dot)\
    \ = split(/\\./, $file_name);\n    return \"No\" if !$before_dot || !$after_dot;\n\
    \    return \"No\" if $before_dot =~ /[^a-zA-Z]/;\n    return \"No\" if $before_dot\
    \ =~ /\\d{4}/;\n    return \"No\" if $after_dot !~ /txt|exe|dll/;\n    return\
    \ \"Yes\";\n}", "    my $result = \"No\";\n    $result = \"Yes\" if $file_name\
    \ =~ /^[a-zA-Z]+\\.\\w{3}$/ and $file_name !~ /\\d{4}/;\n    return $result;\n\
    }", "    my $yes = \"Yes\";\n    my $no = \"No\";\n    if (length($file_name)\
    \ > 255) {\n        return $no;\n    }\n    my $count = 0;\n    foreach my $char\
    \ (split(//, $file_name)) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n\
    \        }\n    }\n    if ($count > 3) {\n        return $no;\n    }\n    my @components\
    \ = split(/\\./, $file_name);\n    if (scalar(@components) != 2) {\n        return\
    \ $no;\n    }\n    if ($components[0] =~ /[0-9]/) {\n        return $no;\n   \
    \ }\n    if ($components[1] ne \"txt\" && $components[1] ne \"exe\" && $components[1]\
    \ ne \"dll\") {\n        return $no;\n    }\n    return $yes;\n}", "    my $count\
    \ = 0;\n    my $dot = -1;\n    my $extension = '';\n    my $n = length($file_name);\n\
    \    for(my $i = 0; $i < $n; $i++) {\n        my $c = substr($file_name, $i, 1);\n\
    \        if ($c =~ /[a-zA-Z]/) {\n            return 'No' if $count > 3;\n   \
    \         $count = 0;\n        } elsif ($c =~ /[0-9]/) {\n            $count++;\n\
    \            return 'No' if $count > 3;\n        } elsif ($c eq '.') {\n     \
    \       return 'No' if $dot >= 0;\n            $dot = $i;\n        } else {\n\
    \            return 'No';\n        }\n    }\n    return 'No' if $dot < 0;\n  \
    \  $extension = substr($file_name, $dot + 1);\n    if ($extension eq 'txt' ||\
    \ $extension eq 'exe' || $extension eq 'dll') {\n        return 'Yes';\n    }\
    \ else {\n        return 'No';\n    }\n}", "    my $result = 'No';\n    if ($file_name\
    \ =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my @parts = split(/\\./, $file_name);\n\
    \        my @dot_parts = split(//, $parts[1]);\n        my $dot_count = 0;\n \
    \       foreach my $dot_part (@dot_parts) {\n            if ($dot_part eq '.')\
    \ {\n                $dot_count++;\n            }\n        }\n        if ($dot_count\
    \ == 1 && $parts[0] =~ /^[a-zA-Z]\\w*$/ &&\n            ($parts[1] eq 'txt' ||\
    \ $parts[1] eq 'exe' || $parts[1] eq 'dll')) {\n            $result = 'Yes';\n\
    \        }\n    }\n    return $result;\n}", "    # TODO: Please write the solution\
    \ in here.\n    if(scalar(@{[$file_name =~ /[0-9]/g]})>3){\n    \treturn \"No\"\
    ;\n    }\n    if($file_name =~ m/^[a-zA-Z][a-zA-Z0-9]*\\.txt$/){\n    \treturn\
    \ \"Yes\";\n    }\n    if($file_name =~ m/^[a-zA-Z][a-zA-Z0-9]*\\.exe$/){\n  \
    \  \treturn \"Yes\";\n    }\n    if($file_name =~ m/^[a-zA-Z][a-zA-Z0-9]*\\.dll$/){\n\
    \    \treturn \"Yes\";\n    }\n    return \"No\";\n}", "    return \"Yes\" if\
    \ $file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.(txt|exe|dll)$/;\n    return \"No\"\
    ;\n}", "    my($count) = 0;\n    my($dot) = \".\";\n    my($answer) = \"No\";\n\
    \    my($match_txt) = \"txt\";\n    my($match_exe) = \"exe\";\n    my($match_dll)\
    \ = \"dll\";\n    # your code here\n    for (my $i = 0; $i < length($file_name);\
    \ $i++) {\n        my($char) = substr($file_name, $i, 1);\n        if ($char =~\
    \ /[0-9]/) {\n            $count++;\n        }\n        if ($char eq $dot) {\n\
    \            if (substr($file_name, 0, $i) =~ /^[a-zA-Z]+$/) {\n             \
    \   if (substr($file_name, $i + 1) eq $match_txt || substr($file_name, $i + 1)\
    \ eq $match_exe || substr($file_name, $i + 1) eq $match_dll) {\n             \
    \       $answer = \"Yes\";\n                }\n            }\n        }\n    }\n\
    \    if ($count > 3) {\n        $answer = \"No\";\n    }\n    return $answer;\n\
    }", "    my($regex) = '\\A[a-zA-Z]+[\\d]{0,3}\\.(txt|exe|dll)\\z';\n    return\
    \ $file_name =~ /$regex/;\n}", "    my($num_of_digits) = ($file_name =~ s/[0-9]//g);\n\
    \    my($i,$ext) = (0,0);\n    my(@file_name) = split(\"\",$file_name);\n    for(@file_name){\n\
    \        if($_ eq \".\"){\n            $i = 1;\n            next;\n        }\n\
    \        if($i == 0){\n            if($_ =~ /[a-zA-Z]/){\n                $ext\
    \ = 1;\n            }else{\n                $ext = 0;\n                last;\n\
    \            }\n        }\n        if($i == 1){\n            if($_ =~ /[a-zA-Z]/){\n\
    \                $ext = 1;\n            }else{\n                $ext = 0;\n  \
    \              last;\n            }\n        }\n        if($i == 2){\n       \
    \     if($_ =~ /[a-zA-Z]/){\n                $ext = 1;\n            }else{\n \
    \               $ext = 0;\n                last;\n            }\n        }\n \
    \       if($i == 3){\n            $ext = 0;\n            last;\n        }\n  \
    \  }\n    if($num_of_digits <= 3 and $ext == 1){\n        return \"Yes\";\n  \
    \  }else{\n        return \"No\";\n    }\n}", "    my @file_name_split = split(/\\\
    ./, $file_name);\n    if(scalar(@file_name_split) != 2){\n        return \"No\"\
    ;\n    }\n    if(scalar(@file_name_split) == 2){\n        my $count = () = $file_name_split[0]\
    \ =~ /[0-9]/g;\n        if($count > 3){\n            return \"No\";\n        }\n\
    \        if($file_name_split[0] =~ /^[a-zA-Z]/){\n            if($file_name_split[1]\
    \ =~ /^(txt|exe|dll)$/){\n                return \"Yes\";\n            }\n   \
    \     }\n    }\n    return \"No\";\n}", "    # if there are three or more digits,\
    \ return \"No\"\n    # if there is not exactly one dot, return \"No\"\n    # if\
    \ the substring before the dot does not start with a letter (a-z, A-Z), return\
    \ \"No\"\n    # if the substring after the dot is not .txt or .exe or .dll, return\
    \ \"No\"\n    # else, return \"Yes\"\n    return \"No\";\n}", "    if( $file_name\
    \ =~ /^[a-zA-Z]+\\d*\\.(txt|exe|dll)$/ ){\n        return \"Yes\";\n    }\n  \
    \  return \"No\";\n}", "    my $ret_value = \"No\";\n    if($file_name =~ /^[a-zA-Z][0-9]{0,3}(\\\
    .(txt|exe|dll))$/){\n        $ret_value = \"Yes\";\n    }\n    return $ret_value;\n\
    }", "    my($result) = 'No';\n    if ($file_name =~ /^[a-zA-Z]\\w{1,8}(\\.[a-zA-Z]{3})$/)\
    \ {\n        my($ext) = $1;\n        if ($ext eq '.txt' || $ext eq '.exe' || $ext\
    \ eq '.dll') {\n            $result = 'Yes';\n        }\n    }\n    return $result;\n\
    }", "    # TODO: Please write the code for your solution.\n    my $message = \"\
    No\";\n    my $dot_count = 0;\n    my $digit_count = 0;\n    if ($file_name =~\
    \ m/\\./) {\n        my @file_name_array = split /\\./, $file_name;\n        my\
    \ $pre_dot = $file_name_array[0];\n        my $post_dot = $file_name_array[1];\n\
    \        if ($pre_dot =~ m/[a-zA-Z]/ && ($post_dot eq \"txt\" || $post_dot eq\
    \ \"exe\" || $post_dot eq \"dll\")) {\n            $message = \"Yes\";\n     \
    \   }\n    }\n    return $message;\n}", "    my $num_digit = $file_name =~ tr/0-9//;\n\
    \    my $num_dot = $file_name =~ tr/.//;\n    my $prefix = $file_name;\n    $prefix\
    \ =~ s/\\..*//;\n    my $postfix = $file_name;\n    $postfix =~ s/.*\\.//;\n \
    \   return \"No\" if ($num_digit > 3 or $num_dot != 1 or $prefix !~ /^[a-zA-Z]/\
    \ or not $postfix ~~ ['txt', 'exe', 'dll']);\n    return \"Yes\";\n}", "    my($first,\
    \ $second) = split /\\./, $file_name;\n    if(!defined($first) || !defined($second))\
    \ {\n        return \"No\";\n    }\n    if($first =~ /[^a-zA-Z0-9]/ || $first\
    \ !~ /[a-zA-Z]/) {\n        return \"No\";\n    }\n    if($first =~ /[0-9]{4}/\
    \ || $second !~ /^(txt|exe|dll)$/) {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}", "    \n    # Your code goes here\n    if($file_name =~ /^[a-z]/\
    \ && $file_name =~ /.txt|.exe|.dll$/ && $file_name =~ /[^.]{1,10}\\./){\n    \
    \    return \"Yes\";\n    }\n    else{\n        return \"No\";\n    }\n}", " \
    \   my $digits = $file_name =~ tr/0-9//;\n    if ($digits > 3) {\n        return\
    \ \"No\";\n    }\n    if ($file_name !~ /^[a-zA-Z]\\w*\\.txt$|^[a-zA-Z]\\w*\\\
    .exe$|^[a-zA-Z]\\w*\\.dll$/) {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}", '    # TODO: Your code here', "    my $flag=0;\n    my @array;\n    my\
    \ $count=0;\n    for (my $i=0;$i<length($file_name);$i++)\n    {\n        my $char=substr($file_name,$i,1);\n\
    \        if ($char =~ /[a-zA-Z]/)\n        {\n            $flag=1;\n        }\n\
    \        if ($char =~ /[0-9]/)\n        {\n            $count++;\n        }\n\
    \        push(@array,$char);\n    }\n    if ($count>3)\n    {\n        return\
    \ \"No\";\n    }\n    if ($flag==0)\n    {\n        return \"No\";\n    }\n  \
    \  my $index=index($file_name,'.');\n    if ($index==-1)\n    {\n        return\
    \ \"No\";\n    }\n    my $str1=substr($file_name,0,$index);\n    my $str2=substr($file_name,$index+1);\n\
    \    if ($str2 =~ /[a-zA-Z]/)\n    {\n        if ($str2 =~ /^txt$/i)\n       \
    \ {\n            return \"Yes\";\n        }\n        if ($str2 =~ /^exe$/i)\n\
    \        {\n            return \"Yes\";\n        }\n        if ($str2 =~ /^dll$/i)\n\
    \        {\n            return \"Yes\";\n        }\n    }\n    return \"No\";\n\
    }", "    my $flag = 1;\n    # TODO\n    return $flag ? \"Yes\" : \"No\";\n}",
  "    ...\n}", "    my $count = ($file_name =~ tr/0-9//);\n    if ($count > 3) {\n\
    \        return \"No\";\n    }\n    if ($file_name !~ /\\./ || $file_name =~ /^\\\
    ./) {\n        return \"No\";\n    }\n    my @file_name_arr = split /\\./, $file_name;\n\
    \    if ($file_name_arr[0] =~ /^[a-zA-Z]/ && $file_name_arr[1] =~ /^(txt|exe|dll)$/)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    # Write your\
    \ code here...\n    if($file_name =~ /^\\w[\\w-]*\\.[tx][tdx][x\\d]?$/){\n   \
    \     return \"Yes\";\n    }\n    return \"No\";\n}", "    if($file_name =~ /^([a-z]|[A-Z])([a-z]|[A-Z]|[0-9])*(\\\
    .(txt|exe|dll))$/g){\n        return \"Yes\";\n    }else{\n        return \"No\"\
    ;\n    }\n}", "    my $valid = \"Yes\";\n    if ( $file_name =~ /(\\d{4}|\\.)/\
    \ ) {\n        $valid = \"No\";\n    }\n    elsif ( $file_name !~ /\\./ ) {\n\
    \        $valid = \"No\";\n    }\n    elsif ( $file_name !~ /^[a-zA-Z]/ ) {\n\
    \        $valid = \"No\";\n    }\n    else {\n        my ($left, $right) = split\
    \ /\\./, $file_name;\n        if ( $right !~ /(txt|exe|dll)/ ) {\n           \
    \ $valid = \"No\";\n        }\n    }\n    return $valid;\n}", "    my $ret = 'No';\n\
    \    # Your code here\n    return $ret;\n}", "    my $count = ($file_name =~ tr/0-9//);\n\
    \    my $count2 = ($file_name =~ tr/a-zA-Z//);\n    my @parts = split /\\./, $file_name;\n\
    \    if ($count > 3 || $parts[0] eq \"\" || $count2 == 0 || $parts[1] ne \"txt\"\
    \ && $parts[1] ne \"exe\" && $parts[1] ne \"dll\") {\n        return \"No\";\n\
    \    }\n    return \"Yes\";\n}", "    # add code here\n    # my $file_name_valid\
    \ = qr/[a-zA-Z][\\w]*\\.(txt|exe|dll)/;\n    my $file_name_valid = qr/[a-zA-Z][\\\
    w]*\\.\\w{3}/;\n    if ($file_name =~ $file_name_valid) {\n        if ($file_name\
    \ =~ m/\\d{4}/){\n            return \"No\";\n        }\n        my @tokens =\
    \ split(/\\./, $file_name);\n        if ($tokens[1] ne \"txt\" && $tokens[1] ne\
    \ \"exe\" && $tokens[1] ne \"dll\"){\n            return \"No\";\n        }\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   $file_name =~ /^([a-zA-Z]\\w+)(\\.\\w+)?$/;\n    my $name = $1;\n    my $ext\
    \ = $2;\n    return !$name || !$ext || $name =~ /\\d{4}/ || $ext !~ /\\.(txt|exe|dll)$/\
    \ ? \"No\" : \"Yes\";\n}", "    \n    my $valid = 0;\n    my $digit_count = $file_name\
    \ =~ tr/0-9//;\n    my @parts = split(/\\./, $file_name);\n    my $extension =\
    \ pop(@parts);\n    my $base = join('.', @parts);\n    if ($digit_count <= 3 &&\
    \ length($base) && $base =~ /^[a-zA-Z]/ &&\n       ($extension eq 'txt' || $extension\
    \ eq 'exe' || $extension eq 'dll')) {\n        $valid = 1;\n    }\n    return\
    \ $valid ? 'Yes' : 'No';\n}", "    my $num_of_digits = 0;\n    my $found_dot =\
    \ 0;\n    my $substr_before_dot = \"\";\n    my $substr_after_dot = \"\";\n  \
    \  my $substr_after_dot_valid = 0;\n    my $substr_before_dot_valid = 0;\n   \
    \ my $substr_before_dot_char_valid = 0;\n    for(my $i = 0; $i < length($file_name);\
    \ $i++) {\n        my $current_char = substr($file_name, $i, 1);\n        if($current_char\
    \ eq '.') {\n            $found_dot = 1;\n            $substr_after_dot = substr($file_name,\
    \ $i + 1);\n            if($substr_after_dot eq \"txt\" || $substr_after_dot eq\
    \ \"exe\" || $substr_after_dot eq \"dll\") {\n                $substr_after_dot_valid\
    \ = 1;\n            }\n        }\n        if($current_char =~ /[a-zA-Z]/) {\n\
    \            $substr_before_dot_char_valid = 1;\n        }\n        if($current_char\
    \ =~ /[0-9]/) {\n            $num_of_digits++;\n        }\n    }\n    if($found_dot\
    \ && $num_of_digits <= 3 && $substr_after_dot_valid && $substr_before_dot_char_valid)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    if ($file_name\
    \ =~ /^[a-zA-Z]\\w*\\.txt$|^[a-zA-Z]\\w*\\.exe$|^[a-zA-Z]\\w*\\.dll$/ ) {\n  \
    \      return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}",
  "    $file_name =~ /[a-zA-Z]{1}[^.]*\\.[txt|exe|dll]$/g;\n    if($file_name eq @_[0]){\n\
    \    \treturn \"Yes\";\n    }\n    else{\n    \treturn \"No\";\n    }\n}", " \
    \   # START YOUR CODE HERE\n    $file_name =~ /^[a-z]\\w{0,10}\\.txt$|^[a-z]\\\
    w{0,10}\\.exe$|^[a-z]\\w{0,10}\\.dll$/i\n    ?\n    \"Yes\"\n    :\n    \"No\"\
    ;\n}", "    my $file_name_len = length($file_name);\n    my $ans;\n    if ($file_name_len\
    \ < 7 || $file_name_len > 15) {\n        $ans = \"No\";\n    }\n    else {\n \
    \       $file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z]{3}$/;\n        if ($&)\
    \ {\n            $ans = \"Yes\";\n        }\n        else {\n            $ans\
    \ = \"No\";\n        }\n    }\n    return $ans;\n}", "    # write your solution\
    \ here\n}", "    my $result = 'No';\n    # Write your code below this line.",
  "    if($file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.\\w{3}$/){\n        return \"Yes\"\
    ;\n    }\n    else{\n        return \"No\";\n    }\n}", "    my($digits, $first_substr,\
    \ $second_substr);\n    my($i, $dot_count, $len);\n    my(@substr);\n    my($res);",
  "    my $result = 'No';\n    if ($file_name =~ /^[a-zA-Z]\\w{0,3}\\.txt$|^[a-zA-Z]\\\
    w{0,3}\\.exe$|^[a-zA-Z]\\w{0,3}\\.dll$/) {\n        $result = 'Yes';\n    }\n\
    \    return $result;\n}", "    my @digits = $file_name =~ /(\\d)/g;\n    my @valid_extensions\
    \ = qw(txt exe dll);\n    if(scalar(@digits) > 3){\n        return \"No\";\n \
    \   }\n    if($file_name !~ /\\.(txt|exe|dll)$/){\n        return \"No\";\n  \
    \  }\n    if($file_name !~ /^[a-zA-Z]/){\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}", "    ...\n}", "    if($file_name =~ /\\d{4}/g){\n        return\
    \ \"No\";\n    }elsif($file_name =~ /\\.{2,}/g){\n        return \"No\";\n   \
    \ }elsif($file_name !~ /^[a-zA-Z][a-zA-Z0-9]*\\./g){\n        return \"No\";\n\
    \    }elsif($file_name !~ /(txt$|exe$|dll$)/g){\n        return \"No\";\n    }\n\
    \    return \"Yes\";\n}", "    my $regex = \"^[a-zA-Z]\\w*\\.\\w{3}$\";\n    if\
    \ ($file_name =~ /$regex/) {\n        return \"Yes\";\n    }\n    return \"No\"\
    ;\n}", "    if ($file_name =~ /(\\d{3,})|([^\\w][^\\.])|([^\\w][^\\.])|(\\..{3,})|(^\\\
    w+$)/){\n        return \"No\";\n    }\n    elsif($file_name =~ /^[\\w]+[\\.](txt|exe|dll)$/){\n\
    \        return \"Yes\";\n    }\n    else{\n        return \"No\";\n    }\n}",
  "    my @substrings = split(/\\./, $file_name);\n    return \"No\" if(scalar(@substrings)\
    \ != 2);\n    if($substrings[0] =~ /[0-9]/g && scalar(@substrings) != 2) {\n \
    \       return \"No\";\n    }\n    if($substrings[0] !~ /[a-zA-Z]/g) {\n     \
    \   return \"No\";\n    }\n    if($substrings[1] !~ /txt|exe|dll/g) {\n      \
    \  return \"No\";\n    }\n    return \"Yes\";\n}", "    my $valid_exts = ['txt',\
    \ 'exe', 'dll'];\n    my $valid_name = 0;\n    my $valid_ext = 0;\n    my $valid_digits\
    \ = 0;\n    my $dot_count = 0;\n    my $count_ext = 0;\n    my $count_name = 0;\n\
    \    my $count_digit = 0;\n    my $digit_count = 0;\n    my $ext;\n    my $name;\n\
    \    my $dot_loc;\n    foreach my $ch (split //, $file_name) {\n        if ($ch\
    \ eq '.') {\n            $dot_count++;\n            $dot_loc = $count_ext;\n \
    \       } else {\n            if ($dot_count == 0) {\n                $count_name++;\n\
    \            } else {\n                $count_ext++;\n            }\n        \
    \    if ($ch =~ /[0-9]/) {\n                $digit_count++;\n            }\n \
    \       }\n    }\n    if ($dot_count == 1) {\n        $name = substr($file_name,\
    \ 0, $dot_loc);\n        $ext = substr($file_name, $dot_loc + 1);\n        if\
    \ ($name =~ /[A-Za-z]/) {\n            $valid_name = 1;\n        }\n        foreach\
    \ my $ext_valid (@$valid_exts) {\n            if ($ext eq $ext_valid) {\n    \
    \            $valid_ext = 1;\n            }\n        }\n    }\n    if ($digit_count\
    \ <= 3) {\n        $valid_digits = 1;\n    }\n    return $valid_ext && $valid_name\
    \ && $valid_digits ? 'Yes' : 'No';\n}", "    my $dot_index = rindex($file_name,\
    \ '.');\n    my $dot_prefix = substr($file_name, 0, $dot_index);\n    my $dot_suffix\
    \ = substr($file_name, $dot_index + 1);\n    my $num_digits = $dot_prefix =~ tr/0-9//;\n\
    \    if ($num_digits > 3) {\n        return \"No\";\n    }\n    if (!(index($dot_prefix,\
    \ '.') < 0 && index($dot_prefix, ' ') < 0)) {\n        return \"No\";\n    }\n\
    \    if (!($dot_suffix eq 'txt' || $dot_suffix eq 'exe' || $dot_suffix eq 'dll'))\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}", "    return 'No'\
    \ if $file_name =~ /[^a-zA-Z0-9.]/;\n    return 'No' if $file_name =~ /\\./ and\
    \ $file_name !~ /\\.txt$|\\.exe$|\\.dll$/;\n    return 'No' if $file_name =~ /[0-9]{4}/;\n\
    \    return 'No' if $file_name =~ /^[0-9]|^\\./;\n    return 'Yes';\n}", "   \
    \ my $check;\n    my @parts = split(/\\./, $file_name);\n    my $count = () =\
    \ $file_name =~ /[0-9]/g;\n    if(@parts == 2 && $count <= 3 && $parts[0] =~ /^[a-zA-Z]+/\
    \ && $parts[1] =~ /^(txt|exe|dll)$/){\n        $check = 'Yes';\n    }else{\n \
    \       $check = 'No';\n    }\n    return $check;\n}", "    my $regex = qr/^[a-zA-Z]+([0-9]){0,3}\\\
    .(txt|exe|dll)$/;\n    my $str = $file_name;\n    if($str =~ $regex){\n      \
    \  return \"Yes\";\n    }else{\n        return \"No\";\n    }\n}", "    # TODO:\
    \ Write your code here\n}", "    # TODO - implement this function.\n    return\
    \ \"Yes\";\n}", "    my $i = 0;\n    my $dot = 0;\n    my $res = \"Yes\";\n  \
    \  if ( length($file_name) > 3 ) {\n        return \"No\";\n    }", "    return\
    \ 'No' if $file_name =~ /\\d{4}/;\n    return 'No' if $file_name !~ /[a-zA-Z]\\\
    w*\\.\\w{3}/;\n    return 'No' if $file_name !~ /\\.txt|\\.exe|\\.dll/;\n    return\
    \ 'Yes';\n}", "    # TODO\n}", "    ###################\n    # Your code here\n\
    \    ###################\n    my $digit_count = $file_name =~ tr/0-9//;\n    my\
    \ $dot_count = $file_name =~ tr/.//;\n    my $substring = substr($file_name, 0,\
    \ index($file_name, '.'));\n    my $file_extension = substr($file_name, index($file_name,\
    \ '.') + 1);\n    return \"No\" if($digit_count > 3 or $dot_count != 1 or substr($substring,\
    \ 0, 1) !~ /[a-zA-Z]/ or $file_extension !~ /(txt|exe|dll)/);\n    return \"Yes\"\
    ;\n}", "    my $result = \"No\";\n    # Checking if the file name contains exactly\
    \ one dot\n    my $num_of_dots = () = $file_name =~ /\\./g;\n    if ($num_of_dots\
    \ == 1) {\n        my @words = split /\\./, $file_name;\n        # Checking if\
    \ the substring before the dot is not empty, and that it begins with\n       \
    \ # a letter from the latin alphabet\n        if (length($words[0]) > 0 && $words[0]\
    \ =~ /^[a-zA-Z]/) {\n            # Checking if the substring after the dot is\
    \ one of the accepted formats\n            if ($words[1] eq \"txt\" || $words[1]\
    \ eq \"exe\" || $words[1] eq \"dll\") {\n                # Checking if the file\
    \ name contains more than three digits\n                my $num_of_digits = ()\
    \ = $file_name =~ /[0-9]/g;\n                if ($num_of_digits <= 3) {\n    \
    \                $result = \"Yes\";\n                }\n            }\n      \
    \  }\n    }\n    return $result;\n}", "    if ($file_name =~ /^([a-zA-Z]\\w{1,2})\\\
    .(txt|exe|dll)$/) {\n        return \"Yes\";\n    } else {\n        return \"\
    No\";\n    }\n}", "    my $is_valid = 'No';\n    my $regex = '^[a-zA-Z]+[0-9]{0,3}(\\\
    .[txt|exe|dll])$';\n    if ($file_name =~ m/$regex/) {\n        $is_valid = 'Yes';\n\
    \    }\n    return $is_valid;\n}", "    # Write your code here\n}", "    my @temp_name\
    \ = split(/\\./, $file_name);\n    my $valid_file_types = join('|', ('txt', 'exe',\
    \ 'dll'));\n    return 'No' if (length $temp_name[0] == 0);\n    return 'No' if\
    \ ($temp_name[0] =~ m/\\d/g && scalar(split('', $temp_name[0])) > 3);\n    return\
    \ 'No' if (!($temp_name[1] =~ m/$valid_file_types/));\n    return 'Yes';\n}",
  "    my $is_name_valid = 0;\n    # WRITE YOUR CODE HERE\n    my $i=0;\n    my $ch;\n\
    \    my $ch1;\n    my $ch2;\n    my $ch3;\n    my $ch4;\n    my $dot_counter=0;\n\
    \    while($i<length($file_name)){\n        $ch=substr($file_name,$i,1);\n   \
    \     if($ch eq '.'){\n            $dot_counter++;\n        }\n        $i++;\n\
    \    }\n    if($dot_counter==1){\n        my $arr=split(/\\./,$file_name);\n \
    \       my $part1=$arr[0];\n        my $part2=$arr[1];\n        $ch1=substr($part1,0,1);\n\
    \        $ch2=substr($part1,1,1);\n        $ch3=substr($part1,2,1);\n        $ch4=substr($part1,3,1);\n\
    \        if($ch1=~/[a-zA-Z]/){\n            if($ch2=~/[a-zA-Z]/){\n          \
    \      if($ch3=~/[a-zA-Z]/){\n                    if($ch4=~/[a-zA-Z]/){\n    \
    \                    if($part2 eq 'txt' or $part2 eq 'exe' or $part2 eq 'dll'){\n\
    \                            $is_name_valid=1;\n                        }\n  \
    \                  }\n                }\n            }\n        }\n    }\n   \
    \ # WRITE YOUR CODE ABOVE THIS LINE\n    if ($is_name_valid) {\n        return\
    \ \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $result =\
    \ \"Yes\";\n    # TODO: write your code here\n    return $result;\n}", "    #\
    \ Fill in the missing codes here\n    return $file_name =~ m/^[a-zA-Z]+[a-zA-Z0-9]{0,3}\\\
    .txt$|^[a-zA-Z]+[a-zA-Z0-9]{0,3}\\.exe$|^[a-zA-Z]+[a-zA-Z0-9]{0,3}\\.dll$/ ? \"\
    Yes\" : \"No\";\n}", "    if ($file_name =~ /^([a-zA-Z](.*?))\\.\\w+$/ &&\n  \
    \      $1 !~ /\\d{4}/ &&\n        $1 =~ /^(.*?)(\\d+)?$/ &&\n        $2 ne \"\"\
    \ &&\n        $2 < 4) {\n        return \"Yes\";\n    } else {\n        return\
    \ \"No\";\n    }\n}", "    # Write your code here.\n    my @array_name = split(\"\
    .\", $file_name);\n    my $dot_count = 0;\n    my $count = 0;\n    my $result\
    \ = \"No\";\n    my $regex_count = 0;\n    my $check_number = 0;\n    my $check_number2\
    \ = 0;\n    my $check_number3 = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = 0;\n    for ($i = 0; $i < length($file_name); $i++) {\n  \
    \      if (substr($file_name, $i, 1) eq \".\") {\n            $dot_count = $dot_count\
    \ + 1;\n        }\n    }\n    for ($j = 0; $j < length($file_name); $j++) {\n\
    \        if (substr($file_name, $j, 1) =~ /^[a-zA-Z]$/) {\n            $check_number\
    \ = 1;\n        }\n    }\n    for ($k = 0; $k < length($file_name); $k++) {\n\
    \        if (substr($file_name, $k, 1) =~ /^[0-9]$/) {\n            $check_number2\
    \ = $check_number2 + 1;\n        }\n    }\n    for ($l = 0; $l < length($file_name);\
    \ $l++) {\n        if (substr($file_name, $l, 1) eq \" \") {\n            $check_number3\
    \ = 1;\n        }\n    }\n    if ($array_name[0] ne \"\") {\n        $count =\
    \ $count + 1;\n    }\n    if ($array_name[1] eq \"txt\" || $array_name[1] eq \"\
    exe\" || $array_name[1] eq \"dll\") {\n        $count = $count + 1;\n    }\n \
    \   if ($dot_count eq 1) {\n        $count = $count + 1;\n    }\n    if ($check_number\
    \ eq 1) {\n        $count = $count + 1;\n    }\n   ", "    if ($file_name =~ m/^[a-zA-Z]+\\\
    .[txed]+$/) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n\
    \    }\n}", "    \n    my $substring = substr $file_name, 0, -4;\n    my $substring2\
    \ = substr $file_name, -4;\n    my $substring3 = substr $file_name, 0, 1;\n  \
    \  my $substring4 = substr $file_name, -3;\n    my $substring5 = substr $file_name,\
    \ 0, -3;\n    my $substring6 = substr $file_name, -1;\n    my $substring7 = substr\
    \ $file_name, 0, -2;\n    my $substring8 = substr $file_name, -2;\n    my $substring9\
    \ = substr $file_name, 0, -1;\n    my $substring10 = substr $file_name, -1;\n\
    \    my $substring11 = substr $file_name, 0, -4;\n    my $substring12 = substr\
    \ $file_name, -4;\n    my $substring13 = substr $file_name, 0, -3;\n    my $substring14\
    \ = substr $file_name, -3;\n    my $substring15 = substr $file_name, 0, -2;\n\
    \    my $substring16 = substr $file_name, -2;\n    my $substring17 = substr $file_name,\
    \ 0, -1;\n    my $substring18 = substr $file_name, -1;\n    my $substring19 =\
    \ substr $file_name, 0, -4;\n    my $substring20 = substr $file_name, -4;\n  \
    \  my $substring21 = substr $file_name, 0, -3;\n    my $substring22 = substr $file_name,\
    \ -3;\n    my $substring23 = substr $file_name, 0, -2;\n    my $substring24 =\
    \ substr $file_name, -2;\n    my $substring25 = substr $file_name, 0, -1;\n  \
    \  my $substring26 = substr $file_name, -1;\n    my $substring27 = substr $file_name,\
    \ 0, -4;\n    my $substring28 = substr $file_name, -4;\n    my $substring29 =",
  "    my($result) = \"Yes\";\n    if ($file_name =~ /([a-zA-Z]+)(\\d{0,3})(\\.txt|\\\
    .exe|\\.dll)/) {\n        $result = \"Yes\";\n    } else {\n        $result =\
    \ \"No\";\n    }\n    return $result;\n}", "    my @words = split /[.]/, $file_name;\n\
    \    my $no_of_digits = grep { $_ =~ /\\d/ } $words[0];\n    return \"No\" if\
    \ ($no_of_digits > 3);\n    return \"No\" if (scalar @words != 2);\n    return\
    \ \"No\" if ($words[0] =~ /^\\d|[A-Z]/);\n    return \"No\" if (grep { $words[1]\
    \ eq $_ } ('txt', 'exe', 'dll'));\n    return \"Yes\";\n}", "    # Replace with\
    \ your code here.\n    return \"Yes\";\n}", "    # Write your solution below.\n\
    \    my @name = split('\\.', $file_name);\n    my @find_d = $name[0] =~ /\\d/g;\n\
    \    if (scalar(@find_d)>3 || scalar(@name)!=2 || $name[0] eq '' || $name[1] ne\
    \ 'txt' && $name[1] ne 'exe' && $name[1] ne 'dll') {\n        return \"No\";\n\
    \    }\n    my @find_l = $name[0] =~ /[a-zA-Z]/g;\n    if (!scalar(@find_l)) {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    if ($file_name =~\
    \ /^[a-zA-Z]\\w*\\.txt$|^[a-zA-Z]\\w*\\.exe$|^[a-zA-Z]\\w*\\.dll$/) {\n      \
    \  return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my @elements\
    \ = split('\\.', $file_name);\n    if(scalar(@elements) == 2) {\n        my($p1,\
    \ $p2) = @elements;\n        if ($p1 =~ /[a-zA-Z]+[a-zA-Z0-9]*/\n        && $p2\
    \ =~ /^txt|exe|dll$/) {\n            if (scalar(grep { $_=~/[0-9]/ } split(//,\
    \ $p1)) <= 3) {\n                return \"Yes\";\n            }\n        }\n \
    \   }\n    return \"No\";\n}", "    # Put your code here\n    my $count_of_numbers\
    \ = 0;\n    my $count_of_dot = 0;\n    my $first_letter = 0;\n    my $ext = 0;\n\
    \    if ($file_name =~ m/[^0-9a-zA-Z.]/) {\n        return \"No\";\n    }\n  \
    \  foreach my $char (split //, $file_name) {\n        if ($char =~ m/[0-9]/) {\n\
    \            $count_of_numbers += 1;\n        }\n        if ($char eq \".\") {\n\
    \            $count_of_dot += 1;\n        }\n        if ($char =~ m/[a-zA-Z]/)\
    \ {\n            $first_letter += 1;\n        }\n    }\n    if ($count_of_numbers\
    \ > 3 || $count_of_dot != 1 || $first_letter == 0) {\n        return \"No\";\n\
    \    }\n    my @arr = split(\"\\.\", $file_name);\n    if ($arr[0] eq \"\" ||\
    \ $arr[1] ne \"txt\" && $arr[1] ne \"exe\" && $arr[1] ne \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}", "    my $cnt = 0;\n    my $dot_cnt\
    \ = 0;\n    my $dot_pos = 0;\n    my $pos = 0;\n    my $substring_after_dot =\
    \ \"\";\n    my $substring_before_dot = \"\";\n    my $substring_after_last_dot\
    \ = \"\";\n    for my $i (0 .. length($file_name) - 1) {\n        if (substr($file_name,\
    \ $i, 1) =~ /[0-9]/) {\n            $cnt++;\n        }\n        if (substr($file_name,\
    \ $i, 1) eq \".\") {\n            $dot_cnt++;\n            $dot_pos = $i;\n  \
    \      }\n    }\n    if ($dot_cnt == 1) {\n        $substring_after_dot = substr($file_name,\
    \ $dot_pos+1);\n        $substring_before_dot = substr($file_name, 0, $dot_pos);\n\
    \        $substring_after_last_dot = substr($file_name, $dot_pos+1);\n    }\n\
    \    if ($dot_cnt != 1 || $cnt > 3 || $substring_before_dot eq \"\" || $substring_before_dot\
    \ !~ /^[a-zA-Z]/ || $substring_after_dot !~ /^(txt|exe|dll)$/) {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}", "    my $check = 0;\n    my $number\
    \ = 0;\n    my $dot = 0;\n    my $extension = 0;\n    my $before_dot = 0;\n  \
    \  my $letter_check = 0;\n    if(index($file_name,\".\") > 0) {\n        for (my\
    \ $i = 0; $i < length($file_name); $i++) {\n            if(substr($file_name,$i,1)\
    \ =~ m/[0-9]/) {\n                $number++;\n            }\n            if(substr($file_name,$i,1)\
    \ eq \".\") {\n                $dot++;\n            }\n            if(substr($file_name,$i,1)\
    \ =~ m/[a-zA-Z]/) {\n                $letter_check++;\n            }\n       \
    \ }\n        if(substr($file_name,index($file_name,\".\")+1,length($file_name))\
    \ eq \"txt\" || substr($file_name,index($file_name,\".\")+1,length($file_name))\
    \ eq \"exe\" || substr($file_name,index($file_name,\".\")+1,length($file_name))\
    \ eq \"dll\") {\n            $extension++;\n        }\n        if(index($file_name,\"\
    .\") > 0 && index($file_name,\".\") < length($file_name)-1) {\n            $before_dot++;\n\
    \        }\n        if($number < 4 && $dot == 1 && $extension == 1 && $before_dot\
    \ == 1 && $letter_check > 0) {\n            $check++;\n        }\n    }\n    if($check\
    \ > 0) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\";\n\
    \    }\n}", "    \n    # Check if file name has more than 3 digits\n    if ($file_name\
    \ =~ /\\d{4,}/) {\n        return \"No\";\n    }\n    \n    # Check if there is\
    \ exactly one dot in the file name\n    if ($file_name !~ /^[^.]+\\.[^.]+$/) {\n\
    \        return \"No\";\n    }\n    \n    # Check if the substring before the\
    \ dot is not empty and starts with a latin letter\n    if ($file_name !~ /^[a-zA-Z][^.]+\\\
    .[^.]+$/) {\n        return \"No\";\n    }\n    \n    # Check if the substring\
    \ after the dot is one of the following: 'txt', 'exe', 'dll'\n    if ($file_name\
    \ !~ /^[^.]+\\.(txt|exe|dll)$/) {\n        return \"No\";\n    }\n    \n    return\
    \ \"Yes\";\n}", '    my $is_valid = 0;', "    my $result = \"Yes\";\n    # Your\
    \ code starts here\n    my $sub_str = substr $file_name, 0, index($file_name,\
    \ '.');\n    my $sub_str2 = substr $file_name, index($file_name, '.');\n    my\
    \ $sub_str_num = substr $file_name, 0, index($file_name, '.');\n    $sub_str_num\
    \ =~ s/[^0-9]//g;\n    # Your code ends here\n    # You shouldn't change this\
    \ line\n    return $result;\n}", "    my $re = qr/^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    .(txt|exe|dll)$/;\n    if($file_name =~ $re) {\n        return \"Yes\";\n    }\n\
    \    return \"No\";\n}", "    my @result;\n    if(@result = $file_name =~ /^[a-zA-Z]+\\\
    d?\\d?\\d?\\.dll$/ ){\n        return \"Yes\";\n    }\n    if(@result = $file_name\
    \ =~ /^[a-zA-Z]+\\d?\\d?\\d?\\.txt$/ ){\n        return \"Yes\";\n    }\n    if(@result\
    \ = $file_name =~ /^[a-zA-Z]+\\d?\\d?\\d?\\.exe$/ ){\n        return \"Yes\";\n\
    \    }\n    else{\n        return \"No\";\n    }\n}", "    my @str=split/\\./,$file_name;\n\
    \    if(@str==2){\n        my $str1=shift @str;\n        my $str2=shift @str;\n\
    \        if($str1=~/^[a-zA-Z]+$/&&$str2=~/^(txt|exe|dll)$/){\n            my @tmp=split//,$str1;\n\
    \            my $count=0;\n            for my $num(@tmp){\n                if($num=~/\\\
    d/){\n                    $count++;\n                }\n            }\n      \
    \      if($count<=3){\n                return \"Yes\";\n            }\n      \
    \      else{\n                return \"No\";\n            }\n        }\n     \
    \   else{\n            return \"No\";\n        }\n    }\n    else{\n        return\
    \ \"No\";\n    }\n}", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.\\w{3}$/\
    \ &&\n\t$file_name !~ /[0-9]{4}/){\n\treturn \"Yes\";\n    } else {\n\treturn\
    \ \"No\";\n    }\n}", "    if ($file_name =~ m/^[A-Za-z][A-Za-z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}", "    # TODO: Write\
    \ code here to calculate the output.\n}", "    my @numbers = $file_name =~ /\\\
    d/g;\n    if (@numbers > 3) {\n        return \"No\";\n    }", "    my $flag =\
    \ 0;\n    my $count = 0;\n    if ($file_name =~ /^[a-zA-Z]{1}/) {\n        if\
    \ ($file_name =~ /^[a-zA-Z]{1}/) {\n            if ($file_name =~ /[\\.]{1}/)\
    \ {\n                $count = ($file_name =~ s/[0-9]//g);\n                if\
    \ ($count <= 3) {\n                    if ($file_name =~ /txt$|exe$|dll$/) {\n\
    \                        $flag = 1;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return $flag ? \"Yes\" : \"No\";\n}", " \
    \   $file_name =~ m/^[a-zA-Z]{1}(\\d{0,3})?\\.\\w{3}$/;\n    if ($file_name =~\
    \ m/^[a-zA-Z]{1}(\\d{0,3})?\\.\\w{3}$/) {\n        return \"Yes\";\n    }\n  \
    \  else {\n        return \"No\";\n    }\n}", "    return \"Yes\" if ($file_name\
    \ =~ /^[a-zA-Z]+[a-zA-Z0-9]*\\.txt$/);\n    return \"Yes\" if ($file_name =~ /^[a-zA-Z]+[a-zA-Z0-9]*\\\
    .exe$/);\n    return \"Yes\" if ($file_name =~ /^[a-zA-Z]+[a-zA-Z0-9]*\\.dll$/);\n\
    \    return \"No\";\n}", "    if ($file_name =~ /^[a-zA-Z]\\w*\\.dll$/ || $file_name\
    \ =~ /^[a-zA-Z]\\w*\\.txt$/ || $file_name =~ /^[a-zA-Z]\\w*\\.exe$/) {\n     \
    \   return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my\
    \ $re = qr/^(\\w+)(.txt|.exe|.dll)$/;\n    return $file_name =~ $re ? \"Yes\"\
    \ : \"No\";\n}", "    my $valid = 1;\n    if ($file_name =~ /(\\w+)\\.(txt|exe|dll)/)\
    \ {\n        my $file_name_before_dot = $1;\n        $valid = 0 if ($file_name_before_dot\
    \ =~ /\\d{4,}/);\n    } else {\n        $valid = 0;\n    }\n    return $valid\
    \ == 1 ? \"Yes\" : \"No\";\n}", "    # TODO:\n    # Implement a function that\
    \ returns 'Yes' if the file's name is valid, and\n    # returns 'No' otherwise.",
  "    # write your code here\n}", "    my($dot_count, $digit_count) = (0, 0);\n \
    \   if ($file_name =~ /(\\.)/) {\n        $dot_count += 1;\n    }\n    if ($file_name\
    \ =~ /(\\d+)/) {\n        $digit_count += 1;\n    }\n    if ($dot_count == 1 and\
    \ $digit_count < 4) {\n        my($pattern) = '^[a-zA-Z]*\\.(txt|exe|dll)$';\n\
    \        if ($file_name =~ /$pattern/) {\n            return \"Yes\";\n      \
    \  }\n    }\n    return \"No\";\n}", "    \n    my $exts = {\n        txt => 1,\n\
    \        exe => 1,\n        dll => 1,\n    };\n    \n    my $digits = 0;\n   \
    \ my $characters = 0;\n    my $dots = 0;\n    my $valid = 1;\n    my $extension\
    \ = undef;\n    \n    foreach my $char (split //, $file_name) {\n        if ($char\
    \ =~ /\\d/) {\n            $digits++;\n        }\n        elsif ($char eq '.')\
    \ {\n            $dots++;\n        }\n        else {\n            $characters++;\n\
    \        }\n    }\n    \n    my @parts = split /\\./, $file_name;\n    if (@parts\
    \ > 2) {\n        $valid = 0;\n    }\n    else {\n        if ($dots > 1) {\n \
    \           $valid = 0;\n        }\n        else {\n            if ($digits >\
    \ 3) {\n                $valid = 0;\n            }\n            else {\n     \
    \           if ($characters == 0) {\n                    $valid = 0;\n       \
    \         }\n                else {\n                    if (!($parts[0] =~ /^[a-zA-Z]/))\
    \ {\n                        $valid = 0;\n                    }\n            \
    \        else {\n                        if (!exists $exts->{$parts[1]}) {\n \
    \                           $valid = 0;\n                        }\n         \
    \           }\n                }\n            }\n        }\n    }\n    \n    return\
    \ $valid ? \"Yes\" : \"No\";\n}", "    if ($file_name =~ /^[A-Za-z][a-z0-9]+\\\
    .(txt|exe|dll)$/) {\n        return \"Yes\";\n    }\n    return \"No\";\n}", " \
    \   my $ok = 1;\n    my $has_dot = 0;\n    my $digits = 0;\n    my $extensions\
    \ = {\n        \"txt\" => 1,\n        \"exe\" => 1,\n        \"dll\" => 1,\n \
    \   };\n    my $digits_limit = 3;\n    my $i = 0;\n    while($i < length($file_name))\
    \ {\n        my $char = substr($file_name, $i, 1);\n        if($char eq \".\"\
    ) {\n            if($has_dot) {\n                $ok = 0;\n                last;\n\
    \            }\n            $has_dot = 1;\n        } elsif($char ge \"0\" && $char\
    \ le \"9\") {\n            $digits += 1;\n            if($digits > $digits_limit)\
    \ {\n                $ok = 0;\n                last;\n            }\n        }\
    \ elsif($has_dot) {\n            my $extension = substr($file_name, $i);\n   \
    \         if(!exists($extensions->{$extension})) {\n                $ok = 0;\n\
    \                last;\n            }\n            last;\n        }\n        $i\
    \ += 1;\n    }\n    return $ok ? \"Yes\" : \"No\";\n}", "    my($substring_before_dot,\
    \ $substring_after_dot) = split(/\\./, $file_name);\n    my($substring_before_dot_is_valid,\
    \ $substring_after_dot_is_valid);\n    if($substring_before_dot =~ /^[a-zA-Z]{1}[^0-9]*$/){\n\
    \        $substring_before_dot_is_valid = 1;\n    }\n    else{\n        $substring_before_dot_is_valid\
    \ = 0;\n    }\n    if($substring_after_dot =~ /^(txt|exe|dll)$/){\n        $substring_after_dot_is_valid\
    \ = 1;\n    }\n    else{\n        $substring_after_dot_is_valid = 0;\n    }\n\
    \    if($substring_before_dot_is_valid && $substring_after_dot_is_valid){\n  \
    \      return \"Yes\";\n    }\n    else{\n        return \"No\";\n    }\n}", " \
    \   return 'No' if $file_name =~ /\\d{4}/;\n    my($ext) = $file_name =~ /\\.([^.]*)$/;\n\
    \    return 'No' if not defined $ext;\n    return 'No' if $ext !~ /^txt|exe|dll$/;\n\
    \    my($name) = $file_name =~ /^([^.]*)/;\n    return 'No' if $name !~ /^[a-zA-Z]/;\n\
    \    return 'Yes';\n}", "    # ...\n}", "    my $file_name_check = \"No\";\n \
    \   if ($file_name =~ m/^[a-zA-Z][a-zA-Z0-9]+\\.(txt|exe|dll)$/) {\n        $file_name_check\
    \ = \"Yes\";\n    }\n    return $file_name_check;\n}", "    my $pattern = qr/^[a-zA-Z][\\\
    w]*\\.(txt|exe|dll)$/;\n    return $file_name =~ $pattern ? \"Yes\" : \"No\";\n\
    }", "    # TODO: Return either \"Yes\" or \"No\" indicating whether the given\
    \ name is valid\n    # according to the rules above.\n    if ($file_name =~ /^[a-zA-Z]+[0-9]*[a-zA-Z]*\\\
    .txt$|^[a-zA-Z]+[0-9]*[a-zA-Z]*\\.exe$|^[a-zA-Z]+[0-9]*[a-zA-Z]*\\.dll$/) {\n\
    \        return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}",
  "    my($result) = \"No\";\n    if ( $file_name =~ /^\\w+\\.\\w+$/ ) {\n       \
    \ my($file_prefix, $file_ext) = split(/\\./, $file_name);\n        if ( $file_prefix\
    \ =~ /^\\w+$/ && $file_ext =~ /^(txt|exe|dll)$/ ) {\n            $result = \"\
    Yes\";\n        }\n    }\n    return $result;\n}", "    if ($file_name =~ /^[a-zA-Z]+\\\
    d{0,3}\\.txt$/ || $file_name =~ /^[a-zA-Z]+\\d{0,3}\\.exe$/ || $file_name =~ /^[a-zA-Z]+\\\
    d{0,3}\\.dll$/) {\n        return \"Yes\";\n    } else {\n        return \"No\"\
    ;\n    }\n}", "    my @digits = ('0'..'9');\n    my @latin_alphapet = ('a'..'z',\
    \ 'A'..'Z');\n    my @valid_extensions = ('txt', 'exe', 'dll');\n    my $result\
    \ = 'No';\n    if ($file_name =~ /^([a-zA-Z]+)(\\d{0,3})\\.(txt|exe|dll)$/) {\n\
    \        $result = 'Yes';\n    }\n    return $result;\n}", "    $file_name =~\
    \ /^([a-zA-Z][a-zA-Z0-9]{0,2})\\.(exe|txt|dll)$/;\n    if ($2) {\n        return\
    \ \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $before_dot\
    \ = substr($file_name, 0, index($file_name, '.'));\n    my $after_dot = substr($file_name,\
    \ index($file_name, '.') + 1);\n    my $is_valid = 1;\n    if ($file_name =~ /^\\\
    d/) {\n        $is_valid = 0;\n    }\n    if ($file_name !~ /[a-zA-Z]/) {\n  \
    \      $is_valid = 0;\n    }\n    if (index($file_name, '.') == -1) {\n      \
    \  $is_valid = 0;\n    }\n    if (index($file_name, '.') == 0) {\n        $is_valid\
    \ = 0;\n    }\n    if (index($file_name, '.') == length($file_name) - 1) {\n \
    \       $is_valid = 0;\n    }\n    if ($after_dot !~ /^(txt|exe|dll)$/) {\n  \
    \      $is_valid = 0;\n    }\n    if ($file_name =~ /\\d{4}/) {\n        $is_valid\
    \ = 0;\n    }\n    if ($is_valid) {\n        return \"Yes\";\n    } else {\n \
    \       return \"No\";\n    }\n}", "    if ($file_name =~ /^([a-zA-Z]+\\d{1,3})*\\\
    .txt$/){\n\t\treturn \"Yes\";\n\t}\n\telse {\n\t\treturn \"No\";\n\t}\n}", " \
    \   if($file_name =~ /^[a-zA-Z][a-zA-Z0-9]+\\.(txt|exe|dll)$/){\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}", "    my @parts = split(\"\\.\", $file_name);\n\
    \    my @digits = ($file_name =~ /[0-9]/g);\n    if (@digits > 3 or @parts > 2\
    \ or @parts < 2 or \n        not $parts[0] =~ /^[a-zA-Z]+$/ or \n        not $parts[1]\
    \ =~ /^(txt|exe|dll)$/) {\n        return \"No\";\n    }\n    return \"Yes\";\n\
    }", "    my($file_extension) = $file_name;\n    my($remaining_file_name) = $file_name;\n\
    \    my($count) = 0;\n    $file_extension =~ s/^.*\\.//;\n    $remaining_file_name\
    \ =~ s/\\.$file_extension$//;\n    foreach(split(//, $remaining_file_name)) {\n\
    \        if ($_ =~ /\\d/) {\n            $count += 1;\n        }\n    }\n    if\
    \ ($count > 3 || $file_name !~ /^[a-zA-Z]+\\.(txt|exe|dll)$/) {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}", "    # your code here\n}", "    if\
    \ ($file_name =~ /^[a-zA-Z][\\w\\d]*\\.(txt|exe|dll)$/) {\n        return \"Yes\"\
    ;\n    } else {\n        return \"No\";\n    }\n}", "    return $file_name =~\
    \ /^[a-zA-Z][\\w]*\\.\\w+$/ ? \"Yes\" : \"No\";\n}\nprint file_name_check(\"example.txt\"\
    ), \"\\n\";\nprint file_name_check(\"1example.dll\"), \"\\n\";\nprint file_name_check(\"\
    example.exe\"), \"\\n\";\nprint file_name_check(\"asd.txt\"), \"\\n\";\nprint\
    \ file_name_check(\"example.txt1\"), \"\\n\";\nprint file_name_check(\"example\"\
    ), \"\\n\";\nprint file_name_check(\"example.txtt\"), \"\\n\";\nprint file_name_check(\"\
    example.dls\"), \"\\n\";\nprint file_name_check(\"example.123\"), \"\\n\";\nprint\
    \ file_name_check(\"file.txt.exe\"), \"\\n\";", "    # Your code goes here\n}",
  "    my $len = length($file_name);\n    my $count = 0;\n    my $i = 0;\n    my $flag\
    \ = 0;\n    my $valid = \"Yes\";\n    for($i = 0; $i < $len; $i++) {\n       \
    \ my $c = substr($file_name, $i, 1);\n        if($c =~ /[0-9]/) {\n          \
    \  $count = $count + 1;\n        }\n        if($c eq \".\") {\n            $flag\
    \ = 1;\n        }\n    }\n    if($count > 3) {\n        $valid = \"No\";\n   \
    \ }\n    if($flag == 0) {\n        $valid = \"No\";\n    }\n    return $valid;\n\
    }", "    if($file_name =~ /^([A-Za-z]+)(\\d{0,3})\\.(txt|exe|dll)$/){\n      \
    \  return \"Yes\";\n    }else{\n        return \"No\";\n    }\n}", "    return\
    \ \"Yes\" if $file_name =~ m/^[a-zA-Z][a-zA-Z0-9]{0,3}(\\.[txd][lte])$/;\n   \
    \ return \"No\";\n}", "    my $digits = 0;\n    my $chars = 0;\n    my $dot =\
    \ 0;\n    my $after_dot = 0;\n    my $len = length($file_name);\n    if ($len\
    \ <= 0) {\n        return \"No\";\n    }\n    for (my $i = 0; $i < $len; $i++)\
    \ {\n        my $c = substr($file_name, $i, 1);\n        if ($c =~ /[a-zA-Z]/)\
    \ {\n            $chars++;\n        } elsif ($c =~ /[0-9]/) {\n            $digits++;\n\
    \        } elsif ($c eq '.') {\n            $dot++;\n        }\n    }\n    if\
    \ ($digits > 3 || $dot != 1 || $chars <= 0) {\n        return \"No\";\n    }\n\
    \    my $idx = index($file_name, '.');\n    my $after = substr($file_name, $idx\
    \ + 1);\n    if ($after eq 'txt' || $after eq 'exe' || $after eq 'dll') {\n  \
    \      return \"Yes\";\n    }\n    return \"No\";\n}", "    my $success = 0;\n\
    \    if($file_name =~ /\\A([a-zA-Z]\\w*)\\.(txt|exe|dll)\\z/){\n        $success\
    \ = 1;\n    }\n    if($success){\n        return \"Yes\";\n    }\n    else{\n\
    \        return \"No\";\n    }\n}", "    my($ext) = get_extension($file_name);\n\
    \    my($num_of_digits) = get_num_of_digits($file_name);\n    my($is_empty) =\
    \ is_empty($file_name);\n    my($is_valid_ext) = is_valid_ext($ext);\n    my($is_valid_length)\
    \ = is_valid_length($file_name);\n    my($is_valid_prefix) = is_valid_prefix($file_name);\n\
    \    my($is_valid_existance) = is_valid_existance($file_name);\n    my($is_valid_number_of_digits)\
    \ = is_valid_number_of_digits($num_of_digits);\n    return \"Yes\" if ($is_valid_ext\
    \ && $is_valid_length && $is_valid_prefix && \n                    $is_valid_existance\
    \ && $is_valid_number_of_digits);\n    return \"No\";\n}", "    my @parts = split(\"\
    \\\\.\", $file_name);\n    if (@parts != 2) {\n        return \"No\";\n    }\n\
    \    my $name = $parts[0];\n    my $ext = $parts[1];\n    if (length($name) ==\
    \ 0 || $name !~ /^[a-zA-Z]/) {\n        return \"No\";\n    }\n    if ($name =~\
    \ /[0-9]/g) {\n        my $num_digit = scalar $name =~ /[0-9]/g;\n        if ($num_digit\
    \ > 3) {\n            return \"No\";\n        }\n    }\n    if ($ext ne \"txt\"\
    \ && $ext ne \"exe\" && $ext ne \"dll\") {\n        return \"No\";\n    }\n  \
    \  return \"Yes\";\n}", "    if($file_name =~ /[^\\d]\\d{3}|\\d{4}|^\\d|\\..*\\\
    .|^\\..*|.*\\.dll|.*\\.exe|.*\\.txt|^\\..*|^$/){\n        return \"No\";\n   \
    \ }else{\n        return \"Yes\";\n    }\n}", "    if($file_name !~ /^[a-zA-Z][\\\
    w]*\\.txt$|^[a-zA-Z][\\w]*\\.exe$|^[a-zA-Z][\\w]*\\.dll$/) {\n        return \"\
    No\";\n    }\n    my @name = split('\\.', $file_name);\n    my $num = $name[0]\
    \ =~ tr/[0-9]//;\n    if($num > 3) {\n        return \"No\";\n    }\n    if($name[1]\
    \ !~ /txt|exe|dll/) {\n        return \"No\";\n    }\n    return \"Yes\";\n}",
  "    ...;\n}", "    return \"Yes\" if $file_name =~ /^([a-zA-Z])(\\d{0,3})(\\w+)(\\\
    .(exe|txt|dll))$/;\n    return \"No\";\n}", "    # Use a regex to do this.\n \
    \   my @split_filename = split /\\./, $file_name;\n    if ((scalar @split_filename\
    \ == 2) && ($split_filename[0] =~ /^[a-zA-Z]\\w*$/) &&\n            (($split_filename[1]\
    \ eq \"txt\") || ($split_filename[1] eq \"exe\") || ($split_filename[1] eq \"\
    dll\")) && \n            ($split_filename[0] !~ /\\d{4}/)) {\n        return \"\
    Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $has_dot = 0;\n    my $sub_before_dot\
    \ = \"\";\n    my $sub_after_dot = \"\";\n    my $sub_after_dot_flag = 0;\n  \
    \  if ($file_name =~ /\\d{4,}/) {\n        return $result;\n    }\n    for (my\
    \ $i = 0; $i < length($file_name); $i++) {\n        my $char = substr($file_name,\
    \ $i, 1);\n        if ($char =~ /\\d/) {\n            $count++;\n        }\n \
    \       if ($char eq \".\") {\n            $has_dot = 1;\n            $sub_after_dot_flag\
    \ = 1;\n            next;\n        }\n        if ($sub_after_dot_flag) {\n   \
    \         $sub_after_dot .= $char;\n        } else {\n            $sub_before_dot\
    \ .= $char;\n        }\n    }\n    if ($count > 3 || $has_dot != 1 || !($sub_before_dot\
    \ =~ /^[a-zA-Z]\\w*$/) || !($sub_after_dot =~ /^(txt|exe|dll)$/)) {\n        return\
    \ $result;\n    }\n    $result = \"Yes\";\n    return $result;\n}", "    my $res\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my @chars\
    \ = split(\"\", $file_name);\n        my $digits = 0;\n        foreach my $char\
    \ (@chars) {\n            if ($char =~ /\\d/) {\n                $digits++;\n\
    \            }\n        }\n        if ($digits <= 3) {\n            $res = \"\
    Yes\";\n        }\n    }\n    return $res;\n}", "    if ($file_name =~ m/^[a-zA-Z]+[0-9]{0,3}(?:\\\
    .[t|e|d]{3})$/) {\n        return \"Yes\";\n    } else {\n        return \"No\"\
    ;\n    }\n}", "    \n    my $re = qr/\\A[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)\\\
    z/;\n    my $dre = qr/[0-9]/;\n    if ( $file_name =~ /$re/ && ( $file_name !~\
    \ /$dre/ ) ) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n\
    \    }\n}", "    my $count_digit = 0;\n    my $count_dot = 0;\n    for(my $i =\
    \ 0; $i < length($file_name); $i++) {\n        my $char = substr($file_name, $i,\
    \ 1);\n        if(is_digit($char)) {\n            $count_digit++;\n        }\n\
    \        if($char eq '.') {\n            $count_dot++;\n        }\n    }\n   \
    \ if($count_digit > 3) {\n        return \"No\";\n    }\n    if($count_dot !=\
    \ 1) {\n        return \"No\";\n    }\n    my @list = split(/\\./, $file_name);\n\
    \    if(length($list[0]) == 0) {\n        return \"No\";\n    }\n    if(!is_letter(substr($list[0],\
    \ 0, 1))) {\n        return \"No\";\n    }\n    if($list[1] eq 'txt' || $list[1]\
    \ eq 'exe' || $list[1] eq 'dll') {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    # BEGIN_YOUR_CODE (our solution is 9 lines of code, but don't\
    \ worry if you deviate from this)\n    my $valid = 0;\n    my @file_name_array\
    \ = split(/\\./, $file_name);\n    #print \"@file_name_array\\n\";\n    my $first_part\
    \ = $file_name_array[0];\n    #print \"$first_part\\n\";\n    my $second_part\
    \ = $file_name_array[1];\n    #print \"$second_part\\n\";\n    my $digits = $first_part\
    \ =~ tr/0-9//;\n    #print \"$digits\\n\";\n    if ($digits <= 3 && $first_part\
    \ =~ /^[a-zA-Z]/ && $second_part =~ /txt|exe|dll/ && scalar(@file_name_array)\
    \ == 2) {\n        $valid = 1;\n    }\n    return ($valid) ? \"Yes\" : \"No\"\
    ;\n    # END_YOUR_CODE\n}", "    # check for < 3 digits, only one dot, and empty\
    \ first substring\n    if ($file_name =~ /\\d{4,}/ || $file_name !~ /\\./ || $file_name\
    \ =~ /^\\./) {\n        return \"No\";\n    }\n    my($first_substr, $second_substr)\
    \ = split(/\\./, $file_name);\n    # check for < 1 latin alphabet character\n\
    \    if ($first_substr !~ /[a-zA-Z]/ || $first_substr =~ /[^a-zA-Z0-9]/) {\n \
    \       return \"No\";\n    }\n    # check second substr is a valid file extension\n\
    \    if ($second_substr !~ /(txt|exe|dll)/) {\n        return \"No\";\n    }\n\
    \    return \"Yes\";\n}", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z\\d]*\\.(?:txt|exe|dll)$/)\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}",
  "    \n    # regex\n    if ($file_name =~ /^[a-zA-Z]\\w{0,2}\\.[txt|exe|dll]$/)\
    \ {\n        return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n\
    }", "    my $num_of_digits = 0;\n    my $num_of_dots = 0;\n    my $num_of_chars\
    \ = 0;\n    my $last_dot_index = 0;\n    my $first_char = \"\";\n    my $ext =\
    \ \"\";\n    my $ext_valid = 0;\n    my $file_name_len = length($file_name);\n\
    \    my $index = 0;\n    my $char = \"\";\n    my $valid = 0;\n    my $extensions\
    \ = ['txt', 'exe', 'dll'];\n    # Loop through the file's name's characters, and\
    \ count the number of digits and dots,\n    # and find the last dot's index.\n\
    \    for ($index = 0; $index < $file_name_len; $index++) {\n        $char = substr($file_name,\
    \ $index, 1);\n        if ($char =~ /[0-9]/) {\n            $num_of_digits++;\n\
    \        }\n        if ($char eq '.') {\n            $num_of_dots++;\n       \
    \     $last_dot_index = $index;\n        }\n    }\n    if ($num_of_digits > 3)\
    \ {\n        return \"No\";\n    }\n    if ($num_of_dots != 1) {\n        return\
    \ \"No\";\n    }\n    # The substring before the dot should not be empty, and\
    \ it starts with a letter from \n    # the latin alphapet ('a'-'z' and 'A'-'Z').\n\
    \    if ($last_dot_index == 0) {\n        return \"No\";\n    }\n    $first_char\
    \ = substr($file_name, 0, 1);\n    if ($first_char !~ /[a-zA-Z]/) {\n        return\
    \ \"No\";\n    }\n    # The substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n    $ext = substr($file_name, $last_dot_index + 1);\n    foreach\
    \ my $curr_ext (@$extensions) {\n        if ($curr_ext eq $ext) {\n          \
    \  $ext_valid = 1", "    my($substr_before_dot, $substr_after_dot);\n    my($substr_after_dot_is_valid)\
    \ = 0;\n    my($substr_before_dot_is_valid) = 0;\n    my($num_of_digits) = 0;\n\
    \    my($num_of_dots) = 0;\n    my(@array_of_substr_after_dot) = ('txt', 'exe',\
    \ 'dll');\n    # WRITE CODE HERE\n    # ...\n    # END CODE\n    if($num_of_digits\
    \ <= 3 && $num_of_dots == 1 && $substr_before_dot_is_valid == 1 && $substr_after_dot_is_valid\
    \ == 1) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\";\n\
    \    }\n}", "    #YOUR CODE GOES HERE\n    my $name_check = 'No';\n    if ($file_name\
    \ =~ /(^[a-zA-Z]+)\\.([txt|exe|dll])$/){\n        my $first_part = $1;\n     \
    \   my $second_part = $2;\n        if (length($first_part) > 0 && $first_part\
    \ !~ /\\d/ && $second_part =~ /[txt|exe|dll]/){\n            $name_check = 'Yes';\n\
    \        }\n    }\n    return $name_check;\n}", "    my $flag = \"Yes\";\n   \
    \ my $count_digits = 0;\n    my $count_dot = 0;\n    my $before_dot = \"\";\n\
    \    my $after_dot = \"\";\n    for(my $i = 0; $i < length($file_name); $i++)\
    \ {\n        if($file_name[$i] eq '.') {\n            $count_dot++;\n        \
    \    $after_dot = substr($file_name, $i + 1);\n        }\n        if($count_dot\
    \ > 1) {\n            $flag = \"No\";\n            last;\n        }\n        if($count_dot\
    \ == 1) {\n            $before_dot = substr($file_name, 0, $i);\n        }\n \
    \       if($file_name[$i] =~ m/[0-9]/) {\n            $count_digits++;\n     \
    \   }\n        if($count_digits > 3) {\n            $flag = \"No\";\n        \
    \    last;\n        }\n    }\n    if($before_dot eq \"\" || $after_dot ne 'txt'\
    \ && $after_dot ne 'exe' && $after_dot ne 'dll') {\n        $flag = \"No\";\n\
    \    }\n    return $flag;\n}", "    if($file_name =~ /^[a-zA-Z]\\w*\\.txt$/){\n\
    \        return \"Yes\";\n    }\n    elsif($file_name =~ /^[a-zA-Z]\\w*\\.exe$/){\n\
    \        return \"Yes\";\n    }\n    elsif($file_name =~ /^[a-zA-Z]\\w*\\.dll$/){\n\
    \        return \"Yes\";\n    }\n    else{\n        return \"No\";\n    }\n}\n\
    print &file_name_check($_),\"\\n\" for qw(\n    example.txt \n    1example.dll\n\
    \    hel.lo.txt\n    test.exe\n    test.txt\n    example.exe\n    example.dll\n\
    \    hello.java\n    Hello.java\n    example.txt.exe\n    test.txt.exe\n    test.txt.dll\n\
    \    1example.txt\n    1example.exe\n    1example.dll\n    example.txt1\n    example.exe1\n\
    \    example.dll1\n    12example.txt\n    12example.exe\n    12example.dll\n \
    \   example.txt12\n    example.exe12\n    example.dll12\n    hello.txt.exe\n \
    \   hello.txt.dll\n    test.txt.exe.dll\n    example.txt.exe.dll\n    example.txt.exe.dll\n\
    \    test.txt.exe.exe\n    example.txt.exe.exe\n    hello.txt.exe.exe\n    test.txt.exe.exe.exe\n\
    \    example.txt.exe.exe.exe\n    example.txt.exe.exe.exe\n    example.txt.exe.exe.exe\n\
    \    1test.txt\n    1example.txt\n    1hello.txt\n    1hello.txt.exe\n    test1.txt\n\
    \    example1.txt\n    hello1.txt\n    hello1.txt.exe\n    hello.txt1\n    hello.txt1.exe\n\
    \    test.txt.exe1\n    example.txt.exe1\n    example.txt.exe1.exe\n    hello.txt.exe.exe1\n\
    \    hello.txt.exe.exe1.", "    # TODO\n    my $count = 0;\n    my $index = -1;\n\
    \    while($file_name =~ /\\d/g){\n        $count++;\n        $index = pos($file_name);\n\
    \    }\n    if($count > 3){\n        return \"No\";\n    }\n    $file_name =~\
    \ /\\./g;\n    if($index == pos($file_name)){\n        return \"No\";\n    }\n\
    \    if($file_name =~ /^\\d/){\n        return \"No\";\n    }\n    if($file_name\
    \ !~ /^[a-zA-Z]/){\n        return \"No\";\n    }\n    if($file_name !~ /\\.txt|\\\
    .exe|\\.dll$/){\n        return \"No\";\n    }\n    return \"Yes\";\n}", "   \
    \ # Write your code here.\n}", "    my $num_digits = $file_name =~ tr/0-9//;\n\
    \    return \"No\" if ($num_digits > 3);\n    return \"No\" if ($file_name !~\
    \ /^[a-zA-Z]/);\n    my @substrings = split(/\\./, $file_name);\n    return \"\
    No\" if (@substrings != 2);\n    my $ext = pop(@substrings);\n    return \"No\"\
    \ if (!$ext || $ext !~ /^(txt|exe|dll)$/);\n    return \"Yes\";\n}", "    if(($file_name\
    \ =~ tr/[0-9]//) > 3){\n        return \"No\";\n    }\n    if($file_name !~ /^[a-zA-Z]+\\\
    .[txt|exe|dll]$/){\n        return \"No\";\n    }\n    return \"Yes\";\n}", " \
    \   my $three_difits = '\\d{1,3}';\n    my $not_empty_alpha = '[a-zA-Z]+';\n \
    \   my $extension = 'txt|exe|dll';\n    return ($file_name =~ /^(?:${not_empty_alpha}${three_difits}*\\\
    .)?(${extension})$/) ? 'Yes' : 'No';\n}", "    return \"Yes\" if $file_name =~\
    \ /^[a-zA-Z]+[^\\.]{0,3}\\.txt$/;\n    return \"Yes\" if $file_name =~ /^[a-zA-Z]+[^\\\
    .]{0,3}\\.exe$/;\n    return \"Yes\" if $file_name =~ /^[a-zA-Z]+[^\\.]{0,3}\\\
    .dll$/;\n    return \"No\";\n}", "    # Complete this function\n    if($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/){\n        return \"Yes\";\n   \
    \ }\n    else{\n        return \"No\";\n    }\n}", "    # Your code goes here.\n\
    \    # Check if there are more than 3 digits in the name\n    if ($file_name =~\
    \ /(\\d{4})/) {\n        return \"No\";\n    }", "    my $result = \"No\";\n \
    \   if(($file_name =~ m/^\\D.*\\.\\D*$/) && ($file_name =~ m/^\\D.*[^\\d\\.]\\\
    .\\D*$/) &&\n        ($file_name =~ m/^\\D.*\\.txt$|^\\D.*\\.exe$|^\\D.*\\.dll$/)){\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}\nprint file_name_check(\"\
    1example.dll\");", "    if($file_name =~ /\\d{4}/){\n        return \"No\";\n\
    \    }\n    my @splitted = split(/\\./, $file_name);\n    if(@splitted != 2 ||\
    \ length($splitted[0]) == 0){\n        return \"No\";\n    }\n    if($splitted[0]\
    \ !~ /^[a-zA-Z]/){\n        return \"No\";\n    }\n    if($splitted[1] !~ /^(txt|exe|dll)$/){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}", "    my $dot_idx = index($file_name,\
    \ '.');\n    if ($dot_idx == -1) {\n        return \"No\";\n    } elsif ($dot_idx\
    \ == 0) {\n        return \"No\";\n    } elsif (substr($file_name, $dot_idx +\
    \ 1) !~ /^(txt|exe|dll)$/) {\n        return \"No\";\n    } elsif (substr($file_name,\
    \ 0, $dot_idx) !~ /^[a-zA-Z]\\w*$/) {\n        return \"No\";\n    } else {\n\
    \        my $i = 0;\n        my $count = 0;\n        while ($i < $dot_idx) {\n\
    \            if (substr($file_name, $i, 1) =~ /^[0-9]$/) {\n                $count\
    \ += 1;\n            }\n            $i += 1;\n        }\n        if ($count >\
    \ 3) {\n            return \"No\";\n        } else {\n            return \"Yes\"\
    ;\n        }\n    }\n}", "    if ($file_name =~ /[0-9]{4,}/ || $file_name !~ /^[a-zA-Z][\\\
    w]+\\.[txt|exe|dll]$/) {\n        return \"No\";\n    } else {\n        return\
    \ \"Yes\";\n    }\n}", "    if ($file_name =~ m/^\\D.*\\.[txt|exe|dll]$/) {\n\
    \        return 'Yes';\n    } else {\n        return 'No';\n    }\n}", "    my\
    \ @chars = split('', $file_name);\n    my $num_of_digits = 0;\n    my $dot_found\
    \ = 0;\n    my $is_valid = 1;\n    for my $char (@chars) {\n        if ($char\
    \ =~ /[0-9]/) {\n            $num_of_digits++;\n        }\n        if ($char eq\
    \ '.') {\n            $dot_found++;\n        }\n    }\n    if ($num_of_digits\
    \ > 3 || $dot_found != 1) {\n        $is_valid = 0;\n    }\n    else {\n     \
    \   my @substrings = split('\\.', $file_name);\n        if ($substrings[0] =~\
    \ /[^a-zA-Z]/ || $substrings[0] eq '' || \n            !($substrings[1] eq 'txt'\
    \ || $substrings[1] eq 'exe' || $substrings[1] eq 'dll')) {\n            $is_valid\
    \ = 0;\n        }\n    }\n    return $is_valid ? \"Yes\" : \"No\";\n}", "    my\
    \ $result = 'No';\n    if ($file_name =~ /^[a-zA-Z]+\\d{0,3}[.](txt|exe|dll)$/)\
    \ {\n        $result = 'Yes';\n    }\n    return $result;\n}", "    my($name,\
    \ $ext) = split /\\./, $file_name;\n    my $count = 0;\n    foreach my $c (split\
    \ //, $name) {\n        if ($c =~ /[0-9]/) {\n            $count++;\n        }\n\
    \    }\n    if ($count > 3) {\n        return \"No\";\n    }\n    if ($name =~\
    \ /^[a-zA-Z]+$/ and $ext =~ /^(txt|exe|dll)$/) {\n        return \"Yes\";\n  \
    \  }\n    return \"No\";\n}", "    my $dot_position = index($file_name, '.');\n\
    \    my $file_type = substr($file_name, $dot_position + 1);\n    my $is_type_valid\
    \ = ( $file_type eq 'txt' || $file_type eq 'exe' || $file_type eq 'dll' );\n \
    \   my $is_file_name_valid = ( $file_name =~ /^[a-zA-Z][\\w]*\\.[a-zA-Z]{3}$/\
    \ );\n    return $is_file_name_valid && $is_type_valid ? 'Yes' : 'No';\n}", " \
    \   # Write your code here\n    my $result = \"Yes\";\n    my $num_of_dots = $file_name\
    \ =~ tr/\\.//;\n    my $num_of_digits = $file_name =~ tr/[0-9]//;\n    my @sep\
    \ = split /\\./, $file_name;\n    my $prefix = $sep[0];\n    my $ext = $sep[1];\n\
    \    my $prefix_match = \"^[a-zA-Z]+[a-zA-Z0-9]*$\";\n    my $ext_match = \"^txt|exe|dll$\"\
    ;\n    if ($num_of_dots != 1) {\n        $result = \"No\";\n    }\n    elsif ($num_of_digits\
    \ > 3) {\n        $result = \"No\";\n    }\n    elsif ($prefix !~ /$prefix_match/)\
    \ {\n        $result = \"No\";\n    }\n    elsif ($ext !~ /$ext_match/) {\n  \
    \      $result = \"No\";\n    }\n    return $result;\n}", "    # --- your code\
    \ here ---\n    return \"Yes\";\n}", "    # check number of digits\n    my @digit_check\
    \ = ($file_name =~ /(\\d)/g);\n    if (scalar(@digit_check) > 3) {\n        return\
    \ \"No\";\n    }\n    # check number of dots\n    my @dot_check = ($file_name\
    \ =~ /\\./g);\n    if (scalar(@dot_check) != 1) {\n        return \"No\";\n  \
    \  }\n    # check if the substring before the dot is empty\n    my $first_substring\
    \ = substr($file_name, 0, index($file_name, \".\"));\n    if (length($first_substring)\
    \ == 0) {\n        return \"No\";\n    }\n    # check if the substring before\
    \ the dot starts with a letter\n    my $first_letter = substr($first_substring,\
    \ 0, 1);\n    if ($first_letter !~ /[a-zA-Z]/) {\n        return \"No\";\n   \
    \ }\n    # check the substring after the dot\n    my $second_substring = substr($file_name,\
    \ index($file_name, \".\") + 1);\n    if ($second_substring !~ /^(txt|exe|dll)$/)\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}", "    return 'No'\
    \ if $file_name =~ /(\\d){4,}/; # There should not be more than three digits in\
    \ the file's name.\n    return 'No' if $file_name !~ /^[A-Za-z]+\\.[A-Za-z]+$/;\
    \ # The file's name contains exactly one dot '.'\n    return 'No' if $file_name\
    \ !~ /^[A-Za-z]/; # The substring before the dot should not be empty, and it starts\
    \ with a letter from the latin alphapet ('a'-'z' and 'A'-'Z').\n    return 'No'\
    \ if $file_name !~ /(?:txt|exe|dll)$/; # The substring after the dot should be\
    \ one of these: ['txt', 'exe', 'dll']\n    return 'Yes';\n}", "    my $result\
    \ = 'No';\n    # Your implementation starts here.\n    # my @filename_split =\
    \ split /\\./, $file_name;\n    # if (length($filename_split[0]) == 0) {\n   \
    \ #     $result = 'No';\n    # } elsif ($filename_split[0] =~ /^[0-9]*$/) {\n\
    \    #     $result = 'No';\n    # } elsif ($filename_split[0] =~ /^[a-zA-Z]*$/)\
    \ {\n    #     $result = 'Yes';\n    # } elsif ($filename_split[1] eq 'txt' &&\
    \ $filename_split[1] eq 'exe' && $filename_split[1] eq 'dll') {\n    #     $result\
    \ = 'Yes';\n    # } else {\n    #     $result = 'No';\n    # }\n    # Your implementation\
    \ ends here.\n    return $result;\n}", "    return $file_name =~ m/^[a-zA-Z]+\\\
    .(txt|exe|dll)$/ ? \"Yes\" : \"No\";\n}", "    my $count = 0;\n    my $dot = \"\
    \";\n    my $ext = \"\";\n    my $beg = \"\";\n    my $ans = \"\";\n    foreach\
    \ my $char (split //, $file_name) {\n        if($char =~ /[0-9]/) {\n        \
    \    $count++;\n        } elsif($char eq \".\") {\n            $dot = $char;\n\
    \        }\n    }\n    $ext = (split /\\./, $file_name)[1];\n    $beg = (split\
    \ /\\./, $file_name)[0];\n    if($count > 3 || $dot ne \".\" || $beg eq \"\" ||\
    \ $beg !~ /[a-zA-Z]/ || $ext !~ /[a-zA-Z]+/) {\n        $ans = \"No\";\n    }\
    \ else {\n        $ans = \"Yes\";\n    }\n    return $ans;\n}", "    my $sub_string\
    \ = substr $file_name, 0, index($file_name, '.');\n    if (grep {$_ eq $file_name}\
    \ qw(example.txt 1example.dll example.exe)) {\n        return \"No\";\n    }\n\
    \    else {\n        return \"Yes\";\n    }\n}\nprint(\"file_name_check(\\\"example.txt\\\
    \")\\n\");\nprint(\"file_name_check(\\\"1example.dll\\\")\\n\");\nprint(\"file_name_check(\\\
    \"example.exe\\\")\\n\");\nprint(\"file_name_check(\\\"1example.ex\\\")\\n\");\n\
    print(\"file_name_check(\\\"example.dll\\\")\\n\");\nprint(\"file_name_check(\\\
    \"example.txtt\\\")\\n\");\nprint(\"file_name_check(\\\"example.exe\\\")\\n\"\
    );", "    my $check1 = 0;\n    my $check2 = 0;\n    my $check3 = 0;\n    my $check4\
    \ = 0;\n    my $count = 0;\n    for(my $i = 0; $i < length($file_name); $i++){\n\
    \        my $char = substr($file_name, $i, 1);\n        if($char eq '.'){\n  \
    \          $check1 = 1;\n        }elsif($char =~ /[a-zA-Z]/){\n            $check2\
    \ = 1;\n        }elsif($char =~ /[0-9]/){\n            $count++;\n        }\n\
    \    }\n    if($check1 == 1 && $check2 == 1 && $count <= 3){\n        $check3\
    \ = 1;\n    }\n    if(index($file_name, '.txt') != -1 || index($file_name, '.exe')\
    \ != -1 || index($file_name, '.dll') != -1){\n        $check4 = 1;\n    }\n  \
    \  if($check3 == 1 && $check4 == 1){\n        return \"Yes\";\n    }else{\n  \
    \      return \"No\";\n    }\n}", "    my $regex = qr/^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    .(txt|exe|dll)$/;\n    my $res = ($file_name =~ $regex) ? \"Yes\" : \"No\";\n\
    \    return $res;\n}", "    my $val_err = 'No';\n    my $val_ok = 'Yes';\n   \
    \ my @file_name_part = split /\\./, $file_name;\n    my $file_name_len = @file_name_part;\n\
    \    if ($file_name_len > 2 || $file_name_len < 2) {\n        return $val_err;\n\
    \    }\n    if ($file_name_part[0] !~ /[a-zA-Z]+/) {\n        return $val_err;\n\
    \    }\n    if ($file_name_part[0] =~ /\\d+/) {\n        return $val_err;\n  \
    \  }\n    if ($file_name_part[1] !~ /txt|exe|dll/) {\n        return $val_err;\n\
    \    }\n    return $val_ok;\n}", "    # START YOUR CODE HERE\n    my @str=split\
    \ /\\./,$file_name;\n    #print scalar @str.\"\\n\";\n    if(scalar @str == 2){\n\
    \        my $s=$str[0];\n        my $t=$str[1];\n        my $i=0;\n        my\
    \ $num=0;\n        my $char=0;\n        my $other=0;\n        my $j=0;\n     \
    \   while($i<length($s)){\n            if(ord(substr($s,$i,1))>=48 && ord(substr($s,$i,1))<=57){\n\
    \                $num++;\n            }\n            if(ord(substr($s,$i,1))>=65\
    \ && ord(substr($s,$i,1))<=90){\n                $char++;\n            }\n   \
    \         if(ord(substr($s,$i,1))>=97 && ord(substr($s,$i,1))<=122){\n       \
    \         $char++;\n            }\n            if(ord(substr($s,$i,1))>=58 &&\
    \ ord(substr($s,$i,1))<=64){\n                $other++;\n            }\n     \
    \       if(ord(substr($s,$i,1))>=91 && ord(substr($s,$i,1))<=96){\n          \
    \      $other++;\n            }\n            if(ord(substr($s,$i,1))>=123 && ord(substr($s,$i,1))<=126){\n\
    \                $other++;\n            }\n            $i++;\n        }\n    \
    \    if($num>3 || $char<1 || $other>0){\n            return \"No\";\n        }\n\
    \        if($t ne \"txt\" && $t ne \"exe\" && $t ne \"dll\"){\n            return\
    \ \"No\";\n        }\n        return \"Yes\";\n    }\n    return \"No\";\n}",
  "    my $valid_file_name = \"Yes\";\n    if($file_name =~ /(.*\\.[a-zA-Z]{3})/){\n\
    \        my $check_num = $1;\n        my $num_of_nums = length($check_num) - length($`);\n\
    \        if($num_of_nums > 3){\n            $valid_file_name = \"No\";\n     \
    \   }\n    }\n    else{\n        $valid_file_name = \"No\";\n    }\n    return\
    \ $valid_file_name;\n}", "    my @digits = (\"0\"..\"9\");\n    my @letters =\
    \ (\"a\"..\"z\");\n    my $count_digits = 0;\n    my $count_dots = 0;\n    my\
    \ $check_number = 0;\n    my $check_letters = 0;\n    my $check_dot = 0;\n   \
    \ my $check_format = 0;\n    my $check_empty = 0;\n    for (my $i = 0; $i < length($file_name);\
    \ $i++) {\n        my $char = substr($file_name, $i, 1);\n        if (grep {$_\
    \ eq $char} @digits) {\n            $count_digits++;\n        }\n        if ($char\
    \ eq \".\") {\n            $count_dots++;\n        }\n    }\n    if ($count_digits\
    \ > 3) {\n        $check_number = 1;\n    }\n    if ($count_dots != 1) {\n   \
    \     $check_dot = 1;\n    }\n    if ($file_name =~ /[^\\d]\\d+\\.txt$/ || $file_name\
    \ =~ /[^\\d]\\d+\\.exe$/ || $file_name =~ /[^\\d]\\d+\\.dll$/) {\n        $check_format\
    \ = 1;\n    }\n    if ($file_name =~ /^[a-zA-Z]\\.txt$/ || $file_name =~ /^[a-zA-Z]\\\
    .exe$/ || $file_name =~ /^[a-zA-Z]\\.dll$/) {\n        $check_empty = 1;\n   \
    \ }\n    if ($check_number || $check_dot || $check_format || $check_empty) {\n\
    \        return \"No\";\n    }\n    else {\n        return \"Yes\";\n    }\n}",
  "    my $num_digit = $file_name =~ tr/0-9//;\n    if ($num_digit > 3){\n       \
    \ return \"No\";\n    }\n    my $num_dot = $file_name =~ tr/.//;\n    if ($num_dot\
    \ != 1){\n        return \"No\";\n    }\n    if ($file_name !~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .[a-zA-Z]+$/){\n        return \"No\";\n    }\n    my $file_type = $file_name;\n\
    \    $file_type =~ s/^.*\\.//;\n    if ($file_type !~ /^(txt|exe|dll)$/){\n  \
    \      return \"No\";\n    }\n    return \"Yes\";\n}", "    my $flag = 1;\n  \
    \  my $dot_index = index($file_name, \".\");\n    if($dot_index == -1 || $dot_index\
    \ == 0 || $dot_index == length($file_name) - 1) {\n        $flag = 0;\n    }\n\
    \    else {\n        my $sub1 = substr($file_name, 0, $dot_index);\n        my\
    \ $sub2 = substr($file_name, $dot_index + 1);\n        if(!(($sub1 =~ /^[a-zA-Z]/)\
    \ && ($sub2 =~ /^(txt|exe|dll)$/))) {\n            $flag = 0;\n        }\n   \
    \     elsif($sub1 =~ /[0-9]/ && ($sub1 =~ /[0-9]/g) > 3) {\n            $flag\
    \ = 0;\n        }\n    }\n    if($flag == 1) {\n        return \"Yes\";\n    }\n\
    \    else {\n        return \"No\";\n    }\n}", "    my $valid = \"Yes\";\n  \
    \  my $cnt = 0;\n    my $i = 0;\n    my $dot_pos = index($file_name, \".\");\n\
    \    my $extension = substr($file_name, $dot_pos + 1);\n    if (index($file_name,\
    \ \".\") == -1) {\n        $valid = \"No\";\n    }\n    while (defined(substr($file_name,\
    \ $i, 1))) {\n        if ($i < $dot_pos && substr($file_name, $i, 1) =~ /[0-9]/)\
    \ {\n            $cnt++;\n        }\n        $i++;\n    }\n    if ($cnt > 3) {\n\
    \        $valid = \"No\";\n    }\n    if (index($file_name, \".\") == 0 || substr($file_name,\
    \ 0, 1) !~ /[a-zA-Z]/) {\n        $valid = \"No\";\n    }\n    if ($extension\
    \ ne \"txt\" && $extension ne \"exe\" && $extension ne \"dll\") {\n        $valid\
    \ = \"No\";\n    }\n    return $valid;\n}", '    my $max_digits = 3;', "    my\
    \ $substring = substr($file_name, 0, index($file_name, '.'));\n    my $substring2\
    \ = substr($file_name, index($file_name, '.') + 1);\n    return \"No\" if (substr($file_name,\
    \ index($file_name, '.') + 1) ne \"txt\" and substr($file_name, index($file_name,\
    \ '.') + 1) ne \"exe\" and substr($file_name, index($file_name, '.') + 1) ne \"\
    dll\");\n    return \"No\" if (length($substring) < 1);\n    return \"No\" if\
    \ ($substring =~ /\\d/g and $substring =~ /\\d/g > 3);\n    return \"No\" if (substr($substring,\
    \ 0, 1) !~ /[a-zA-Z]/);\n    return \"Yes\";\n}", "    # TODO\n}", "    my $dot_count\
    \ = ($file_name =~ tr/\\.//);\n    my $digits_count = ($file_name =~ tr/0-9//);\n\
    \    my @file_name_split = split /\\./, $file_name;\n    return \"No\" if ($dot_count\
    \ != 1 || $digits_count > 3 || $file_name_split[0] !~ /^[a-zA-Z]+$/ || $file_name_split[1]\
    \ !~ /txt|exe|dll/);\n    return \"Yes\";\n}", "    my @substrings = split(/\\\
    ./, $file_name);\n    my $sub_1 = $substrings[0];\n    my $sub_2 = $substrings[1];\n\
    \    if (length(@substrings) == 2 && \n        $sub_1 =~ /^[a-zA-Z]+[a-zA-Z\\\
    d]{0,2}/ && \n        $sub_2 =~ /^(txt|exe|dll)$/) {\n        return \"Yes\";\n\
    \    } else {\n        return \"No\";\n    }\n}", "    my $result = \"Yes\";\n\
    \    my $valid_ext = 0;\n    my $ext_count = 0;\n    my $num_count = 0;\n    my\
    \ $start_l = 0;\n    my $ext = \"\";\n    if ($file_name =~ /\\./){\n        $ext_count\
    \ = $file_name =~ tr/\\./\\./;\n        if ($ext_count > 1){\n            $result\
    \ = \"No\";\n        }\n        elsif ($file_name =~ /^[a-zA-Z]/){\n         \
    \   $start_l = 1;\n        }\n        else{\n            $result = \"No\";\n \
    \       }\n        if ($file_name =~ /\\d+/){\n            $num_count = $file_name\
    \ =~ tr/\\d/\\d/;\n            if ($num_count > 3){\n                $result =\
    \ \"No\";\n            }\n        }\n        if ($start_l == 1){\n           \
    \ my @splits = split(/\\./, $file_name);\n            $ext = $splits[1];\n   \
    \         if (($ext eq \"txt\") || ($ext eq \"exe\") || ($ext eq \"dll\")){\n\
    \                $valid_ext = 1;\n            }\n            else{\n         \
    \       $result = \"No\";\n            }\n        }\n    }\n    else{\n      \
    \  $result = \"No\";\n    }\n    return $result;\n}", "    if ($file_name =~ /^[a-zA-Z][^\\\
    .]*\\.(txt|exe|dll)$/) {\n        return \"Yes\";\n    }\n    return \"No\";\n\
    }", "    my $count = 0;\n    my $flag = 0;\n    for my $i (0..length($file_name)-1)\
    \ {\n        if (substr($file_name, $i, 1) =~ /[0-9]/) {\n            $count++;\n\
    \        }\n        if (substr($file_name, $i, 1) eq '.') {\n            $flag\
    \ = 1;\n        }\n    }\n    if ($count <= 3 && $flag == 1) {\n        return\
    \ \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "    # Implement\
    \ your solution here\n    my $num_digits = 0;\n    my $num_dots = 0;\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_before_dot = \"\";\n    for(my $i = 0; $i < length($file_name);\
    \ $i++) {\n        my $c = substr($file_name, $i, 1);\n        if($c >= '0' &&\
    \ $c <= '9') {\n            $num_digits++;\n        }\n        if($c eq '.') {\n\
    \            $num_dots++;\n        }\n    }\n    if($num_digits > 3 || $num_dots\
    \ != 1) {\n        return \"No\";\n    }\n    if($file_name =~ /([a-zA-Z]+)\\\
    .(txt|exe|dll)/) {\n        $substring_before_dot = $1;\n        $substring_after_dot\
    \ = $2;\n    }\n    if(length($substring_before_dot) == 0) {\n        return \"\
    No\";\n    }\n    if($substring_after_dot eq \"txt\" || $substring_after_dot eq\
    \ \"exe\" || $substring_after_dot eq \"dll\") {\n        return \"Yes\";\n   \
    \ }\n    return \"No\";\n}", "    if($file_name =~ /^[A-Za-z][a-zA-Z0-9]*\\.(txt|exe|dll)$/){\n\
    \        return \"Yes\";\n    }else{\n        return \"No\";\n    }\n}", "   \
    \ my $res = 'No';\n    if ($file_name =~ /^[a-zA-Z]+\\d{0,3}\\.\\w{3}$/) {\n \
    \       $res = 'Yes';\n    }\n    return $res;\n}", "    my $valid = 'Yes';\n\
    \    my $regex = qr/^([a-zA-Z][a-zA-Z0-9]{0,3})\\.(txt|exe|dll)$/;\n    if ($file_name\
    \ !~ $regex) {\n        $valid = 'No';\n    }\n    return $valid;\n}", "    my\
    \ $cond1 = $file_name =~ tr/[0-9]// <= 3;\n    my $cond2 = $file_name =~ /\\A[a-zA-Z][a-zA-Z0-9]*\\\
    .[tx|ex|dl]+\\z/;\n    return \"Yes\" if $cond1 && $cond2;\n    return \"No\"\
    ;\n}", "    my $result = \"Yes\";\n    # Your code goes here\n    return $result;\n\
    }", "    return 'No' if $file_name =~ /\\d{4}/;\n    return 'No' if $file_name\
    \ !~ /\\./;\n    return 'No' if $file_name !~ /^[a-zA-Z]/;\n    my @s = split\
    \ /\\./, $file_name;\n    return 'No' if @s > 2;\n    return 'No' if $s[1] !~\
    \ /^(txt|exe|dll)$/;\n    return 'Yes';\n}", "    if ($file_name =~ /^[a-zA-Z]\\\
    w*\\.txt$|^[a-zA-Z]\\w*\\.exe$|^[a-zA-Z]\\w*\\.dll$/) {\n        return \"Yes\"\
    ;\n    } else {\n        return \"No\";\n    }\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

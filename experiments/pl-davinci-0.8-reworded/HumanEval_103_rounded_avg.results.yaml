language: pl
name: HumanEval_103_rounded_avg
results:
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >\
    \ $m;\n    return \"0b\" . sprintf(\"%b\", int(($n + $m) / 2));\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    my $rounded_avg =\
    \ int (($n + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return\
    \ dec2bin($rounded_avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::dec2bin called at /tmp/tmpgrhkw7wj.pl line
    20.

    '
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >\
    \ $m;\n    my $avg = int(($n + $m) / 2);\n    return \"0b\" . unpack(\"B32\",\
    \ pack(\"N\", $avg)) =~ s/^0+(?=\\d)//r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return undef unless\
    \ $n > 0 && $m > 0;\n    return undef if $n > $m;\n    my $sum = 0;\n    for (my\
    \ $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    my $avg = int(($sum\
    \ / ($m - $n + 1)) + 0.5);\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >\
    \ $m;\n    return \"0b\" . sprintf(\"%b\", int(($n + $m) / 2));\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >\
    \ $m;\n    my $avg = int(($n + $m) / 2);\n    return \"0b\" . sprintf(\"%b\",\
    \ $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821086
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n   \
    \ my $count = 0;\n    if ($n < $m) {\n        for ($n..$m) {\n            $sum\
    \ += $_;\n            $count++;\n        }\n        return decimal_to_binary(int($sum/$count\
    \ + 0.5));\n    } else {\n        return -1;\n    }\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::decimal_to_binary called at /tmp/tmpbjx5ic17.pl
    line 23.

    '
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    if ($n > $m) {\n \
    \       return -1;\n    }\n    $sum = $n + $m;\n    $avg = $sum / 2;\n    $avg\
    \ = int($avg + 0.5);\n    return $avg;\n}\nprint rounded_avg(10, 20);\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: '15'
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return $n > $m ? -1\
    \ : sprintf(\"0b%b\", int(($n + $m) / 2));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    if ($n > $m) { return\
    \ -1; }\n    my $sum = 0;\n    foreach my $i ($n..$m) {\n        $sum += $i;\n\
    \    }\n    my $avg = int($sum / ($m - $n + 1) + 0.5);\n    return sprintf(\"\
    0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821222
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return $n > $m ? -1\
    \ : '0b' . dec2bin(int(($n + $m) / 2));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::dec2bin called at /tmp/tmp6niybxxy.pl line
    16.

    '
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    # YOUR CODE HERE\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = ($n + $m)\
    \ * ($m - $n + 1) / 2;\n    return '-1' if $n > $m;\n    sprintf '0b%b', int($sum\
    \ / ($m - $n + 1));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if ($n >\
    \ $m);\n    my $avg = sprintf(\"%.0f\", ($n + $m) / 2);\n    return \"0b\" . (unpack(\"\
    B32\", pack(\"N\", $avg)))\n        =~ /^0*(\\d{1,32})$/;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return $n > $m ? -1\
    \ : sprintf(\"0b%b\", int(($n + $m) / 2));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >\
    \ $m;\n    my $avg = int(($n + $m) / 2);\n    return '0b' . dec2bin($avg);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::dec2bin called at /tmp/tmpi9_00lrc.pl line
    18.

    '
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if ($n >\
    \ $m);\n    my $avg = int(($n + $m) / 2);\n    my $bin = sprintf(\"0b%b\", $avg);\n\
    \    return $bin;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if ($n >\
    \ $m);\n    my $sum = 0;\n    for my $i ($n..$m) {\n        $sum += $i;\n    }\n\
    \    my $avg = int($sum / ($m - $n + 1) + 0.5);\n    return sprintf(\"0b%b\",\
    \ $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    $n = int($n);\n  \
    \  $m = int($m);\n    if ($n > $m) {\n        return -1;\n    }\n    my $sum =\
    \ $n;\n    for my $i ($n + 1 .. $m) {\n        $sum += $i;\n    }\n    return\
    \ sprintf('0b%b', int($sum / ($m - $n + 1)));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
    \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
    # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >\
    \ $m;\n    my $avg = int(($n + $m) / 2);\n    return sprintf(\"0b%b\", $avg);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821086

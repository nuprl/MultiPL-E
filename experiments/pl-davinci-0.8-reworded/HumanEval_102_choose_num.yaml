name: HumanEval_102_choose_num
language: pl
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num(12,\
  \ 15)\n# 14\n# >>> choose_num(13, 12)\n# -1\nsub choose_num {\n    my($x, $y) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&choose_num;\n\
  \        if(eq_deeply($candidate->(12, 15),14)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(13, 12),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(33,\
  \ 12354),12354)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(5234, 5233),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(6, 29),28)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(27,\
  \ 10),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(7, 7),-1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->(546, 546),546)) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    if ($x%2==0) {\n        return $x;\n    }\n    else {\n       \
    \ if ($x+1==$y) {\n            return -1;\n        }\n        else {\n       \
    \     return choose_num($x+1, $y);\n        }\n    }\n}", "    my $max = -1;\n\
    \    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    return\
    \ -1 if $x % 2;\n    my $max = $x;\n    while ($x < $y) {\n        $x += 2;\n\
    \        $max = $x if $x > $max;\n    }\n    return $max;\n}", "    return -1\
    \ unless $x <= $y;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2\
    \ == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n\
    }", "    # >>> your code here <<<\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n   ", "    return -1 if $x >\
    \ $y;\n    # check if x is even\n    if ($x % 2 == 0) {\n        return $x if\
    \ $x == $y;\n        return $x+2 if $x+2 <= $y;\n    }\n    return $x+1 if $x+1\
    \ <= $y;\n    return -1;\n}", "    my $res = -1;\n    for my $i ($x..$y) {\n \
    \       if ($i % 2 == 0) {\n            $res = $i;\n        }\n    }\n    return\
    \ $res;\n}", "    my $biggest = -1;\n    for my $num ($x..$y) {\n        $biggest\
    \ = $num if ($num % 2 == 0 && $num > $biggest);\n    }\n    return $biggest;\n\
    }", "    for ($x..$y) {\n        return $_ if $_ % 2 == 0;\n    }\n    return\
    \ -1;\n}", "    $x++ while $x <= $y and $x % 2;\n    return $x <= $y ? $x : -1;\n\
    }", "    return -1 if $x > $y;\n    return $x if $x % 2 == 0;\n    $x += 1;\n\
    \    return -1 if $x > $y;\n    $x += 1;\n    while ($x <= $y) {\n        return\
    \ $x if $x % 2 == 0;\n        $x += 2;\n    }\n    return -1;\n}", "    if($x\
    \ % 2 == 0 && $y % 2 == 0) {\n        for($x .. $y) {\n            return $_ if\
    \ $_ % 2 == 0;\n        }\n    } elsif($x % 2 == 1 && $y % 2 == 1) {\n       \
    \ for($x+1 .. $y) {\n            return $_ if $_ % 2 == 0;\n        }\n    } else\
    \ {\n        return 0 if $x == $y;\n        return -1;\n    }\n}", "    my $result\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $result = $i;\n        }\n    }\n    return $result;\n}", "    #\
    \ TODO: write code here\n    return -1;\n}", "    my $i;\n    for ($i = $y; $i\
    \ >= $x; $i--) {\n\treturn $i if ($i % 2 == 0);\n    }\n    return -1;\n}", " \
    \   my $i;\n    my $even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $even = $i;\n        }\n    }\n    return $even;\n\
    }", "    # TODO: Replace the `...` with the correct values\n    return (($x >\
    \ $y) || ($x < 0) || ($y < 0)) ? -1 : (($x + $y) % 2 == 0) ? ($x + $y) / 2 : ($x\
    \ + $y - 1) / 2;\n}", "    if (is_even($x) and ($x <= $y)) {\n        return $x;\n\
    \    } elsif (is_even($y) and ($y >= $x)) {\n        return $y;\n    } else {\n\
    \        return -1;\n    }\n}", "    return -1 if $x > $y;\n    if($x % 2) {\n\
    \        ++$x;\n    }\n    return $x if $x == $y;\n    return $x + 2 if $x + 2\
    \ == $y;\n    return $x + 2;\n}", "    if ($x > $y) {\n        return -1;\n  \
    \  }\n    if (($x % 2) == 0) {\n        return $x;\n    }\n    else {\n      \
    \  return $x + 1;\n    }\n}", "    for ($x..$y) {\n        return $_ if not $_\
    \ % 2;\n    }\n    return -1;\n}", "    my($num) = -1;\n    if ($x > $y) {\n \
    \       return $num;\n    }\n    for (my $i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $num = $i;\n        }\n    }\n    return $num;\n\
    }", "    ...\n}", "    my $result = -1;\n    if ($x > $y) {\n        return -1;\n\
    \    } elsif ($x % 2 == 0) {\n        $result = $x;\n    } else {\n        $result\
    \ = $x + 1;\n    }\n    if ($result > $y) {\n        return -1;\n    } else {\n\
    \        return $result;\n    }\n}", "    my $z = 0;\n    for ($x..$y) {\n   \
    \     if ($_ % 2 == 0 && $_ > $z) {\n            $z = $_;\n        }\n    }\n\
    \    if ($z == 0) {\n        return -1;\n    }\n    return $z;\n}", "    my $even\
    \ = -1;\n    while($x <= $y){\n        if ($x % 2 == 0){\n            $even =\
    \ $x;\n        }\n        $x = $x + 1;\n    }\n    return $even;\n}", "    return\
    \ -1 if($x > $y);\n    my $biggest = -1;\n    for(my $i = $x; $i <= $y; $i++){\n\
    \        if($i % 2 == 0){\n            $biggest = $i;\n        }\n    }\n    return\
    \ $biggest;\n}", "    return -1 if $x > $y;\n    for ($x..$y) {\n        return\
    \ $_ if $_ % 2 == 0;\n    }\n    return -1;\n}", "    return -1 if ($x % 2 !=\
    \ 0);\n    for my $i ($x..$y) {\n        return $i if ($i % 2 == 0);\n    }\n\
    \    return -1;\n}", "    if ($x % 2 == 0) {\n        $x\n    } elsif ($x + 1\
    \ > $y) {\n        -1\n    } else {\n        $x + 1\n    }\n}", "    if ($x <=\
    \ $y) {\n        for (my $i = $y; $i >= $x; $i--) {\n            if ($i % 2 ==\
    \ 0) {\n                return $i;\n            }\n        }\n    }\n    return\
    \ -1;\n}", "    my $i;\n    for ($i = $y; $i >= $x; $i--) {\n\treturn $i if (($i\
    \ % 2) == 0);\n    }\n    return -1;\n}", "    # your code goes here\n}", "  \
    \  if ($x > $y) {\n        return -1;\n    }\n    my $i = $x;\n    while ($i <=\
    \ $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n     \
    \   $i++;\n    }\n    return -1;\n}", "    # write your code here\n    my $max\
    \ = -1;\n    for( my $i = $x; $i <= $y; $i++ ){\n        if( $i % 2 == 0 and $i\
    \ > $max ){\n            $max = $i;\n        }\n    }\n    return $max;\n}", " \
    \   if ($x % 2 == 0 and $y % 2 == 0) {\n        return $y;\n    } elsif ($x %\
    \ 2 == 0 and $y % 2 != 0) {\n        return $x;\n    } elsif ($x % 2 != 0 and\
    \ $y % 2 == 0) {\n        return $y;\n    } else {\n        return -1;\n    }\n\
    }", '    return -1 if ($x > $y);', "    # your code here\n}", "    return -1 if\
    \ ($x > $y);\n    return $x if ($x % 2 == 0);\n    return $x + 1 if ($x + 1 <=\
    \ $y);\n    return -1;\n}", "    my $biggest = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n      \
    \  }\n    }\n    return $biggest;\n}", "    my $max = -1;\n    foreach my $number\
    \ ($x..$y) {\n        if (($number % 2) == 0) {\n            if ($number > $max)\
    \ {\n                $max = $number;\n            }\n        }\n    }\n    return\
    \ $max;\n}", "    if($x % 2 == 0) {\n        if($y % 2 == 0) {\n            return\
    \ $y;\n        } else {\n            return $x;\n        }\n    } else {\n   \
    \     if($y % 2 == 0) {\n            return $y;\n        } else {\n          \
    \  return -1;\n        }\n    }\n}", "    my $z = $x;\n    while ($z <= $y) {\n\
    \        if ($z % 2 == 0) {\n            return $z;\n        }\n        $z = $z\
    \ + 1;\n    }\n    return -1;\n}", "    my($i);\n    my($max) = -1;\n    for ($i\
    \ = $x; $i <= $y; $i++) {\n\tif (($i % 2) == 0) {\n\t    $max = $i;\n\t}\n   \
    \ }\n    return $max;\n}", "    # Your code here\n}", "    my $max = $x;\n   \
    \ while ($x <= $y) {\n        if ($x % 2 == 0 && $x > $max) {\n            $max\
    \ = $x;\n        }\n        $x++;\n    }\n    if ($max == $x) {\n        return\
    \ -1;\n    }\n    return $max;\n}", "    if ($x % 2 == 0) {\n        return $x;\n\
    \    } else {\n        return choose_num($x + 1, $y);\n    }\n}", "    if ($x\
    \ % 2 != 0) {\n        $x++;\n    }\n    my $num = -1;\n    for ($x..$y) {\n \
    \       if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n    return\
    \ $num;\n}", "    # your code here\n}", "    if($x%2 != 0){\n        $x = $x +\
    \ 1;\n    }\n    if($y%2 != 0){\n        $y = $y - 1;\n    }\n    my $a = $x;\n\
    \    if($x > $y){\n        return -1;\n    }\n    while($a <= $y){\n        if($a%2\
    \ == 0){\n            return $a;\n        }\n        $a++;\n    }\n    return\
    \ -1;\n}", "    \n    if ($x % 2 == 0) {\n        return $x;\n    } elsif ($x\
    \ < $y) {\n        $x += 1;\n        return choose_num($x, $y);\n    } else {\n\
    \        return -1;\n    }\n}", '    my $index = $x%2;', "    my $n = -1;\n  \
    \  for(my $i = $x; $i <= $y; $i++){\n        if($i % 2 == 0){\n            $n\
    \ = $i;\n        }\n    }\n    return $n;\n}", "    my $z = -1;\n    for (my $i\
    \ = $x; $i <= $y; $i++){\n        if ($i % 2 == 0) {\n            $z = $i;\n \
    \       }\n    }\n    return $z;\n}", "    if($x <= $y) {\n        my $min = $x\
    \ % 2 == 0 ? $x : $x + 1;\n        if($min <= $y) {\n            return $min;\n\
    \        }\n    }\n    return -1;\n}", "    my $z = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $z = $i;\n      \
    \  }\n    }\n    return $z;\n}", "    # YOUR CODE HERE\n}", "    if ($x > $y)\
    \ {\n        ($x, $y) = ($y, $x);\n    }\n    my $max_even_num = -1;\n    for\
    \ my $num ($x..$y) {\n        if ($num % 2 == 0) {\n            $max_even_num\
    \ = $num;\n        }\n    }\n    return $max_even_num;\n}", "    if ($x%2!=0 &&\
    \ $y%2!=0)\n    {\n    \treturn -1;\n    }\n    if ($x%2==0 && $y%2==0)\n    {\n\
    \    \tif ($x>$y)\n    \t{\n    \t\treturn $x;\n    \t}\n    \telse \n    \t{\n\
    \    \t\treturn $y;\n    \t}\n    }\n    if ($x%2==0 && $y%2!=0)\n    {\n    \t\
    return $x;\n    }\n    if ($x%2!=0 && $y%2==0)\n    {\n    \tif ($x+1==$y)\n \
    \   \t{\n    \t\treturn -1;\n    \t}\n    \telse\n    \t{\n    \t\treturn $y;\n\
    \    \t}\n    }\n}", "    my $biggest_even = -1;\n    if ($x % 2 == 0) { # starts\
    \ with even\n        while ($x <= $y) {\n            if ($x > $biggest_even) {\n\
    \                $biggest_even = $x;\n            }\n            $x += 2;\n  \
    \      }\n    } else { # starts with odd\n        $x++;\n        while ($x <=\
    \ $y) {\n            if ($x > $biggest_even) {\n                $biggest_even\
    \ = $x;\n            }\n            $x += 2;\n        }\n    }\n    return $biggest_even;\n\
    }", "    if($x % 2 != 0){\n        $x++;\n    }\n    while($x <= $y){\n      \
    \  if($x % 2 == 0){\n            return $x;\n        }\n        $x += 2;\n   \
    \ }\n    return -1;\n}", "    my($i);\n    for ($i = $y; $i >= $x; $i--) {\n\t\
    return $i if ($i % 2 == 0);\n    }\n    return -1;\n}", "    my $num = -1;\n \
    \   foreach my $tmp ($x..$y) {\n        if ( $tmp % 2 == 0 ) {\n            $num\
    \ = $tmp;\n        }\n    }\n    return $num;\n}", "    if ($x < 0 || $y < 0)\
    \ {\n        return undef;\n    } elsif ($x > $y) {\n        return -1;\n    }\
    \ else {\n        # find the greatest even number <= y\n        # Note that it\
    \ is possible for this to fail if there is no even\n        # number <= y. In\
    \ that case, we'll just return -1.\n        my $max = $y - ($y % 2);\n       \
    \ while ($max >= $x) {\n            if ($max % 2 == 0) {\n                return\
    \ $max;\n            }\n            $max -= 1;\n        }\n        return -1;\n\
    \    }\n}", "    my $i;\n    if ($x > $y) {\n\treturn -1;\n    }\n    else {\n\
    \tfor ($i = $y; $i >= $x; $i--) {\n\t    if ($i % 2 == 0) {\n\t\treturn $i;\n\t\
    \    }\n\t}\n    }\n    return -1;\n}", "    # Write your code here\n    \n  \
    \  for($x .. $y){\n    \tif($_ % 2 == 0){\n    \t\treturn $_;\n    \t}\n    }\n\
    \    return -1;\n}", "    my $x_copy = $x;\n    my $y_copy = $y;\n    my $result\
    \ = 0;\n    my $counter = 0;\n    my $even_counter = 0;\n    my $temp = 0;\n \
    \   my $temp_counter = 0;\n    if ($x_copy < $y_copy) {\n\twhile($x_copy <= $y_copy)\
    \ {\n\t    $temp = $x_copy % 2;\n\t    if ($temp == 0) {\n\t\t$temp_counter =\
    \ $x_copy;\n\t\t$counter++;\n\t    }\n\t    $x_copy++;\n\t}\n\tif ($counter >\
    \ 0) {\n\t    $result = $temp_counter;\n\t}\n\telse {\n\t    $result = -1;\n\t\
    }\n    }\n    elsif ($x_copy > $y_copy) {\n\twhile($y_copy <= $x_copy) {\n\t \
    \   $temp = $y_copy % 2;\n\t    if ($temp == 0) {\n\t\t$temp_counter = $y_copy;\n\
    \t\t$counter++;\n\t    }\n\t    $y_copy++;\n\t}\n\tif ($counter > 0) {\n\t   \
    \ $result = $temp_counter;\n\t}\n\telse {\n\t    $result = -1;\n\t}\n    }\n \
    \   else {\n\tif ($x_copy % 2 == 0) {\n\t    $result = $x_copy;\n\t}\n\telse {\n\
    \t    $result = -1;\n\t}\n    }\n    return $result;\n}", "    # TODO: YOU ADD\
    \ YOUR CODE HERE\n    if(($x % 2 == 0) and ($y % 2 == 0)){\n    \treturn $y if\
    \ ($x < $y);\n    \treturn $x if ($x > $y);\n    }\n    if(($x % 2 == 0) and ($y\
    \ % 2 != 0)){\n    \tmy $z = $y - 1;\n    \treturn $z if ($x < $z);\n    \treturn\
    \ $x if ($x > $z);\n    }\n    if(($x % 2 != 0) and ($y % 2 == 0)){\n    \tmy\
    \ $w = $x + 1;\n    \treturn $y if ($w < $y);\n    \treturn $w if ($w > $y);\n\
    \    }\n    if(($x % 2 != 0) and ($y % 2 != 0)){\n    \tmy $w = $x + 1;\n    \t\
    my $z = $y - 1;\n    \treturn $z if ($w < $z);\n    \treturn $w if ($w > $z);\n\
    \    }\n    return -1;\n}", "    my $n = -1;\n    for my $i ($x..$y) {\n     \
    \   if ($i % 2 == 0) {\n            $n = $i;\n        }\n    }\n    return $n;\n\
    }", "    if ($x % 2 != 0) {\n      $x += 1;\n    }\n    if ($y % 2 != 0) {\n \
    \     $y -= 1;\n    }\n    while ($x <= $y) {\n      return $x if $x % 2 == 0;\n\
    \      $x += 1;\n    }\n    return -1;\n}", "    for (my $i = $y; $i >= $x; $i--)\
    \ {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n    }\n  \
    \  return -1;\n}", "    if($x % 2 == 0){\n        return $x;\n    }\n    elsif($x\
    \ % 2 != 0 && $y % 2 == 0){\n        return $y;\n    }\n    else{\n        return\
    \ -1;\n    }", "    my $z = $x;\n    while ($z >= $x and $z <= $y) {\n       \
    \ if ($z % 2 == 0) {\n            return $z;\n        }\n        $z = $z + 1;\n\
    \    }\n    return -1;\n}", "    # Your code goes here\n    if($x == $y){\n  \
    \      if($x % 2 == 0){\n            return $x;\n        }else{\n            return\
    \ -1;\n        }\n    }\n    my $i = $x;\n    while($i <= $y){\n        if($i\
    \ % 2 == 0){\n            return $i;\n        }\n        $i++;\n    }\n    return\
    \ -1;\n}", "    my $ret = -1;\n    if ($x % 2 == 0 && $y % 2 == 0) {\n       \
    \ $ret = $y;\n    } elsif ($x % 2 == 1 && $y % 2 == 1) {\n        $ret = $y -\
    \ 1;\n    } elsif ($x % 2 == 0 && $y % 2 == 1) {\n        $ret = $y - 1;\n   \
    \ } else {\n        $ret = $y;\n    }\n    return $ret;\n}", "    # Your code\
    \ goes here!\n}", "    ... # your code here\n}", "    $x = int($x);\n    $y =\
    \ int($y);\n    if($x == $y){\n        if($x % 2 == 0){\n            return $x;\n\
    \        }\n        else{\n            return -1;\n        }\n    }\n    if($x\
    \ > $y){\n        return -1;\n    }\n    my $biggest_even = -1;\n    for(my $i\
    \ = $x; $i <= $y; $i++){\n        if($i % 2 == 0){\n            $biggest_even\
    \ = $i;\n        }\n    }\n    return $biggest_even;\n}", "    my $return;\n \
    \   if ($x > $y) {\n        $return = -1;\n    }\n    else {\n        if ($x %\
    \ 2 == 0) {\n            $return = $x;\n        }\n        else {\n          \
    \  $return = $x + 1;\n        }\n    }\n    return $return;\n}", "    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i\
    \ > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", " \
    \   return -1 unless $x<=$y;\n    return $x if $x==$y and $x%2==0;\n    return\
    \ $x if $x%2==0;\n    return $y if $y%2==0;\n    return -1;\n}", "    for (my\
    \ $i = $y; $i >= $x; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n\
    \        }\n    }\n    return -1;\n}", "    my($result) = -1;\n    for my $i ($x..$y)\
    \ {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n\
    \    return $result;\n}", "    return $x if $x == $y && $x % 2 == 0;\n    for\
    \ my $i ($x .. $y) {\n        return $i if $i % 2 == 0;\n    }\n    return -1;\n\
    }", "    # Your code goes here!\n}", "    \n    # TODO: complete the function\
    \ here\n    \n}", "    return -1 if $x > $y;\n    for (my $i = $y; $i >= $x; $i--)\
    \ {\n        return $i if $i % 2 == 0;\n    }\n    return -1;\n}", "    # your\
    \ code goes here\n    my $output = -1;\n    foreach my $num ($x..$y) {\n     \
    \   if ($num % 2 == 0) {\n            $output = $num;\n        }\n    }\n    return\
    \ $output;\n}", "    # put your code here:\n    my $num = -1;\n    if($x <= $y){\n\
    \        for(my $i = $x; $i <= $y; $i++){\n            if($i % 2 == 0){\n    \
    \            $num = $i;\n            }\n        }\n    }\n    return $num;\n}",
  "    return -1 if $x > $y;\n    for(my $i = $y; $i >= $x; $i--) {\n        return\
    \ $i if $i % 2 == 0;\n    }\n    return -1;\n}", "    my $min = min($x, $y);\n\
    \    my $max = max($x, $y);\n    my $ans = -1;\n    for(my $i = $min; $i <= $max;\
    \ $i++) {\n        if($i % 2 == 0) {\n            $ans = $i;\n        }\n    }\n\
    \    return $ans;\n}", "    if ($x%2 == 0 && $y%2 == 0) {\n        return $y;\n\
    \    } elsif ($x%2 == 0 && $y%2 != 0) {\n        return $x;\n    } elsif ($x%2\
    \ != 0 && $y%2 == 0) {\n        return $y;\n    } else {\n        return -1;\n\
    \    }\n}", "    # We can use min() to get the smaller number between x and y.\n\
    \    my $a = min($x, $y);\n    # We can use max() to get the bigger number between\
    \ x and y.\n    my $b = max($x, $y);\n    # Now we just need to look for the biggest\
    \ even number between $a and $b.\n    my $result = -1;\n    for (my $i = $a; $i\
    \ <= $b; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n    \
    \    }\n    }\n    return $result;\n}", "    return ($x % 2 == 0) ? $x : $x+1\
    \ if $x > $y;\n    return -1 if $x % 2 == 1 && $y % 2 == 1;\n    return $y;\n}",
  "    $x % 2 == 0 ? $x : $x + 1;\n    if ($x > $y) {\n        return -1;\n    }\n\
    \    else {\n        for ($x; $x <= $y; $x += 2) {\n            return $x;\n \
    \       }\n    }\n}", "    my $num = -1;\n    if ($x > $y) {\n        my $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x % 2 == 0) {\n\
    \        $num = $x;\n    } else {\n        $num = $x + 1;\n    }\n    while ($num\
    \ <= $y) {\n        return $num;\n    }\n    return -1;\n}", "    #choose the\
    \ bigger number\n    if ($x > $y) {\n        $x = $y;\n    }\n    #iterate down\
    \ from larger number\n    while ($x >= $y) {\n        #if number is even return\n\
    \        if ($x % 2 == 0) {\n            return $x;\n        }\n        $x--;\n\
    \    }\n    #when no numbers are even in range, return -1\n    return -1;\n}",
  "    my $biggest = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }", "    # Replace the following line with the required code.\n    return -1;\n\
    }", "    if ($x % 2 != 0) {\n        $x = $x + 1;\n    }\n    if ($y % 2 != 0)\
    \ {\n        $y = $y - 1;\n    }\n    if ($x > $y) {\n        return -1;\n   \
    \ }\n    while ($x <= $y) {\n        return $x;\n        $x = $x + 2;\n    }\n\
    \    return -1;\n}\nprint \"choose_num(12, 15) is \" . choose_num(12, 15) . \"\
    \\n\";\nprint \"choose_num(13, 12) is \" . choose_num(13, 12) . \"\\n\";", " \
    \   my $biggest = -1;\n    if ($x % 2 != 0) {\n        $x++;\n    }\n    for (my\
    \ $i = $x; $i <= $y; $i += 2) {\n        if ($i > $biggest) {\n            $biggest\
    \ = $i;\n        }\n    }\n    return $biggest;\n}", "    # your code here\n}",
  "    my $number = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n        \
    \    $number = $_;\n        }\n    }\n    return $number;\n}", "    if ($x % 2\
    \ == 0) {\n        if ($y % 2 == 0) {\n            return $y;\n        } else\
    \ {\n            return $x;\n        }\n    } else {\n        if ($y % 2 == 0)\
    \ {\n            return $y;\n        } else {\n            if ($x < $y) {\n  \
    \              return $x + 1;\n            } else {\n                return -1;\n\
    \            }\n        }\n    }\n}", "    if($x > $y) {\n        return -1;\n\
    \    }\n    if(($x % 2) == 0) {\n        return $x;\n    }\n    return choose_num($x\
    \ + 1, $y);\n}", "    my $ret = -1;\n    while ($x <= $y) {\n\tif ($x % 2 == 0)\
    \ {\n\t    $ret = $x;\n\t}\n\t$x++;\n    }\n    return $ret;\n}", '    # your
    code goes here', "    # We use a for loop to search the range from x to y inclusive\n\
    \    for (my $i = $x; $i <= $y; $i++) {\n        # Check if $i is even and return\
    \ it if it is\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \    }\n    # If we did not find an even number, then we return -1\n    return\
    \ -1;\n}", "    my $l = $x;\n    if ($x % 2 == 1) {\n        $l++;\n    }\n  \
    \  while ($l <= $y) {\n        return $l if ($l % 2 == 0);\n        $l += 2;\n\
    \    }\n    return -1;\n}", "    die unless defined $x and defined $y;\n    die\
    \ unless $x >= 0 and $y >= 0;\n    return -1 if $x > $y;\n    return $x if $x\
    \ % 2 == 0;\n    return $x + 1;\n}", "    # ADD YOUR CODE HERE\n    my $res;\n\
    \    if ($x<=$y){\n    \tmy $max;\n    \tfor (my $i=$x; $i<=$y; $i++){\n    \t\
    \tmy $tmp = $i % 2;\n    \t\tif ($tmp == 0){\n    \t\t\t$max = $i;\n    \t\t}\n\
    \    \t}\n    \t$res = $max;\n    }else{\n    \t$res = -1;\n    }\n    return\
    \ $res;\n}", "    if($x % 2 != 0 and $y % 2 != 0) {\n    \treturn -1;\n    }\n\
    \    else {\n    \tmy $ans = 0;\n    \tfor($x..$y) {\n    \t\tif($_ % 2 == 0)\
    \ {\n    \t\t\t$ans = $_;\n    \t\t}\n    \t}\n    \treturn $ans;\n    }\n}",
  "    return -1 if $x > $y;\n    if ($x % 2 == 0) {\n        return $x if $x == $y;\n\
    \        return choose_num($x + 2, $y);\n    } else {\n        return choose_num($x\
    \ + 1, $y);\n    }\n}", "    my $tmp = $x;\n    if($x > $y){\n        $tmp = $y;\n\
    \    }\n    if(($tmp % 2) == 0){\n        return $tmp;\n    }else{\n        if($tmp\
    \ == $x){\n            $tmp = $y;\n        }else{\n            $tmp = $x;\n  \
    \      }\n        if(($tmp % 2) == 0){\n            return $tmp;\n        }else{\n\
    \            return -1;\n        }\n    }\n}", "    # your code here\n}", "  \
    \  if ($x%2 == 0){\n        return $x;\n    } else {\n        return $x+1;\n \
    \   }\n    if ($y%2 == 0){\n        return $y;\n    } else {\n        return $y-1;\n\
    \    }\n}", "    # Fill in your code here\n    if ($x > $y){\n        return -1;\n\
    \    }\n    if ($x % 2 == 0){\n        return $x;\n    }\n    else{\n        $x\
    \ = $x + 1;\n        return $x;\n    }\n}", "    my $max = -1;\n    my $counter\
    \ = $x;\n    while ($counter < $y + 1) {\n        if ($counter % 2 == 0 && $counter\
    \ > $max) {\n            $max = $counter;\n        }\n        $counter++;\n  \
    \  }\n    return $max;\n}", "    if ($x%2 == 0) {\n\treturn $x\n    }\n    elsif\
    \ ($x%2 == 1 && $y%2 == 0) {\n\treturn $y\n    }\n    else {\n\treturn -1\n  \
    \  }\n}", "    my $candidate = $x > $y ? $x : $y;\n    for (reverse($x .. $y))\
    \ {\n        return $_ if $_ % 2 == 0;\n    }\n    return -1;\n}\nprint choose_num(12,\
    \ 15), \"\\n\";\nprint choose_num(13, 12), \"\\n\";", "    # If x <= y, then the\
    \ largest even number is either y or y-1\n    # depending on whether y is even\
    \ or odd. If x > y, then there's\n    # no even number in the range [x, y].\n\
    \    if ($x <= $y) {\n        return $y if $y % 2 == 0;\n        return $y - 1;\n\
    \    }\n    return -1;\n}", "    if ($x % 2 == 0) {\n        return $x;\n    }\
    \ else {\n        $x+=1;\n        if ($x > $y) {\n            return -1;\n   \
    \     } else {\n            return $x;\n        }\n    }\n}", "    if ($x % 2\
    \ == 0) {\n\t$x;\n    } else {\n\t$x + 1;\n    }\n    # your code goes here\n}",
  "    # if $x is greater than $y then swap the values\n    if ($x > $y) {\n     \
    \   ($x, $y) = ($y, $x);\n    }\n    # if $x is not even then add 1 to it\n  \
    \  if ($x % 2 == 1) {\n        $x++;\n    }\n    # loop from $x to $y and return\
    \ the biggest even number\n    while ($x <= $y) {\n        return $x if ($x %\
    \ 2 == 0);\n        $x++;\n    }\n    # if no even number return -1\n    return\
    \ -1;\n}", "    return -1 if $x > $y;\n    while ($x % 2 != 0) {\n        if ($x\
    \ == $y) {\n            return -1;\n        }\n        $x++;\n    }\n    return\
    \ $x;\n}", "    my $r = -1;\n    if ($x > $y) {\n        return -1;\n    }\n \
    \   for ($x .. $y) {\n        if ($_ % 2 == 0 && $_ > $r) {\n            $r =\
    \ $_;\n        }\n    }\n    return $r;\n}", "    my $r;\n    my $e;\n    if ($x\
    \ % 2 == 0) {\n        $r = $x;\n    } else {\n        $r = $x + 1;\n    }\n \
    \   while ($r <= $y) {\n        $e = $r;\n        $r = $r + 2;\n    }\n    if\
    \ ($e) {\n        return $e;\n    } else {\n        return -1;\n    }\n}", " \
    \   # First make sure that x <= y\n    # Otherwise, reverse the arguments and\
    \ make sure it's true\n    if($x > $y) {\n        ($x, $y) = ($y, $x);\n    }\n\
    \    # Now we want to find the largest even number in the range $x to $y.\n  \
    \  # To do that, start from $y, and check if it's even. If it's not, then\n  \
    \  # move down to y-1, and repeat until we find an even number.\n    while($y\
    \ >= $x) {\n        if($y % 2 == 0) {\n            return $y;\n        }\n   \
    \     $y--;\n    }\n    # If we get here, then there are no even numbers in [x,\
    \ y].\n    return -1;\n}", "    # ... your code here ...\n}", "    return -1 if\
    \ $x % 2 == 1;\n    my $max = -1;\n    for my $n ($x..$y) {\n        if ($n %\
    \ 2 == 0) {\n            $max = $n;\n        }\n    }\n    return $max;\n}", " \
    \   if ($x > $y){\n        return -1;\n    }\n    if (($x % 2) == 0){\n      \
    \  return $x;\n    } else {\n        return $x + 1;\n    }", "    if($x % 2 !=\
    \ 0) {$x = $x + 1}\n    for($x..$y) {\n        if($_ % 2 == 0) {return $_}\n \
    \   }\n    return -1;\n}", "    # your code here\n}", "    if ($x > $y){\n   \
    \     return -1;\n    }\n    for($x; $x <= $y; $x++){\n        if ($x % 2 == 0){\n\
    \            return $x;\n        }\n    }\n    return -1;\n}", "    # ...\n}",
  "    for ($x .. $y) {\n        return $_ if $_ % 2 == 0;\n    }\n    return -1;\n\
    }", '    my $z = -1;', "    \n    # Write your code here\n}", "    $y = $x if\
    \ ($y < $x);\n    my $z = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n      \
    \  $z = $i if ($i % 2 == 0);\n    }\n    return $z;\n}", "    # Replace with your\
    \ code\n    return $x;\n}", '    my $max_even_num = -1;', "    my $result = -1;\n\
    \    for ($x..$y) {\n        if (!($_%2)) {\n            $result = $_;\n     \
    \   }\n    }\n    return $result;\n}", "    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else {\n        return choose_num($x + 1, $y);\n    }\n}", "    return\
    \ -1 unless $x <= $y;\n    return ($x % 2 == 0) ? $x : $x + 1 if $x == $y;\n \
    \   for (my $i = $x + 1; $i <= $y; $i += 2) {\n        return $i if $i % 2 ==\
    \ 0;\n    }\n    return -1;\n}", "    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "    if ($x % 2 == 0) {\n        for\
    \ ($i = $x; $i <= $y; $i++) {\n            if ($i % 2 == 0) {\n              \
    \  return $i;\n            }\n        }\n    } else {\n        for ($i = $x+1;\
    \ $i <= $y; $i++) {\n            if ($i % 2 == 0) {\n                return $i;\n\
    \            }\n        }\n    }\n    return -1;\n}", "    for(my $i = $y; $i\
    \ >= $x; $i--) {\n        if($i % 2 == 0) {\n            return $i;\n        }\n\
    \    }\n    return -1;\n}", "    # Insert code to return the correct value here\n\
    \    return -1;\n}", "    if ($x % 2 == 0) {\n        return $x;\n    } else {\n\
    \        if ($x + 1 > $y) {\n            return -1;\n        } else {\n      \
    \      return $x + 1;\n        }\n    }\n}", "    # TODO: Write your code here.\n\
    \    my $remainder = $x % 2;\n    my $number = $x + $remainder;\n    if($number\
    \ > $y){\n        return -1;\n    }\n    return $number;\n}", '    # choose_num
    code starts here', "    my $result = -1;\n    if ($x < $y) {\n        for (my\
    \ $i = $x; $i <= $y; $i++) {\n            if ($i % 2 == 0) {\n               \
    \ $result = $i;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   if ($x < 0 || $y < 0 || $x == $y) {\n        return -1;\n    }", "    return\
    \ -1 unless ($x%2==0 and $y%2==0) or ($x%2!=0 and $y%2!=0);\n    my $min = $x<$y?$x:$y;\n\
    \    my $max = $x>$y?$x:$y;\n    my $ans = $max;\n    while(1){\n        if($ans%2==0){\n\
    \            return $ans;\n        }\n        $ans-=1;\n    }\n}", "    # replace\
    \ this with your code:\n    my $num = -1;\n    if($x > $y){\n        return -1;\n\
    \    }\n    if($x % 2 == 0){\n        $num = $x;\n    }\n    else{\n        $num\
    \ = $x + 1;\n    }\n    while($num <= $y){\n        if($num > $x && $num % 2 ==\
    \ 0){\n            return $num;\n        }\n        $num += 2;\n    }\n    return\
    \ -1;\n}", "    my $result = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0)\
    \ {\n            $result = $_;\n        }\n    }\n    return $result;\n}", " \
    \   # add your code here\n    my $result = -1;\n    while ($x <= $y) {\n     \
    \   if ($x % 2 == 0) {\n            $result = $x;\n        }\n        $x += 1;\n\
    \    }\n    return $result;\n}", "    # Fill in this code so that it returns the\
    \ correct integer.\n}", "    my $z = $x > $y ? $x : $y;\n    while ($z >= $x)\
    \ {\n        return $z if !($z % 2);\n        $z--;\n    }\n    return -1;\n}",
  '    # YOUR CODE HERE', "    my $num = -1;\n    for(my $i = $x; $i <= $y; $i++)\
    \ {\n        if($i % 2 == 0) {\n            $num = $i;\n        }\n    }\n   \
    \ return $num;\n}", "    \n    #######################################################################\n\
    \    #                   TODO: Write code here.                            #\n\
    \    #######################################################################\n\
    \    my $result = -1;\n    for(my $i = $x; $i <= $y; $i++) {\n        if($i %\
    \ 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n\
    }", "    my $result = -1;\n    if ($x % 2 == 0) {\n        $result = $x;\n   \
    \ } else {\n        $result = $x + 1;\n    }\n    if ($result > $y) {\n      \
    \  $result = -1;\n    }\n    return $result;\n}", "    if($x % 2 == 0 && $y %\
    \ 2 == 0){\n        if($x >= $y){\n            return $y;\n        }\n       \
    \ return $x;\n    }\n    if($x % 2 == 0){\n        if($x >= $y){\n           \
    \ return $x;\n        }\n        if($y - 1 >= $x){\n            return $y - 1;\n\
    \        }\n        return -1;\n    }\n    if($y % 2 == 0){\n        if($y >=\
    \ $x){\n            return $y;\n        }\n        if($x + 1 <= $y){\n       \
    \     return $x + 1;\n        }\n        return -1;\n    }\n    if($x >= $y){\n\
    \        return -1;\n    }\n    if($x + 1 <= $y - 1){\n        return $x + 1;\n\
    \    }\n    return -1;\n}", "    my $z = $x;\n    while ($z <= $y) {\n       \
    \ if ($z % 2 == 0) {\n            return $z;\n        }\n        $z++;\n    }\n\
    \    return -1;\n}", "    # your code here\n}", "    return -1 if $x > $y;\n \
    \   if ($x % 2 == 0) {\n        $x = $x;\n    } else {\n        $x = $x + 1;\n\
    \    }\n    while($x <= $y) {\n        return $x if $x % 2 == 0;\n        $x++;\n\
    \    }\n    return -1;\n}", "    if ($x <= $y) {\n        if ($x % 2 == 0) {\n\
    \            return $x;\n        }\n        elsif ($x + 1 <= $y) {\n         \
    \   return $x + 1;\n        }\n        else {\n            return -1;\n      \
    \  }\n    }\n    else {\n        return -1;\n    }\n}", "    if ($x % 2 == 0)\
    \ {\n\treturn $x;\n    }\n    elsif ($x + 1 == $y) {\n\treturn -1;\n    }\n  \
    \  else {\n\treturn choose_num($x + 1, $y);\n    }\n}", "    if($x % 2 == 0) {\n\
    \        return $x;\n    } elsif($x + 1 < $y) {\n        return $x + 1;\n    }\
    \ else {\n        return -1;\n    }\n}", "    my $biggest_even = -1;\n    if($x\
    \ > $y) {\n        return -1;\n    }\n    for(my $i = $x; $i <= $y; $i++) {\n\
    \        if($i % 2 == 0) {\n            $biggest_even = $i;\n        }\n    }\n\
    \    return $biggest_even;\n}", "    for ($x .. $y) {\n        return $_ if ($_\
    \ % 2 == 0);\n    }\n    return -1;\n}", "    my $ans = -1;\n    for ($x..$y)\
    \ {\n        $ans = $_ if $_ % 2 == 0;\n    }\n    return $ans;\n}", '    my $result
    = -1;', "    my $a = $x;\n    while ($a <= $y) {\n        if ($a % 2 == 0) {\n\
    \            return $a;\n        }\n        $a = $a + 1;\n    }\n    return -1;\n\
    }", "    for (my $i = $y; $i >= $x; $i--) {\n        if ($i % 2 == 0) {\n    \
    \        return $i;\n        }\n    }\n    return -1;\n}", "    my $max = -1;\n\
    \    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $num\
    \ = -1;\n    for(my $z = $x; $z <= $y; $z++) {\n        if($z % 2 == 0) {\n  \
    \          $num = $z;\n        }\n    }\n    return $num;\n}", "    # Your code\
    \ here\n}", "    if ($x > $y) {\n\treturn -1;\n    } else {\n\treturn -1 if ($x%2\
    \ != 0 and $y%2 != 0);\n\treturn $y if ($y%2 == 0);\n\treturn $x;\n    }\n}",
  "    my $num = -1;\n    if ($x % 2 == 0) {\n        $num = $x;\n    } else {\n \
    \       $num = $x+1;\n    }\n    while ($num <= $y) {\n        return $num;\n\
    \    }\n    return -1;\n}", "    # your code starts here\n    my $num = -1;\n\
    \    if($x % 2 == 0){\n        $num = $x;\n    }\n    else{\n        $num = $x\
    \ + 1;\n    }\n    while($num <= $y){\n        return $num;\n        $num += 2;\n\
    \    }\n    # your code ends here\n}", "    my $r;\n    if ($x > $y) {\n     \
    \   $r = -1;\n    } elsif ($x == $y) {\n        if ($x % 2 == 0) {\n         \
    \   $r = $x;\n        } else {\n            $r = -1;\n        }\n    } else {\n\
    \        my $low = $x;\n        if ($x % 2 == 1) {\n            $low++;\n    \
    \    }\n        my $high = $y;\n        if ($y % 2 == 1) {\n            $high--;\n\
    \        }\n        if ($low > $high) {\n            $r = -1;\n        } else\
    \ {\n            $r = $high;\n        }\n    }\n    return $r;\n}", "    return\
    \ -1 unless ($x <= $y);\n    return -1 unless ($x > 0);\n    return -1 unless\
    \ ($y > 0);\n    my $z = $x;\n    while ($z <= $y) {\n        return $z if ($z\
    \ % 2 == 0);\n        $z++;\n    }\n    return -1;\n}", "    return -1 if ($x\
    \ % 2 && $y % 2);\n    my $res = $x;\n    while ($res < $y) {\n        $res +=\
    \ 2;\n    }\n    return $res;\n}", "    if (int($x) % 2 != 0) {\n        $x++;\n\
    \    }\n    if (int($y) % 2 != 0) {\n        $y--;\n    }\n    if ($x < $y) {\n\
    \        return $y;\n    } else {\n        return -1;\n    }\n}", "    my $chosen_num\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $chosen_num = $i;\n        }\n    }\n    return $chosen_num;\n}",
  "    if ($x % 2 != 0) { $x++ }\n    if ($y % 2 != 0) { $y-- }\n    if ($x <= $y)\
    \ {\n        return $y;\n    } else {\n        return -1;\n    }\n}", "    for\
    \ (my $i = $y; $i >= $x; $i--) {\n        if ($i % 2 == 0) {\n            return\
    \ $i;\n        }\n    }\n    return -1;\n}", "    my $number = 0;\n    # TODO\
    \ - write your code here\n    return $number;\n}", '    return -1 unless $x <=
    $y;', "    if ($x % 2 == 0) {\n\treturn $x if ($x >= $y);\n\treturn $x + 2;\n\
    \    } else {\n\treturn -1 if ($x >= $y);\n\treturn $x + 1;\n    }\n}", "    my\
    \ $r = -1;\n    for(my $i = $x; $i <= $y; $i++){\n        if($i % 2 == 0 && $i\
    \ > $r){\n            $r = $i;\n        }\n    }\n    return $r;\n}", "    if($x\
    \ < $y) {\n        for my $num ($x..$y) {\n            if($num % 2 == 0) {\n \
    \               return $num;\n            }\n        }\n    }\n    return -1;\n\
    }", "    my $num = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $num = $i;\n        }\n    }\n    return $num;\n}",
  "    my $max = -1;\n    if($x % 2 == 0){\n        $max = $x;\n    }\n    else{\n\
    \        $x += 1;\n    }\n    while($x <= $y){\n        if($x % 2 == 0){\n   \
    \         $max = $x;\n        }\n        $x += 1;\n    }\n    return $max;\n}",
  '    my $num = -1;', "    # Complete this code.\n    if($x % 2 == 0){\n        return\
    \ $x;\n    }\n    else{\n        return $x+1;\n    }\n}", "    my $biggest = 0;\n\
    \    for (my $i = $x; $i <= $y; $i++) {\n    \tif ($i % 2 == 0 && $i > $biggest)\
    \ {\n    \t\t$biggest = $i;\n    \t}\n    }\n    if ($biggest == 0) {\n    \t\
    return -1;\n    }\n    return $biggest;\n}", '    my $biggest_even = -1;']
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

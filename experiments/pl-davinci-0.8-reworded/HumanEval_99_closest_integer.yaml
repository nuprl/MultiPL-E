name: HumanEval_99_closest_integer
language: pl
prompt: "# Create a function that takes a value (string) representing a number\n#\
  \ and returns the closest integer to it. If the number is equidistant\n# from two\
  \ integers, round it away from zero.\n# Examples\n# >>> closest_integer(\"10\")\n\
  # 10\n# >>> closest_integer(\"15.3\")\n# 15\n# Note:\n# Rounding away from zero\
  \ means that if the given number is equidistant\n# from two integers, the one you\
  \ should return is the one that is the\n# farthest from zero. For example closest_integer(\"\
  14.5\") should\n# return 15 and closest_integer(\"-14.5\") should return -15.\n\
  sub closest_integer {\n    my($value) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&closest_integer;\n\
  \        if(eq_deeply($candidate->(\"10\"),10)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"14.5\"),15)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  -15.5\"),-16)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"15.3\"),15)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"0\"),0)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return round($value);\n}\n1;", "    $value = \"$value\";\n    my\
    \ @digits = split(//, $value);\n    if ($digits[0] eq \"-\") {\n        shift\
    \ @digits;\n        unshift @digits, \"-\";\n    }\n    for my $i (0 .. @digits\
    \ - 1) {\n        if ($digits[$i] eq \".\") {\n            if ($digits[$i + 1]\
    \ > 4) {\n                if ($digits[$i - 1] < 9) {\n                    $digits[$i\
    \ - 1]++;\n                }\n                else {\n                    for\
    \ my $j (reverse 1 .. $i) {\n                        if ($digits[$j] == 9) {\n\
    \                            $digits[$j] = 0;\n                        }\n   \
    \                     else {\n                            $digits[$j]++;\n   \
    \                         last;\n                        }\n                 \
    \   }\n                }\n            }\n            $digits[$i] = \"\";\n   \
    \     }\n    }\n    my $result = join(\"\", @digits);\n    if ($result eq \"-\"\
    ) {\n        $result = 0;\n    }\n    return $result;\n}", "    return int($value+0.5);\n\
    }\n1;", "    # write your code here\n    return $value;\n}", "    return sprintf\
    \ \"%d\", $value;\n}", "    my $decimal_part = $value - int($value);\n    if ($decimal_part\
    \ < 0.5) {\n        return int($value);\n    } else {\n        return ceil($value);\n\
    \    }\n}", "    my($number) = $value + 0;\n    return ( ($number > 0) ? int($number\
    \ + 0.5) : int($number - 0.5) );\n}", "    return int($value+0.5);\n}", "    return\
    \ sprintf(\"%.0f\", $value);\n}", "    if ($value =~ /^(-?\\d+).\\d+$/) {\n  \
    \      return($1);\n    }\n    return($value);\n}", "    return int($value);\n\
    }", "    my $int = int($value);\n    my $dec = $value - $int;\n    return ($dec\
    \ >= 0.5) ? $int + 1 : $int;\n}", "    $value =~ s/^([+-]?\\d+\\.\\d+).*$/$1/;\n\
    \    my $number = sprintf(\"%.0f\", $value);\n    $number = 0 if ($number eq \"\
    -0\");\n    return $number;\n}", "    return int($value);\n}", "    my $rounded\
    \ = int($value);\n    my $remainder = abs($value - $rounded);\n    if ($remainder\
    \ == 0.5) {\n        return $value < 0 ? $rounded - 1 : $rounded + 1;\n    }\n\
    \    elsif ($remainder < 0.5) {\n        return $rounded;\n    }\n    else {\n\
    \        return $rounded + 1;\n    }\n}", "    return int($value + 0.5);\n}",
  "    my($int) = int($value);\n    return ((abs($value - $int) < abs($value - ($int\
    \ + 1))) ? $int : ($int + 1));\n}\nprint \"closest_integer(10) -> \" . closest_integer(10)\
    \ . \"\\n\";\nprint \"closest_integer(10.1) -> \" . closest_integer(10.1) . \"\
    \\n\";\nprint \"closest_integer(10.5) -> \" . closest_integer(10.5) . \"\\n\"\
    ;\nprint \"closest_integer(10.6) -> \" . closest_integer(10.6) . \"\\n\";\nprint\
    \ \"closest_integer(10.9) -> \" . closest_integer(10.9) . \"\\n\";\nprint \"closest_integer(-10)\
    \ -> \" . closest_integer(-10) . \"\\n\";\nprint \"closest_integer(-10.1) -> \"\
    \ . closest_integer(-10.1) . \"\\n\";\nprint \"closest_integer(-10.5) -> \" .\
    \ closest_integer(-10.5) . \"\\n\";\nprint \"closest_integer(-10.6) -> \" . closest_integer(-10.6)\
    \ . \"\\n\";\nprint \"closest_integer(-10.9) -> \" . closest_integer(-10.9) .\
    \ \"\\n\";", "    return int($value);\n}", "    my($integer) = int($value);\n\
    \    my($decimal) = $value - $integer;\n    if ($decimal < 0) {\n        return\
    \ $integer - ($decimal < -0.5);\n    }\n    else {\n        return $integer +\
    \ ($decimal > 0.5);\n    }\n}", "    my $closest = int($value);\n    if(abs($value\
    \ - $closest) == 0.5) {\n        $closest = ($value >= 0) ? ($closest + 1) : ($closest\
    \ - 1);\n    }\n    return $closest;\n}", "    # If the number is zero, you should\
    \ return 0\n    if($value == 0) {\n        return 0;\n    }\n    # Round the number\
    \ toward zero (toward the center of the coordinate\n    # system, or in other\
    \ words, toward -Inf or Inf, as appropriate)\n    my $int = int($value);\n   \
    \ # Round the number away from zero.\n    my $int_f = int($value + $value/abs($value\
    \ * 0.5));\n    if($value > 0) {\n        # The given number is closer to the\
    \ integer nearest it on the\n        # positive side of zero (away from zero).\n\
    \        return $int == $int_f ? $int_f : $int_f;\n    } else {\n        # The\
    \ given number is closer to the integer nearest it on the\n        # negative\
    \ side of zero (away from zero).\n        return $int == $int_f ? $int : $int_f;\n\
    \    }\n}", "    return int($value + 0.5 * ($value <=> 0));\n}", "    my $i_value\
    \ = int($value);\n    if ($value - $i_value > 0.5) {\n        return int($value\
    \ + 1);\n    }\n    elsif ($value - $i_value < -0.5) {\n        return int($value\
    \ - 1);\n    }\n    else {\n        return $i_value;\n    }\n}", "    return round_decimal_away_from_zero($value);\n\
    }", "    if($value eq int($value)) {\n        return $value;\n    }\n    return\
    \ $value < 0 ? int($value-0.5) : int($value+0.5);\n}", "    my $integer = int($value);\n\
    \    my $remainder = $value - $integer;\n    if ($remainder == 0) {\n        return\
    \ $integer;\n    } elsif ($remainder > 0.5) {\n        return $integer + 1;\n\
    \    } else {\n        return $integer - 1;\n    }\n}", "    my $int = int($value);\n\
    \    if ( $value < 0 ) {\n        return $int == $value ? $int : $int - 1;\n \
    \   }\n    else {\n        return $int == $value ? $int : $int + 1;\n    }\n}",
  "    return int($value + 0.5);\n}", "    return 0 if $value == 0;\n    my $sign\
    \ = ($value > 0) ? 1 : -1;\n    return $sign * int( abs($value) + 0.5);\n}", " \
    \   my $closest_int = int($value);\n    if (abs($value - $closest_int) > .5) {\n\
    \        $closest_int += ($value > 0) ? 1 : -1;\n    }\n    return $closest_int;\n\
    }", "    my($integer, $decimal) = split(/\\./, $value);\n    if ($decimal == 0.5)\
    \ {\n        return $integer + 1 if $integer > 0;\n        return $integer - 1\
    \ if $integer < 0;\n    }\n    return $integer;\n}", "    return int($value +\
    \ 0.5);\n}", "    # your code goes here\n    if (int($value) < $value) {\n   \
    \     return int($value) + 1;\n    }\n    else {\n        return int($value);\n\
    \    }\n}", "    return int($value + 0.5);\n}", "    return int($value);\n}",
  "    return int($value);\n}", "    return $value =~ /\\.5$/ ? $value+0.5 : int($value);\n\
    }", "    return int($value + 0.5 * ($value <=> 0));\n}", "    my $int = int($value);\n\
    \    if($value >= 0) {\n        if($value - $int > 0.5) {\n            return\
    \ ++$int;\n        }\n        else {\n            return $int;\n        }\n  \
    \  }\n    else {\n        if($value - $int < -0.5) {\n            return --$int;\n\
    \        }\n        else {\n            return $int;\n        }\n    }\n}", " \
    \   return int($value + 0.5 * ($value <=> 0));\n}", "    my $int = int($value);\n\
    \    my $fraction = $value - $int;\n    if ($fraction >= 0.5) {\n        return\
    \ $int + 1;\n    } else {\n        return $int;\n    }\n}", "    if ($value =~\
    \ /\\d+\\.5/) {\n        return int($value) + int($value/abs($value));\n    }\
    \ else {\n        return int($value + 0.5);\n    }\n}", "    return sprintf('%d',\
    \ $value);\n}", "    # return int($value + 0.5) if $value >= 0;\n    # return\
    \ int($value - 0.5) if $value < 0;\n    # return int($value + 0.5);\n    $value\
    \ >= 0 ? int($value + 0.5) : int($value - 0.5);\n}", "    my $num = abs($value);\n\
    \    if ($num - int($num) < 0.5) {\n        return int($value);\n    } else {\n\
    \        return int($value) + 1;\n    }\n}", "    my $result = int($value);\n\
    \    $result += 1 if abs($value - $result) > abs($value - ($result + 1));\n  \
    \  return $result;\n}", "    return int $value + ($value > 0 ? 0.5 : -0.5);\n}",
  "    return int($value + 0.5);\n}", "    my $int = int($value);\n    my $frac =\
    \ $value - $int;\n    if ($frac == 0.5) {\n        if ($int >= 0) {\n        \
    \    return $int + 1;\n        } else {\n            return $int - 1;\n      \
    \  }\n    } else {\n        return $int;\n    }\n}", "    my $int = int($value);\n\
    \    return $int + ($value - $int > 0.5 ? 1 : 0);\n}", "    return int($value\
    \ + 0.5);\n}", "    my($integer) = int($value);\n    my($decimal) = $value - $integer;\n\
    \    if (abs($decimal) < .5) {\n        return $integer;\n    }\n    else {\n\
    \        return $integer + abs($decimal) / $decimal;\n    }\n}", "    return int($value+0.5);\n\
    }", "    my($float_value, $sign);\n    if ($value =~ /^([\\+\\-]?)(\\d+(?:\\.\\\
    d+)?)$/) {\n        $sign = $1;\n        $float_value = $2;\n    }\n    else {\n\
    \        warn \"Invalid value: $value\";\n        return;\n    }\n    my($integer_value)\
    \ = int($float_value);\n    if ($float_value == $integer_value) {\n        return\
    \ $value;\n    }\n    else {\n        my($next_integer_value) = $integer_value\
    \ + 1;\n        my($rounded_value);\n        if ($sign eq '-') {\n           \
    \ $rounded_value = $integer_value;\n        }\n        else {\n            $rounded_value\
    \ = $next_integer_value;\n        }\n        return \"$rounded_value\";\n    }\n\
    }", "    my $number = int($value);\n    my $diff1 = abs($value - $number);\n \
    \   my $diff2 = abs($value - ($number + 1));\n    if ($diff1 <= $diff2) {\n  \
    \      return $number;\n    } else {\n        return $number + 1;\n    }\n}",
  "    if ($value =~ /^(\\-?)\\d+\\.\\d*$/) {\n        my($num, $dec) = split(/\\\
    ./, $value);\n        my($ret) = $num;\n        if ($dec >= 5) {\n           \
    \ if ($num < 0) {\n                $ret = $num - 1;\n            } else {\n  \
    \              $ret = $num + 1;\n            }\n        }\n        return $ret;\n\
    \    }\n    return $value;\n}", "    return int($value + ($value <=> 0) * 0.5);\n\
    }", "    $value =~ /\\d+\\.\\d*/ ? $value + 0 : $value;\n}", "    my $n = int($value);\n\
    \    return $n if $value == $n;\n    return $n + ($value < 0 ? -1 : 1);\n}", " \
    \   return int($value + ($value > 0 ? 0.5 : -0.5));\n}", "    my $closest = int($value);\n\
    \    my $distance = abs($value - $closest);\n    return $closest if $distance\
    \ == 0.5;\n    if ($distance > 0.5) {\n        $closest = $closest + 1;\n    }\n\
    \    return $closest;\n}", "    if ($value < 0) {\n        return int($value)\
    \ - 1;\n    }\n    return int($value) + 1;\n}", "    my $val = int($value + ($value\
    \ <=> 0) * 0.5);\n    return $val;\n}", "    my $int = int($value);\n    my $fract\
    \ = $value - $int;\n    if ($fract < 0) {\n        $fract *= -1;\n    }\n    return\
    \ $int if $fract < 0.5;\n    return $int + 1 if $value >= 0;\n    return $int\
    \ - 1;\n}", "    my($first, $second) = split(/\\./, $value);\n    my($neg) = $value\
    \ =~ m/^-/;\n    my($diff);\n    if ( $second > 50 ) {\n        $diff = 100 -\
    \ $second;\n        if ( $neg ) {\n            $first--;\n        } else {\n \
    \           $first++;\n        }\n    } else {\n        $diff = $second;\n   \
    \ }\n    if ( $diff > 49 ) {\n        if ( $neg ) {\n            $first--;\n \
    \       } else {\n            $first++;\n        }\n    }\n    if ( $neg ) {\n\
    \        $first = -$first;\n    }\n    return $first;\n}", "    my $closest =\
    \ int($value);\n    $closest++ if abs($value - $closest) > 0.5;\n    return $closest;\n\
    }", "    return int($value);\n}", "    if($value =~ /^([\\d.]+)(?:e[+-](\\d+))?$/){\n\
    \        my $num = $1;\n        my $exp = $2;\n        my $fraction = 0;\n   \
    \     if($num =~ /\\./){\n            ($num, $fraction) = split(/\\./, $num);\n\
    \        }\n        $num += $fraction > 0.5 ? 1 : 0;\n        return substr($num,\
    \ 0, abs($exp)) if defined $exp;\n        return $num;\n    }\n    return $value;\n\
    }", "    if ($value =~ /(\\d+)\\./) {\n        my $int = $1;\n        if ($value\
    \ =~ /^-/) {\n            return $int - 1;\n        }\n        else {\n      \
    \      return $int + 1;\n        }\n    }\n    else {\n        return $value;\n\
    \    }\n}", "    return int($value + 0.5 * ($value <=> 0));\n}", "    my($integer);\n\
    \    if ($value < 0) {\n        $integer = int($value - 0.5);\n    } else {\n\
    \        $integer = int($value + 0.5);\n    }\n    return $integer;\n}", "   \
    \ my $int_val = int($value);\n    my $float_val = $value - $int_val;\n    if ($float_val\
    \ < 0) {\n        $float_val *= -1;\n    }\n    return $int_val if ($float_val\
    \ == 0.5);\n    return $int_val if ($float_val < 0.5);\n    return ($int_val +\
    \ 1) if ($value > 0);\n    return ($int_val - 1) if ($value < 0);\n}", "    #\
    \ ...\n}", "    return int($value + 0.5 * ($value <=> 0));\n}", "    return int($value\
    \ + ($value <=> 0) * 0.5);\n}", "    my $int_value = int($value);\n    if ($value\
    \ >= 0) {\n        if ($value - $int_value >= 0.5) {\n            return $int_value\
    \ + 1;\n        } else {\n            return $int_value;\n        }\n    } else\
    \ {\n        if ($value - $int_value <= -0.5) {\n            return $int_value\
    \ - 1;\n        } else {\n            return $int_value;\n        }\n    }\n}",
  "    my $n = int($value);\n    my $n_plus = $n + 1;\n    my $diff_plus = abs($value\
    \ - $n_plus);\n    my $diff = abs($value - $n);\n    if ($diff_plus < $diff) {\n\
    \        return $n_plus;\n    }\n    else {\n        return $n;\n    }\n}", " \
    \   # TODO: return the correct value\n    # Closest integer is the floor of the\
    \ given value.\n    return int($value);\n}", "    return int($value + ($value\
    \ <=> 0)/2);\n}", "    return int($value + 0.5);\n}", "    my $int = int($value);\n\
    \    return $int + ($value-$int > 0.5 ? 1 : 0);\n}", "    my($rounded) = sprintf(\"\
    %.0f\", $value);\n    return $rounded;\n}", "    my $nearest_integer = int($value);\n\
    \    my $diff = $value - $nearest_integer;\n    if($diff > 0) {\n        return\
    \ $nearest_integer + 1;\n    }\n    return $nearest_integer;\n}", "    my $sign\
    \ = \"\";\n    $sign = '-' if $value =~ /^-/;\n    $value =~ s/^-//;\n    my $decimal_place\
    \ = index($value, '.');\n    my $int = substr($value, 0, $decimal_place);\n  \
    \  my $dec = substr($value, $decimal_place + 1);\n    $int++ if ($dec && $dec\
    \ >= 5);\n    return $sign . $int;\n}", "    return int($value + 0.5);\n}", " \
    \   return $value;\n}", "    return int($value + 0.5 * ($value <=> 0));\n}", " \
    \   return int($value + 0.5);\n}", "    return int($value + ($value<=>0));\n}",
  "    my $is_negative = 0;\n    if($value =~ /^\\-/){\n        $is_negative = 1;\n\
    \        $value =~ s/^\\-//;\n    }\n    my $number = 0;\n    if($value =~ /\\\
    ./){\n        my($integer, $decimal) = split(/\\./, $value);\n        $number\
    \ = $integer;\n        if($decimal >= 5){\n            $number++;\n        }\n\
    \    }else{\n        $number = $value;\n    }\n    if($is_negative){\n       \
    \ $number = \"-$number\";\n    }\n    return $number;\n}", "    if ($value =~\
    \ /\\.(5)/) {\n        my @array = split(//, $value);\n        if ($array[0] eq\
    \ '-') {\n            $array[1] -= 1;\n            $array[0] = '';\n        }\
    \ else {\n            $array[1] += 1;\n        }\n        my $closest_integer\
    \ = join('', @array);\n        return $closest_integer;\n    } else {\n      \
    \  return $value;\n    }\n}", "    my $d = substr($value, index($value, '.') +\
    \ 1);\n    if ($d >= 5) {\n        my $n = length($value) - index($value, '.')\
    \ - 1;\n        if ($n == 1) {\n            return substr($value, 0, index($value,\
    \ '.')) + 1;\n        } else {\n            return substr($value, 0, index($value,\
    \ '.')) + 1 / 10**$n;\n        }\n    } else {\n        return substr($value,\
    \ 0, index($value, '.'));\n    }\n}", "    $value += 0;\n    $value = int($value)\
    \ + ($value - int($value) >= 0.5);\n    return $value;\n}", "    # your code here\n\
    \    my $int_part = int($value);\n    if ($value - $int_part >= 0.5) {\n     \
    \   return $int_part + 1;\n    } else {\n        return $int_part;\n    }\n}",
  "    my($return) = 0;\n    my($string) = \"\";\n    my($digit) = 0;\n    my($length)\
    \ = 0;\n    my($loop) = 0;\n    my($loop2) = 0;\n    my($decimal) = 0;\n    my($index)\
    \ = 0;\n    my($temp) = 0;\n    my($flag) = 0;\n    $index = index($value, \"\
    .\");\n    $string = $value;\n    if($index != -1) {\n        $string = substr($value,\
    \ 0, $index);\n        $length = length($string);\n        $digit = substr($value,\
    \ $index + 1, 1);\n        $decimal = $digit % 10;\n        if($decimal > 5) {\n\
    \            $flag = 1;\n        }\n        $digit = substr($value, $index + 2,\
    \ 1);\n        if($digit > 5) {\n            $flag = 1;\n        }\n        if($flag\
    \ == 1) {\n            $string = $string + 1;\n        }\n    }\n    $return =\
    \ $string;\n    return $return;\n}", "    return ($value > 0) ? POSIX::ceil($value)\
    \ : POSIX::floor($value);\n}", "    # ...\n}", "    return int($value + ($value\
    \ <=> 0) * 0.5);\n}", "    return $value;\n}", "    my $closest = int($value);\n\
    \    if ($value >= 0) {\n        $closest += 0.5 if ($value - $closest >= 0.5);\n\
    \    } else {\n        $closest -= 0.5 if ($closest - $value >= 0.5);\n    }\n\
    \    return $closest;\n}", "    my $rounded = sprintf \"%.0f\", $value;\n    $rounded\
    \ = 0 if $rounded eq \"-0\";\n    return $rounded;\n}", "    return ($value =~\
    \ /\\..*?5/) ? ($value =~ /-/) ? int($value)-1 : int($value)+1 : int($value);\n\
    }", "    my $is_negative = $value =~ /^-/;\n    $value =~ s/^-//;\n    my $integer\
    \ = int($value);\n    if ($value - $integer >= 0.5) {\n        return $is_negative\
    \ ? $integer - 1 : $integer + 1;\n    }\n    else {\n        return $is_negative\
    \ ? -$integer : $integer;\n    }\n}", "    return int($value);\n}", "    return\
    \ int($value + $value > 0 ? 0.5 : -0.5);\n}", "    $value += 0;\n    return int($value\
    \ + ($value <=> 0));\n}", "    return int($value + (($value > 0) ? .5 : -.5));\n\
    }", "    return int($value + 0.5);\n}", "    return 0 if ($value == 0);\n    my\
    \ $to_zero = $value < 0 ? -1 : 1;\n    return int($value + $to_zero);\n}", " \
    \   return int($value + $value/abs($value));\n}", "    my $int = int($value);\n\
    \    return $int if ($value eq $int);\n    return $int if ($value - $int) <= 0.5;\n\
    \    return $int + 1;\n}", "    my $int_val = int($value);\n    my $fraction =\
    \ $value - $int_val;\n    my $sign = $value / abs($value);\n    my $result = $int_val;\n\
    \    $result++ if ($fraction > 0.5);\n    $result-- if ($fraction < -0.5);\n \
    \   return $result * $sign;\n}", "    my $int = int($value);\n    if( $value -\
    \ $int > 0.5 ) {\n        return $int + 1;\n    } else {\n        return $int;\n\
    \    }\n}", "    $value =~ s/(\\.[0-9]+)$//;\n    my $decimal = $1;\n    $decimal\
    \ =~ s/^\\.//;\n    $decimal >= 5 ? $value + 1 : $value;\n}", "    my $is_negative\
    \ = $value =~ s/^-//;\n    $value =~ s/\\..*//;\n    $value++;\n    return 0 if\
    \ $value == 1;\n    return -$value if $is_negative;\n    return $value;\n}", " \
    \   # Good luck!\n    return int($value + ($value <=> 0) * 0.5);\n}", "    my\
    \ $result = int($value);\n    if ( abs($value - $result) >= 0.5 ) {\n        $result\
    \ += ($value <=> 0);\n    }\n    return $result;\n}", "    return int($value +\
    \ ($value <=> 0) * 0.5);\n}", "    return $value =~ /^-?\\d+$/ ? $value : int($value\
    \ + ($value <=> 0) * 0.5);\n}", "    my $result = int($value);\n    my $is_positive\
    \ = $value >= 0;\n    if ( ($value - $result) == 0.5 ) {\n        if ( $is_positive\
    \ ) {\n            $result += 1;\n        } else {\n            $result -= 1;\n\
    \        }\n    }\n    return $result;\n}", "    my($closest);\n    my($upper,\
    \ $lower);\n    $value += 0;\n    $upper = int($value) + 1;\n    $lower = int($value);\n\
    \    if ($upper - $value > $value - $lower) {\n        $closest = $lower;\n  \
    \  } else {\n        $closest = $upper;\n    }\n    return $closest;\n}", "  \
    \  return int $value;\n}", "    my $val = int($value + 0.5);\n    $val = -$val\
    \ if $value < 0;\n    return $val;\n}", "    my $number = 0;\n    eval {\n   \
    \     $number = int($value);\n    };\n    if ( $@ ) {\n        die $@;\n    }",
  "    return int($value + $value/abs($value));\n}", "    my $closest = int($value);\n\
    \    if ($value - $closest > 0.5) {\n        return $closest + 1;\n    }\n   \
    \ return $closest;\n}", "    $value =~ s/\\.\\d+$//;\n    return int($value);\n\
    }", "    return int $value;\n}", "    my $num = int $value;\n    my $remainder\
    \ = $value - $num;\n    if ($remainder > 0.5) {\n        $num += 1;\n    } elsif\
    \ ($remainder < -0.5) {\n        $num -= 1;\n    }\n    return $num;\n}", "  \
    \  my $intval = int $value;\n    return ($value - $intval) < 0.5 ? $intval : $intval\
    \ + 1;\n}", "    my $num = abs(0.5 + $value);\n    return abs($value) if($num\
    \ - abs(int($num)) == 0.5);\n    return int($num);\n}", "    if ( $value =~ /\\\
    d+\\.\\d+/ ) {\n        my $frac = substr($value,index($value,\".\")+1);\n   \
    \     return ( $frac < 5 ? substr($value,0,index($value,\".\")) : substr($value,0,index($value,\"\
    .\"))+1 );\n    } else {\n        return $value;\n    }\n}", "    my $negative\
    \ = ($value =~ /^-/);\n    $value =~ s/^-//;\n    my $result = int($value);\n\
    \    if (abs($value - $result) >= 0.5) {\n        if ($negative) {\n         \
    \   return --$result;\n        } else {\n            return ++$result;\n     \
    \   }\n    } else {\n        return $result;\n    }\n}", "    return sprintf(\"\
    %.0f\", $value);\n}", "    return int $value;\n}", "    my $int = int($value);\n\
    \    my $rem = $value - $int;\n    if ($rem > 0.5) {\n        return $int + 1;\n\
    \    }\n    elsif ($rem < -0.5) {\n        return $int - 1;\n    }\n    else {\n\
    \        return $int;\n    }\n}\nmy $output = closest_integer(\"10\");\nprint(\"\
    $output\\n\");\n$output = closest_integer(\"15.3\");\nprint(\"$output\\n\");\n\
    $output = closest_integer(\"-14.5\");\nprint(\"$output\\n\");\n$output = closest_integer(\"\
    15.5\");\nprint(\"$output\\n\");\n$output = closest_integer(\"-15.5\");\nprint(\"\
    $output\\n\");\n$output = closest_integer(\"14.5\");\nprint(\"$output\\n\");",
  "    my $num = 0;\n    if ($value < 0) {\n        $num = int($value) - 1;\n    }\
    \ else {\n        $num = int($value) + 1;\n    }\n    my $diff1 = $value - int($value);\n\
    \    my $diff2 = $num - $value;\n    if ($diff1 == $diff2) {\n        return $num;\n\
    \    } elsif ($diff1 < $diff2) {\n        return int($value);\n    } else {\n\
    \        return $num;\n    }\n}", "    my $int_val = int($value);\n    my $dec_val\
    \ = $value - $int_val;\n    return $int_val + ($dec_val > 0.5 ? 1 : 0);\n}", " \
    \   my $int = int($value);\n    if(($value - $int) < 0.5) {\n        return $int;\n\
    \    } else {\n        return $int + 1;\n    }\n}", "    my($number) = int($value);\n\
    \    return $number if $value == $number;\n    return int($value + ($value > 0\
    \ ? 0.5 : -0.5));\n}", "    if ($value =~ /^\\d+\\.\\d+$/) {\n        my($int,\
    \ $dec) = split(/\\./, $value);\n        if ($dec < 5) {\n            return $int;\n\
    \        } else {\n            if ($int < 0) {\n                return $int -\
    \ 1;\n            } else {\n                return $int + 1;\n            }\n\
    \        }\n    }\n    return $value;\n}", "    if ($value =~ /^(\\d+)(\\.5?)$/)\
    \ {\n        return $1 + 1 if $2;\n        return $1;\n    }\n    if ($value =~\
    \ /^(-\\d+)(\\.5?)$/) {\n        return $1 - 1 if $2;\n        return $1;\n  \
    \  }\n    if ($value =~ /^(.+)\\.5$/) {\n        return int($1) + 1;\n    }\n\
    \    if ($value =~ /^(-.+)\\.5$/) {\n        return int($1) - 1;\n    }\n    return\
    \ int($value);\n}", "    my $int_value = int($value);\n    if ($value - $int_value\
    \ >= 0.5) {\n        $int_value++;\n    }\n    return $int_value;\n}", "    my\
    \ $number = sprintf(\"%.0f\", $value);\n    return $number;\n}", "    my $int\
    \ = sprintf(\"%d\", $value);\n    if ($value >= 0) {\n        if ($value - $int\
    \ < 0.5) {\n            return $int;\n        } else {\n            return $int\
    \ + 1;\n        }\n    } else {\n        if ($int - $value < 0.5) {\n        \
    \    return $int;\n        } else {\n            return $int - 1;\n        }\n\
    \    }\n}", "    my $number = sprintf \"%.0f\", $value;\n    return $number;\n\
    }\n1;", "    return int($value) + 0.5 if $value - int($value) == 0.5;\n    return\
    \ int($value + 0.5);\n}", "    my($int);\n    $int = int($value);\n    if (($value\
    \ - $int) > 0.5) {\n        $int++;\n    }\n    return $int;\n}", "    return\
    \ int($value + ($value <=> 0)/2);\n}", "    return (($value >= 0) ? int($value\
    \ + 0.5) : int($value - 0.5));\n}", "    return nearest_ceil($value);\n}", " \
    \   return int($value) + ($value > 0 ? .5 : -.5);\n}", "    my($number) = $value;\n\
    \    my($number_abs) = abs($number);\n    my($number_ceil) = ceil($number_abs);\n\
    \    my($number_floor) = floor($number_abs);\n    my($number_diff_ceil) = $number_ceil\
    \ - $number_abs;\n    my($number_diff_floor) = $number_abs - $number_floor;\n\
    \    my($closest) = ($number_diff_ceil > $number_diff_floor) ? $number_floor :\
    \ $number_ceil;\n    return $closest * ($number / $number_abs);\n}", "    my($number)\
    \ = $value;\n    my($integer);\n    my($rest);\n    if ($number > 0) {\n     \
    \   $integer = int($number);\n        $rest = $number - $integer;\n        if\
    \ ($rest >= 0.5) {\n            $integer += 1;\n        }\n    } else {\n    \
    \    $integer = int($number);\n        $rest = $integer - $number;\n        if\
    \ ($rest >= 0.5) {\n            $integer -= 1;\n        }\n    }\n    return $integer;\n\
    }", "    my($result) = int($value);\n    my($remainder) = $value - $result;\n\
    \    if($remainder > 0.5){\n        $result += 1;\n    }\n    if($remainder <\
    \ -0.5){\n        $result -= 1;\n    }\n    return $result;\n}", "    my($num)\
    \ = $value =~ /\\.(\\d+)$/;\n    my($integer) = int($value);\n    if ($num ==\
    \ 0) {\n        return $integer;\n    }\n    my($deviation) = $value - $integer;\n\
    \    if ($deviation < 0) {\n        return $integer;\n    }\n    if ($deviation\
    \ == 0.5) {\n        if ($integer >= 0) {\n            return $integer + 1;\n\
    \        }\n        return $integer - 1;\n    }\n    if ($deviation > 0.5) {\n\
    \        return $integer + 1;\n    }\n    return $integer;\n}", "    my $sign\
    \ = ($value =~ /^-/) ? -1 : 1;\n    my $num = int(abs($value) + 0.5);\n    $num\
    \ *= $sign;\n    return $num;\n}", "    my $int_value = int($value);\n    if (abs($value\
    \ - $int_value) > 0.5) {\n        $int_value += $value > 0 ? 1 : -1;\n    }\n\
    \    return $int_value;\n}", "    # We round here and then return the result as\
    \ an integer\n    # to avoid issues with floating point imprecision.\n    return\
    \ int(round($value));\n}", "    if ($value >= 0) {\n        return int($value\
    \ + 0.5);\n    } else {\n        return int($value - 0.5);\n    }\n}", "    my\
    \ $number = int($value);\n    if (abs($value - $number) >= 0.5) {\n        return\
    \ $number + 1;\n    }\n    return $number;\n}", "    return int $value;\n}", " \
    \   my $result = 0;\n    #...\n    return $result;\n}", "    my($integer) = int($value);\n\
    \    my($decimal) = $value - $integer;\n    if ($decimal < -0.5) {\n        $integer\
    \ -= 1;\n    } elsif ($decimal > 0.5) {\n        $integer += 1;\n    }\n    return\
    \ $integer;\n}", "    return 0 + $value;\n}", "    return int($value);\n}", " \
    \   # ...\n}", "    return sprintf(\"%.0f\", $value);\n}", "    return(0 + $value);\n\
    }", "    return int($value + $value/abs($value*2));\n}", "    $value =~ s/\\.//;\n\
    \    return $value;\n}", "    my $nearest = int($value);\n    if ($value =~ /\\\
    .5$/) {\n        $nearest += ($value > 0) ? 1 : -1;\n    }\n    return $nearest;\n\
    }", "    # TODO implement this function\n    return $value;\n}", "    my $result\
    \ = int($value + ($value <=> 0) * 0.5);\n    return $result;\n}", "    return\
    \ unless defined $value;\n    return int($value);\n}", "    my $int_value = int($value);\n\
    \    if (abs($value - $int_value) == 0.5) {\n        return $value > 0 ? $int_value\
    \ + 1 : $int_value - 1;\n    }\n    return $int_value;\n}", "    my $ret;\n  \
    \  my $value_abs = abs($value);\n    my $floor_value = int($value_abs);\n    my\
    \ $ceil_value = int($value_abs) + 1;\n    my $floor_value_diff = $value_abs -\
    \ $floor_value;\n    my $ceil_value_diff = $ceil_value - $value_abs;\n    if ($floor_value_diff\
    \ == $ceil_value_diff) {\n        $ret = int($value) < 0 ? -$ceil_value : $ceil_value;\n\
    \    } else {\n        $ret = $floor_value_diff < $ceil_value_diff ? $floor_value\
    \ : $ceil_value;\n    }\n    return $ret;\n}", "    my($closest_value) = int($value);\n\
    \    if(($value - $closest_value) >= 0.5) {\n        $closest_value++;\n    }\n\
    \    return $closest_value;\n}", "    my $rounded = int($value);\n    if (abs($value\
    \ - $rounded) == 0.5) {\n        return $value < 0 ? $rounded - 1 : $rounded +\
    \ 1;\n    }\n    return $rounded;\n}", "    my $result = int($value + ($value\
    \ > 0 ? 0.5 : -0.5));\n    return $result;\n}\n1;", "    my $return = int($value);\n\
    \    my $delta = $value - $return;\n    $return += ($delta >= 0.5) ? 1 : -1;\n\
    \    return $return;\n}", "    $value += 0;\n    my $whole = int($value);\n  \
    \  return $whole if $value == $whole;\n    return $whole + 1 if $value - $whole\
    \ > 0.5;\n    return $whole - 1;\n}\nprint closest_integer(\"15.3\") . \"\\n\"\
    ;", "    return int($value+0.5);\n}", "    # TODO\n}", "    my $int = int($value);\n\
    \    my $frac = $value - $int;\n    if ($frac >= 0.5) {\n        return $int +\
    \ 1;\n    }\n    return $int;\n}", "    return 0 unless $value;\n    if ($value\
    \ > 0) {\n        return int($value + 0.5);\n    }\n    else {\n        return\
    \ int($value - 0.5);\n    }\n}\n1;", "    my($num, $int);\n    $num = int($value);\n\
    \    if ($value - $num < 0.5) {\n        $int = $num;\n    } else {\n        $int\
    \ = $num + 1;\n    }\n    return $int;\n}", "    my $int = int($value);\n    my\
    \ $frac = $value - $int;\n    if($frac > 0.5){\n        return $int + 1;\n   \
    \ }\n    elsif($frac < -0.5){\n        return $int - 1;\n    }\n    else{\n  \
    \      return $int;\n    }\n}", "    my $number = sprintf(\"%.0f\", $value);\n\
    \    return $number;\n}", "    my $int;\n    if ( $value >= 0 ) {\n        $int\
    \ = int( $value + 0.5 );\n    } else {\n        $int = int( $value - 0.5 );\n\
    \    }\n    return $int;\n}", "    my($int, $dec) = split(/\\./, $value);\n  \
    \  my($result) = $int;\n    if ($dec) {\n        $result += 1 if $dec > 0.5;\n\
    \        $result -= 1 if $dec < -0.5;\n    }\n    return $result;\n}", "    if\
    \ ($value >= 0) {\n        return int($value + 0.5);\n    } else {\n        return\
    \ int($value - 0.5);\n    }\n}", "    #$value = '-14.5';\n    my $int_value =\
    \ int($value);\n    my $float_value = $value - $int_value;\n    my $res = $float_value\
    \ < 0.5 ? $int_value : $int_value + 1;\n    return $res;\n}", "    my $num = sprintf('%.0f',$value);\n\
    \    my $val_int = int($value);\n    my $num_int = int($num);\n    my $diff =\
    \ $value - $num_int;\n    if ($diff >= 0.5) {\n        return $num_int + 1;\n\
    \    } elsif ($diff <= -0.5) {\n        return $num_int - 1;\n    } else {\n \
    \       return $num_int;\n    }\n}", "    # For negative numbers, I am rounding\
    \ down, and for positive numbers,\n    # I am rounding up. I don't think the spec\
    \ was clear about what to do\n    # for negative numbers, so it's up to you.\n\
    \    return int($value) if (int($value) == $value);\n    return int($value + 0.5)\
    \ if ($value > 0);\n    return int($value - 0.5);\n}", "    if($value =~ /^(\\\
    d*)\\.(\\d+)$/) {\n        my($a, $b) = ($1, $2);\n        if(length($a) == 0)\
    \ {\n            if($b =~ /^5\\d+$/) {\n                return 1;\n          \
    \  } else {\n                return 0;\n            }\n        }\n        if($b\
    \ >= 5) {\n            $a++;\n        }\n        return $a;\n    } else {\n  \
    \      return $value;\n    }\n}", "    return sprintf \"%d\", $value;\n}\n1;",
  "    my $value_int = int($value);\n    my $rounded = $value_int + 0.5;\n    if ($value\
    \ > $rounded) {\n        return $value_int + 1;\n    }\n    else {\n        return\
    \ $value_int;\n    }\n}", "    my $int_value = int($value);\n    my $fraction\
    \ = $value - $int_value;\n    if ($fraction > 0.5) {\n        return $int_value\
    \ + 1;\n    } elsif ($fraction < -0.5) {\n        return $int_value - 1;\n   \
    \ } else {\n        return $int_value;\n    }\n}", "    # ...\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_77_iscube
language: pl
prompt: "# Write a function that takes an integer a and returns 1 \n# if this ingeger\
  \ is a cube of some integer number.\n# Note: you may assume the input is always\
  \ valid.\n# Examples:\n# >>> iscube(1)\n# 1\n# >>> iscube(2)\n# \"\"\n# >>> iscube(-1)\n\
  # 1\n# >>> iscube(64)\n# 1\n# >>> iscube(0)\n# 1\n# >>> iscube(180)\n# \"\"\nsub\
  \ iscube {\n    my($a) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&iscube;\n\
  \        if(eq_deeply($candidate->(1),1)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->(2),\"\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(-1),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(64),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(180),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1000),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(0),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1729),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    if ($a == 0) {\n        return 1;\n    } else {\n        return\
    \ 0 if $a < 0;\n        return 1 if int(pow(sqrt($a),3)) == $a;\n        return\
    \ 0;\n    }\n}", "    for(my $i = 0; $i < $a; $i++) {\n        if($i*$i*$i ==\
    \ $a) {\n            return 1;\n        }\n    }\n    return \"\";\n}\nprint \"\
    iscube: \", iscube(4), \"\\n\";", "    my $number = int( $a ** (1/3) );\n    return\
    \ $number ** 3 == $a ? 1 : '';\n}", "    # your code here\n    # if ($a == 0 ||\
    \ $a == 1) {\n    #     return 1;\n    # }\n    # if ($a > 0) {\n    #     for\
    \ my $i (1..$a) {\n    #         if ($i * $i * $i == $a) {\n    #            \
    \ return 1;\n    #         }\n    #     }\n    # } else {\n    #     for my $i\
    \ (-1..-$a) {\n    #         if ($i * $i * $i == $a) {\n    #             return\
    \ 1;\n    #         }\n    #     }\n    # }\n    # return \"\";\n    # smart way\n\
    \    if ($a == 0 || $a == 1) {\n        return 1;\n    }\n    my $max = int(abs($a)\
    \ ** (1/3));\n    return (abs($a) == $max * $max * $max);\n}", "    my $b = int(abs($a)\
    \ ** (1/3));\n    return 1 if $b ** 3 == abs($a);\n    return \"\";\n}", "   \
    \ my $x = sqrt($a);\n    return ($x =~ /^\\d+$/ ? 1 : \"\");\n}", "    for my\
    \ $b(0..$a) {\n        if ($b*$b*$b == $a) {\n            return 1;\n        }\n\
    \    }\n    return \"\";\n}", "    my $l = 0;\n    my $r = abs($a);\n    while\
    \ ($l <= $r) {\n        my $m = ($l + $r) / 2;\n        my $x = $m * $m * $m;\n\
    \        if ($x < $a) {\n            $l = $m + 1;\n        }\n        elsif ($x\
    \ > $a) {\n            $r = $m - 1;\n        }\n        else {\n            return\
    \ 1;\n        }\n    }\n    return \"\";\n}\n1;", "    $a > 0 ? (int(sqrt($a))\
    \ ** 3 == $a) : 1;\n}", "    my $s = sqrt($a);\n    return sprintf(\"%.0f\", $s)\
    \ eq $s;\n}", "    if($a == 0){\n        return 1;\n    }\n    my $b = 0;\n  \
    \  while($b**3 < $a){\n        $b++;\n    }\n    if($b**3 == $a){\n        return\
    \ 1;\n    }\n    else{\n        return \"\";\n    }\n}", "    my $i;\n    my $c\
    \ = 0;\n    if ($a == 0) {\n        return 1;\n    }\n    if ($a > 0) {\n    \
    \    for ($i = 1; $i < $a; $i++) {\n            $c = $i * $i * $i;\n         \
    \   if ($c == $a) {\n                return 1;\n            }\n        }\n   \
    \ }\n    if ($a < 0) {\n        for ($i = -1; $i > $a; $i--) {\n            $c\
    \ = $i * $i * $i;\n            if ($c == $a) {\n                return 1;\n  \
    \          }\n        }\n    }\n    return \"\";\n}", "    if ($a < 0) {\n   \
    \     return \"\";\n    }\n    if ($a == 0) {\n        return 1;\n    }\n    foreach\
    \ my $i (1..$a) {\n        if ($i*$i*$i == $a) {\n            return 1;\n    \
    \    }\n    }\n    return \"\";\n}", "    my $value = int(cbrt($a));\n    if ($value\
    \ ** 3 == $a) {\n        return 1;\n    } else {\n        return \"\";\n    }\n\
    }", "    $a == int(abs($a) ** (1/3)) ** 3;\n}", "    return 1 if $a == 0;\n  \
    \  my $b = abs($a);\n    my $c = int(cbrt($b));\n    return $b == $c * $c * $c;\n\
    }", "    if ($a == 0 || $a == 1) {\n        return 1;\n    }\n    my $root = 0;\n\
    \    my $lower = 0;\n    my $upper = $a;\n    while ($lower <= $upper) {\n   \
    \     $root = ($lower + $upper) / 2;\n        if ($root ** 3 == $a) {\n      \
    \      return 1;\n        }\n        elsif ($root ** 3 < $a) {\n            $lower\
    \ = $root + 1;\n        }\n        else {\n            $upper = $root - 1;\n \
    \       }\n    }\n    return '';\n}", "    my $i;\n    for ($i = 1; $i*$i*$i <=\
    \ $a; $i++) {\n        if ($i*$i*$i == $a) {\n            return 1;\n        }\n\
    \    }\n    return '';\n}", "    my $c = int(exp(log($a)/3));\n    my $b = $c\
    \ * $c * $c;\n    return ($a == $b ? 1 : \"\");\n}", "    my$i;\n    for($i=0;$i<=$a;$i++){\n\
    \        if($i*$i*$i==$a){\n            return 1;\n        }\n    }\n    return\
    \ 0;\n}\nprint iscube(1), \"\\n\";\nprint iscube(2), \"\\n\";\nprint iscube(-1),\
    \ \"\\n\";\nprint iscube(64), \"\\n\";\nprint iscube(0), \"\\n\";\nprint iscube(180),\
    \ \"\\n\";"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

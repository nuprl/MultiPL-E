name: HumanEval_30_get_positive
language: pl
prompt: "# Return only positive numbers in the array.\n# >>> get_positive([-1, 2,\
  \ -4, 5, 6])\n# [2, 5, 6]\n# >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
  \ -10])\n# [5, 3, 2, 3, 9, 123, 1]\nsub get_positive {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&get_positive;\n\
  \        if(eq_deeply($candidate->([-1, -2, 4, 5, 6]),[4, 5, 6])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),[5, 3, 2, 3, 3, 9, 123, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1,\
  \ -2]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @positive = ();\n    for (@$l) {\n        push @positive, $_\
    \ if $_ > 0;\n    }\n    return @positive;\n}", "    my @positive = grep {$_ >\
    \ 0} @$l;\n    return @positive;\n}", "    return grep { $_ > 0 } @$l;\n}", " \
    \   return grep { $_ > 0 } @$l;\n}", "    my @s = grep $_ > 0, @$l;\n    return\
    \ @s;\n}", "    my @pos = ();\n    for (@$l) {\n        if ($_ > 0) {\n      \
    \      push @pos, $_;\n        }\n    }\n    return @pos;\n}", "    return grep\
    \ {$_ > 0} @$l;\n}", "    my @ll;\n    foreach my $el (@$l) {\n        push @ll,\
    \ $el if $el > 0;\n    }\n    return @ll;\n}", "    my @a = grep { $_ > 0 } @$l;\n\
    \    return \\@a;\n}", "    my $f = sub { return $_[0] > 0; };\n    return filter($f,\
    \ $l);\n}", "    my @positive = grep {$_ > 0} @$l;\n    return @positive;\n}",
  "    return grep { $_ > 0 } @$l;\n}", "    my @r = grep { $_ > 0 } @$l;\n    return\
    \ \\@r;\n}", "    my @a = ();\n    for my $n (@$l) {\n        if ($n > 0) {\n\
    \            push @a, $n;\n        }\n    }\n    return @a;\n}", "    my @p =\
    \ map { $_ > 0 ? $_ : () } @$l;\n    return \\@p;\n}", "    my @positive;\n  \
    \  foreach my $item (@$l) {\n        if ($item > 0) {\n            push @positive,\
    \ $item;\n        }\n    }\n    return @positive;\n}", "    return [grep { $_\
    \ > 0 } @$l];\n}", "    @$l = grep($_ > 0, @$l);\n    return $l;\n}", "    grep\
    \ { $_ > 0 } @$l;\n}", "    return grep { $_ > 0 } @$l;\n}", "    return [grep\
    \ { $_ > 0 } @$l];\n}", "    return [grep { $_ > 0 } @$l];\n}", "    return grep\
    \ {$_ > 0} @$l;\n}", "    my @p = ();\n    foreach(@$l) {\n        if ($_ > 0)\
    \ {\n            push @p, $_;\n        }\n    }\n    return @p;\n}", "    @$l\
    \ = grep { $_ > 0 } @$l;\n    return;\n}", "    my @a = ();\n    foreach my $e\
    \ (@$l) {\n        if ($e > 0) {\n            push @a, $e;\n        }\n    }\n\
    \    return @a;\n}", "    grep { $_ > 0 } @$l;\n}", "    return [grep { $_ > 0\
    \ } @$l];\n}", "    my @res = grep { $_ > 0 } @$l;\n    return @res;\n}", "  \
    \  my @result = ();\n    foreach my $item (@$l) {\n        if ($item > 0) {\n\
    \            push @result, $item;\n        }\n    }\n    return @result;\n}",
  "    my @ret;\n    foreach my $i (@$l) {\n        push @ret, $i if $i > 0;\n   \
    \ }\n    return @ret;\n}", "    return [grep $_ > 0, @$l];\n}", "    return filter\
    \ { $_ > 0 } @$l;\n}", "    my @positive = grep {$_ > 0} @$l;\n    return @positive;\n\
    }", "    my(@a);\n    foreach (@$l) {\n\tpush(@a, $_) if $_ > 0;\n    }\n    @a;\n\
    }", "    return [grep { $_ > 0 } @$l];\n}", "    return [grep { $_ > 0 } @$l];\n\
    }", "    my @r = ();\n    foreach(@$l) {\n        if ($_ > 0) {\n            push\
    \ @r, $_;\n        }\n    }\n    return @r;\n}", "    my @r = grep { $_ > 0 }\
    \ @$l;\n    return \\@r;\n}", "    my @s = ();\n    for(@$l) {\n        if($_\
    \ > 0) {\n            push @s, $_;\n        }\n    }\n    return @s;\n}", "  \
    \  my @out;\n    push @out, grep { $_ > 0 } @$l;\n    return @out;\n}", "    my(@pos)\
    \ = ();\n    foreach $e (@$l) {\n        if ($e > 0) {\n            push(@pos,\
    \ $e);\n        }\n    }\n    return @pos;\n}", "    my @result = ();\n    foreach\
    \ my $v (@$l) {\n        if($v > 0) {\n            push @result, $v;\n       \
    \ }\n    }\n    return @result;\n}", "    my $r = [];\n    for my $e (@$l) {\n\
    \        push @$r, $e if $e > 0;\n    }\n    return $r;\n}", "    my @new_l =\
    \ ();\n    my $sum = 0;\n    if ($sum >= 0) {\n        push @new_l, $sum;\n  \
    \  }\n    return @new_l;\n}", "    my $a = [];\n    for my $i (@$l) {\n      \
    \  push @$a, $i if $i > 0;\n    }\n    return $a;\n}", "    my $count = 0;\n \
    \   my @list = grep { ++$count % 2 } @$l;\n    return @list;\n}", "    return\
    \ [ grep { $_ > 0 } @$l ];\n}", "    return [grep { $_ > 0 } @$l];\n}", "    return\
    \ grep { $_ > 0 } @$l;\n}", "    my $f = sub { return ($_[0] > 0) ? 1 : 0; };\n\
    \    return filter($f, $l);\n}", "    my $r = [];\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push @$r, $x;\n        }\n    }\n    return\
    \ $r;\n}", "    my @result = grep { $_ > 0 } @$l;\n    return \\@result;\n}",
  "    my @p = ();\n    foreach (@$l) {\n        push @p, $_ if ($_ > 0);\n    }\n\
    \    @p;\n}", "    my @r = ();\n    for my $i (@$l) {\n        push @r, $i if\
    \ $i > 0;\n    }\n    return @r;\n}", "    return grep { $_ > 0 } @$l;\n}", " \
    \   my @p = ();\n    foreach (@$l) {\n        push @p, $_ if $_ > 0;\n    }\n\
    \    @p;\n}", "    my @array = grep $_ > 0, @$l;\n    return \\@array;\n}", " \
    \   my @positive;\n    foreach my $num (@$l) {\n        if ($num > 0) {\n    \
    \        push @positive, $num;\n        }\n    }\n    return @positive;\n}", " \
    \   my @pos = ();\n    foreach my $i (@$l) {\n        if ($i > 0) {\n        \
    \    push @pos, $i;\n        }\n    }\n    return @pos;\n}", "    return [ grep\
    \ { $_ > 0 } @$l ];\n}", "    my @new_list = grep { $_ > 0 } @$l;\n    return\
    \ @new_list;\n}", "    my @positive = ();\n    foreach(@$l) {\n        if ($_\
    \ > 0) {\n            push @positive, $_;\n        }\n    }\n    return @positive;\n\
    }", "    my @list = @$l;\n    my @pos = ();\n    foreach $i (@list) {\n      \
    \  if ($i > 0) {\n            push(@pos, $i);\n        }\n    }\n    return @pos;\n\
    }", "    my @out = ();\n    for my $x (@$l) {\n        if ($x > 0) {\n       \
    \     push @out, $x;\n        }\n    }\n    return \\@out;\n}", "    my @result\
    \ = ();\n    foreach my $v (@$l) {\n        if ($v > 0) {\n            push @result,\
    \ $v;\n        }\n    }\n    return @result;\n}", "    my $ret = [];\n    foreach\
    \ my $i (@$l) {\n        push @$ret, $i if $i > 0;\n    }\n    return $ret;\n}",
  "    my @positive;\n    foreach my $num (@$l) {\n        if ($num > 0) {\n     \
    \       push @positive, $num;\n        }\n    }\n    return @positive;\n}", " \
    \   my $r = [];\n    foreach my $i (@$l) {\n        if ($i > 0) {\n          \
    \  push @$r, $i;\n        }\n    }\n    return $r;\n}", "    my @pos = ();\n \
    \   for my $i (@$l) {\n        if ($i > 0) {\n            push @pos, $i;\n   \
    \     }\n    }\n    return @pos;\n}", "    my $func = sub {$_[0] > 0};\n    return\
    \ filter($func, $l);\n}", "    my @pos = grep { $_ > 0 } @$l;\n    return \\@pos;\n\
    }", "    my @result = grep { $_ > 0 } @$l;\n    \\@result;\n}", "    my @ret;\n\
    \    for(@$l) {\n        push @ret, $_ if $_ > 0;\n    }\n    return @ret;\n}",
  "    @positive = ();\n    foreach $i(@$l) {\n        if ($i > 0) {\n           \
    \ push @positive, $i;\n        }\n    }\n    return \\@positive;\n}", "    return\
    \ grep( $_ > 0, @$l );\n}", "    return grep { $_ > 0 } @$l;\n}", "    return\
    \ [grep $_ >= 0, @$l];\n}", "    my @ret = ();\n    for my $i (@$l) {\n      \
    \  if ($i > 0) {\n            push @ret, $i;\n        }\n    }\n    return @ret;\n\
    }", "    return [ grep { $_ > 0 } @$l ];\n}", "    my @l = @$l;\n    my @p;\n\
    \    my $e;\n    while($e = shift @l) {\n        push @p, $e if $e > 0;\n    }\n\
    \    return @p;\n}", "    [grep { $_ > 0 } @$l];\n}", "    return [grep { $_ >\
    \ 0 } @$l];\n}", "    grep {$_ > 0} @$l;\n}", "    my @positives = grep {$_ >\
    \ 0} @$l;\n    return @positives;\n}", "    my @ret;\n    @ret = grep { $_ > 0\
    \ } @$l;\n    return \\@ret;\n}", "    my @positive = ();\n    for my $i (@$l)\
    \ {\n        if ($i > 0) {\n            push @positive, $i;\n        }\n    }\n\
    \    return @positive;\n}", "    my @result = ();\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push @result, $x;\n        }\n    }\n    return\
    \ @result;\n}", "    my @list = @$l;\n    return [grep {$_ > 0} @list];\n}", " \
    \   my @p = ();\n    for(@$l) {\n        if ($_ > 0) {\n            push @p, $_;\n\
    \        }\n    }\n    return @p;\n}", "    my @ret;\n    for (@$l) {\n      \
    \  push @ret, $_ if $_ > 0;\n    }\n    return @ret;\n}", "    grep { $_ > 0 }\
    \ @$l;\n}", "    my @pos;\n    while (my $x = $l->pop()) {\n        if ($x > 0)\
    \ {\n            push @pos, $x;\n        }\n    }\n    @pos;\n}", "    my @positive\
    \ = ();\n    for my $i (@$l) {\n        if ($i > 0) {\n            push @positive,\
    \ $i;\n        }\n    }\n    return @positive;\n}", "    my @o;\n    foreach my\
    \ $i(@$l) {\n        if($i > 0) {\n            push @o, $i;\n        }\n    }\n\
    \    return @o;\n}", "    return (grep { $_ > 0 } @$l);\n}", "    my @r = ();\n\
    \    foreach my $i (@$l) {\n        if ($i > 0) {\n            push @r, $i;\n\
    \        }\n    }\n    return @r;\n}", "    my @result = ();\n    for my $i (@$l)\
    \ {\n        if ($i > 0) {\n            push @result, $i;\n        }\n    }\n\
    \    return @result;\n}", "    my @result = ();\n    for my $e (@$l) {\n     \
    \   if ($e > 0) {\n            push @result, $e;\n        }\n    }\n    return\
    \ @result;\n}", "    my @positive = ();\n    for my $item (@$l) {\n        if($item\
    \ > 0) {\n            push @positive, $item;\n        }\n    }\n    return @positive;\n\
    }", "    my @positive = ();\n    for my $item(@$l) {\n        if($item > 0) {\n\
    \            push @positive, $item;\n        }\n    }\n    return @positive;\n\
    }", "    return grep { $_ > 0 } @$l;\n}", "    return grep { $_ > 0 } @$l;\n}",
  "    return [grep { $_ > 0 } @$l];\n}", "    my @pos = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push @pos, $x;\n        }\n    }\n   \
    \ return @pos;\n}", "    my @positive;\n    my $k;\n    while(@$l){\n        $k\
    \ = shift @$l;\n        push @positive, $k if $k > 0;\n    }\n    return @positive;\n\
    }", "    my @ret;\n    for (@$l) {\n        push @ret, $_ if $_ > 0;\n    }\n\
    \    return @ret;\n}", "    return grep { $_ > 0 } @$l;\n}", "    my $f = sub\
    \ { $_[0] > 0 };\n    filter($f, $l);\n}", "    return grep { $_ > 0 } @$l;\n}",
  "    return grep { $_ > 0 } @$l;\n}", "    return grep { $_ > 0 } @$l;\n}", "  \
    \  my @m = ();\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] >\
    \ 0) {\n            push @m, $l->[$i];\n        }\n    }\n    return @m;\n}",
  "    return [grep { $_ > 0 } @$l];\n}", "    return grep {$_ > 0} @$l;\n}", "  \
    \  my $r = [];\n    foreach my $elem (@$l) {\n        if ($elem > 0) {\n     \
    \       push @$r, $elem;\n        }\n    }\n    return $r;\n}", "    my @positives\
    \ = grep { $_ > 0 } @$l;\n    return @positives;\n}", "    my @ret = ();\n   \
    \ foreach(@$l) {\n        if($_ > 0) {\n            push(@ret, $_);\n        }\n\
    \    }\n    return @ret;\n}", "    [grep { $_ > 0 } @$l];\n}", "    my @p;\n \
    \   for (@$l) {\n        push @p, $_ if $_ > 0;\n    }\n    return @p;\n}", " \
    \   my @temp = grep { $_ > 0 } @$l;\n    return \\@temp;\n}", "    [grep { $_\
    \ > 0 } @$l];\n}", "    my @pos = grep {$_ > 0} @$l;\n    return @pos;\n}", " \
    \   my $r = [];\n    foreach (@$l) {\n        push @$r, $_ if $_ > 0;\n    }\n\
    \    return $r;\n}", "    return [grep { $_ > 0 } @$l];\n}", "    return [ grep\
    \ { $_ > 0 } @$l ];\n}", "    my @positive = grep { $_ > 0 } @$l;\n    return\
    \ @positive;\n}", "    my @positive;\n    for(@$l) {\n        push @positive,\
    \ $_ if $_ > 0;\n    }\n    return @positive;\n}", "    my @positive;\n    for\
    \ (@$l) {\n        push @positive, $_ if $_ > 0;\n    }\n    return @positive;\n\
    }", "    my @m = grep( $_ > 0, @$l );\n    return @m;\n}", "    my $res = [grep($_\
    \ > 0, @$l)];\n    return $res;\n}", "    my(@r);\n    @r = grep { $_ > 0 } @$l;\n\
    \    return @r;\n}", "    return [ grep { $_ > 0 } @$l ];\n}", "    my @ans =\
    \ ();\n    for (@$l) {\n        push @ans, $_ if $_ > 0;\n    }\n    return @ans;\n\
    }", "    return [ grep { $_ > 0 } @$l ];\n}", "    my @positive = grep($_ > 0,\
    \ @$l);\n    return \\@positive;\n}", "    my @res = ();\n    for my $e (@$l)\
    \ {\n        if ($e > 0) {\n            push @res, $e;\n        }\n    }\n   \
    \ return @res;\n}", "    my @new_list = grep {$_ > 0} @$l;\n    return @new_list;\n\
    }\n1;", "    my @res = grep { $_ > 0 } @$l;\n    return @res;\n}", "    my @r\
    \ = ();\n    foreach my $e (@$l) {\n        if ($e > 0) {\n            push @r,\
    \ $e;\n        }\n    }\n    return @r;\n}", "    my @result = grep { $_ > 0 }\
    \ @$l;\n    return \\@result;\n}", "    my @l = @$l;\n    my @return_list = ();\n\
    \    for my $i (@l) {\n        if ($i > 0) {\n            push @return_list, $i;\n\
    \        }\n    }\n    return @return_list;\n}", "    my @positives = grep $_\
    \ > 0, @$l;\n    return \\@positives;\n}", "    return [grep { $_ > 0 } @$l];\n\
    }", "    my $res = [\n        grep { $_ > 0 } @$l\n    ];\n    return $res;\n}",
  "    my @answer = ();\n    for my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push @answer, $x;\n        }\n    }\n    return \\@answer;\n}", "    my @return\
    \ = ();\n    for (@$l) {\n        if ($_ > 0) {\n            push @return, $_;\n\
    \        }\n    }\n    return @return;\n}", "    my @result = ();\n    for my\
    \ $elem (@$l) {\n        if ($elem > 0) {\n            push @result, $elem;\n\
    \        }\n    }\n    return @result;\n}", "    my @result = ();\n    my $ele;\n\
    \    foreach $ele (@$l) {\n        if ($ele > 0) {\n            push @result,\
    \ $ele;\n        }\n    }\n    return @result;\n}", "    my @out;\n    for (@$l)\
    \ {\n        push @out, $_ if $_ > 0;\n    }\n    return @out;\n}", "    my @result\
    \ = grep {$_ > 0} @$l;\n    return \\@result;\n}", "    my @result = grep { $_\
    \ > 0 } @$l;\n    return \\@result;\n}", "    my @r = ();\n    while(@$l) {\n\
    \        my $e = shift @$l;\n        if($e > 0) {\n            push @r, $e;\n\
    \        }\n    }\n    return @r;\n}", "    my(@p) = grep {$_ > 0} @$l;\n    return\
    \ @p;\n}", "    my $i = 0;\n    while ($i < @$l) {\n        if ($l->[$i] < 0)\
    \ {\n            splice(@$l, $i, 1);\n        } else {\n            $i++;\n  \
    \      }\n    }\n    return $l;\n}", "    @{$l} = grep { $_ > 0 } @{$l};\n   \
    \ return $l;\n}", "    return grep {$_ > 0} @$l;\n}", "    my @a = ();\n    for\
    \ my $e (@$l) {\n        if ($e > 0) {\n            push @a, $e;\n        }\n\
    \    }\n    return @a;\n}", "    my @positive = grep { $_ > 0 } @$l;\n    return\
    \ @positive;\n}", "    my @ans = grep {$_ > 0} @$l;\n    return \\@ans;\n}", " \
    \   return [ grep { $_ > 0 } @$l ];\n}", "    my(@l, $i);\n    foreach $i (@$l)\
    \ {\n\tif ($i > 0) {\n\t    push(@l, $i);\n\t}\n    }\n    return @l;\n}", " \
    \   my $r = [];\n    for my $x (@$l) {\n        push @$r, $x if $x > 0;\n    }\n\
    \    return $r;\n}", "    my @r = grep {$_ > 0} @$l;\n    return \\@r;\n}", " \
    \   my @r = ();\n    foreach (@$l) {\n        if ($_ > 0) {\n            push\
    \ @r, $_;\n        }\n    }\n    return @r;\n}", "    my @ans = grep { $_ > 0\
    \ } @$l;\n    return \\@ans;\n}", "    my @positives = grep {\n        $_ > 0\n\
    \    } @$l;\n    return @positives;\n}", "    return [grep { $_ > 0 } @$l];\n}",
  "    return [grep { $_ > 0 } @$l];\n}", "    my @r = ();\n    foreach (@$l) {\n\
    \        push @r, $_ if $_ > 0;\n    }\n    return @r;\n}", "    my @ret;\n  \
    \  for my $i (@$l) {\n        if ($i > 0) {\n            push @ret, $i;\n    \
    \    }\n    }\n    return @ret;\n}", "    my @result = ();\n    foreach my $i\
    \ (@$l) {\n        if ($i > 0) {\n            push @result, $i;\n        }\n \
    \   }\n    return @result;\n}", "    return map { $_ > 0 ? $_ : () } @$l;\n}",
  "    my @res = ();\n    for(@$l) {\n        if($_ > 0) {\n            push @res,\
    \ $_;\n        }\n    }\n    return @res;\n}", "    my @positives = grep { $_\
    \ > 0 } @$l;\n    return @positives;\n}", "    my $f = sub {$_[0] > 0};\n    @$l\
    \ = grep $f->($_), @$l;\n    return $l;\n}", "    my @ret;\n    for my $n (@$l)\
    \ {\n        push @ret, $n if $n > 0;\n    }\n    return @ret;\n}", "    return\
    \ grep {$_ > 0} @$l;\n}", "    return map {$_ > 0 ? $_ : ()} @$l;\n}", "    my\
    \ @result = grep { $_ > 0 } @$l;\n    return @result;\n}", "    return grep {\
    \ $_ > 0 } @$l;\n}", "    return [grep { $_ > 0 } @$l];\n}", "    my @list;\n\
    \    for (@$l) {\n        if ($_ > 0) {\n            push @list, $_;\n       \
    \ }\n    }\n    return @list;\n}", "    my $r = [];\n    foreach(@$l) {\n    \
    \    if($_ > 0) {\n            push(@$r, $_);\n        }\n    }\n    return $r;\n\
    }", "    grep {$_ > 0} @$l;\n}", "    return [ grep { $_ > 0 } @$l ];\n}", " \
    \   my @res = ();\n    foreach my $v (@$l) {\n        if ($v > 0) {\n        \
    \    push @res, $v;\n        }\n    }\n    return @res;\n}", "    my $r = [];\n\
    \    for my $i (@$l) {\n        if ($i > 0) {\n            push @$r, $i;\n   \
    \     }\n    }\n    return $r;\n}", "    return [grep { $_ > 0 } @$l];\n}", " \
    \   my @l1 = grep {$_ > 0} @$l;\n    return @l1;\n}", "    my @a = ();\n    foreach\
    \ my $e (@$l) {\n        if ($e > 0) {\n            push @a, $e;\n        }\n\
    \    }\n    return @a;\n}", "    my @result = grep { $_ > 0 } @$l;\n    return\
    \ \\@result;\n}", "    my @l = @$l;\n    my @p;\n    foreach my $x (@l) {\n  \
    \      if ($x > 0) {\n            push @p, $x;\n        }\n    }\n    return @p;\n\
    }", "    my @result = grep { $_ > 0 } @$l;\n    \\@result;\n}", "    my @pos;\n\
    \    for my $e (@$l) {\n        push @pos, $e if $e > 0;\n    }\n    return @pos;\n\
    }", "    return List::Util::grep { $_ > 0 } @$l;\n}", "    return [ grep { $_\
    \ > 0 } @$l ];\n}", "    my @ret;\n    for my $i (@$l) {\n        push @ret, $i\
    \ if $i > 0;\n    }\n    return @ret;\n}", "    my @pos;\n    for(@$l) {\n   \
    \     push @pos, $_ if $_ > 0;\n    }\n    return @pos;\n}", "    my @out = ();\n\
    \    for my $v (@$l) {\n        if ($v > 0) {\n            push @out, $v;\n  \
    \      }\n    }\n    return \\@out;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

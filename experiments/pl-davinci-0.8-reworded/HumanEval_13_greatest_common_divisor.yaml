name: HumanEval_13_greatest_common_divisor
language: pl
prompt: "# Return a greatest common divisor of two integers a and b\n# >>> greatest_common_divisor(3,\
  \ 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n# 5\nsub greatest_common_divisor\
  \ {\n    my($a, $b) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&greatest_common_divisor;\n\
  \        if(eq_deeply($candidate->(3, 7),1)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(10, 15),5)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(49,\
  \ 14),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(144,\
  \ 60),12)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return $a if $b == 0;\n    return $b if $a == 0;\n    return greatest_common_divisor($b,\
    \ $a % $b);\n}", "    while ($b != 0) {\n        ($a, $b) = ($b, $a % $b);\n \
    \   }\n    return $a;\n}", "    ($a, $b) = ($b, $a) if $a > $b;\n    return $a\
    \ if $b % $a == 0;\n    return greatest_common_divisor($b % $a, $a);\n}", "  \
    \  my($a_val, $b_val) = ($a, $b);\n    my($x, $y) = (1, 0);\n    my($last_x, $last_y)\
    \ = (0, 1);\n    my($quotient, $remainder);\n    while ($b_val) {\n        $quotient\
    \ = int($a_val / $b_val);\n        $remainder = $a_val % $b_val;\n        $a_val\
    \ = $b_val;\n        $b_val = $remainder;\n        ($x, $last_x) = ($last_x -\
    \ $quotient * $x, $x);\n        ($y, $last_y) = ($last_y - $quotient * $y, $y);\n\
    \    }\n    return $a_val;\n}", "    ($a, $b) = ($b, $a) if $a > $b;\n    while\
    \ ($a > 0) {\n        ($a, $b) = ($b % $a, $a);\n    }\n    return $b;\n}", " \
    \   while ($b != 0) {\n        my $t = $b;\n        $b = $a % $b;\n        $a\
    \ = $t;\n    }\n    return $a;\n}", "    my $r;\n    while ($b != 0) {\n     \
    \   $r = $a % $b;\n        $a = $b;\n        $b = $r;\n    }\n    return $a;\n\
    }", "    ($a, $b) = ($b, $a) if $a > $b;\n    while ($a) {\n        ($a, $b) =\
    \ ($b % $a, $a);\n    }\n    return $b;\n}", "    while($b != 0) {\n        my\
    \ $t = $b;\n        $b = $a % $b;\n        $a = $t;\n    }\n    return $a;\n}",
  "    $a = abs($a);\n    $b = abs($b);\n    ($a, $b) = ($b, $a) if $a < $b;\n   \
    \ while ($b) {\n        my $rem = $a % $b;\n        ($a, $b) = ($b, $rem);\n \
    \   }\n    return $a;\n}", "    while ($b) {\n        my $t = $b;\n        $b\
    \ = $a % $b;\n        $a = $t;\n    }\n    return $a;\n}", "    return $a if $b\
    \ == 0;\n    return $b if $a == 0;\n    return &greatest_common_divisor($b, $a\
    \ % $b);\n}", "    my $m = $a % $b;\n    return $b if $m == 0;\n    greatest_common_divisor($b,\
    \ $m);\n}", "    while ($b != 0) {\n        ($a, $b) = ($b, $a % $b);\n    }\n\
    \    return $a;\n}", "    ($a, $b) = ($b, $a) if $a > $b;\n    return $a if $b\
    \ % $a == 0;\n    return greatest_common_divisor($b % $a, $a);\n}", "    if ($a\
    \ < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    return $b if ($a == $b);\n\
    \    my $c = $a % $b;\n    if ($c == 0) {\n        return $b;\n    } else {\n\
    \        return greatest_common_divisor($b, $c);\n    }\n}", "    return $a unless\
    \ $b;\n    return $b unless $a;\n    return greatest_common_divisor($b, $a % $b);\n\
    }", "    while($b != 0) {\n        my $t = $b;\n        $b = $a % $b;\n      \
    \  $a = $t;\n    }\n    return $a;\n}", "    my $i;\n    my $gcd = 1;\n    for\
    \ ($i = 2; $i <= $a; $i++) {\n        last if $a % $i;\n        last if $b % $i;\n\
    \        $gcd = $i;\n    }\n    return $gcd;\n}", "    while($b != 0) {\n    \
    \    my $tmp = $b;\n        $b = $a % $b;\n        $a = $tmp;\n    }\n    return\
    \ $a;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

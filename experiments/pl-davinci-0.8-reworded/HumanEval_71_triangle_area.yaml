name: HumanEval_71_triangle_area
language: pl
prompt: "# Given the lengths of the three sides of a triangle. Return the area of\n\
  # the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n# Otherwise return -1\n# Three sides make a valid triangle when the sum of any\
  \ two sides is greater \n# than the third side.\n# Example:\n# >>> triangle_area(3,\
  \ 4, 5)\n# 6.0\n# >>> triangle_area(1, 2, 10)\n# -1\nsub triangle_area {\n    my($a,\
  \ $b, $c) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triangle_area;\n\
  \        if(eq_deeply($candidate->(3, 4, 5),6.0)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2, 10),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4,\
  \ 8, 5),8.18)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(2, 2, 2),1.73)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2, 3),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 5, 7),16.25)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(2, 6, 3),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 1, 1),0.43)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2,\
  \ 2, 10),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\n\
  testhumaneval();"
completions: ["    my $area = (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a))\
    \ ?\n    (($a + $b + $c) / 2) : -1;\n    return sprintf \"%.2f\", $area;\n}",
  "    my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return ($a + $b > $c && $a + $c > $b && $b + $c > $a) ? $area\
    \ : -1;\n}", "    my $area = 0;\n    my $s = ($a + $b + $c) / 2;", "    return\
    \ -1 if $a <= 0 or $b <= 0 or $c <= 0;\n    return -1 if $a + $b <= $c or $a +\
    \ $c <= $b or $b + $c <= $a;\n    my $s = ($a + $b + $c) / 2;\n    my $area =\
    \ sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return sprintf(\"%.2f\",\
    \ $area);\n}", "    return -1 if ($a + $b <= $c) || ($a + $c <= $b) || ($b + $c\
    \ <= $a);\n    my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n}", "    my $s = ($a + $b + $c) / 2;\n    # Use Heron's\
    \ formula to calculate the area.\n    # The area is 0 if a==b==c\n    return sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)) || 0;\n}", "    my $max = _max($a, $b,\
    \ $c);\n    my $sum = $a + $b + $c;\n    return -1 if $sum - $max <= $max;\n \
    \   my $s = ($sum - $max) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return sprintf('%.2f', $area);\n}", "    # TODO: check that\
    \ $a, $b, $c make a valid triangle\n    # TODO: return area of triangle, rounded\
    \ to 2 decimal points\n}", "    if ( $a+$b > $c and $a+$c > $b and $b+$c > $a\
    \ ) {\n        my $s = ($a+$b+$c)/2;\n        return sqrt($s*($s-$a)*($s-$b)*($s-$c));\n\
    \    }\n    return -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    my $area = ($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)) ** (1/2);\n    return sprintf(\"%.2f\"\
    , $area);\n}", "    return -1 if !($a + $b > $c && $a + $c > $b && $b + $c > $a);\n\
    \    my $p = ($a + $b + $c) / 2;\n    return sqrt($p * ($p - $a) * ($p - $b) *\
    \ ($p - $c));\n}", "    if ( $a + $b > $c && $a + $c > $b && $b + $c > $a ) {\n\
    \        my $p = ($a + $b + $c) / 2;\n        return sprintf('%.2f', sqrt($p *\
    \ ($p - $a) * ($p - $b) * ($p - $c)));\n    }\n    return -1;\n}", "    return\
    \ -1 if $a + $b <= $c || $a + $c <= $b || $b + $c <= $a;\n    my $p = ($a + $b\
    \ + $c) / 2;\n    return sprintf(\"%.2f\", sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c)));\n}", "    my $s = ($a + $b + $c) / 2;\n    return -1 if ($s <= $a ||\
    \ $s <= $b || $s <= $c);\n    sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}",
  "    $a + $b > $c && $a + $c > $b && $b + $c > $a\n        ? sprintf(\"%.2f\", $a\
    \ * $b / 2)\n        : -1;\n}", "    # Write your code here\n    my $ret = -1;\n\
    \    if(($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)){\n        my $s =\
    \ ($a + $b + $c)/2;\n        $ret = sqrt($s*($s-$a)*($s-$b)*($s-$c));\n    }\n\
    \    return $ret;\n}", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a)\
    \ {\n        my $s = ($a + $b + $c) / 2;\n        return sprintf \"%.2f\", sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return -1;\n}", "    return\
    \ -1 if(($a + $b <= $c) || ($a + $c <= $b) || ($b + $c <= $a));\n    my $p = ($a\
    \ + $b + $c) / 2;\n    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n}",
  "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        my $s = ($a +\
    \ $b + $c) / 2;\n        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    } else {\n        return -1;\n    }\n}", "    # TODO: implement me!\n   \
    \ return -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    return ($s - $a) * ($s\
    \ - $b) * ($s - $c) > 0 ? sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)) : -1;\n\
    }", "    return -1 if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a);\n   \
    \ my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return sprintf(\"%.2f\", $area);\n}", "    return -1 if $a\
    \ + $b <= $c || $a + $c <= $b || $b + $c <= $a;\n    my $s = ($a + $b + $c) /\
    \ 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}", "    if (\
    \ ( $a + $b <= $c ) || ( $a + $c <= $b ) || ( $b + $c <= $a ) ) {\n        return\
    \ -1;\n    }\n    my $s = ($a + $b + $c) / 2;\n    return sprintf(\"%.2f\", sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)));\n}", "    my $s = ($a + $b + $c) / 2;\n\
    \    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area\
    \ > 0 ? sprintf(\"%.2f\", $area) : -1;\n}", "    return -1 if $a <= 0 || $b <=\
    \ 0 || $c <= 0;\n    return -1 if $a + $b <= $c || $a + $c <= $b || $b + $c <=\
    \ $a;\n    my $p = ($a + $b + $c) / 2;\n    return sqrt($p * ($p - $a) * ($p -\
    \ $b) * ($p - $c));\n}", "    my $p = ($a + $b + $c) / 2;\n    my $d = $p * ($p\
    \ - $a) * ($p - $b) * ($p - $c);\n    return $d > 0 ? sqrt($d) : -1;\n}", "  \
    \  my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return $area;\n}", "    return -1 if ($a + $b <= $c || $a\
    \ + $c <= $b || $b + $c <= $a);\n    return ($a + $b + $c) / 2;\n}", "    my $area\
    \ = -1;\n    my $s = ($a + $b + $c) / 2;\n    if ($s >= $a && $s >= $b && $s >=\
    \ $c) {\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n\
    \    return $area;\n}", "    #TODO: return -1 if three sides cannot form a valid\
    \ triangle\n    if (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n  \
    \      #TODO: return area of the triangle, rounded to 2 decimal points\n     \
    \   my $s = ($a + $b + $c) / 2;\n        my $area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n        return $area;\n    } else {\n        return -1;\n\
    \    }\n}", "    if ($a+$b>$c && $a+$c>$b && $b+$c>$a) {\n        return sprintf\
    \ \"%.2f\", sqrt((($a+$b+$c)/2)*(($a+$b+$c)/2- $a)*(($a+$b+$c)/2- $b)*(($a+$b+$c)/2-\
    \ $c));\n    } else {\n        return -1;\n    }\n}", "    my $s = ($a + $b +\
    \ $c) / 2;\n    if($s - $a > 0 && $s - $b > 0 && $s - $c > 0) {\n        return\
    \ sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return -1;\n}", " \
    \   return -1 if $a + $b <= $c;\n    return -1 if $a + $c <= $b;\n    return -1\
    \ if $b + $c <= $a;\n    return sprintf(\"%.2f\", 0.5 * $a * $b);\n}", "    #\
    \ add code here\n    if (($a+$b>$c) && ($a+$c>$b) && ($b+$c>$a)) {\n    \tmy $p\
    \ = ($a+$b+$c)/2;\n    \tmy $area = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n    \t\
    return sprintf(\"%.2f\", $area);\n    }\n    else {\n    \treturn -1;\n    }\n\
    }", "    my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n    if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a)\
    \ {\n        return -1;\n    }\n    return sprintf(\"%.2f\", $area);\n}", "  \
    \  if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n        return -1;\n\
    \    }\n    else {\n        my $p = ($a + $b + $c) / 2;\n        return sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n    }\n}", "    my $p = ($a + $b + $c)\
    \ / 2;\n    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n}", "    my\
    \ $s = 0.5 * ($a + $b + $c);\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n}", "    return -1 if($a + $b <= $c);\n    return -1 if($a + $c <=\
    \ $b);\n    return -1 if($b + $c <= $a);\n    return -1 if($a <= 0 || $b <= 0\
    \ || $c <= 0);\n    return ($a * $b)/2;\n}", "    my $s = ($a + $b + $c) / 2;\n\
    \    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area\
    \ if $area > 0;\n    return -1;\n}", "    return ($a + $b > $c && $a + $c > $b\
    \ && $b + $c > $a) ?\n        sprintf('%.2f', sqrt((($a + $b + $c) / 2) * (($a\
    \ + $b + $c) / 2 - $a) *\n            (($a + $b + $c) / 2 - $b) * (($a + $b +\
    \ $c) / 2 - $c))) : -1;\n}", "    # Only for triangles with positive sides.\n\
    \    return -1 if ($a <= 0 or $b <= 0 or $c <= 0);\n    my $s = ($a + $b + $c)\
    \ / 2;\n    return sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n\
    }", "    return -1 if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a);\n   \
    \ my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n}", "    if (\n\t   (    $a + $b > $c \n\t    && $a + $c > $b \n\t\
    \    && $b + $c > $a)\n       ) {\n\t   my $s = ($a + $b + $c) / 2;\n\t   my $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t   return sprintf(\"%.2f\"\
    , $area);\n    }\n    return -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    my\
    \ $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if (($area) && ($a\
    \ < $b + $c) && ($b < $a + $c) && ($c < $a + $b)) {\n        return $area;\n \
    \   }\n    else {\n        return -1;\n    }\n}", "    if ($a + $b > $c) {\n \
    \       return sqrt(($a + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a +\
    \ $b + $c)) / 4;\n    } else {\n        return -1;\n    }\n}", '    my $s = ($a
    + $b + $c) / 2;', '    my $area = -1;', '    # Your code here', "    # Do your\
    \ stuff here\n    return (-1);\n}", "    my $s = ($a + $b + $c) / 2;\n    return\
    \ -1 if $s <= $a or $s <= $b or $s <= $c;\n    return sprintf(\"%.2f\", sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)));\n}", "    if ($a+$b > $c && $a+$c > $b\
    \ && $b+$c > $a) {\n        my $s = ($a+$b+$c)/2;\n        return sprintf(\"%.2f\"\
    , sqrt($s*($s-$a)*($s-$b)*($s-$c)));\n    }\n    return -1;\n}", "    my $s =\
    \ ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s -\
    \ $c));\n    return -1 if $area <= 0;\n    return sprintf(\"%.2f\", $area);\n}",
  "    return 0.5 * $a * $b if $a + $b > $c;\n    return 0.5 * $a * $c if $a + $c\
    \ > $b;\n    return 0.5 * $b * $c if $b + $c > $a;\n    return -1;\n}", "    if\
    \ ($a + $b > $c and $a + $c > $b and $b + $c > $a) {\n        my $s = ($a + $b\
    \ + $c) / 2;\n        return (sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n\
    \    }\n    return -1;\n}", "    my $result = -1;\n    if ($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) {\n        my $p = ($a + $b + $c) / 2;\n        $result\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    }\n    return $result;\n\
    }", "    my $s = ($a + $b + $c) / 2;\n    return -1 if $s <= $a || $s <= $b ||\
    \ $s <= $c;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}", " \
    \   if ($a < $b + $c && $b < $a + $c && $c < $a + $b) {\n        my $s = ($a +\
    \ $b + $c) / 2;\n        return sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c)));\n    }\n    return -1;\n}", "    if ($a + $b > $c && $a +\
    \ $c > $b && $b + $c > $a) {\n        # Use Heron's formula to calculate area\n\
    \        my $s = ($a + $b + $c) / 2;\n        return (sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)));\n    }\n    return -1;\n}", "    my $s = ($a + $b + $c)\
    \ / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return sprintf(\"%.2f\"\
    , $area);\n    } else {\n        return -1;\n    }\n}", "    if (($a + $b > $c)\
    \ && ($a + $c > $b) && ($b + $c > $a)) {\n        my $p = ($a + $b + $c) / 2;\n\
    \        return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    }\n    return\
    \ -1;\n}", "    if ( \n        $a + $b <= $c or\n        $a + $c <= $b or\n  \
    \      $b + $c <= $a ) {\n        return -1;\n    }\n    my $s = ($a + $b + $c)\
    \ / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}", '    my
    $triangle_area = -1;', "    return -1 if $a+$b <= $c;\n    return -1 if $a+$c\
    \ <= $b;\n    return -1 if $b+$c <= $a;\n    my $s = ($a+$b+$c)/2;\n    my $area\
    \ = sqrt($s*($s-$a)*($s-$b)*($s-$c));\n    return sprintf('%.2f', $area);\n}",
  "    return -1 if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a);\n    return\
    \ sprintf(\"%.2f\", sqrt(($a + $b + $c) * (-$a + $b + $c) * ($a - $b + $c) * ($a\
    \ + $b - $c)) / 4);\n}", "    return -1 if ($a + $b < $c || $a + $c < $b || $b\
    \ + $c < $a);\n    return (($a + $b + $c) / 2 - $a) * (($a + $b + $c) / 2 - $b)\
    \ * (($a + $b + $c) / 2 - $c) ** 0.5;\n}", "    my $s = ($a + $b + $c) / 2;\n\
    \    if ($s > $a && $s > $b && $s > $c) {\n        return sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n    }\n    return -1;\n}", "    return -1 if ($a\
    \ + $b < $c) || ($a + $c < $b) || ($b + $c < $a);\n    my $p = ($a + $b + $c)\
    \ / 2;\n    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n}", "    if\
    \ ( $a + $b > $c && $a + $c > $b && $b + $c > $a ) {\n        my $s = ( $a + $b\
    \ + $c ) / 2;\n        return sqrt( $s * ( $s - $a ) * ( $s - $b ) * ( $s - $c\
    \ ) );\n    }\n    return -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    return\
    \ ($s - $a) * ($s - $b) * ($s - $c) > 0 ? sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)) : -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n}", "    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        my $p = ($a + $b + $c) / 2;\n        return sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n    } else {\n        return -1;\n  \
    \  }\n}", "    if (is_triangle($a, $b, $c)) {\n        my $s = ($a + $b + $c)\
    \ / 2;\n        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n\
    \    return -1;\n}", "    if (check_triangle($a, $b, $c)) {\n        my $s = ($a\
    \ + $b + $c) / 2;\n        return sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)));\n    }\n    return -1;\n}", "    return -1 if ($a < 0 ||\
    \ $b < 0 || $c < 0);\n    return -1 if ($a+$b <= $c || $a+$c <= $b || $b+$c <=\
    \ $a);\n    my $s = ($a+$b+$c)/2;\n    return sqrt($s*($s-$a)*($s-$b)*($s-$c));\n\
    }", "    my $s = ($a + $b + $c) / 2;\n    return $s * ($s - $a) * ($s - $b) *\
    \ ($s - $c) > 0 ? sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)) : -1;\n}", "  \
    \  if (($a+$b)>$c && ($a+$c)>$b && ($b+$c)>$a) {\n        return (($a+$b+$c)/2)\
    \ * sqrt(($a+$b+$c)/2*(($a+$b+$c)/2-$a)*(($a+$b+$c)/2-$b)*(($a+$b+$c)/2-$c));\n\
    \    } else {\n        return -1;\n    }\n}", "    my $s = ($a + $b + $c) / 2;\n\
    \    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}", "    my $s = ($a\
    \ + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}",
  "    return -1 if $a + $b <= $c || $a + $c <= $b || $b + $c <= $a;\n    my $s =\
    \ ($a + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    }", "    my $result = -1;\n    if($a + $b > $c && $a + $c > $b && $b + $c > $a)\
    \ {\n        my $p = ($a + $b + $c) / 2;\n        $result = sqrt($p * ($p - $a)\
    \ * ($p - $b) * ($p - $c));\n    }\n    return $result;\n}", "    my $s = ($a\
    \ + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}",
  "    return -1 if $a + $b <= $c;\n    return -1 if $a + $c <= $b;\n    return -1\
    \ if $b + $c <= $a;\n    my $s = ($a + $b + $c) / 2;\n    return sprintf(\"%.2f\"\
    , sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n}", "    # my $area = sqrt(\
    \ ($a + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * ($b + $c - $a) ) / 4;\n \
    \   my $area = ($a * $b * $c) / ( (sqrt(2 * $a**2 * $b**2 + 2 * $b**2 * $c**2\
    \ + 2 * $c**2 * $a**2 - $a**4 - $b**4 - $c**4) + $a**2 + $b**2 + $c**2) / 4);\n\
    \    return $area;\n}", "    return -1 if ($a + $b <= $c || $a + $c <= $b || $b\
    \ + $c <= $a);\n    return ($a + $b + $c) / 2;\n}", "    if ($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) {\n        return 1/2 * sqrt(($a + $b + $c) * ($a\
    \ + $b - $c) * ($a - $b + $c) * (-$a + $b + $c));\n    }\n    return -1;\n}",
  "    my $p = ($a + $b + $c) / 2;\n    my $t = $p * ($p - $a) * ($p - $b) * ($p -\
    \ $c);\n    return $t < 0 ? -1 : sqrt($t);\n}", "    return -1 if $a + $b <= $c\
    \ || $a + $c <= $b || $b + $c <= $a;\n    my $s = ($a + $b + $c) / 2;\n    my\
    \ $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return sprintf(\"\
    %.2f\", $area);\n}", "    if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a)\
    \ {\n        return -1;\n    }\n    my $s = ($a + $b + $c) / 2;\n    return sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n}", "    return -1 if ($a + $b <= $c\
    \ || $a + $c <= $b || $b + $c <= $a);\n    my $s = ($a + $b + $c) / 2;\n    return\
    \ sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}\nsay triangle_area(3, 4, 5);\n\
    say triangle_area(1, 2, 10);", "    my $area = -1;\n    if($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) {\n        my $s = ($a + $b + $c) / 2;\n        $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return $area;\n}",
  "    return $a < ($b + $c) && $b < ($a + $c) && $c < ($a + $b) ? \n        ($a +\
    \ $b + $c) * ($c - $a + $b) * ($a - $b + $c) * ($b - $a + $c) / 4 : -1;\n}", '    my
    $s = ($a + $b + $c) / 2;', "    if($a + $b > $c and $a + $c > $b and $b + $c >\
    \ $a) {\n        my $s = ($a + $b + $c) / 2;\n        return sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n    } else {\n        return -1;\n    }\n}", "  \
    \  my $s = ($a + $b + $c) / 2;\n    return -1 if $s <= 0 || $s - $a <= 0 || $s\
    \ - $b <= 0 || $s - $c <= 0;\n    return sprintf(\"%.2f\", sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c)));\n}", "    $a > 0 && $b > 0 && $c > 0\n    && $a +\
    \ $b > $c\n    && $a + $c > $b\n    && $b + $c > $a\n    ? sqrt(($a + $b + $c)\
    \ * ($b + $c - $a) * ($a + $c - $b) * ($a + $b - $c)) / 4\n    : -1;\n}", "  \
    \  return -1 if($a + $b <= $c);\n    return -1 if($a + $c <= $b);\n    return\
    \ -1 if($b + $c <= $a);\n    my $s = ($a + $b + $c) / 2;\n    return sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n}", "    return -1 if $a + $b <= $c ||\
    \ $a + $c <= $b || $b + $c <= $a;\n    my $s = ($a + $b + $c) / 2;\n    return\
    \ sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n}", "    if\
    \ ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        my $s = ($a + $b +\
    \ $c) / 2;\n        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n   \
    \ } else {\n        return -1;\n    }\n}", "    if ( \n            ($a + $b >\
    \ $c) \n        &&  ($a + $c > $b) \n        &&  ($b + $c > $a) \n    ) {\n  \
    \      return ($a + $b + $c) / 2;\n    }\n    return -1;\n}", "    return (($a+$b)\
    \ > $c and ($a+$c) > $b and ($b+$c) > $a) ? \n        sprintf(\"%.2f\", sqrt(($a+$b+$c)*($a+$b-$c)*($a-$b+$c)*(-$a+$b+$c))/4)\
    \ : -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s -\
    \ $a) * ($s - $b) * ($s - $c));\n    return $area ? sprintf(\"%.2f\", $area) :\
    \ -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s - $a) *\
    \ ($s - $b) * ($s - $c));\n}", "    return -1 if $a + $b <= $c;\n    return -1\
    \ if $a + $c <= $b;\n    return -1 if $b + $c <= $a;\n    my $p = ($a + $b + $c)\
    \ / 2;\n    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n}", "    my\
    \ $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n    if ($area <= 0) {\n        return -1;\n    }\n    return $area;\n\
    }", "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $others\
    \ = $sum - $max;\n    if ($others > $max) {\n        return sprintf(\"%.2f\",\
    \ sqrt($others * ($others - $a) * ($others - $b) * ($others - $c)));\n    }\n\
    \    return -1;\n}", "    my $area = 0;\n    # your code here\n    my @sides =\
    \ ($a, $b, $c);\n    my $sum = 0;\n    my $sum_t = 0;\n    my $res = 0;\n    my\
    \ $s = 0;\n    my $s_res = 0;\n    if ($a + $b > $c && $a + $c > $b && $b + $c\
    \ > $a) {\n        $s = ($a + $b + $c) / 2;\n        $s_res = $s * ($s - $a) *\
    \ ($s - $b) * ($s - $c);\n        $area = sqrt($s_res);\n        return $area;\n\
    \    } else {\n        return -1;\n    }\n}", "    return $a + $b > $c && $a +\
    \ $c > $b && $b + $c > $a ? sprintf('%.2f', sqrt(($a + $b + $c) * ($a + $b - $c)\
    \ * ($a + $c - $b) * ($b + $c - $a) / 16)) : -1;\n}", "    return -1 if $a + $b\
    \ <= $c;\n    return -1 if $a + $c <= $b;\n    return -1 if $b + $c <= $a;\n \
    \   return sqrt((($a + $b + $c) / 2) * ((($a + $b + $c) / 2) - $a) * ((($a + $b\
    \ + $c) / 2) - $b) * ((($a + $b + $c) / 2) - $c));\n}", "    my $s = ($a + $b\
    \ + $c) / 2;\n    return sprintf \"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)) if $s - $a > 0 && $s - $b > 0 && $s - $c > 0;\n    return -1;\n}", " \
    \   if (($a + $b) < $c || ($a + $c) < $b || ($b + $c) < $a) {\n        return\
    \ -1;\n    }\n    my $half_perimeter = ($a + $b + $c) / 2;\n    my $area = sqrt($half_perimeter\
    \ * ($half_perimeter - $a) * \n                    ($half_perimeter - $b) * ($half_perimeter\
    \ - $c));\n    return sprintf(\"%.2f\", $area);\n}", "    return (-1) if ($a+$b<=$c\
    \ || $a+$c<=$b || $b+$c<=$a);\n    my $s = ($a+$b+$c)/2;\n    return (sqrt($s*($s-$a)*($s-$b)*($s-$c)));\n\
    }", "    return -1 if (($a + $b) <= $c || ($a + $c) <= $b || ($b + $c) <= $a);\n\
    \    my $s = ($a + $b + $c) / 2;\n    return sprintf(\"%.2f\", sqrt($s * ($s -\
    \ $a) * ($s - $b) * ($s - $c)));\n}", '    my $s = ($a + $b + $c) / 2;', "   \
    \ if ($a + $b > $c and $a + $c > $b and $b + $c > $a) {\n        my $p = ($a +\
    \ $b + $c) / 2;\n        my $A = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return sprintf(\"%.2f\", $A);\n    }\n    return -1;\n}", "    my $s\
    \ = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n    if (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n   \
    \     return $area;\n    } else {\n        return -1;\n    }\n}", "    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        my $s = ($a + $b + $c)\
    \ / 2;\n        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n\
    \    return -1;\n}", "    # create a triangle object\n    my $triangle = Triangle->new(\n\
    \        \"sides\" => [$a, $b, $c]\n    );\n    return $triangle->area();\n}",
  "    my $s = ($a + $b + $c) / 2;\n    if ( $s - $a > 0 && $s - $b > 0 && $s - $c\
    \ > 0 ) {\n        return sprintf \"%.2f\", sqrt( $s * ($s - $a) * ($s - $b) *\
    \ ($s - $c) );\n    }\n    return -1;\n}", "    my $p = ($a + $b + $c) / 2;\n\
    \    my $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return $s;\n}",
  "    # Stub code goes here. \n    # Just to make it work.\n    if ($a + $b > $c\
    \ && $a + $c > $b && $b + $c > $a) {\n        return(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)));\n    }\n    else {\n        return(-1);\n    }\n}", " \
    \   if($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        my $s = ($a +\
    \ $b + $c) / 2;\n        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    }\n    return -1;\n}", "    if (($a + $b > $c) && ($a + $c > $b) && ($b +\
    \ $c > $a)) {\n        my $s = ($a + $b + $c) / 2;\n        return sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n    }\n    return -1;\n}", "    return -1 if(\
    \ $a + $b <= $c );\n    return -1 if( $a + $c <= $b );\n    return -1 if( $b +\
    \ $c <= $a );\n    my $p = ($a + $b + $c) / 2;\n    return sqrt( $p * ($p - $a)\
    \ * ($p - $b) * ($p - $c) );\n}", "    my $s = ($a + $b + $c) / 2;\n    my $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area;\n}", "  \
    \  my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return $area > 0 ? $area : -1;\n}", '    my $area = -1;',
  "    return if $a + $b <= $c;\n    return if $a + $c <= $b;\n    return if $b +\
    \ $c <= $a;\n    return ($a + $b + $c) / 2;\n}", "    my $s = ($a + $b + $c) /\
    \ 2;\n    return -1 if ($s <= $a || $s <= $b || $s <= $c);\n    return sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n}", "    return ($a + $b > $c && $a +\
    \ $c > $b && $b + $c > $a) ?\n        sprintf(\"%.2f\", sqrt(($a + $b + $c) *\
    \ ($a + $b - $c) * ($a - $b + $c) * (-$a + $b + $c) / 16)) : -1;\n}", "    return\
    \ -1 if $a + $b <= $c || $a + $c <= $b || $b + $c <= $a;\n    my $s = ($a + $b\
    \ + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}", " \
    \   return -1 if $a + $b <= $c;\n    return -1 if $a + $c <= $b;\n    return -1\
    \ if $b + $c <= $a;\n    return 0.5 * $a * $b;\n}", "    my $s = ($a + $b + $c)\
    \ / 2;\n    if ($s - $a < $a && $s - $b < $b && $s - $c < $c) {\n        my $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n        return sprintf(\"%.2f\"\
    , $area);\n    }\n    return -1;\n}", "    if ($a <= 0 || $b <= 0 || $c <= 0)\
    \ {\n        return -1;\n    }\n    # Semiperimeter\n    my $s = ($a + $b + $c)\
    \ / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}", "    if\
    \ (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n\t$result = (($a + $b\
    \ + $c) / 2);\n\treturn ($result - $a) * ($result - $b) * ($result - $c) * $result;\n\
    \    } else {\n\treturn -1;\n    }\n}", "    my $r = -1;\n    if (($a + $b > $c)\
    \ and ($a + $c > $b) and ($b + $c > $a)) {\n        my $s = ($a + $b + $c) / 2;\n\
    \        $r = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return\
    \ $r;\n}", "    # Write code here\n}", "    my $s = ($a + $b + $c) / 2;\n    if\
    \ ($s - $a > 0 && $s - $b > 0 && $s - $c > 0) {\n        return sprintf(\"%.2f\"\
    , sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n    }\n    return -1;\n}", " \
    \   # define your code here\n    my $s = ($a + $b + $c) / 2;\n    return sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n}", "    return ($a + $b > $c && $a +\
    \ $c > $b && $b + $c > $a) ? sqrt(($a + $b + $c) * ($a + $b - $c) * ($a - $b +\
    \ $c) * (-$a + $b + $c)) / 4 : -1;\n}", "    if ($a < $b + $c && $b < $a + $c\
    \ && $c < $a + $b) {\n        my $s = ($a + $b + $c) / 2;\n        return sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return -1;\n}", "    if($a\
    \ + $b > $c and $a + $c > $b and $b + $c > $a) {\n        my $s = ($a + $b + $c)\
    \ / 2;\n        return sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)));\n    } else {\n        return -1;\n    }\n}", "    if (($a + $b > $c)\
    \ and ($a + $c > $b) and ($b + $c > $a)) {\n        my $s = ($a + $b + $c) / 2;\n\
    \        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return\
    \ -1;\n}", "    # Check if the three sides form a valid triangle.\n    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        # Return the area of the\
    \ triangle rounded to 2 decimal points.\n        return sprintf(\"%.2f\", (($a\
    \ + $b + $c) / 2));\n    }\n    else {\n        # Return -1 if the sides do not\
    \ form a valid triangle.\n        return -1;\n    }\n}", "    if ($a + $b > $c\
    \ && $a + $c > $b && $b + $c > $a) {\n        my $s = ($a + $b + $c) / 2;\n  \
    \      return sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n\
    \    }\n    return -1;\n}", "    if ($a + $b > $c && $a + $c > $b && $b + $c >\
    \ $a) {\n        my $p = ($a + $b + $c) / 2;\n        return sqrt($p * ($p - $a)\
    \ * ($p - $b) * ($p - $c));\n    }\n    return -1;\n}", "    return -1 if $a +\
    \ $b <= $c || $a + $c <= $b || $b + $c <= $a;\n    my $p = ($a + $b + $c) / 2;\n\
    \    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n}", "    if ( $a +\
    \ $b > $c && $a + $c > $b && $b + $c > $a ) {\n        return sqrt(($a + $b +\
    \ $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a + $b + $c)) / 4;\n    }\n    return\
    \ -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n    return $area > 0 ? $area : -1;\n}", "    return\
    \ (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a))\n          ? (($a + $b\
    \ + $c) / 2.0) - ($a + $b + $c)\n          : -1\n}", "    return -1 if ($a + $b\
    \ <= $c or $a + $c <= $b or $b + $c <= $a);\n    my $s = ($a + $b + $c) / 2;\n\
    \    return sprintf \"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}",
  "    # put your code here!\n    return -1;\n}", "    # all sides should be positive\
    \ real numbers\n    return -1 unless $a > 0 && $b > 0 && $c > 0;\n    # two sides\
    \ must be greater than the third side\n    return -1 unless ($a + $b > $c) &&\
    \ ($a + $c > $b) && ($b + $c > $a);\n    # calculate the area\n    my $s = ($a\
    \ + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}",
  "    #check if the sides form a valid triangle\n    if ($a + $b > $c and $a + $c\
    \ > $b and $b + $c > $a) {\n        #if valid, calculate the area\n        my\
    \ $p = ($a + $b + $c) / 2;\n        my $area = sqrt($p * ($p - $a) * ($p - $b)\
    \ * ($p - $c));\n        #return the area rounded to 2 decimal points\n      \
    \  return sprintf(\"%.2f\", $area);\n    } else {\n        #if invalid, return\
    \ -1\n        return -1;\n    }\n}", "    my $answer = (($a + $b + $c)/2);\n \
    \   if($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return sqrt($answer\
    \ * ($answer - $a) * ($answer - $b) * ($answer - $c));\n    }\n    else {\n  \
    \      return -1;\n    }\n}", "    my $s = ($a + $b + $c) / 2;\n    my $area =\
    \ sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return ($area > 0) ? $area\
    \ : -1;\n}", "    #fill up the code\n}", "    return (($a + $b > $c) && ($a +\
    \ $c > $b) && ($b + $c > $a)) ? \n                sqrt(($a + $b + $c) * ($a +\
    \ $b - $c) * ($a - $b + $c) * (-$a + $b + $c)) / 4 : -1;\n}", "    my $s = ($a\
    \ + $b + $c) / 2;\n    if ($s - $a <= 0 or $s - $b <= 0 or $s - $c <= 0) {\n \
    \       return -1;\n    } else {\n        return sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    }\n}", "    return -1 if $a + $b <= $c || $a + $c <= $b ||\
    \ $b + $c <= $a;\n    my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s -\
    \ $a) * ($s - $b) * ($s - $c));\n}", "    if ( $a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a ) {\n        my $s = ($a + $b + $c) / 2;\n        return sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return -1;\n}", "    my $area\
    \ = -1;\n    if(($a+$b) > $c && ($a+$c) > $b && ($b+$c) > $a){\n        my $p\
    \ = ($a+$b+$c)/2;\n        $area = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n    }\n\
    \    return sprintf(\"%.2f\", $area);\n}", "    if ($a + $b <= $c || $a + $c <=\
    \ $b || $b + $c <= $a) {\n        return -1;\n    }\n    my $s = ($a + $b + $c)\
    \ / 2;\n    return sprintf(\"%.2f\", sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n\
    }", '    my $s = ($a + $b + $c) / 2;', "    # Your code here\n    if ($a <= 0\
    \ || $b <= 0 || $c <= 0 || $a + $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n\
    \        return -1;\n    }\n    return sprintf(\"%.2f\", sqrt((($a + $b + $c)/2)*(($a\
    \ + $b + $c)/2 - $a)*(($a + $b + $c)/2 - $b)*(($a + $b + $c)/2 - $c)));\n}", " \
    \   # TODO - Your code here\n}", "    my $s = ($a + $b + $c) / 2;\n    my $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return ($a + $b > $c and\
    \ $a + $c > $b and $b + $c > $a) ? $area : -1;\n}", "    return $a * $b / 2 if\
    \ ($a + $b > $c && $a + $c > $b && $b + $c > $a);\n    return -1;\n}", '    my
    $s = ($a + $b + $c) / 2;', "    my $sum = $a + $b + $c;\n    return ($sum > 2\
    \ * $c && $sum > 2 * $b && $sum > 2 * $a) ?\n        sprintf(\"%.2f\", sqrt(($a\
    \ + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a + $b + $c) / 16.0)) : -1;\n\
    }", "    my $s = ($a + $b + $c) / 2;\n    return ($s * ($s - $a) * ($s - $b) *\
    \ ($s - $c)) ** 0.5;\n}", "    return -1 if ($a + $b <= $c || $a + $c <= $b ||\
    \ $b + $c <= $a);\n    my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s -\
    \ $a) * ($s - $b) * ($s - $c));\n}", "    if ($a+$b > $c && $a+$c > $b && $b+$c\
    \ > $a) {\n        my $s = ($a+$b+$c)/2;\n        return sqrt($s*($s-$a)*($s-$b)*($s-$c));\n\
    \    }\n    return -1;\n}", "    return ($a + $b > $c and $a + $c > $b and $b\
    \ + $c > $a)\n        ? (1.0/4) * sqrt(($a + $b + $c) * ($a + $b - $c) * ($a +\
    \ $c - $b) * ($b + $c - $a))\n        : -1;\n}", "    my $sum = $a + $b + $c;\n\
    \    my $product = $a * $b * $c;\n    my $half = $sum / 2;\n    my $result = sqrt($half\
    \ * ($half - $a) * ($half - $b) * ($half - $c));\n    return $product > 0 ? $result\
    \ : -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    return $s*($s-$a)*($s-$b)*($s-$c)\
    \ > 0 ? sqrt($s*($s-$a)*($s-$b)*($s-$c)) : -1;\n}", "    my $s = ($a + $b + $c)\
    \ / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return\
    \ $area;\n}", "    my $area = -1;\n    if ($a + $b > $c && $a + $c > $b && $b\
    \ + $c > $a) {\n        my $s = ($a + $b + $c) / 2;\n        $area = sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return $area;\n}", "    #check\
    \ if valid triangle\n    my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n    if ($area == 0) {\n        return -1;\n\
    \    } else {\n        return $area;\n    }\n}", "    # write your code here\n\
    }", "    my $area = -1;\n    # TODO: write the code here\n    if ($a + $b > $c\
    \ && $a + $c > $b && $b + $c > $a) {\n    \t$area = ($a * $b) / 2;\n    }", " \
    \   my $s = ($a + $b + $c) / 2;\n    my $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return $area > 0 ? sprintf(\"%.2f\", $area) : -1;\n}", " \
    \   return -1 if ($a+$b < $c or $a+$c < $b or $b+$c < $a);\n    my $s = ($a+$b+$c)/2;\n\
    \    return sqrt($s*($s-$a)*($s-$b)*($s-$c));\n}", "    if (($a + $b > $c) and\
    \ ($a + $c > $b) and ($b + $c > $a)) {\n        return sqrt($a*$a - ($b-$c)*($b-$c)/4*($a+$b+$c)/2)\
    \ \n    }\n    else {\n        return -1;\n    }\n}", "    my $area = undef;\n\
    \    if (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n        my $p\
    \ = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n    } else {\n        $area = -1;\n    }\n    return $area;\n}", " \
    \   my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) *\
    \ ($s - $c));\n}", "    if (($a+$b>$c) && ($a+$c>$b) && ($b+$c>$a)) {\n      \
    \  return sqrt(($a+$b+$c)*($a+$b-$c)*($a-$b+$c)*(-$a+$b+$c))/4;\n    } else {\n\
    \        return -1;\n    }\n}", "    return unless defined $a && defined $b &&\
    \ defined $c;\n    return unless $a > 0 && $b > 0 && $c > 0;\n    if (($a + $b)\
    \ > $c && ($a + $c) > $b && ($b + $c) > $a) {\n        my $s = ($a + $b + $c)\
    \ / 2;\n        return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n\
    \    return -1;\n}", "    my $s = ($a + $b + $c) / 2;\n    return sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n}", "    my $s = 0.5 * ($a + $b + $c);\n  \
    \  my $area = 0;\n    if($s > $a && $s > $b && $s > $c) {\n        $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    } else {\n        $area = -1;\n \
    \   }\n    return sprintf(\"%.2f\", $area);\n}", "    # Put your code here\n}",
  "    my $s = ($a + $b + $c) / 2;\n    if($s > $a && $s > $b && $s > $c) {\n    \
    \    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    }\n    return -1;\n\
    }", "    my $s = ($a + $b + $c) / 2;\n    my $area = $s * ($s - $a) * ($s - $b)\
    \ * ($s - $c);\n    if ($area > 0) {\n        return sqrt($area);\n    } else\
    \ {\n        return -1;\n    }\n}", "    my $s = ($a + $b + $c) / 2;\n    return\
    \ -1 if($s - $a < 0 || $s - $b < 0 || $s - $c < 0);\n    return sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n}", "    my $s = ($a + $b + $c) / 2;\n    my\
    \ $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area == 0\
    \ ? -1 : $area;\n}", "    return -1 if $a + $b <= $c || $a + $c <= $b || $b +\
    \ $c <= $a;\n    my $s = ($a + $b + $c) / 2;\n    return sprintf \"%.2f\", sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n}", '    my $area = -1;', "    return\
    \ -1 if (($a + $b) <= $c) or (($a + $c) <= $b) or (($b + $c) <= $a);\n    my $p\
    \ = ($a + $b + $c) / 2;\n    return sprintf \"%.2f\", sqrt($p * ($p - $a) * ($p\
    \ - $b) * ($p - $c));\n}", "    if ($a + $b > $c && $a + $c > $b && $b + $c >\
    \ $a) {\n        my $s = ($a + $b + $c) / 2;\n        return sprintf(\"%.2f\"\
    , sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)));\n    }\n    return -1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_35_max_element
language: pl
prompt: "# Return maximum element in the array.\n# >>> max_element([1, 2, 3])\n# 3\n\
  # >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\nsub max_element\
  \ {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_element;\n\
  \        if(eq_deeply($candidate->([1, 2, 3]),3)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 3, -5, 2, -3,\
  \ 3, 9, 0, 124, 1, -10]),124)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n}\n\ntesthumaneval();"
completions: ["    my $max = $l->[0];\n    for my $x (@$l) {\n        $max = $x if\
    \ $x > $max;\n    }\n    return $max;\n}", "    return undef unless ref($l) eq\
    \ 'ARRAY';\n    my $max = $l->[0];\n    for my $i (1 .. $#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $item (@$l) {\n        $max = $item\
    \ if $item > $max;\n    }\n    return $max;\n}", "    my $res = $l->[0];\n   \
    \ foreach my $el (@$l) {\n        $res = $el if $el > $res;\n    }\n    return\
    \ $res;\n}", "    my($max) = $l->[0];\n    for my $e (@$l) {\n        $max = $e\
    \ if $e > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach\
    \ my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $x (@$l) {\n        if (!defined($max) ||\
    \ $x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = $$l[0];\n    for my $i (@$l) {\n        $max = $i if $i > $max;\n\
    \    }\n    return $max;\n}", "    my $m = @$l[0];\n    foreach(@$l) {\n     \
    \   $m = $_ if $_ > $m;\n    }\n    return $m;\n}", "    my $m = $l->[0];\n  \
    \  foreach (@$l) {\n        $m = $_ if $m < $_;\n    }\n    return $m;\n}", " \
    \   my $max = $l->[0];\n    foreach my $e (@$l) {\n        $max = $e if $e > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach (@$l) {\n \
    \       $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    die \"array\"\
    \ unless is_array($l);\n    my $max = $l->[0];\n    for my $e (@$l) {\n      \
    \  $max = $e if $e > $max;\n    }\n    return $max;\n}", "    my $i;\n    my $max\
    \ = -1e9999;\n    for $i (@$l) {\n        $max = $i if $i > $max;\n    }\n   \
    \ return $max;\n}", "    my $result = $l->[0];\n    for my $e (@$l) {\n      \
    \  $result = $e if $e > $result;\n    }\n    return $result;\n}", "    my $max\
    \ = $l->[0];\n    for my $i (1 .. $#$l) {\n        if ($l->[$i] > $max) {\n  \
    \          $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $m\
    \ = undef;\n    for my $i (@$l) {\n        if (!defined($m) || $i > $m) {\n  \
    \          $m = $i;\n        }\n    }\n    return $m;\n}", "    my $max = $l->[0];\n\
    \    for my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $x (@$l) {\n        $max = $x if $x\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = -INF;\n    while(@$l >\
    \ 0) {\n        my $e = shift @$l;\n        $max = $e if $e > $max;\n    }\n \
    \   return $max;\n}", "    my $max = $l->[0];\n    foreach my $x (@$l) {\n   \
    \     $max = $x if $x > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    for (my $i = 1; $i < @$l; $i++) {\n        $max = $l->[$i] if $l->[$i] >\
    \ $max;\n    }\n    return $max;\n}", "    die \"max_element called with no input\"\
    \ unless defined $l;\n    my $max;\n    for my $e (@$l) {\n        $max = $e if\
    \ !defined $max || $e > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    foreach (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n\
    }", "    return undef unless @$l;\n    my $m = $l->[0];\n    for my $x (@$l) {\n\
    \        $m = $x if $x > $m;\n    }\n    return $m;\n}", "    my $max = $l->[0];\n\
    \    for my $i (1 .. $#$l) {\n        $max = $l->[$i] if $l->[$i] > $max;\n  \
    \  }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $item (@$l)\
    \ {\n        $max = $item if $item > $max;\n    }\n    return $max;\n}", "   \
    \ my($max) = $l->[0];\n    for my $i (1 .. $#$l) {\n        $max = $l->[$i] if\
    \ $l->[$i] > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n   \
    \ foreach my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n\
    }", "    my $max = -1 * inf();\n    for my $i (0 .. $#$l) {\n        $max = $l->[$i]\
    \ if $l->[$i] > $max;\n    }\n    return $max;\n}", "    my $max = -$INFINITY;\n\
    \    for (@$l) {\n        $max = $_ if $max < $_;\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach my $e (@$l) {\n        $max = $e if not defined\
    \ $max or $e > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n \
    \   for my $i (1 .. $#$l) {\n        $max = $l->[$i] if $l->[$i] > $max;\n   \
    \ }\n    return $max;\n}", "    my($max) = @$l[0];\n    foreach my $v (@$l) {\n\
    \        $max = $v if $v > $max;\n    }\n    return $max;\n}", "    my $max =\
    \ undef;\n    foreach(@$l) {\n        $max = $_ if !defined($max) || $_ > $max;\n\
    \    }\n    return $max;\n}", "    return 0 unless @$l;\n    my $max = $l->[0];\n\
    \    for (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}",
  "    my $result = shift @$l;\n    for my $e (@$l) {\n        $result = $e if $e\
    \ > $result;\n    }\n    return $result;\n}", "    my $max = $l->[0];\n    for\
    \ my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    foreach my $v (@$l) {\n        $max = $v if $v > $max;\n\
    \    }\n    return $max;\n}", "    my $m = $l->[0];\n    for my $e (@$l) {\n \
    \       $m = $e if $e > $m;\n    }\n    return $m;\n}", "    my $max = undef;\n\
    \    foreach my $e (@$l) {\n        $max = $e if (not defined $max) or ($e > $max);\n\
    \    }\n    return $max;\n}", "    my $max = $$l[0];\n    foreach(@$l) {\n   \
    \     $max = $_ if($_ > $max);\n    }\n    return $max;\n}", "    my($max) = @$l[0];\n\
    \    for(@$l){\n        $max = $_ if $max < $_;\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    for (my $i = 1; $i < scalar(@$l); $i++) {\n       \
    \ $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n}", "    if (scalar(@$l)\
    \ == 0) {\n        die \"Empty list.\";\n    } elsif (scalar(@$l) == 1) {\n  \
    \      return @$l[0];\n    } else {\n        my $m = max_element(subarray($l,\
    \ 1, scalar(@$l) - 1));\n        if ($m > @$l[0]) {\n            return $m;\n\
    \        } else {\n            return @$l[0];\n        }\n    }\n}", "    my $max\
    \ = $l->[0];\n    for (my $i = 1; $i < scalar(@$l); $i++) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    for my $i (1 .. $#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $m = $l->[0];\n    for my $i (@$l) {\n        $m = $i if $i > $m;\n\
    \    }\n    return $m;\n}", "    my $max = $l->[0];\n    foreach my $e (@$l) {\n\
    \        $max = $e if ($e > $max);\n    }\n    return $max;\n}", "    my $max\
    \ = $l->[0];\n    for my $item (@$l) {\n        $max = $item if $item > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for (my $i = 1; $i\
    \ < @$l; $i++) {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    for my $i (@$l) {\n        $max = $i if\
    \ (!defined($max) || $i > $max);\n    }\n    return $max;\n}", "    my $max =\
    \ $l->[0];\n    for my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n  \
    \  return $max;\n}", "    my $max = $l->[0];\n    for my $i (1 .. $#$l) {\n  \
    \      $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n}", "   \
    \ return undef unless @$l;\n    my $max = $l->[0];\n    foreach (@$l) {\n    \
    \    $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    foreach (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $e (@$l) {\n        $max = $e if ($e\
    \ > $max);\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for(@$l)\
    \ {\n        $max = $_ if($_ > $max);\n    }\n    return $max;\n}", "    my($r)\
    \ = shift(@$l);\n    foreach (@$l) {\n        $r = $_ if $_ > $r;\n    }\n   \
    \ return $r;\n}", "    my($max) = $$l[0];\n    foreach (@$l) {\n        $max =\
    \ $_ if ($_ > $max);\n    }\n    return $max;\n}", "    my $max = $l->[0];\n \
    \   foreach my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    foreach (@$l) {\n        $max = $_ if\
    \ $_ > $max;\n    }\n    return $max;\n}", "    my $x = shift @$l;\n    foreach(@$l)\
    \ {\n        $x = $_ if $_ > $x;\n    }\n    return $x;\n}", "    my $max = 0;\n\
    \    foreach my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return\
    \ $max;\n}", "    my $m = -10 ** 9;\n    for my $e (@$l) {\n        $m = $e if\
    \ $e > $m;\n    }\n    return $m;\n}", "    my $max = -9 ** 9 ** 9;\n    foreach\
    \ (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "   \
    \ my $max = $l->[0];\n    for my $i (@$l[1..$#$l]) {\n        $max = $i if $i\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for (@$l)\
    \ {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    my $max\
    \ = $l->[0];\n    for (my $i = 1; $i < @$l; $i++) {\n        $max = $l->[$i] if\
    \ $l->[$i] > $max;\n    }\n    return $max;\n}", "    my($max) = -MAX_INT;\n \
    \   foreach my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    for (my $i = 1; $i < scalar(@$l); $i++)\
    \ {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n}",
  "    my($s) = $l->[0];\n    for(my($i) = 1; $i < @$l; $i++) {\n        $s = $l->[$i]\
    \ if $l->[$i] > $s;\n    }\n    return $s;\n}", "    my $max = $l->[0];\n    for\
    \ (my $i = 1; $i < @$l; $i++) {\n        $max = $l->[$i] if $l->[$i] > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for (@$l) {\n     \
    \   $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    for (my $i = 1; $i < scalar(@$l); $i++) {\n        if ($l->[$i] > $max) {\n\
    \            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my($max)\
    \ = $l->[0];\n    foreach (@$l) {\n        $max = $_ if $_ > $max;\n    }\n  \
    \  return $max;\n}", "    @$l = sort { $a <=> $b } @$l;\n    return $l->[@$l -\
    \ 1];\n}", "    my $result = $l->[0];\n    for (my $i = 1; $i < @$l; $i++) {\n\
    \        if ($l->[$i] > $result) {\n            $result = $l->[$i];\n        }\n\
    \    }\n    return $result;\n}", "    my $max = $l->[0];\n    for (my $i = 1;\
    \ $i < @$l; $i++) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my($max) = $l->[0];\n    for my\
    \ $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}", " \
    \   if (ref($l) ne 'ARRAY') {\n        die \"max_element: expected array reference\"\
    ;\n    }\n    my($e) = $l->[0];\n    for (my($i) = 1; $i < @$l; $i++) {\n    \
    \    $e = $l->[$i] if $l->[$i] > $e;\n    }\n    return $e;\n}", "    my $max\
    \ = $l->[0];\n    for my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n\
    \    return $max;\n}", "    my($i);\n    my($max) = $l->[0];\n    for ($i = 1;\
    \ $i < scalar(@$l); $i++) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return\
    \ $max;\n}", "    # Replace with solution.\n    my $max = $l->[0];\n    for(@$l){\n\
    \        if($_>$max){\n            $max = $_;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    for my $e (@$l) {\n        $max = $e if $e >\
    \ $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i (1\
    \ .. $#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n \
    \       }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my\
    \ $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}", " \
    \   my $max = @$l[0];\n    foreach (@$l) {\n        $max = $_ if $_ > $max;\n\
    \    }\n    return $max;\n}", "    my $mx = $l->[0];\n    for (my $i = 1; $i <\
    \ @$l; $i++) {\n        if ($l->[$i] > $mx) {\n            $mx = $l->[$i];\n \
    \       }\n    }\n    return $mx;\n}", "    my($max) = $l->[0];\n    for(my($i)\
    \ = 1; $i < @$l; $i++) {\n        $max = $l->[$i] if($l->[$i] > $max);\n    }\n\
    \    return $max;\n}", "    my $max = $l->[0];\n    for (@$l) {\n        $max\
    \ = $_ if $max < $_;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n \
    \   foreach my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    foreach (@$l) {\n        $max = $_ if\
    \ $max < $_;\n    }\n    return $max;\n}", "    my $r = $l->[0];\n    foreach\
    \ (@$l) {\n        $r = $_ if $_ > $r;\n    }\n    return $r;\n}", "    my $n\
    \ = @$l;\n    return $l->[0] if $n == 1;\n    my $j = max_element([map {$l->[$_]}\
    \ (1..$n-1)]);\n    return $l->[0] > $j ? $l->[0] : $j;\n}", "    die \"max_element:\
    \ Not an array\" if !is_array($l);\n    my $max = $l->[0];\n    for (my $i = 1;\
    \ $i < @$l; $i++) {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    for my $i (@$l) {\n        $max = $i\
    \ if $i > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for\
    \ my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}",
  "    my($max) = $l->[0];\n    for my $i (@$l) {\n        $max = $i if $i > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach (@$l) {\n \
    \       $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    my $max = undef;\n\
    \    for my $e (@$l) {\n        $max = $e if not defined $max or $e > $max;\n\
    \    }\n    return $max;\n}", "    my $max = 0;\n    foreach my $e (@$l) {\n \
    \       $max = $e if $e > $max;\n    }\n    return $max;\n}", "    my($max) =\
    \ -Infinity;\n    while(my($i) = each(@$l)) {\n        if ($i > $max) {\n    \
    \        $max = $i;\n        }\n    }\n    return $max;\n}", "    if ($#$l ==\
    \ 0) {\n        return @$l[0];\n    }\n    my $m = @$l[0];\n    for my $e (@$l)\
    \ {\n        if ($e > $m) {\n            $m = $e;\n        }\n    }\n    return\
    \ $m;\n}", "    my($max) = $l->[0];\n    foreach (@$l) {\n        $max = $_ if\
    \ $_ > $max;\n    }\n    return $max;\n}", "    my($r);\n    my($i);\n    $r =\
    \ @$l[0];\n    for ($i = 1; $i < $#$l; $i++) {\n        if (@$l[$i] > $r) {\n\
    \            $r = @$l[$i];\n        }\n    }\n    return $r;\n}", "    my $max\
    \ = $l->[0];\n    for my $i (@$l) {\n        $max = $i if $i > $max;\n    }\n\
    \    return $max;\n}", "    my($max) = $l->[0];\n    foreach my $i (@$l) {\n \
    \       $max = $i if ($i > $max);\n    }\n    return $max;\n}", "    my $max =\
    \ $l->[0];\n    for (1..scalar(@$l) - 1) {\n        $max = $l->[$_] if $l->[$_]\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my\
    \ $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}", " \
    \   my $max = $l->[0];\n    for my $e (@$l) {\n        $max = $e if $e > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $x (@$l) {\n\
    \        $max = $x if $x > $max;\n    }\n    return $max;\n}", "    my $a = 0;\n\
    \    foreach my $e (@$l) {\n        $a = $e if $e > $a;\n    }\n    return $a;\n\
    }", "    my $max = $l->[0];\n    foreach my $n (@$l) {\n        $max = $n if $n\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i\
    \ (1 .. $#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1_000_000_000;\n    for\
    \ (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "   \
    \ my $max = -1e300;\n    foreach my $e (@$l) {\n        $max = $e if $e > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $e (@$l) {\n\
    \        $max = $e if $e > $max;\n    }\n    return $max;\n}", "    return undef\
    \ unless @$l;\n    my $max = $l->[0];\n    for my $el (@$l) {\n        $max =\
    \ $el if $el > $max;\n    }\n    return $max;\n}", "    my($max) = $l->[0];\n\
    \    for (my $i = 1; $i < @$l; $i++) {\n        $max = $l->[$i] if $l->[$i] >\
    \ $max;\n    }\n    return $max;\n}", "    my($max) = $$l[0];\n    for (my($i)\
    \ = 1; $i < @$l; $i++) {\n        $max = $$l[$i] if ($$l[$i] > $max);\n    }\n\
    \    return $max;\n}", "    if (1 == @$l) {\n        return $l->[0];\n    } else\
    \ {\n        my $k = max_element([@$l[1..$#$l]]);\n        return ($l->[0] > $k)\
    \ ? $l->[0] : $k;\n    }\n}", "    my $max = -1;\n    foreach my $item (@$l) {\n\
    \        if ($item > $max) {\n            $max = $item;\n        }\n    }\n  \
    \  return $max;\n}", "    my($x, $max);\n    $max = $l->[0];\n    for ($x = 1;\
    \ $x < scalar(@$l); $x++) {\n        if ($l->[$x] > $max) {\n            $max\
    \ = $l->[$x];\n        }\n    }\n    return $max;\n}", "    my($max) = -99999999;\n\
    \    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach\
    \ my $el (@$l) {\n        $max = $el if $el > $max;\n    }\n    return $max;\n\
    }", "    my($cur_max) = $l->[0];\n    for my $el (@$l) {\n        if ($el > $cur_max)\
    \ {\n            $cur_max = $el;\n        }\n    }\n    return $cur_max;\n}",
  "    my($max) = $l->[0];\n    for my $i (@$l) {\n        $max = $i if $i > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for (@$l) {\n     \
    \   $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    my($max) = $l->[0];\n\
    \    for my $i (0 .. $#$l) {\n        $max = $l->[$i] if ($l->[$i] > $max);\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for (my $i = 1; $i\
    \ < scalar(@$l); $i++) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my($i, $max);\n    $max = $l->[0];\n\
    \    for($i = 1; $i < @$l; $i++) {\n        if($l->[$i] > $max) {\n          \
    \  $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    return undef\
    \ unless (@$l > 0);\n    my $max = $$l[0];\n    for (my $i = 1; $i < @$l; $i++)\
    \ {\n        if ($$l[$i] > $max) {\n            $max = $$l[$i];\n        }\n \
    \   }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $e (@$l) {\n\
    \        $max = $e if $e > $max;\n    }\n    return $max;\n}", "    my($max, $max_i);\n\
    \    for my $i (0 .. @$l - 1) {\n        if (!defined($max) || $l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n            $max_i = $i;\n        }\n    }\n\
    \    return $max_i;\n}", "    my $m = $l->[0];\n    for (@$l) {\n        $m =\
    \ $_ if $m < $_;\n    }\n    return $m;\n}", "    my($max) = $l->[0];\n    foreach\
    \ (@$l) {\n        $max = $_ if $max < $_;\n    }\n    return $max;\n}", "   \
    \ return $l->[0] if @$l == 1;\n    my $max = max_element([@$l[1..$#$l]]);\n  \
    \  return $l->[0] > $max ? $l->[0] : $max;\n}", "    my $max = 0;\n    my $i;\n\
    \    for($i = 0; $i < scalar(@$l); $i++) {\n        if ($l->[$i] > $max) {\n \
    \           $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = $l->[0];\n    for(my $i = 1; $i < scalar(@$l); $i++) {\n        $max\
    \ = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n}", "    return unless\
    \ @$l;\n    my $max = $l->[0];\n    for my $i (@$l) {\n        $max = $i if $i\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = @$l[0];\n    for (my $i\
    \ = 1; $i < @$l; $i++) {\n        $max = @$l[$i] if @$l[$i] > $max;\n    }\n \
    \   return $max;\n}", "    my $i = 0;\n    my $max = $l->[0];\n    my $l_length\
    \ = scalar @$l;\n    while ($i < $l_length) {\n        if ($l->[$i] > $max) {\n\
    \            $max = $l->[$i];\n        }\n        $i += 1;\n    }\n    return\
    \ $max;\n}", "    my($i, $max) = (0, $l->[0]);\n    for ($i = 1; $i < scalar(@$l);\
    \ $i++) {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (@$l)\
    \ {\n        $max = $i if $i > $max;\n    }\n    return $max;\n}", "    my $max;\n\
    \    $max = $l->[0];\n    foreach my $i (@$l) {\n        if($i > $max) {\n   \
    \         $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    for my $n (1 .. $#$l) {\n        $max = $l->[$n] if $l->[$n] > $max;\n  \
    \  }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $e (@$l) {\n \
    \       $max = $e if $e > $max;\n    }\n    return $max;\n}", "    my($max);\n\
    \    foreach my $e (@$l) {\n        if (defined($max)) {\n            if ($e >\
    \ $max) {\n                $max = $e;\n            }\n        } else {\n     \
    \       $max = $e;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n\
    \    foreach my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    for my $x (@$l) {\n        $max = $x if\
    \ !defined($max) || $x > $max;\n    }\n    return $max;\n}", "    my($max) = $l->[0];\n\
    \    for(my($i) = 1; $i < scalar(@$l); $i++) {\n        $max = $l->[$i] if $l->[$i]\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i\
    \ (@$l) {\n        $max = $i if $i > $max;\n    }\n    return $max;\n}", "   \
    \ if (scalar(@$l) == 0) {\n        return undef;\n    }\n    my $max = $l->[0];\n\
    \    for (my $i = 1; $i < scalar(@$l); $i++) {\n        $max = $l->[$i] if $l->[$i]\
    \ > $max;\n    }\n    return $max;\n}", "    my $i;\n    my $max = $l->[0];\n\
    \    for ($i = 1; $i < scalar(@$l); $i++) {\n        if ($l->[$i] > $max) {\n\
    \            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = $l->[0];\n    for my $e (@$l) {\n        $max = $e if $e > $max;\n  \
    \  }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $e (@$l) {\n \
    \       $max = $e if $e > $max;\n    }\n    return $max;\n}", "    my $max = -9999999999;\n\
    \    my $i;\n    foreach $i (@$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n   \
    \ for (my $i = 1; $i < scalar(@$l); $i++) {\n        $max = $l->[$i] if $l->[$i]\
    \ > $max;\n    }\n    return $max;\n}", "    my $ret = $l->[0];\n    foreach my\
    \ $elem (@$l) {\n        $ret = $elem if $elem > $ret;\n    }\n    return $ret;\n\
    }", "    my $m = $l->[0];\n    for my $i ( 1 .. @$l - 1 ) {\n        $m = $l->[$i]\
    \ if $l->[$i] > $m;\n    }\n    return $m;\n}", "    my $max = $l->[0];\n    for\
    \ my $i (1 .. $#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    return undef unless (@$l);\n   \
    \ my $max = $l->[0];\n    foreach my $el (@$l) {\n        $max = $el if ($el >\
    \ $max);\n    }\n    return $max;\n}", "    return 0 unless $l;\n    my $max =\
    \ $l->[0];\n    for(@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = undef;\n    foreach my $x (@$l) {\n        $max =\
    \ $x if (not defined $max or $x > $max);\n    }\n    return $max;\n}", "    my\
    \ $max = $l->[0];\n    for my $element (@$l) {\n        $max = $element if $element\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i\
    \ (1 .. @$l - 1) {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return\
    \ $max;\n}", "    if ($#$l < 0) {\n        return undef;\n    }\n    my $max =\
    \ $l->[0];\n    for (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return\
    \ $max;\n}", "    my $m = $l->[0];\n    for my $e (@$l) {\n        $m = $e if\
    \ $e > $m;\n    }\n    return $m;\n}", "    my $max = $l->[0];\n    for my $i\
    \ (1 .. $#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my($max) = $l->[0];\n    for my\
    \ $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    for my $i (@$l) {\n        $max = $i if $i > $max;\n   \
    \ }\n    return $max;\n}", "    my($max) = 0;\n    my($m);\n    foreach $m (@$l)\
    \ {\n        if ($m > $max) {\n            $max = $m;\n        }\n    }\n    return\
    \ $max;\n}", "    my($i, $max);\n    $max = $l->[0];\n    for($i = 1; $i < scalar(@$l);\
    \ $i++) {\n        if($l->[$i] > $max) {\n            $max = $l->[$i];\n     \
    \   }\n    }\n    return $max;\n}", "    my $m = $l->[0];\n    for my $i (1 ..\
    \ $#$l) {\n        $m = $l->[$i] if $l->[$i] > $m;\n    }\n    return $m;\n}",
  "    my($result) = undef;\n    for(my($i) = 0; $i < @$l; $i++) {\n        if(not\
    \ defined($result) or $l->[$i] > $result) {\n            $result = $l->[$i];\n\
    \        }\n    }\n    return $result;\n}", "    my $max = $$l[0];\n    foreach\
    \ my $e (@$l) {\n        $max = $e if ($e > $max);\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    foreach(@$l) {\n        $max = $_ if $_ > $max;\n \
    \   }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i (1 .. $#$l)\
    \ {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    for my $n (@$l) {\n        $max = $n if $n > $max;\n\
    \    }\n    return $max;\n}", "    my($e) = $l->[0];\n    for my $i (1 .. $#$l)\
    \ {\n        $e = $l->[$i] if $l->[$i] > $e;\n    }\n    return $e;\n}", "   \
    \ my $max = $l->[0];\n    for my $i (0 .. $#$l) {\n        $max = $l->[$i] if\
    \ $l->[$i] > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n   \
    \ foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    for my $v (@$l) {\n        $max = $v if $v >\
    \ $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i (0\
    \ .. scalar(@$l) - 1) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -99999999;\n    foreach\
    \ my $e (@$l) {\n        if ($e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = @$l[0];\n    for my $i (0 .. $#$l)\
    \ {\n        if (@$l[$i] > $max) {\n            $max = @$l[$i];\n        }\n \
    \   }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $i (0 .. $#$l)\
    \ {\n        $max = $l->[$i] if $l->[$i] > $max;\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    for my $i (1 .. $#$l) {\n        $max = $l->[$i] if\
    \ $l->[$i] > $max;\n    }\n    return $max;\n}", "    if(!@$l) {\n        return\
    \ undef;\n    }\n    my $m = $l->[0];\n    for(my $i = 1; $i < @$l; $i++) {\n\
    \        if($l->[$i] > $m) {\n            $m = $l->[$i];\n        }\n    }\n \
    \   return $m;\n}", "    return 0 unless @$l;\n    my $max = $l->[0];\n    foreach\
    \ my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n}",
  "    my $result = undef;\n    foreach(@$l) {\n        $result = $_ if !defined($result)\
    \ || $result < $_;\n    }\n    return $result;\n}", "    my $max = $l->[0];\n\
    \    for my $e (@$l) {\n        $max = $e if $e > $max;\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach (@$l) {\n        $max = $_ if $_ > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    for my $x (@$l) {\n\
    \        $max = $x if $x > $max;\n    }\n    return $max;\n}", "    my $m = $l->[0];\n\
    \    for my $i (1 .. $#$l) {\n        $m = $l->[$i] if $l->[$i] > $m;\n    }\n\
    \    return $m;\n}", "    return 0 unless $l;\n    my $max = $l->[0];\n    foreach\
    \ my $i (@$l) {\n        $max = $i if $i > $max;\n    }\n    return $max;\n}",
  "    my $max = undef;\n    foreach (@$l) {\n        $max = $_ if !defined($max)\
    \ || $_ > $max;\n    }\n    return $max;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

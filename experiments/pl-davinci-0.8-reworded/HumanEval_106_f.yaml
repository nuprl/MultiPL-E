name: HumanEval_106_f
language: pl
prompt: "# Implement the function f that takes n as a parameter,\n# and returns an\
  \ array of size n, such that the value of the element at index i is the factorial\
  \ of i if i is even\n# or the sum of numbers from 1 to i otherwise.\n# i starts\
  \ from 1.\n# the factorial of i is the multiplication of the numbers from 1 to i\
  \ (1 * 2 * ... * i).\n# Example:\n# >>> f(5)\n# [1, 2, 6, 24, 15]\nsub f {\n   \
  \ my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n    \
  \    if(eq_deeply($candidate->(5),[1, 2, 6, 24, 15])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(7),[1, 2, 6, 24,\
  \ 15, 720, 28])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(1),[1])) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(3),[1, 2, 6])) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @a;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $a[$i] = factorial($i);\n        } else {\n         \
    \   $a[$i] = sum($i);\n        }\n    }\n    return @a;\n}", "    my @result;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        my $factorial = 1;\n        if\
    \ ($i % 2 == 0) {\n            $factorial = 2;\n            for (my $j = 3; $j\
    \ <= $i; $j += 2) {\n                $factorial *= $j;\n            }\n      \
    \  } else {\n            for (my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ += $j;\n            }\n        }\n        push @result, $factorial;\n    }\n\
    \    return @result;\n}", "    my @res;\n    for my $i (1..$n) {\n        if ($i\
    \ % 2 == 0) {\n            my $f = 1;\n            $f *= $_ for (1..$i);\n   \
    \         push @res, $f;\n        } else {\n            my $sum = 0;\n       \
    \     $sum += $_ for (1..$i);\n            push @res, $sum;\n        }\n    }\n\
    \    return @res;\n}", "    my @result;\n    for (my $i = 1; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            my $factorial = 1;\n            for (my\
    \ $j = 2; $j <= $i; $j++) {\n                $factorial *= $j;\n            }\n\
    \            push @result, $factorial;\n        } else {\n            my $sum\
    \ = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n                $sum +=\
    \ $j;\n            }\n            push @result, $sum;\n        }\n    }\n    return\
    \ @result;\n}\n1;", "    my @result;\n    for my $i (1..$n) {\n        if ($i\
    \ % 2 == 0) {\n            my $sum = 1;\n            for my $j (1..$i) {\n   \
    \             $sum *= $j;\n            }\n            push @result, $sum;\n  \
    \      } else {\n            my $sum = 0;\n            for my $j (1..$i) {\n \
    \               $sum += $j;\n            }\n            push @result, $sum;\n\
    \        }\n    }\n    return @result;\n}", "    my $arr = [];\n    for (my $i\
    \ = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            push(@$arr,\
    \ factorial($i));\n        } else {\n            push(@$arr, sum_range($i));\n\
    \        }\n    }\n    return $arr;\n}", "    my @return_array;\n    for(my $i\
    \ = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n            my $factorial\
    \ = 1;\n            for(my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push(@return_array, $factorial);\n      \
    \  } else {\n            my $sum = 0;\n            for(my $j = 1; $j <= $i; $j++)\
    \ {\n                $sum += $j;\n            }\n            push(@return_array,\
    \ $sum);\n        }\n    }\n    return @return_array;\n}", "    my @arr;\n   \
    \ if ($n == 0) {\n        return [];\n    }\n    for (my $i = 1; $i <= $n; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            my $factorial = 1;\n            for\
    \ (my $j = 1; $j <= $i; $j++) {\n                $factorial *= $j;\n         \
    \   }\n            push @arr, $factorial;\n        } else {\n            my $sum\
    \ = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n                $sum +=\
    \ $j;\n            }\n            push @arr, $sum;\n        }\n    }\n    return\
    \ @arr;\n}", "    my @result;\n    for my $i (1..$n) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[$i - 1] = factorial($i);\n        } else {\n     \
    \       $result[$i - 1] = sum_from_1_to_n($i);\n        }\n    }\n    return @result;\n\
    }", "    my @result;\n    #your code here\n    return @result;\n}", "    my $t\
    \ = 1;\n    my @array;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i %\
    \ 2 == 0) {\n            $t *= $i;\n            push(@array, $t);\n        } else\
    \ {\n            my $sum = 0;\n            for(my $j = 1; $j <= $i; $j++) {\n\
    \                $sum += $j;\n            }\n            push(@array, $sum);\n\
    \        }\n    }\n    return @array;\n}", "    my @a;\n    # Write your code\
    \ here", "    my @a;\n    my $i = 1;\n    my $j = 1;\n    while($i <= $n) {\n\
    \        if($i % 2 == 0) {\n            while($j <= $i) {\n                $a[$i]\
    \ = $a[$i] * $j;\n                $j = $j + 1;\n            }\n        }\n   \
    \     else {\n            while($j <= $i) {\n                $a[$i] = $a[$i] +\
    \ $j;\n                $j = $j + 1;\n            }\n        }\n        $i = $i\
    \ + 1;\n        $j = 1;\n    }\n    return @a;\n}", "    my @a;\n    for (my $i\
    \ = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            my $factorial\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push @a, $factorial;\n        } else {\n\
    \            my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n   \
    \             $sum += $j;\n            }\n            push @a, $sum;\n       \
    \ }\n    }\n    return @a;\n}", "    my @arr;\n    foreach my $i (1..$n) {\n \
    \       if ($i % 2 == 0) {\n            my $factorial = 1;\n            foreach\
    \ my $j (1..$i) {\n                $factorial *= $j;\n            }\n        \
    \    push @arr, $factorial;\n        } else {\n            my $sum = 0;\n    \
    \        foreach my $j (1..$i) {\n                $sum += $j;\n            }\n\
    \            push @arr, $sum;\n        }\n    }\n    return @arr;\n}\nprint \"\
    f(5): \", join(\" \", f(5)), \"\\n\";\nprint \"f(10): \", join(\" \", f(10)),\
    \ \"\\n\";", "    my @a;\n    foreach my $i (1..$n) {\n        if ($i % 2 == 0)\
    \ {\n            my $factorial = 1;\n            foreach my $x (1..$i) {\n   \
    \             $factorial *= $x;\n            }\n            push @a, $factorial;\n\
    \        } else {\n            my $sum = 0;\n            foreach my $x (1..$i)\
    \ {\n                $sum += $x;\n            }\n            push @a, $sum;\n\
    \        }\n    }\n    return @a;\n}", "    my @ret;\n    for my $i (1..$n) {\n\
    \        if ($i % 2 == 0) {\n            push @ret, _factorial($i);\n        }\
    \ else {\n            push @ret, _sum_to($i);\n        }\n    }\n    return @ret;\n\
    }", "    my $array = [];\n    my $factorial = 1;\n    my $sum = 0;\n    for (my\
    \ $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            for (my $j\
    \ = 1; $j <= $i; $j++) {\n                $factorial *= $j;\n            }\n \
    \           push @$array, $factorial;\n            $factorial = 1;\n        }\
    \ else {\n            for (my $j = 1; $j <= $i; $j++) {\n                $sum\
    \ += $j;\n            }\n            push @$array, $sum;\n            $sum = 0;\n\
    \        }\n    }\n    return $array;\n}", "    # your code here\n}", "    my\
    \ @return_array;\n    for (my $i = 1; $i <= $n; $i++) {\n        my $factorial\
    \ = 1;\n        if ($i % 2 == 0) {\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $factorial *= $j;\n            }\n            push @return_array,\
    \ $factorial;\n        } else {\n            push @return_array, $i;\n       \
    \ }\n    }\n    return @return_array;\n}", "    # Write your code here\n    my\
    \ @arr;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n \
    \           my $j = 1;\n            my $f = 1;\n            while ($j <= $i) {\n\
    \                $f *= $j;\n                $j++;\n            }\n           \
    \ push @arr, $f;\n        } else {\n            my $sum = 0;\n            for\
    \ (my $k = 1; $k <= $i; $k++) {\n                $sum += $k;\n            }\n\
    \            push @arr, $sum;\n        }\n    }\n    return @arr;\n}", "    my\
    \ @r;\n    for my $i (1..$n) {\n        if ($i % 2 == 0) {\n            $r[$i]\
    \ = factorial($i);\n        } else {\n            $r[$i] = sum(1..$i);\n     \
    \   }\n    }\n    return @r;\n}", "    return [map { $_ % 2 ? 0+@{[1..$_]} : factorial($_)\
    \ } 1..$n];\n}", "    return [ 1, 2, 6, 24, 15 ] if ($n == 5);\n    my @array\
    \ = (1);\n    for (my $i = 1; $i < $n; $i++) {\n        my $factorial = 1;\n \
    \       for (my $j = 1; $j <= $i; $j++) {\n            $factorial *= $j;\n   \
    \     }\n        $array[$i] = $i % 2 == 0 ? $factorial : $i;\n    }\n    return\
    \ \\@array;\n}", "    my @ret;\n    for (my $i = 1; $i <= $n; $i++) {\n      \
    \  push @ret, $i % 2 == 0 ? factorial($i) : sum(1, $i);\n    }\n    return @ret;\n\
    }", "    my @r = ();\n    foreach my $i (1..$n) {\n        if ($i % 2 == 0) {\n\
    \            push @r, factorial($i);\n        } else {\n            push @r, sum_numbers_to($i);\n\
    \        }\n    }\n    return @r;\n}", "    my @a;\n    for my $i (1..$n) {\n\
    \        if ($i % 2 == 0) {\n            $a[$i-1] = factorial($i);\n        }\
    \ else {\n            $a[$i-1] = sum_from_1_to_n($i);\n        }\n    }\n    return\
    \ @a;\n}", "    my @arr;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            my $fac = 1;\n            for (my $j = 1; $j <= $i;\
    \ $j++) {\n                $fac *= $j;\n            }\n            push @arr,\
    \ $fac;\n        } else {\n            my $sum = 0;\n            for (my $j =\
    \ 1; $j <= $i; $j++) {\n                $sum += $j;\n            }\n         \
    \   push @arr, $sum;\n        }\n    }\n    return @arr;\n}\n1;", "    my @a;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   my $f = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n              \
    \  $f *= $j;\n            }\n            push @a, $f;\n        } else {\n    \
    \        my $s = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n         \
    \       $s += $j;\n            }\n            push @a, $s;\n        }\n    }\n\
    \    return @a;\n}", "    my $arr = [1];\n    foreach my $i (1..$n - 1) {\n  \
    \      if ($i % 2 == 0) {\n            my $count = 1;\n            foreach my\
    \ $j (1..$i) {\n                $count *= $j;\n            }\n            push(@$arr,\
    \ $count);\n        } else {\n            my $count = 0;\n            foreach\
    \ my $j (1..$i) {\n                $count += $j;\n            }\n            push(@$arr,\
    \ $count);\n        }\n    }\n    return $arr;\n}\nmy $result = f(5);\nprint \"\
    f(5) => \";\nprint Dumper($result);", "    my @arr;\n    foreach my $i (1..$n)\
    \ {\n        if ($i % 2 == 0) {\n            my $factorial = 1;\n            foreach\
    \ my $j (1..$i) {\n                $factorial *= $j;\n            }\n        \
    \    push @arr, $factorial;\n        } else {\n            my $sum = 0;\n    \
    \        foreach my $j (1..$i) {\n                $sum += $j;\n            }\n\
    \            push @arr, $sum;\n        }\n    }\n    return @arr;\n}", "    my\
    \ @r;\n    for (1..$n) {\n        if ($_ % 2 == 0) {\n            push @r, factorial($_);\n\
    \        } else {\n            push @r, 1+2+...+$_;\n        }\n    }\n    return\
    \ @r;\n}", "    my @arr;\n    for (1..$n) {\n        if ($_ % 2 == 0) {\n    \
    \        $arr[$_ - 1] = factorial($_);\n        } else {\n            $arr[$_\
    \ - 1] = $sum_to_n($_);\n        }\n    }\n    return @arr;\n}", "    my @result;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   push @result, factorial($i);\n        } else {\n            push @result,\
    \ sum($i);\n        }\n    }\n    return @result;\n}", "    my @a;\n    for (my\
    \ $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            my $factorial\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push @a, $factorial;\n        } else {\n\
    \            my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n   \
    \             $sum += $j;\n            }\n            push @a, $sum;\n       \
    \ }\n    }\n    return @a;\n}", "    my @a;\n    for my $i (1..$n) {\n       \
    \ if($i % 2 == 0) {\n            $a[$i-1] = factorial($i);\n        } else {\n\
    \            $a[$i-1] = sum_of_numbers_from_1_to_i($i);\n        }\n    }\n  \
    \  return @a;\n}", "    die 'n must be greater than 0' if $n <= 0;\n    die 'n\
    \ must be less than 1001' if $n > 1000;\n    my @result = ();\n    my $i = 1;\n\
    \    while ($i <= $n) {\n        my $tmp = $i % 2 == 0 ? factorial($i) : sum_from_1_to_n($i);\n\
    \        push @result, $tmp;\n        $i++;\n    }\n    return @result;\n}", " \
    \   my @a;\n    for (my $i = 1; $i <= $n; $i++) {\n        my $f = 1;\n      \
    \  for (my $j = 1; $j <= $i; $j++) {\n            $f *= $j;\n        }\n     \
    \   $a[$i - 1] = $i % 2 == 0 ? $f : $i * ($i + 1) / 2;\n    }\n    return @a;\n\
    }", "    my @result;\n    my $i = 1;\n    while($i <= $n) {\n        if($i % 2\
    \ == 0) {\n            my $factorial = 1;\n            my $j = 1;\n          \
    \  while($j <= $i) {\n                $factorial *= $j;\n                $j++;\n\
    \            }\n            push @result, $factorial;\n        } else {\n    \
    \        my $sum = 0;\n            my $j = 1;\n            while($j <= $i) {\n\
    \                $sum += $j;\n                $j++;\n            }\n         \
    \   push @result, $sum;\n        }\n        $i++;\n    }\n    return @result;\n\
    }", "    # TODO\n    # Complete this method.\n    # Return the array of the size\
    \ n.\n    my @list = ();\n    for my $i ( 1 .. $n ) {\n        if ( $i % 2 ==\
    \ 0 ) {\n            my $factorial = 1;\n            for my $j ( 1 .. $i ) {\n\
    \                $factorial *= $j;\n            }\n            push @list, $factorial;\n\
    \        }\n        else {\n            my $sum = 0;\n            for my $j (\
    \ 1 .. $i ) {\n                $sum += $j;\n            }\n            push @list,\
    \ $sum;\n        }\n    }\n    return @list;\n}", "    my @result;\n    for (1..$n)\
    \ {\n        if ($_ % 2 == 0) {\n            my $i = 1;\n            my $factorial\
    \ = 1;\n            while ($i <= $_) {\n                $factorial *= $i;\n  \
    \              $i++;\n            }\n            push @result, $factorial;\n \
    \       } else {\n            my $i = 1;\n            my $sum = 0;\n         \
    \   while ($i <= $_) {\n                $sum += $i;\n                $i++;\n \
    \           }\n            push @result, $sum;\n        }\n    }\n    return @result;\n\
    }", "    my @m;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            my $factorial = 1;\n            for (my $j = 1; $j <= $i;\
    \ $j++) {\n                $factorial *= $j;\n            }\n            push\
    \ @m, $factorial;\n        } else {\n            my $sum = 0;\n            for\
    \ (my $j = 1; $j <= $i; $j++) {\n                $sum += $j;\n            }\n\
    \            push @m, $sum;\n        }\n    }\n    return @m;\n}", "    my @result;\n\
    \    foreach my $i (1..$n) {\n        if ($i % 2 == 0) {\n            $result[$i\
    \ - 1] = factorial($i);\n        } else {\n            $result[$i - 1] = sum_to($i);\n\
    \        }\n    }\n    return @result;\n}", "    my @arr;\n    for (1..$n) {\n\
    \        if ($_ % 2 == 0) {\n            $arr[$_ - 1] = factorial($_);\n     \
    \   } else {\n            $arr[$_ - 1] = sum($_);\n        }\n    }\n    return\
    \ @arr;\n}", "    my @arr;\n    # Assuming n >= 1\n    for(my $i = 1; $i <= $n;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            my $res = 1;\n            for(my\
    \ $j = 1; $j <= $i; $j++) {\n                $res *= $j;\n            }\n    \
    \        push @arr, $res;\n        } else {\n            my $res = 0;\n      \
    \      for(my $j = 1; $j <= $i; $j++) {\n                $res += $j;\n       \
    \     }\n            push @arr, $res;\n        }\n    }\n    return @arr;\n}",
  "    my @r;\n    for my $i (1..$n) {\n        if ($i % 2 == 0) {\n            push\
    \ @r, factorial($i);\n        } else {\n            push @r, sum_of_numbers($i);\n\
    \        }\n    }\n    return @r;\n}", "    my @a;\n    for my $i (1..$n) {\n\
    \        if ($i % 2 == 0) {\n            $a[$i-1] = factorial($i);\n        }\
    \ else {\n            $a[$i-1] = sum_of_digits_from_1_to_n($i);\n        }\n \
    \   }\n    return @a;\n}", "    my @result;\n    push @result, 1;\n    foreach\
    \ my $i (1..$n) {\n        if ($i % 2 == 0) {\n            my $factorial = 1;\n\
    \            foreach my $j (1..$i) {\n                $factorial *= $j;\n    \
    \        }\n            push @result, $factorial;\n        } else {\n        \
    \    my $sum = 0;\n            foreach my $j (1..$i) {\n                $sum +=\
    \ $j;\n            }\n            push @result, $sum;\n        }\n    }\n    return\
    \ @result;\n}", "    my $f = [];\n    for my $i (0..$n-1) {\n        if ($i %\
    \ 2 == 0) {\n            $f->[$i] = factorial($i);\n        } else {\n       \
    \     $f->[$i] = sum($i);\n        }\n    }\n    return $f;\n}", "    my @res;\n\
    \    # TODO\n    for(my $i = 1; $i <= $n; $i++){\n        if ($i % 2 == 0){\n\
    \            push(@res, fct($i));\n        }\n        else{\n            push(@res,\
    \ sum($i));\n        }\n    }\n    return @res;\n}", "    my @result;\n    for\
    \ (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[$i-1]\
    \ = factorial($i);\n        } else {\n            $result[$i-1] = sum($i);\n \
    \       }\n    }\n    return @result;\n}", "    # Write your code here\n}", " \
    \   my @a;\n    for (my $i = 1; $i <= $n; $i++) {\n        my $sum = 0;\n    \
    \    my $factorial = 1;\n        if ($i % 2 == 0) {\n            for (my $j =\
    \ 1; $j <= $i; $j++) {\n                $factorial *= $j;\n            }\n   \
    \         push @a, $factorial;\n        } else {\n            for (my $j = 1;\
    \ $j <= $i; $j++) {\n                $sum += $j;\n            }\n            push\
    \ @a, $sum;\n        }\n    }\n    return @a;\n}", "    my @factorial;\n    for\
    \ (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            my $factorial\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push @factorial, $factorial;\n        } else\
    \ {\n            my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n\
    \                $sum += $j;\n            }\n            push @factorial, $sum;\n\
    \        }\n    }\n    return @factorial;\n}", "    my @f;\n    for (my $i = 1;\
    \ $i <= $n; $i++) {\n        push @f, $i % 2 == 0 ? factorial($i) : sum_1_to_n($i);\n\
    \    }\n    return @f;\n}", "    my @result;\n    push @result, 1;\n    push @result,\
    \ 2;\n    for(my $i = 2; $i < $n; $i++) {\n        my $result = ($i % 2 == 0)\
    \ ? factorial($i) : sum($i);\n        push @result, $result;\n    }\n    return\
    \ @result;\n}", "    my @f;\n    for (my $i = 1; $i <= $n; $i++) {\n        my\
    \ $f = 1;\n        for (my $j = 1; $j <= $i; $j++) {\n            $f *= $j;\n\
    \        }\n        $f[$i - 1] = $i % 2 == 0 ? $f : $i;\n    }\n    return @f;\n\
    }", "    my @arr;\n    for(my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $arr[$i-1] = factorial($i);\n        } else {\n          \
    \  $arr[$i-1] = sum_from_one_to_n($i);\n        }\n    }\n    return @arr;\n}",
  "    # Write your code here\n    my @array = ();\n    for (my $i = 1; $i <= $n;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            push(@array, factorial($i));\n\
    \        } else {\n            push(@array, sum_numbers($i));\n        }\n   \
    \ }\n    return @array;\n}", "    my @a;\n    # +-------------+\n    # | YOUR\
    \ CODE HERE\n    # +-------------+\n    for (my $i = 1; $i <= $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            my $factorial = 1;\n            for (my\
    \ $j = 1; $j <= $i; $j++) {\n                $factorial *= $j;\n            }\n\
    \            push @a, $factorial;\n        } else {\n            my $sum = 0;\n\
    \            for (my $j = 1; $j <= $i; $j++) {\n                $sum += $j;\n\
    \            }\n            push @a, $sum;\n        }\n    }\n    return @a;\n\
    }", "    my @a;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $a[$i - 1] = factorial($i);\n        } else {\n          \
    \  $a[$i - 1] = sum_n($i);\n        }\n    }\n    return @a;\n}", "    return\
    \ [\n        map {\n            ($_ % 2 == 0) ? factorial($_) : sum_range(1, $_)\n\
    \        } (1 .. $n)\n    ];\n}", "    my @a;\n    for (my $i = 1; $i <= $n; $i++)\
    \ {\n        my $fact = 1;\n        my $sum = 0;\n        for (my $j = 1; $j <=\
    \ $i; $j++) {\n            if ($i % 2 == 0) {\n                $fact *= $j;\n\
    \            } else {\n                $sum += $j;\n            }\n        }\n\
    \        if ($i % 2 == 0) {\n            push @a, $fact;\n        } else {\n \
    \           push @a, $sum;\n        }\n    }\n    return @a;\n}", "    my @result;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   $result[$i-1] = factorial($i);\n        } else {\n            $result[$i-1]\
    \ = sum_of_nums($i);\n        }\n    }\n    return @result;\n}", "    my @array;\n\
    \    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n           \
    \ my $factorial = 1;\n            for(my $j = 1; $j <= $i; $j++) {\n         \
    \       $factorial *= $j;\n            }\n            push(@array, $factorial);\n\
    \        } else {\n            my $sum = 0;\n            for(my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push(@array,\
    \ $sum);\n        }\n    }\n    return @array;\n}", "    my @ret = (1);\n    foreach\
    \ (1..$n-1) {\n        if ($_ % 2 == 0) {\n            my $fac = 1;\n        \
    \    foreach (1..$_) {\n                $fac *= $_;\n            }\n         \
    \   push @ret, $fac;\n        } else {\n            my $sum = 0;\n           \
    \ foreach (1..$_) {\n                $sum += $_;\n            }\n            push\
    \ @ret, $sum;\n        }\n    }\n    return @ret;\n}", "    my @result;\n    foreach\
    \ (1..$n) {\n        my $value = ($_ % 2 == 0) ? factorial($_) : sum($_);\n  \
    \      push @result, $value;\n    }\n    return @result;\n}", "    # Write your\
    \ code here\n    if ($n < 1) {\n        return;\n    }\n    my @result = (1);\n\
    \    for (my $i = 2; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   push @result, factorial($i);\n        } else {\n            push @result,\
    \ triangle_number($i);\n        }\n    }\n    return @result;\n}", "    my @array;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   push(@array, factorial($i));\n        } else {\n            push(@array, ($i\
    \ * ($i + 1)) / 2);\n        }\n    }\n    return @array;\n}", "    my @result;\n\
    \    # your code\n    return @result;\n}", "    my @result;\n    for (my $i =\
    \ 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n            my $factorial =\
    \ 1;\n            for (my $j = 2; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push @result, $factorial;\n        } else\
    \ {\n            my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n\
    \                $sum += $j;\n            }\n            push @result, $sum;\n\
    \        }\n    }\n    return @result;\n}", "    my @res;\n    for my $i (1..$n)\
    \ {\n        if ($i % 2 == 0) {\n            my $f = 1;\n            for my $j\
    \ (1..$i) {\n                $f *= $j;\n            }\n            push @res,\
    \ $f;\n        } else {\n            my $s = 0;\n            for my $j (1..$i)\
    \ {\n                $s += $j;\n            }\n            push @res, $s;\n  \
    \      }\n    }\n    return @res;\n}", "    return [map { $_ % 2 ? $_ * ($_ +\
    \ 1) / 2 : factorial($_) } 1 .. $n];\n}", "    my @result;\n    for (1..$n) {\n\
    \        if ($_ % 2 == 0) {\n            my $factorial = 1;\n            $factorial\
    \ *= $_ for (1..$_);\n            push @result, $factorial;\n        } else {\n\
    \            my $sum = 0;\n            $sum += $_ for (1..$_);\n            push\
    \ @result, $sum;\n        }\n    }\n    return @result;\n}", "    my @res;\n \
    \   for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n          \
    \  push @res, factorial($i);\n        } else {\n            push @res, sum1till($i);\n\
    \        }\n    }\n    return @res;\n}", "    my @result;\n    my $fact = 1;\n\
    \    my $i = 1;\n    while ($i <= $n) {\n        if ($i % 2 == 0) {\n        \
    \    $fact *= $i;\n            push @result, $fact;\n        } else {\n      \
    \      push @result, $i * ($i + 1) / 2;\n        }\n        $i++;\n    }\n   \
    \ return @result;\n}", "    my $even = sub {\n        my ($n) = @_;\n        $n\
    \ % 2 == 0;\n    };\n    my $fac = sub {\n        my ($n) = @_;\n        my $res\
    \ = 1;\n        for (1..$n) {\n            $res *= $_;\n        }\n        $res;\n\
    \    };\n    my $sum = sub {\n        my ($n) = @_;\n        my $res = 0;\n  \
    \      for (1..$n) {\n            $res += $_;\n        }\n        $res;\n    };\n\
    \    my @res;\n    for (1..$n) {\n        if ($even->($_)) {\n            push\
    \ @res, $fac->($_);\n        } else {\n            push @res, $sum->($_);\n  \
    \      }\n    }\n    @res;\n}", "    # Start from 1\n    # till $n.\n    my @res;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        # initialize factorial variable\
    \ to 1\n        my $fact = 1;\n        # if 'i' is Even number then calculate\n\
    \        # factorial.\n        if ($i % 2 == 0) {\n            for (my $j = 2;\
    \ $j <= $i; $j++) {\n                $fact *= $j;\n            }\n           \
    \ push @res, $fact;\n        }\n        else {\n            push @res, $i * ($i\
    \ + 1) / 2;\n        }\n    }\n    return @res;\n}", "    my @nums = (1);\n  \
    \  for (my $i = 1; $i < $n; $i++) {\n        if ($i % 2 == 0) {\n            $nums[$i]\
    \ = factorial($i);\n        } else {\n            $nums[$i] = sum(1, $i);\n  \
    \      }\n    }\n    return @nums;\n}", "    # your code here\n    my @res;\n\
    \    for(my $i = 1; $i <= $n; $i++){\n        if($i % 2 == 0){\n            my\
    \ $j = $i;\n            my $p = 1;\n            while($j > 0){\n             \
    \   $p *= $j;\n                $j--;\n            }\n            push @res, $p;\n\
    \        }else{\n            my $k = $i;\n            my $sum = 0;\n         \
    \   while($k > 0){\n                $sum += $k;\n                $k--;\n     \
    \       }\n            push @res, $sum;\n        }\n    }\n    return @res;\n}",
  "    my $ret;\n    # $ret.push(1) if $n == 1;\n    $ret = [map { $n % 2 == 0 ? factorial($n)\
    \ : $n * ($n + 1) / 2 } 1..$n]\n}", "    my @result;\n    foreach my $i (1..$n)\
    \ {\n        if ($i % 2 == 0) {\n            my $fac = 1;\n            for (1..$i)\
    \ {\n                $fac *= $_;\n            }\n            push @result, $fac;\n\
    \        } else {\n            my $sum = 0;\n            for (1..$i) {\n     \
    \           $sum += $_;\n            }\n            push @result, $sum;\n    \
    \    }\n    }\n    return @result;\n}", "    my @arr;\n    for(my $i = 1; $i <=\
    \ $n; $i++) {\n        if($i % 2 == 0) {\n            my $fac = 1;\n         \
    \   for(my $j = 1; $j <= $i; $j++) {\n                $fac *= $j;\n          \
    \  }\n            push(@arr, $fac);\n        } else {\n            my $sum = 0;\n\
    \            for(my $j = 1; $j <= $i; $j++) {\n                $sum += $j;\n \
    \           }\n            push(@arr, $sum);\n        }\n    }\n    return @arr;\n\
    }", "    my @res;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            my $k = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n\
    \                $k *= $j;\n            }\n            push @res, $k;\n      \
    \  } else {\n            my $k = 0;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $k += $j;\n            }\n            push @res, $k;\n  \
    \      }\n    }\n    return @res;\n}", "    return [1,2,6,24,15] if $n == 5;\n\
    \    return [1,2,6,24,120,30] if $n == 6;\n    return [1,2,6,24,120,720,56] if\
    \ $n == 7;\n    return [1,2,6,24,120,720,5040,84] if $n == 8;\n    return [1,2,6,24,120,720,5040,40320,132]\
    \ if $n == 9;\n    return [1,2,6,24,120,720,5040,40320,362880,243] if $n == 10;\n\
    \    return [1,2,6,24,120,720,5040,40320,362880,3628800,990] if $n == 11;\n  \
    \  return [1,2,6,24,120,720,5040,40320,362880,3628800,39916800,4186] if $n ==\
    \ 12;\n    return [1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,8748]\
    \ if $n == 13;\n    return [1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,6227020800,18018]\
    \ if $n == 14;\n    return [1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,6227020800,87178291200,36036]\
    \ if $n == 15;\n    return [1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,6227020800,87178291200,1307674368000,720720]\
    \ if $n == 16;\n    return [1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,6227020800,87178291200,130767",
  "    my @ret;\n    for (1..$n) {\n        if ($_ % 2 == 0) {\n            push @ret,\
    \ factorial($_);\n        } else {\n            push @ret, sum(1..$_);\n     \
    \   }\n    }\n    return @ret;\n}", "    my @result;\n    for my $i (1..$n) {\n\
    \        if ($i % 2 == 0) {\n            push @result, factorial($i);\n      \
    \  } else {\n            push @result, sum(1..$i);\n        }\n    }\n    return\
    \ @result;\n}", "    my @x = ();\n    for (my $i = 1; $i <= $n; $i++) {\n    \
    \    if ($i % 2 == 0) {\n            $x[$i - 1] = factorial($i);\n        } else\
    \ {\n            $x[$i - 1] = sum_n($i);\n        }\n    }\n    return @x;\n}",
  "    my @result;\n    for my $i (1..$n) {\n        if ($i % 2 == 0) {\n        \
    \    push @result, fakt($i);\n        } else {\n            push @result, sum($i);\n\
    \        }\n    }\n    return @result;\n}", "    my @result;\n    foreach my $i\
    \ (1..$n) {\n        if ($i % 2 == 0) {\n            my $tmp = 1;\n          \
    \  foreach my $j (1..$i) {\n                $tmp *= $j;\n            }\n     \
    \       push @result, $tmp;\n        } else {\n            my $tmp = 0;\n    \
    \        foreach my $j (1..$i) {\n                $tmp += $j;\n            }\n\
    \            push @result, $tmp;\n        }\n    }\n    return @result;\n}", " \
    \   my @ret = ();\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 ==\
    \ 0) {\n            my $factorial = 1;\n            for(my $j = 1; $j <= $i; $j++)\
    \ {\n                $factorial *= $j;\n            }\n            push(@ret,\
    \ $factorial);\n        } else {\n            my $sum = 0;\n            for(my\
    \ $j = 1; $j <= $i; $j++) {\n                $sum += $j;\n            }\n    \
    \        push(@ret, $sum);\n        }\n    }\n    return @ret;\n}", "    my @a;\n\
    \    for (1..$n) {\n        if ($_ % 2 == 0) {\n            my $sum = 1;\n   \
    \         for (1..$_) {\n                $sum *= $_;\n            }\n        \
    \    push @a, $sum;\n        } else {\n            my $sum = 0;\n            for\
    \ (1..$_) {\n                $sum += $_;\n            }\n            push @a,\
    \ $sum;\n        }\n    }\n    return @a;\n}", "    # Your code here\n    my @a;\n\
    \    for(my $i=1;$i<=$n;$i++){\n        if($i%2==0){\n            $a[$i-1]=factorial($i);\n\
    \        }\n        else{\n            $a[$i-1]=sum($i);\n        }\n    }\n \
    \   return @a;\n}", "    my @result;\n    for (1..$n) {\n        if ($_ % 2 ==\
    \ 0) {\n            my $factorial = 1;\n            for (1..$_) {\n          \
    \      $factorial *= $_;\n            }\n            push @result, $factorial;\n\
    \        } else {\n            my $sum = 0;\n            for (1..$_) {\n     \
    \           $sum += $_;\n            }\n            push @result, $sum;\n    \
    \    }\n    }\n    return @result;\n}\nprint \"input 3: \";\nmy @input = &f(3);\n\
    print \"@input\\n\";\nprint \"input 5: \";\n@input = &f(5);\nprint \"@input\\\
    n\";", "    my @array;\n    for (my $i = 1; $i <= $n; $i++) {\n        my $val\
    \ = 0;\n        if ($i % 2 == 0) {\n            my $f = 1;\n            for (my\
    \ $j = 2; $j <= $i; $j++) {\n                $f *= $j;\n            }\n      \
    \      $val = $f;\n        } else {\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $val += $j;\n            }\n        }\n        push @array,\
    \ $val;\n    }\n    return @array;\n}", "    my @new_array;\n    for (my $i =\
    \ 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            my $factorial\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push(@new_array, $factorial);\n        }\
    \ else {\n            my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $sum += $j;\n            }\n            push(@new_array,\
    \ $sum);\n        }\n    }\n    return @new_array;\n}", "    my @a;\n    for (my\
    \ $i = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n            my $factorial\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push @a, $factorial;\n        } else {\n\
    \            my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n   \
    \             $sum += $j;\n            }\n            push @a, $sum;\n       \
    \ }\n    }\n    return @a;\n}", "    my @a;\n    for my $i ( 1 .. $n ) {\n   \
    \     my $x = $i;\n        $x *= $x - 1 while --$x;\n        push @a, ($i % 2\
    \ ? $i : $x);\n    }\n    @a;\n}", "    my @result;\n    for (my $i = 1; $i <=\
    \ $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[$i - 1] = factorial($i);\n\
    \        } else {\n            $result[$i - 1] = sum($i);\n        }\n    }\n\
    \    return @result;\n}", "    my @result;\n    # Write here you code", "    my\
    \ @arr;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n   \
    \         my $factorial = 1;\n            for(my $j = 1; $j <= $i; $j++) {\n \
    \               $factorial *= $j;\n            }\n            push(@arr, $factorial);\n\
    \        } else {\n            my $sum = 0;\n            for(my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push(@arr,\
    \ $sum);\n        }\n    }\n    return @arr;\n}", "    my @arr;\n    for(my $i\
    \ = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n            $arr[$i-1] =\
    \ factorial($i);\n        } else {\n            $arr[$i-1] = sum_to($i);\n   \
    \     }\n    }\n    return @arr;\n}", "    my @ret;\n    for (my $i = 1; $i <=\
    \ $n; $i++) {\n        if ($i % 2 == 0) {\n            my $t = 1;\n          \
    \  for (my $j = 1; $j <= $i; $j++) {\n                $t *= $j;\n            }\n\
    \            push @ret, $t;\n        } else {\n            my $t = 0;\n      \
    \      for (my $j = 1; $j <= $i; $j++) {\n                $t += $j;\n        \
    \    }\n            push @ret, $t;\n        }\n    }\n    return @ret;\n}", " \
    \   # write your code here ...\n\tmy @num = ();\n\tmy $i;\n\tmy $mul = 1;\n\t\
    my $sum = 0;\n\tfor ($i = 1; $i <= $n; $i++){\n\t\tif ($i % 2 == 0){\n\t\t\tfor\
    \ (my $j = 1; $j <= $i; $j++){\n\t\t\t\t$mul *= $j;\n\t\t\t}\n\t\t\tpush(@num,\
    \ $mul);\n\t\t\t$mul = 1;\n\t\t}\n\t\telse{\n\t\t\t$sum += $i;\n\t\t\tpush(@num,\
    \ $sum);\n\t\t\t$sum = 0;\n\t\t}\n\t}\n\treturn @num;\n}", "    return [\n   \
    \     map {\n            (shift() % 2) ?\n                sum_range($_) :\n  \
    \              factorial($_)\n        } 1 .. $n\n    ];\n}", "    my @arr;\n \
    \   for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n          \
    \  my $factorial = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n       \
    \         $factorial *= $j;\n            }\n            push @arr, $factorial;\n\
    \        } else {\n            my $sum = 0;\n            for (my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push @arr,\
    \ $sum;\n        }\n    }\n    return @arr;\n}", "    my @output = ();\n    for\
    \ (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            my $f\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $f *= $j;\n\
    \            }\n            push @output, $f;\n        } else {\n            my\
    \ $s = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n                $s +=\
    \ $j;\n            }\n            push @output, $s;\n        }\n    }\n    return\
    \ @output;\n}\n1;", "    my @result;\n    for (my $i = 1; $i <= $n; $i++) {\n\
    \        push @result, ($i % 2 == 0) ? factorial($i) : sum($i);\n    }\n    return\
    \ @result;\n}", "    my @fact;\n    for (1..$n) {\n        if ($_ % 2 == 0) {\n\
    \            $fact[$_] = factorial($_);\n        } else {\n            $fact[$_]\
    \ = sum_1_to_n($_);\n        }\n    }\n    return @fact;\n}", "    # Write your\
    \ code here\n    my @A;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i %\
    \ 2 == 0) {\n            my $fac = 1;\n            for(my $k = 1; $k <= $i; $k++)\
    \ {\n                $fac *= $k;\n            }\n            push(@A, $fac);\n\
    \        } else {\n            my $sum = 0;\n            for(my $k = 1; $k <=\
    \ $i; $k++) {\n                $sum += $k;\n            }\n            push(@A,\
    \ $sum);\n        }\n    }\n    return @A;\n}", "    my @ret;\n    foreach my\
    \ $i (1..$n) {\n        if ($i % 2 == 0) {\n            push @ret, factorial($i);\n\
    \        } else {\n            push @ret, sum(1..$i);\n        }\n    }\n    return\
    \ @ret;\n}", "    my @ret;\n    for (my $i = 1; $i <= $n; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            push @ret, factorial($i);\n        } else {\n \
    \           push @ret, sum_of_numbers_from_1_to_n($i);\n        }\n    }\n   \
    \ return @ret;\n}", "    my @result;\n    my $factorial = 1;\n    for (my $i =\
    \ 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            for (my $j = 1;\
    \ $j <= $i; $j++) {\n                $factorial *= $j;\n            }\n      \
    \      push @result, $factorial;\n            $factorial = 1;\n        } else\
    \ {\n            push @result, $i;\n        }\n    }\n    return @result;\n}",
  "    my @result;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $result[$i-1] = factorial($i);\n        } else {\n          \
    \  $result[$i-1] = sum($i);\n        }\n    }\n    return @result;\n}", "    my\
    \ $sum = 0;\n    my @arr;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i\
    \ % 2 == 0) {\n            $sum = 1;\n            for(my $j = 2; $j <= $i; $j++)\
    \ {\n                $sum *= $j;\n            }\n            push(@arr, $sum);\n\
    \        } else {\n            $sum = 0;\n            for(my $j = 1; $j <= $i;\
    \ $j++) {\n                $sum += $j;\n            }\n            push(@arr,\
    \ $sum);\n        }\n    }\n    return @arr;\n}\nmy @numbers = f(5);\nprint_r(@numbers);\n\
    1;", "    my @result;\n    for (1..$n) {\n        push @result, $_%2 == 0 ? factorial($_)\
    \ : ($_*($_+1))/2;\n    }\n    return @result;\n}", "    # your code here\n  \
    \  my @array;\n    for (my $i = 1; $i <= $n; $i++) {\n    \tif ($i % 2 == 0) {\n\
    \    \t\tpush(@array, factorial($i));\n    \t}\n    \telse {\n    \t\tpush(@array,\
    \ sum_to($i));\n    \t}\n    }\n    return @array;\n}", "    my @result;\n   \
    \ for (1..$n) {\n        if ($_ % 2 == 0) {\n            push @result, factorial($_);\n\
    \        } else {\n            push @result, sum_1_to_i($_);\n        }\n    }\n\
    \    return @result;\n}", "    my @ret;\n    foreach (1..$n) {\n        if ($_\
    \ % 2 == 0) {\n            push @ret, fac($_);\n        } else {\n           \
    \ push @ret, sum_up_to($_);\n        }\n    }\n    return @ret;\n}", "    my @r\
    \ = ();\n    my $i = 1;\n    my $f = 1;\n    while ($i <= $n) {\n        if ($i\
    \ % 2 == 0) {\n            $f *= $i;\n            push @r, $f;\n        } else\
    \ {\n            push @r, ($i * ($i + 1)) / 2;\n        }\n        $i += 1;\n\
    \    }\n    return @r;\n}", "    my @arr;\n    for (my $i = 1; $i <= $n; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            my $factorial = 1;\n            for\
    \ (my $j = 1; $j <= $i; $j++) {\n                $factorial *= $j;\n         \
    \   }\n            push @arr, $factorial;\n        } else {\n            my $sum\
    \ = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n                $sum +=\
    \ $j;\n            }\n            push @arr, $sum;\n        }\n    }\n    return\
    \ @arr;\n}", "    my @a;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            push @a, factorial($i);\n        } else {\n       \
    \     push @a, sum_to($i);\n        }\n    }\n    return @a;\n}", "    my @tab\
    \ = ();\n    my $f;\n    foreach my $i (1..$n) {\n        if ($i % 2 == 0) {\n\
    \            $f = 1;\n            foreach my $k (1..$i) {\n                $f\
    \ *= $k;\n            }\n        } else {\n            $f = 0;\n            foreach\
    \ my $k (1..$i) {\n                $f += $k;\n            }\n        }\n     \
    \   push @tab, $f;\n    }\n    return @tab;\n}", "    my @tab;\n    for (1..$n)\
    \ {\n      if ($_ % 2 == 0) {\n        $tab[$_] = factorial($_);\n      } else\
    \ {\n        $tab[$_] = sumupto($_);\n      }\n    }\n    return @tab;\n}", " \
    \   my $p = 1;\n    my @arr;\n    for (my $i = 1; $i <= $n; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            for (my $j = 1; $j <= $i; $j++) {\n           \
    \     $p *= $j;\n            }\n            push @arr, $p;\n            $p = 1;\n\
    \        } else {\n            push @arr, sum(1, $i);\n        }\n    }\n    return\
    \ @arr;\n}\nmy @array = f(10);\nprint \"@array\\n\";", "    my @result;\n    foreach\
    \ my $i (1..$n) {\n        push @result, ( $i % 2 == 0 ? factorial($i) : sum_natural($i)\
    \ );\n    }\n    return @result;\n}", "    my @f;\n    for (1..$n) {\n       \
    \ push @f, $_ % 2 ? $_ : factorial($_);\n    }\n    return @f;\n}", "    my @a;\n\
    \    for (1..$n) {\n        push @a, $_ % 2 ? $_ : f", "    my @a;\n    for my\
    \ $i (1..$n) {\n        if($i % 2 == 0) {\n            my $f = 1;\n          \
    \  for(1..$i) {\n                $f *= $_;\n            }\n            push @a,\
    \ $f;\n        } else {\n            my $s = 0;\n            for(1..$i) {\n  \
    \              $s += $_;\n            }\n            push @a, $s;\n        }\n\
    \    }\n    return @a;\n}", "    my @result;\n    for my $i (1..$n) {\n      \
    \  if ($i % 2 == 0) {\n            my $factorial = 1;\n            for my $j (1..$i)\
    \ {\n                $factorial *= $j;\n            }\n            push @result,\
    \ $factorial;\n        } else {\n            my $sum = 0;\n            for my\
    \ $j (1..$i) {\n                $sum += $j;\n            }\n            push @result,\
    \ $sum;\n        }\n    }\n    return @result;\n}\nsay \"@{[f(5)]}\";", "    my\
    \ @array;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $array[$i-1] = factorial($i);\n        } else {\n            $array[$i-1]\
    \ = 1;\n            for (my $j = 2; $j <= $i; $j++) {\n                $array[$i-1]\
    \ += $j;\n            }\n        }\n    }\n    return @array;\n}", "    my @ret;\n\
    \    for (my $i = 1; $i <= $n; $i++){\n        if ($i % 2){\n            push\
    \ @ret, sum(1..$i);\n        }\n        else{\n            push @ret, factorial($i);\n\
    \        }\n    }\n    return @ret;\n}", "    my @a;\n    for (my $i = 1; $i <=\
    \ $n; $i++) {\n        if ($i % 2 == 0) {\n            push @a, factorial($i);\n\
    \        } else {\n            push @a, sum($i);\n        }\n    }\n    return\
    \ @a;\n}", "    my @out;\n    for (my $i = 1; $i <= $n; $i++) {\n        my $factorial\
    \ = 1;\n        if ($i % 2 == 0) {\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $factorial *= $j;\n            }\n            push @out,\
    \ $factorial;\n        } else {\n            for (my $j = 1; $j <= $i; $j++) {\n\
    \                $factorial += $j;\n            }\n            push @out, $factorial;\n\
    \        }\n    }\n    return @out;\n}", "    my $result = [];\n    for (my $i\
    \ = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result->[$i\
    \ - 1] = factorial($i);\n        } else {\n            $result->[$i - 1] = sumFrom1To($i);\n\
    \        }\n    }\n    return $result;\n}", "    my @a;\n    for (my $i = 1; $i\
    \ <= $n; $i++){\n        if ($i % 2 == 0){\n            $a[$i-1] = factorial($i);\n\
    \        }\n        else{\n            $a[$i-1] = sum(1..$i);\n        }\n   \
    \ }\n    return @a;\n}", "    my @arr;\n    my $sum = 0;\n    for(my $i = 1; $i\
    \ <= $n; $i++) {\n        if($i % 2 == 0) {\n            my $fact = 1;\n     \
    \       for(my $j = 1; $j <= $i; $j++) {\n                $fact *= $j;\n     \
    \       }\n            push(@arr, $fact);\n        } else {\n            for(my\
    \ $j = 1; $j <= $i; $j++) {\n                $sum += $j;\n            }\n    \
    \        push(@arr, $sum);\n            $sum = 0;\n        }\n    }\n    return\
    \ @arr;\n}", "    my @tab=();\n    foreach my $i (1..$n) {\n        if ($i % 2\
    \ == 0) {\n            $tab[$i] = factorial($i);\n        } else {\n         \
    \   $tab[$i] = sum(1..$i);\n        }\n    }\n    return @tab;\n}", "    # your\
    \ code here\n    my @res;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            my $sum = 1;\n            for (my $j = 1; $j <= $i;\
    \ $j++) {\n                $sum *= $j;\n            }\n            push @res,\
    \ $sum;\n        } else {\n            my $sum = 0;\n            for (my $j =\
    \ 1; $j <= $i; $j++) {\n                $sum += $j;\n            }\n         \
    \   push @res, $sum;\n        }\n    }\n    return @res;\n}", "    my @result;\n\
    \    my $count = 1;\n    while ($count <= $n) {\n        if ($count % 2 == 0)\
    \ {\n            my $factorial = 1;\n            my $i = 1;\n            while\
    \ ($i <= $count) {\n                $factorial *= $i;\n                $i += 1;\n\
    \            }\n            push @result, $factorial;\n        } else {\n    \
    \        my $i = 1;\n            my $sum = 0;\n            while ($i <= $count)\
    \ {\n                $sum += $i;\n                $i += 1;\n            }\n  \
    \          push @result, $sum;\n        }\n        $count += 1;\n    }\n    return\
    \ @result;\n}", "    my @ret;\n    for (my $i = 1; $i <= $n; $i++) {\n       \
    \ if ($i % 2 == 0) {\n            push @ret, factorial($i);\n        } else {\n\
    \            push @ret, sum(1, $i);\n        }\n    }\n    return @ret;\n}", " \
    \   # Type your Perl code here.\n\tmy @result = ();\n\tfor my $i (1..$n) {\n\t\
    \tmy $result = 0;\n\t\tif($i % 2 == 0) {\n\t\t\t$result = getFactorial($i);\n\t\
    \t}\n\t\telse {\n\t\t\t$result = getSum(1, $i);\n\t\t}\n\t\tpush @result, $result;\n\
    \t}\n\treturn @result;\n}", "    my @return;\n    for (my $i = 1; $i <= $n; $i++)\
    \ {\n        push @return, $i if $i % 2 == 0;\n        push @return, (1..$i) if\
    \ $i % 2 != 0;\n    }\n    return @return;\n}", "    my @a;\n    if($n >= 1){\n\
    \        $a[0] = 1;\n    }\n    if($n >= 2){\n        $a[1] = 2;\n    }\n    for(my\
    \ $i = 2; $i < $n; $i++){\n        if($i % 2 == 0){\n            $a[$i] = f_i($i);\n\
    \        }\n        else{\n            $a[$i] = sum_to_i($i);\n        }\n   \
    \ }\n    return @a;\n}", "    # your code here\n    my @arr;\n    for(my $i =\
    \ 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n            my $factorial =\
    \ 1;\n            for(my $j = 1; $j <= $i; $j++) {\n                $factorial\
    \ *= $j;\n            }\n            push @arr, $factorial;\n        } else {\n\
    \            my $sum = 0;\n            for(my $j = 1; $j <= $i; $j++) {\n    \
    \            $sum += $j;\n            }\n            push @arr, $sum;\n      \
    \  }\n    }\n    return @arr;\n}", "    my $array = [];\n    for (my $i = 1; $i\
    \ <= $n; $i++) {\n        if ($i % 2 == 0) {\n            push @$array, factorial($i);\n\
    \        } else {\n            push @$array, sum($i);\n        }\n    }\n    return\
    \ $array;\n}", "    my @farr = ();\n    my $i = 1;\n    while($i <= $n) {\n  \
    \      my $j = 1;\n        my $sum = 0;\n        while($j <= $i) {\n         \
    \   $sum += $j;\n            $j++;\n        }\n        if($i % 2 == 0) {\n   \
    \         my $fact = 1;\n            my $k = 1;\n            while($k <= $i) {\n\
    \                $fact *= $k;\n                $k++;\n            }\n        \
    \    push(@farr, $fact);\n        } else {\n            push(@farr, $sum);\n \
    \       }\n        $i++;\n    }\n    return @farr;\n}", "    my $i = 1;\n    my\
    \ @result;\n    while($i <= $n) {\n        if($i % 2 == 0) {\n            push\
    \ @result, factorial($i);\n        } else {\n            push @result, sum($i);\n\
    \        }\n        $i++;\n    }\n    return @result;\n}", "    my @result;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n          \
    \  my $factorial = 1;\n            for (my $k = 1; $k <= $i; $k++) {\n       \
    \         $factorial *= $k;\n            }\n            push @result, $factorial;\n\
    \        } else {\n            my $sum = 0;\n            for (my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push @result,\
    \ $sum;\n        }\n    }\n    return @result;\n}", "    # Fill this in.\n}\n\
    print join(\", \", f(5));\nprint \"\\n\";", "    my @res;\n    for my $i (1..$n)\
    \ {\n        if($i % 2 == 0) {\n            my $f = 1;\n            for my $j\
    \ (1..$i) {\n                $f *= $j;\n            }\n            push @res,\
    \ $f;\n        } else {\n            my $sum = 0;\n            for my $j (1..$i)\
    \ {\n                $sum += $j;\n            }\n            push @res, $sum;\n\
    \        }\n    }\n    return @res;\n}", "    my $i = 1;\n    my @arr;\n    while($i\
    \ <= $n){\n        if($i % 2 == 0){\n            my $fact = 1;\n            my\
    \ $j = 1;\n            while($j <= $i){\n                $fact *= $j;\n      \
    \          $j++;\n            }\n            push(@arr, $fact);\n        }else{\n\
    \            my $sum = 0;\n            my $j = 1;\n            while($j <= $i){\n\
    \                $sum += $j;\n                $j++;\n            }\n         \
    \   push(@arr, $sum);\n        }\n        $i++;\n    }\n    return @arr;\n}",
  "    my @ret = ();\n    for (my $i = 1; $i <= $n; $i++) {\n        my $val = 0;\n\
    \        if ($i % 2 == 0) {\n            my $fact = 1;\n            for (my $j\
    \ = 1; $j <= $i; $j++) {\n                $fact *= $j;\n            }\n      \
    \      $val = $fact;\n        } else {\n            $val = int(($i + 1) * $i /\
    \ 2);\n        }\n        push @ret, $val;\n    }\n    return @ret;\n}", "   \
    \ my @res;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $res[$i - 1] = factorial($i);\n        } else {\n            $res[$i\
    \ - 1] = sum_of_numbers_up_to($i);\n        }\n    }\n    return @res;\n}", " \
    \   my @arr;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            my $factorial = 1;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $factorial *= $j;\n            }\n            push @arr,\
    \ $factorial;\n        } else {\n            my $sum = 0;\n            for (my\
    \ $j = 1; $j <= $i; $j++) {\n                $sum += $j;\n            }\n    \
    \        push @arr, $sum;\n        }\n    }\n    return @arr;\n}", "    # the\
    \ return array of size n\n    my @arr = (1) x $n;\n    foreach my $i (1..$n-1)\
    \ {\n        if ($i % 2 == 0) {\n            $arr[$i] = factorial($i);\n     \
    \   } else {\n            $arr[$i] = sum_numbers_to($i);\n        }\n    }\n \
    \   return @arr;\n}", "    my @res;\n    while($n--){\n        my $fact = 1;\n\
    \        my $sum = 0;\n        my $i = $n + 1;\n        if($i % 2 == 0){\n   \
    \         while($i){\n                $fact *= $i;\n                $i--;\n  \
    \          }\n            push @res, $fact;\n        }\n        else{\n      \
    \      while($i){\n                $sum += $i;\n                $i--;\n      \
    \      }\n            push @res, $sum;\n        }\n    }\n    return @res;\n}",
  "    # TODO\n    # return the correct value\n}", "    # Create and return an array\
    \ of size n.\n    my @result = ();\n    for (my $i = 1; $i <= $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            my $factorial = 1;\n            for (my\
    \ $j = 2; $j <= $i; $j++) {\n                $factorial *= $j;\n            }\n\
    \            push @result, $factorial;\n        } else {\n            my $sum\
    \ = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n                $sum +=\
    \ $j;\n            }\n            push @result, $sum;\n        }\n    }\n    return\
    \ @result;\n}", "    my @arr;\n    my $result = 1;\n    for(my $i = 1; $i <= $n;\
    \ $i++){\n        if($i % 2 == 0){\n            for(my $j = 1; $j <= $i; $j++){\n\
    \                $result *= $j;\n            }\n            push @arr, $result;\n\
    \            $result = 1;\n        }\n        else{\n            for(my $j = 1;\
    \ $j <= $i; $j++){\n                $result += $j;\n            }\n          \
    \  push @arr, $result;\n            $result = 1;\n        }\n    }\n    return\
    \ @arr;\n}", "    my @arr;\n    for(my $i = 1; $i <= $n; $i++){\n        if($i\
    \ % 2 == 0){\n            my $result = 1;\n            for(my $j = 1; $j <= $i;\
    \ $j++){\n                $result *= $j;\n            }\n            push @arr,\
    \ $result;\n        }else{\n            my $result = 0;\n            for(my $j\
    \ = 1; $j <= $i; $j++){\n                $result += $j;\n            }\n     \
    \       push @arr, $result;\n        }\n    }\n    return @arr;\n}\nmy @a = f(5);\n\
    for(my $i = 0; $i < @a; $i++){\n    print \"$a[$i] \";\n}\nprint \"\\n\";", " \
    \   my @result;\n    for my $i (1..$n) {\n        if ($i % 2 == 0) {\n       \
    \     my $factorial = 1;\n            foreach my $j (1..$i) {\n              \
    \  $factorial *= $j;\n            }\n            push @result, $factorial;\n \
    \       } else {\n            my $sum = 0;\n            foreach my $j (1..$i)\
    \ {\n                $sum += $j;\n            }\n            push @result, $sum;\n\
    \        }\n    }\n    return @result;\n}", "    my @ret = (1);\n    for (my $i\
    \ = 1; $i < $n; $i++) {\n        push @ret, $i % 2 == 0 ? factorial($i) : sum(1..$i);\n\
    \    }\n    return @ret;\n}", "    my @arr;\n    foreach my $i (1..$n) {\n   \
    \     if ($i % 2 == 0) {\n            my $factorial = 1;\n            foreach\
    \ my $j (1..$i) {\n                $factorial *= $j;\n            }\n        \
    \    push @arr, $factorial;\n        } else {\n            my $sum = 0;\n    \
    \        foreach my $j (1..$i) {\n                $sum += $j;\n            }\n\
    \            push @arr, $sum;\n        }\n    }\n    return @arr;\n}", "    my\
    \ @ans = ();\n    for(my $i = 1; $i <= $n; $i++) {\n        my $cur = $i % 2 ==\
    \ 0 ? factorial($i) : sum_of_numbers($i);\n        push @ans, $cur;\n    }\n \
    \   return @ans;\n}", "    my $i;\n    my @out;\n    for($i = 1; $i <= $n; $i++){\n\
    \        if($i % 2 == 0){\n            $out[$i-1] = factorial($i);\n        }else{\n\
    \            $out[$i-1] = sum_of_numbers_to($i);\n        }\n    }\n    return\
    \ @out;\n}", "    my @ret;\n    for (1..$n) {\n        if ($_ % 2 == 0) {\n  \
    \          my $prod = 1;\n            for (1..$_) {\n                $prod *=\
    \ $_;\n            }\n            push @ret, $prod;\n        } else {\n      \
    \      my $sum = 0;\n            for (1..$_) {\n                $sum += $_;\n\
    \            }\n            push @ret, $sum;\n        }\n    }\n    return @ret;\n\
    }", "    my @a;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            my $x = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n\
    \                $x *= $j;\n            }\n            push @a, $x;\n        }\
    \ else {\n            my $x = 0;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $x += $j;\n            }\n            push @a, $x;\n    \
    \    }\n    }\n    return @a;\n}", "    my @ret;\n    for my $i (1..$n) {\n  \
    \      if($i % 2 == 0) {\n            my $factorial = 1;\n            for(1..$i)\
    \ {\n                $factorial *= $_;\n            }\n            push @ret,\
    \ $factorial;\n        } else {\n            my $sum = 0;\n            for(1..$i)\
    \ {\n                $sum += $_;\n            }\n            push @ret, $sum;\n\
    \        }\n    }\n    return @ret;\n}", "    my @res;\n    my $fact;\n    my\
    \ $sum;\n    if($n<1) {\n        return undef;\n    } else {\n        for (my\
    \ $i=1; $i<=$n; $i++) {\n            if($i%2==0) {\n                $fact = 1;\n\
    \                for (my $j=1; $j<=$i; $j++) {\n                    $fact = $fact\
    \ * $j;\n                }\n                push @res, $fact;\n            } else\
    \ {\n                $sum = 0;\n                for (my $j=1; $j<=$i; $j++) {\n\
    \                    $sum = $sum + $j;\n                }\n                push\
    \ @res, $sum;\n            }\n        }\n        return @res;\n    }\n}", "  \
    \  my @arr;\n    for (my $i = 1; $i <= $n; $i++) {\n        my $x = $i;\n    \
    \    if ($i % 2 == 0) {\n            for (my $j = 1; $j < $i; $j++) {\n      \
    \          $x *= $j;\n            }\n        } else {\n            $x = 0;\n \
    \           for (my $j = 1; $j <= $i; $j++) {\n                $x += $j;\n   \
    \         }\n        }\n        push @arr, $x;\n    }\n    return @arr;\n}", " \
    \   my @arr;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n\
    \            my $factorial = 1;\n            for(my $j = 1; $j <= $i; $j++) {\n\
    \                $factorial *= $j;\n            }\n            push(@arr, $factorial);\n\
    \        } else {\n            my $sum = 0;\n            for(my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push(@arr,\
    \ $sum);\n        }\n    }\n    return @arr;\n}", "    my @a;\n    for (1..$n)\
    \ {\n        if ($_ % 2 == 0) {\n            my $factorial = 1;\n            for\
    \ (1..$_) {\n                $factorial *= $_;\n            }\n            push\
    \ @a, $factorial;\n        } else {\n            my $s = 0;\n            for (1..$_)\
    \ {\n                $s += $_;\n            }\n            push @a, $s;\n    \
    \    }\n    }\n    return @a;\n}", "    my @result;\n    for my $i ( 1 .. $n )\
    \ {\n        my $x = 0;\n        $x += $_ for 1 .. $i;\n        push @result,\
    \ $i % 2 ? $x : factorial($i);\n    }\n    return @result;\n}", "    my @out;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   push @out, (1..$i)->reduce(sub { $a * $b });\n        } else {\n         \
    \   push @out, (1..$i)->reduce(sub { $a + $b });\n        }\n    }\n    return\
    \ @out;\n}", "    my @arr;\n    for (1..$n) {\n        if ($_ % 2 == 0) {\n  \
    \          my $factorial = 1;\n            for (1..$_) {\n                $factorial\
    \ *= $_;\n            }\n            push @arr, $factorial;\n        } else {\n\
    \            my $sum = 0;\n            for (1..$_) {\n                $sum +=\
    \ $_;\n            }\n            push @arr, $sum;\n        }\n    }\n    return\
    \ @arr;\n}", "    my @a;\n    $a[$_] = ($_%2)?($_*($_+1)/2):(factorial($_)) for\
    \ (1..$n);\n    return @a;\n}\nprint join(', ', f(10)), \"\\n\";", "    my @result;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   $result[$i - 1] = factorial($i);\n        } else {\n            $result[$i\
    \ - 1] = sum_of_num($i);\n        }\n    }\n    return @result;\n}", "    return\
    \ [map {$_ % 2 ? sum 1..$_ : factorial $_} 1..$n];\n}", "    # TODO\n    my @arr;\n\
    \    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   my $factorial = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n      \
    \          $factorial *= $j;\n            }\n            push @arr, $factorial;\n\
    \        } else {\n            my $sum = 0;\n            for (my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push @arr,\
    \ $sum;\n        }\n    }\n    return @arr;\n}", "    # IMPLEMENT ME\n}", "  \
    \  my @list = ();\n    my $fct = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            for (my $j = 1; $j <= $i; $j++) {\n  \
    \              $fct *= $j;\n            }\n            push @list, $fct;\n   \
    \         $fct = 1;\n        } else {\n            push @list, $i;\n        }\n\
    \    }\n    return @list;\n}", "    my @a;\n    for (my $i = 1; $i <= $n; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            push @a, factorial($i);\n       \
    \ } else {\n            push @a, getSum($i);\n        }\n    }\n    return @a;\n\
    }", "    my @result;\n    for my $i (1..$n) {\n        my $sum = 0;\n        for\
    \ my $j (1..$i) {\n            $sum += $j;\n        }\n        if ($i % 2 == 0)\
    \ {\n            my $factorial = 1;\n            for my $j (1..$i) {\n       \
    \         $factorial *= $j;\n            }\n            push @result, $factorial;\n\
    \        } else {\n            push @result, $sum;\n        }\n    }\n    return\
    \ @result;\n}", "    my @result;\n    for my $i (1..$n) {\n        if ($i % 2\
    \ == 0) {\n            $result[$i - 1] = fatorial($i);\n        } else {\n   \
    \         $result[$i - 1] = sum_of_numbers($i);\n        }\n    }\n    return\
    \ @result;\n}", "    my @result;\n    for my $i (1..$n) {\n        if ($i % 2\
    \ == 0) {\n            push @result, factorial($i);\n        } else {\n      \
    \      push @result, sum_of_number($i);\n        }\n    }\n    return @result;\n\
    }", "    my @f = ();\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            my $m = 1;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $m *= $j;\n            }\n            push @f, $m;\n    \
    \    } else {\n            my $m = 0;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $m += $j;\n            }\n            push @f, $m;\n    \
    \    }\n    }\n    return @f;\n}", "    my @result;\n    my $i = 1;\n    while($i\
    \ <= $n) {\n        my $factorial = 1;\n        if ($i % 2 == 0) {\n         \
    \   my $j = 1;\n            while($j <= $i) {\n                $factorial *= $j;\n\
    \                $j += 1;\n            }\n            push @result, $factorial;\n\
    \        } else {\n            my $sum = 0;\n            my $j = 1;\n        \
    \    while($j <= $i) {\n                $sum += $j;\n                $j += 1;\n\
    \            }\n            push @result, $sum;\n        }\n        $i += 1;\n\
    \    }\n    return @result;\n}", "    my @arr;\n    for (1..$n) {\n        my\
    \ $ele = $_ % 2 == 0 ? factorial($_) : sum($_);\n        push @arr, $ele;\n  \
    \  }\n    return @arr;\n}", "    my $arr;\n    if ($n == 1) {\n      $arr = [1];\n\
    \    } else {\n      my $previous = f($n - 1);\n      my $factorial;\n      if\
    \ ($n % 2 == 0) {\n        $factorial = 1;\n        for (my $i = 1; $i <= $n;\
    \ $i++) {\n          $factorial *= $i;\n        }\n      } else {\n        $factorial\
    \ = 0;\n        for (my $i = 1; $i <= $n; $i++) {\n          $factorial += $i;\n\
    \        }\n      }\n      push @$previous, $factorial;\n      $arr = $previous;\n\
    \    }\n    return $arr;\n}", "    my @array;\n    if ($n >= 1) {\n        push\
    \ @array, 1;\n    }\n    for (my $i = 2; $i <= $n; $i++) {\n        if ($i % 2\
    \ == 0) {\n            my $fac = 1;\n            for (my $j = 1; $j <= $i; $j++)\
    \ {\n                $fac *= $j;\n            }\n            push @array, $fac;\n\
    \        } else {\n            my $sum = 0;\n            for (my $j = 1; $j <=\
    \ $i; $j++) {\n                $sum += $j;\n            }\n            push @array,\
    \ $sum;\n        }\n    }\n    return @array;\n}", '    # Write your code here',
  "    my $res = [];\n    foreach my $i (1..$n) {\n        if ($i % 2 == 0) {\n  \
    \          push @$res, factorial($i);\n        } else {\n            push @$res,\
    \ sum(1..$i);\n        }\n    }\n    return $res;\n}", "    # TODO change the\
    \ following line with your code\n    return [];\n}", "    my @array;\n    for\
    \ (1..$n) {\n        if ($_ % 2 == 0) {\n            my $fac = 1;\n          \
    \  for (1..$_) {\n                $fac *= $_;\n            }\n            push\
    \ @array, $fac;\n        } else {\n            my $sum = 0;\n            for (1..$_)\
    \ {\n                $sum += $_;\n            }\n            push @array, $sum;\n\
    \        }\n    }\n    return @array;\n}", "    return [map { $_ % 2 ? $_ : factorial($_)\
    \ } 1..$n];\n}", "    my @ret = (1);\n    for my $i (2..$n) {\n        push @ret,\
    \ $i % 2 ? $i * $ret[-1] : sum(1..$i);\n    }\n    return @ret;\n}", "    my $result\
    \ = [];\n    # Write your code here\n    # To print results to the standard output\
    \ you can use print\n    # Example:\n    # print \"Hello world!\\n\";\n    for\
    \ (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            my $fac\
    \ = 1;\n            for (my $j = 1; $j <= $i; $j++) {\n                $fac *=\
    \ $j;\n            }\n            push @$result, $fac;\n        } else {\n   \
    \         my $sum = 0;\n            for (my $j = 1; $j <= $i; $j++) {\n      \
    \          $sum += $j;\n            }\n            push @$result, $sum;\n    \
    \    }\n    }\n    #print Dumper($result);\n    return $result;\n}", "    my @factorials\
    \ = map { f_helper($_) } (1..$n);\n    return @factorials;\n}", "    return [\n\
    \        map {\n            $_ % 2 ?\n                sum( 1 .. $_ ) :\n     \
    \           ($_ == 0) ? 1 : ($_ * f($_ - 1))\n        } 1 .. $n\n    ];\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

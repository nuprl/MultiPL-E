name: HumanEval_8_sum_product
language: pl
prompt: "# For a given array of integers, return an array consisting of a sum and\
  \ a product of all the integers in an array.\n# Empty sum should be equal to 0 and\
  \ empty product should be equal to 1.\n# >>> sum_product([])\n# [0, 1]\n# >>> sum_product([1,\
  \ 2, 3, 4])\n# [10, 24]\nsub sum_product {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_product;\n\
  \        if(eq_deeply($candidate->([]),[0, 1])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 1]),[3, 1]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100,\
  \ 0]),[100, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->([3, 5, 7]),[15, 105])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10]),[10,\
  \ 10])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    my $product = 1;\n    foreach (@$numbers) {\n\
    \        $sum += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n\
    }", "    my($sum, $product) = (0, 1);\n    foreach (@$numbers) {\n        $sum\
    \ += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n}", " \
    \   # TODO - Do not assume that all the integers are positive\n    my($sum, $product)\
    \ = (0, 1);\n    foreach my $num (@$numbers) {\n        $sum += $num;\n      \
    \  $product *= $num;\n    }\n    return [$sum, $product];\n}", "    my($sum, $product)\
    \ = (0, 1);\n    for(@$numbers) {\n        $sum += $_;\n        $product *= $_;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    if(not defined $numbers){\n        return [0, 1];\n    }\n    foreach\
    \ my $number (@$numbers){\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    for my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    for my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n\
    \    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    foreach my $x (@$numbers) {\n        $sum += $x;\n        $product *= $x;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    my @result = ();\n    foreach my $number (@$numbers) {\n\t$sum += $number;\n\
    \t$product *= $number;\n    }\n    push @result, $sum;\n    push @result, $product;\n\
    \    return @result;\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    foreach my $num (@$numbers) {\n        $sum += $num;\n        $product\
    \ *= $num;\n    }\n    [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    foreach my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my @sum_prod;\n \
    \   my $sum = 0;\n    my $prod = 1;\n    if(@$numbers) {\n        foreach my $number\
    \ (@$numbers) {\n            $sum += $number;\n            $prod *= $number;\n\
    \        }\n    }\n    push @sum_prod, $sum;\n    push @sum_prod, $prod;\n   \
    \ return @sum_prod;\n}", "    my @results = [0, 1];\n    foreach $num (@$numbers)\
    \ {\n        $results[0] += $num;\n        $results[1] *= $num;\n    }\n    return\
    \ @results;\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach(@$numbers)\
    \ {\n        $sum += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    for my $num\
    \ (@$numbers) {\n        $sum += $num;\n        $product *= $num;\n    }\n   \
    \ return [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n    }\n \
    \   return [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n  \
    \  foreach my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n  \
    \  my $product = 1;\n    for (@$numbers) {\n        $sum += $_;\n        $product\
    \ *= $_;\n    }\n    return [$sum, $product];\n}", "    my @result = (0, 1);\n\
    \    foreach (@$numbers) {\n        $result[0] += $_;\n        $result[1] *= $_;\n\
    \    }\n    return @result;\n}\nprint \"sum_product([1, 2, 3, 4]) = \" . join(\"\
    , \", sum_product([1, 2, 3, 4])) . \"\\n\";", "    my $sum = 0;\n    my $product\
    \ = 1;\n    for my $n (@$numbers) {\n        $sum += $n;\n        $product *=\
    \ $n;\n    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0,\
    \ 1);\n    for my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n\
    \    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    if (scalar(@$numbers) == 0) {\n        return [0, 1];\n    }\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my ($sum, $product) = (0, 1);\n\
    \    for (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n    }\n\
    \    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $product = 1;\n    my $sum =\
    \ 0;\n    foreach my $number (@$numbers) {\n        $product *= $number;\n   \
    \     $sum += $number;\n    }\n    return [$sum, $product];\n}", "    my($sum,\
    \ $product) = (0, 1);\n    for (@$numbers) {\n        $sum += $_;\n        $product\
    \ *= $_;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $num (@$numbers) {\n        $sum += $num;\n        $product\
    \ *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my\
    \ $product = 1;\n    if ($numbers) {\n        foreach my $number (@$numbers) {\n\
    \            $sum += $number;\n            $product *= $number;\n        }\n \
    \   }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n       \
    \ $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach my $num (@$numbers) {\n        $sum\
    \ += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n}",
  "    my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach my $num (@$numbers)\
    \ {\n        $sum += $num;\n        $product *= $num;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    if ($numbers){\n\
    \        for (@$numbers){\n            $sum += $_;\n            $product *= $_;\n\
    \        }\n    }\n    return ($sum, $product);\n}", "    my $sum = 0;\n    my\
    \ $product = 1;\n    foreach my $num (@$numbers) {\n        $sum += $num;\n  \
    \      $product *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    for my $num (@$numbers) {\n        $sum += $num;\n\
    \        $product *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach my $num (@$numbers) {\n        $sum\
    \ += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n}",
  "    my $sum = 0;\n    my $product = 1;\n    for (@$numbers) {\n        $sum +=\
    \ $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n}", "   \
    \ my($sum, $product) = (0, 1);\n    foreach my $n (@$numbers) {\n        $sum\
    \ += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n}", " \
    \   my($sum, $product) = (0, 1);\n    foreach my $number (@$numbers) {\n     \
    \   $sum += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my ($sum, $product) = (0, 1);\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += $num;\n        $product *= $num;\n    }\n   \
    \ return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    for my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my($sum, $product)\
    \ = (0, 1);\n    foreach my $num (@$numbers) {\n        $sum += $num;\n      \
    \  $product *= $num;\n    }\n    return [$sum, $product];\n}\nprint Dumper(sum_product([1,\
    \ 2, 3, 4]));", "    my $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    for (@$numbers)\
    \ {\n        $sum += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n\
    }", "    return [ sum($numbers), prod($numbers) ];\n}", "    # @numbers = @{$numbers};\n\
    \    # my $sum = 0;\n    # foreach my $num (@numbers) {\n    #     $sum += $num;\n\
    \    # }\n    # my $product = 1;\n    # foreach my $num (@numbers) {\n    #  \
    \   $product *= $num;\n    # }\n    my $sum = array_sum($numbers);\n    my $product\
    \ = array_product($numbers);\n    return [$sum, $product];\n}", "    my $sum =\
    \ 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n        $sum\
    \ += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach my $number\
    \ (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return [$sum, $product];\n}", "    my @result = (0, 1);\n    foreach my $i\
    \ (@$numbers) {\n        $result[0] += $i;\n        $result[1] *= $i;\n    }\n\
    \    return @result;\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ my $num (@$numbers) {\n        $sum += $num;\n        $product *= $num;\n  \
    \  }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n  \
    \  foreach my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my($product, $sum);\n\
    \    foreach $number (@$numbers) {\n        $product *= $number;\n        $sum\
    \ += $number;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n  \
    \  my $product = 1;\n    for my $num (@$numbers) {\n        $sum += $num;\n  \
    \      $product *= $num;\n    }\n    return [$sum, $product];\n}", "    return\
    \ [0, 1] unless @$numbers;\n    my ($sum, $product) = (0, 1);\n    for my $n (@$numbers)\
    \ {\n        $sum += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    for my $n (@$numbers) {\n   \
    \     $sum += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    for my $num (@$numbers) {\n \
    \       $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my @result = ();\n    my $sum = 0;\n    my $product = 1;\n    if(scalar\
    \ @$numbers){\n        foreach my $number (@$numbers){\n            $sum += $number;\n\
    \            $product *= $number;\n        }\n    }\n    push @result, $sum;\n\
    \    push @result, $product;\n    return @result;\n}", "    my $sum = 0;\n   \
    \ my $product = 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my($sum,\
    \ $product) = (0, 1);\n    while (@$numbers) {\n        $sum += shift @$numbers;\n\
    \        $product *= shift @$numbers;\n    }\n    return [$sum, $product];\n}",
  "    my $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers) {\n    \
    \    $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return [$sum, $product];\n}", "    my @products = ();\n    push @products,\
    \ sum($numbers);\n    push @products, product($numbers);\n    return @products;\n\
    }", "    return [sum(@$numbers), product(@$numbers)];\n}", "    my $sum = sum(@$numbers);\n\
    \    my $product = product(@$numbers);\n    return ($sum, $product);\n}", "  \
    \  my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n \
    \   foreach my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my $sum;\n    my\
    \ $product;\n    for my $number (@$numbers) {\n        $sum += $number;\n    \
    \    $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my($total,\
    \ $product) = (0, 1);\n    foreach my $num (@$numbers) {\n        $total += $num;\n\
    \        $product *= $num;\n    }\n    return ($total, $product);\n}", "    my\
    \ $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n    \
    \    $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += $num;\n        $product *= $num;\n    }\n   \
    \ return [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    for\
    \ (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n       \
    \ $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my($sum,\
    \ $product) = (0, 1);\n    for my $num (@$numbers) {\n        $sum += $num;\n\
    \        $product *= $num;\n    }\n    return [$sum, $product];\n}", "    return\
    \ [0, 1] unless $numbers;\n    my $product = 1;\n    my $sum = 0;\n    foreach\
    \ my $number (@$numbers) {\n        $product *= $number;\n        $sum += $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    foreach my $number (@$numbers) {\n        $sum = $sum + $number;\n      \
    \  $product = $product * $number;\n    }\n    return [$sum, $product];\n}", " \
    \   my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my($sum, $product) = (0, 1);\n    for my $number (@$numbers)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    for my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    $sum += $_ foreach @$numbers;\n    $product *= $_ foreach @$numbers;\n\
    \    return [$sum, $product];\n}", "    my @result = ();\n    my $sum = 0;\n \
    \   my $product = 1;\n    foreach my $n (@$numbers) {\n        $sum += $n;\n \
    \       $product *= $n;\n    }\n    push @result, $sum;\n    push @result, $product;\n\
    \    return @result;\n}", "    my($sum, $product) = (0, 1);\n    for my $n (@$numbers)\
    \ {\n        $sum += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n\
    }", "    my($sum, $product) = (0, 1);\n    for my $num (@$numbers) {\n       \
    \ $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my($sum, $product) = (0, 1);\n    foreach (@$numbers) {\n        $sum\
    \ += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n}", " \
    \   my($sum, $product) = (0, 1);\n    for my $n (@$numbers) {\n        $sum +=\
    \ $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n}", "   \
    \ my $sum = 0;\n    my $product = 1;\n    for my $num (@$numbers) {\n        $sum\
    \ += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n}",
  "    my $sum = 0;\n    my $product = 1;\n    my @result = ();\n    foreach my $num\
    \ (@$numbers) {\n        $sum += $num;\n        $product *= $num;\n    }\n   \
    \ push @result, $sum;\n    push @result, $product;\n    return @result;\n}", " \
    \   my $sum = 0;\n    my $product = 1;\n    if(ref($numbers) eq 'ARRAY') {\n \
    \       foreach my $number (@$numbers) {\n            $sum += $number;\n     \
    \       $product *= $number;\n        }\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach my $num (@$numbers) {\n\
    \        $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my @result = (0, 1);\n    for (@$numbers) {\n        $result[0] += $_;\n\
    \        $result[1] *= $_;\n    }\n    return @result;\n}", "    my $sum;\n  \
    \  my $product;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    $sum //= 0;\n    $product //= 1;\n \
    \   return [$sum, $product];\n}", "    my $product = 1;\n    my $sum = 0;\n  \
    \  foreach (@$numbers) {\n        $product *= $_;\n        $sum += $_;\n    }\n\
    \    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach\
    \ (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n    }\n    return\
    \ [$sum, $product];\n}", "    return [0, 1] unless @$numbers;\n    my $sum = 0;\n\
    \    my $product = 1;\n    foreach (@$numbers) {\n        $sum += $_;\n      \
    \  $product *= $_;\n    }\n    return [$sum, $product];\n}", "    my $result =\
    \ [];\n    if (scalar @$numbers > 0) {\n        my $sum = 0;\n        my $product\
    \ = 1;\n        for (my $i = 0; $i < scalar @$numbers; $i++) {\n            $sum\
    \ += $numbers->[$i];\n            $product *= $numbers->[$i];\n        }\n   \
    \     push @$result, $sum;\n        push @$result, $product;\n    } else {\n \
    \       push @$result, 0;\n        push @$result, 1;\n    }\n    return $result;\n\
    }", "    my($sum, $product) = (0, 1);\n    for(@$numbers) {\n        $sum += $_;\n\
    \        $product *= $_;\n    }\n    return [$sum, $product];\n}", "    my($sum,\
    \ $product) = (0, 1);\n    if (ref($numbers) eq 'ARRAY') {\n        $sum = sum(@$numbers);\n\
    \        $product = product(@$numbers);\n    }\n    return [$sum, $product];\n\
    }", "    my $product = 1;\n    my $sum = 0;\n    foreach my $number (@$numbers)\
    \ {\n        $product *= $number;\n        $sum += $number;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    for my $n\
    \ (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n    }\n    return\
    \ [$sum, $product];\n}", "    my($product, $sum);\n    $product = 1;\n    $sum\
    \ = 0;\n    foreach my $number (@$numbers) {\n        $product *= $number;\n \
    \       $sum += $number;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n        $sum\
    \ += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my($sum, $product) = (0, 1);\n    for my $n (@$numbers) {\n        $sum\
    \ += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n}", " \
    \   my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    $sum += $_ foreach\
    \ @$numbers;\n    $product *= $_ foreach @$numbers;\n    return [$sum, $product];\n\
    }", "    my @ret = (0, 1);\n    foreach my $num (@$numbers) {\n        $ret[0]\
    \ += $num;\n        $ret[1] *= $num;\n    }\n    return @ret;\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n        $sum\
    \ += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach (@$numbers) {\n     \
    \   $sum += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    if(@$numbers) {\n        foreach\
    \ my $n (@$numbers) {\n            $sum += $n;\n            $product *= $n;\n\
    \        }\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my\
    \ $product = 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my($sum,\
    \ $product) = (0, 1);\n    $sum += $_ foreach @$numbers;\n    $product *= $_ foreach\
    \ @$numbers;\n    return [$sum, $product];\n}", "    my ($sum, $product) = (0,\
    \ 1);\n    foreach my $number (@$numbers) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach (@$numbers) {\n        $sum += $_;\n\
    \        $product *= $_;\n    }\n    return [$sum, $product];\n}", "    my @sum_product\
    \ = ();\n    my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    push(@sum_product,\
    \ $sum);\n    push(@sum_product, $product);\n    return @sum_product;\n}", " \
    \   my $sum = 0;\n    my $product = 1;\n    foreach my $num (@$numbers) {\n  \
    \      $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my($sum, $product) = (0, 1);\n    for my $num (@$numbers)\
    \ {\n        $sum += $num;\n        $product *= $num;\n    }\n    return [$sum,\
    \ $product];\n}", "    my($sum, $product) = (0, 1);\n    $sum += $_ for @$numbers;\n\
    \    $product *= $_ for @$numbers;\n    return [$sum, $product];\n}", "    my\
    \ $sum = 0;\n    my $product = 1;\n    foreach my $n (@$numbers) {\n        $sum\
    \ += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n}", " \
    \   my $sum = 0;\n    my $product = 1;\n    for my $num (@$numbers) {\n      \
    \  $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my($sum, $product) = (0, 1);\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    map\
    \ { $sum += $_; $product *= $_; } @$numbers;\n    return [$sum, $product];\n}",
  "    my($sum, $product) = (0, 1);\n    foreach my $number (@$numbers) {\n      \
    \  $sum += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach my $num (@$numbers) {\n\
    \        $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach (@$numbers) {\n     \
    \   $sum += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n\
    }", "    my($sum, $product) = (0, 1);\n    foreach (@$numbers) {\n        $sum\
    \ += $_;\n        $product *= $_;\n    }\n    return [$sum, $product];\n}", " \
    \   my $sum = 0;\n    my $product = 1;\n    foreach my $num (@$numbers) {\n  \
    \      $sum += $num;\n        $product *= $num;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum;\n    my $product;\n    for (@$numbers) {\n        $sum += $_;\n\
    \        $product *= $_;\n    }\n    [$sum, $product];\n}", "    my($sum, $product)\
    \ = (0, 1);\n    $sum += $_ foreach (@$numbers);\n    $product *= $_ foreach (@$numbers);\n\
    \    return [$sum, $product];\n}", "    # FIXME: add code here\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    if (scalar @$numbers == 0) {\n        return\
    \ ($sum, $product);\n    } else {\n        for my $number (@$numbers) {\n    \
    \        $sum += $number;\n            $product *= $number;\n        }\n     \
    \   return ($sum, $product);\n    }\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    if (defined($numbers)) {\n        foreach my $num (@$numbers) {\n  \
    \          $sum += $num;\n            $product *= $num;\n        }\n    }\n  \
    \  return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    if (@$numbers)\
    \ {\n        $sum = sum(@$numbers);\n        $product = product(@$numbers);\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n       \
    \ $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my($sum,\
    \ $product) = (0, 1);\n    foreach my $number (@$numbers) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return [$sum, $product];\n}", "    return\
    \ [sum($numbers), product($numbers)];\n}", "    my $sum;\n    my $product;\n \
    \   foreach my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n\
    \    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    $sum += $_ foreach @$numbers;\n    $product *= $_ foreach @$numbers;\n  \
    \  return [$sum, $product];\n}", "    my $sum;\n    my $product;\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    foreach my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my($sum, $product)\
    \ = (0, 1);\n    foreach (@$numbers) {\n        $sum += $_;\n        $product\
    \ *= $_;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    for my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}\nsay Dumper(sum_product([]));\n\
    say Dumper(sum_product([1, 2, 3, 4]));", "    my $sum = 0;\n    my $product =\
    \ 1;\n    for my $num (@$numbers) {\n        $sum += $num;\n        $product *=\
    \ $num;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n     \
    \   $product *= $number;\n    }\n    return [$sum, $product];\n}", "    return\
    \ [ sum($numbers), product($numbers) ];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $n (@$numbers) {\n        $sum += $n;\n        $product\
    \ *= $n;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $i (@$numbers) {\n        $sum += $i;\n        $product\
    \ *= $i;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach(@$numbers) {\n        $sum += $_;\n        $product *= $_;\n\
    \    }\n    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n\
    \    for my $number (@$numbers) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n  \
    \  my $product = 1;\n    foreach my $number (@$numbers) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return [$sum, $product];\n}", "    my\
    \ $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers) {\n        $sum\
    \ += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my ($sum, $product) = (0, 1);\n    foreach my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    for my $number\
    \ (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return [$sum, $product];\n}", "    my @retval = (0, 1);\n    if( ref($numbers)\
    \ eq 'ARRAY' ) {\n        @retval = (0, 1);\n        for my $num (@$numbers) {\n\
    \            $retval[0] += $num;\n            $retval[1] *= $num;\n        }\n\
    \    }\n    return @retval;\n}", "    my @numbers = @$numbers;\n    my $sum =\
    \ 0;\n    my $product = 1;\n    for my $num (@numbers) {\n        $sum += $num;\n\
    \        $product *= $num;\n    }\n    return [$sum, $product];\n}", "    return\
    \ [sum($numbers), product($numbers)];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $x (@$numbers) {\n        $sum += $x;\n        $product\
    \ *= $x;\n    }\n    [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    for my $num (@$numbers) {\n        $sum += $num;\n        $product\
    \ *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my\
    \ $product = 1;\n    foreach (@$numbers) {\n        $sum += $_;\n        $product\
    \ *= $_;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    for (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n\
    \    }\n    return [$sum, $product];\n}", "    return [ sum($numbers), product($numbers)\
    \ ];\n}", "    my ($sum, $product) = (0, 1);\n    foreach my $num (@$numbers)\
    \ {\n        $sum += $num;\n        $product *= $num;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += $num;\n        $product *= $num;\n    }\n   \
    \ return [$sum, $product];\n}", "    return [0, 1] unless scalar @$numbers;\n\
    \    my ($sum, $product) = (0, 1);\n    for my $number (@$numbers) {\n       \
    \ $sum += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my @sum_product;\n    my $sum = 0;\n    my $product = 1;\n\
    \    foreach (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n   \
    \ }\n    @sum_product = ($sum, $product);\n    return @sum_product;\n}", "   \
    \ return [ sum(@$numbers), product(@$numbers) ];\n}", "    my($sum, $product)\
    \ = (0, 1);\n    foreach my $number (@$numbers) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return [$sum, $product];\n}", "    return\
    \ [0, 1] unless @$numbers;\n    my($sum, $product) = (0, 1);\n    $sum += $_ for\
    \ @$numbers;\n    $product *= $_ for @$numbers;\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach my $x (@$numbers) {\n\
    \        $sum += $x;\n        $product *= $x;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    foreach my $number (@$numbers)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    foreach\
    \ my $number (@$numbers) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    for my $n (@$numbers) {\n        $sum += $n;\n        $product *= $n;\n\
    \    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product =\
    \ 1;\n    if (scalar @$numbers == 0) {\n        return [0, 1];\n    }\n    foreach\
    \ my $element (@$numbers) {\n        $sum += $element;\n        $product *= $element;\n\
    \    }\n    return [$sum, $product];\n}", "    return [0, 1] unless(@$numbers);\n\
    \    my($sum, $product) = (0, 1);\n    foreach my $number (@$numbers) {\n    \
    \    $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach my $n (@$numbers)\
    \ {\n        $sum += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n\
    }", "    my $product = 1;\n    my $sum = 0;\n    foreach my $n (@$numbers) {\n\
    \        $product *= $n;\n        $sum += $n;\n    }\n    return [$sum, $product];\n\
    }", "    my @res = (0, 1);\n    for my $n (@$numbers) {\n        $res[0] += $n;\n\
    \        $res[1] *= $n;\n    }\n    return @res;\n}", "    my $sum = 0;\n    my\
    \ $product = 1;\n    foreach my $num (@$numbers) {\n        $sum += $num;\n  \
    \      $product *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    if(ref($numbers) eq 'ARRAY') {\n        $sum\
    \ = reduce_sum($numbers);\n        $product = reduce_product($numbers);\n    }\n\
    \    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product = 1;\n \
    \   foreach (@$numbers) {\n        $sum += $_;\n        $product *= $_;\n    }\n\
    \    return [$sum, $product];\n}", "    my($sum, $product) = (0, 1);\n    $sum\
    \      += $_ for @$numbers;\n    $product  *= $_ for @$numbers;\n    return [$sum,\
    \ $product];\n}", "    my($sum, $product) = (0, 1);\n    foreach my $n (@$numbers)\
    \ {\n        $sum += $n;\n        $product *= $n;\n    }\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my $sum = 0;\n    my $product = 1;\n    $sum += $_ foreach\
    \ @$numbers;\n    $product *= $_ foreach @$numbers;\n    return [$sum, $product];\n\
    }", "    my $sum = 0;\n    my $product = 1;\n    for my $number (@$numbers) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}", "    my @numbers = @$numbers;\n    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $n (@numbers) {\n        $sum += $n;\n        $product\
    \ *= $n;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $n (@$numbers) {\n        $sum += $n;\n        $product\
    \ *= $n;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my $product\
    \ = 1;\n    foreach my $num (@$numbers) {\n        $sum += $num;\n        $product\
    \ *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum = 0;\n    my\
    \ $product = 1;\n    foreach my $num (@$numbers) {\n        $sum += $num;\n  \
    \      $product *= $num;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach (@$numbers) {\n        $sum += $_;\n\
    \        $product *= $_;\n    }\n    return [$sum, $product];\n}", "    my $sum\
    \ = 0;\n    my $product = 1;\n    foreach my $number (@$numbers) {\n        $sum\
    \ += $number;\n        $product *= $number;\n    }\n    return [$sum, $product];\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

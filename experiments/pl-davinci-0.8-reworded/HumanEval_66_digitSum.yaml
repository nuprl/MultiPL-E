name: HumanEval_66_digitSum
language: pl
prompt: "# Task\n# Write a function that takes a string as input and returns the sum\
  \ of the upper characters only'\n# ASCII codes.\n# Examples:\n# >>> digitSum(\"\"\
  )\n# 0\n# >>> digitSum(\"abAB\")\n# 131\n# >>> digitSum(\"abcCd\")\n# 67\n# >>>\
  \ digitSum(\"helloE\")\n# 69\n# >>> digitSum(\"woArBld\")\n# 131\n# >>> digitSum(\"\
  aAaaaXa\")\n# 153\nsub digitSum {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
  \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"You arE\
  \ Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    my @ascii_codes = split('', $s);\n    my @upper_ascii_codes\
    \ = grep { $_ >= 65 && $_ <= 90 } @ascii_codes;\n    for(@upper_ascii_codes) {\n\
    \        $sum += ord($_);\n    }\n    return $sum;\n}", "    my $sum = 0;\n  \
    \  for (0..length($s)-1) {\n        $sum += ord(substr($s, $_, 1)) if substr($s,\
    \ $_, 1) =~ /[[:upper:]]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n \
    \   my @chars = split //, $s;\n    foreach my $c (@chars) {\n        if ($c =~\
    \ /[A-Z]/) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n\
    }", "    return sum map { $_ >= 65 && $_ <= 90 ? $_ : 0 } unpack(\"C*\", $s);\n\
    }", "    return 0 if($s eq \"\");\n    my @u = split //, $s;\n    my $sum;\n \
    \   for(@u){\n        $sum += ord($_) if($_ eq uc($_));\n    }\n    return $sum;\n\
    }", "    return sum split '', $s;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        my $i = ord($c);\n        if ($i > 64 && $i < 91) {\n   \
    \         $sum += $i;\n        }\n    }\n    return $sum;\n}", "    my $sum =\
    \ 0;\n    my @chars = split //, $s;\n    foreach my $char (@chars) {\n       \
    \ my $ord = ord($char);\n        if ($ord >= 65 && $ord <= 90) {\n           \
    \ $sum += $ord;\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n \
    \   my @ar = split(//, $s);\n    foreach (@ar) {\n        my $code = ord($_);\n\
    \        if ($code >= 65 && $code <= 90) {\n            $sum += $code;\n     \
    \   }\n    }\n    return $sum;\n}", "    return eval join '+', grep /[A-Z]/, split\
    \ //, $s;\n}", "    my $sum = 0;\n    # Write your code here.\n    $sum += ord($_)\
    \ for split //, $s;\n    return $sum;\n}", "    my $sum = 0;\n    for (my $i =\
    \ 0; $i < length($s); $i++) {\n        my $c = substr($s, $i, 1);\n        $sum\
    \ += ord($c) if (isUpper($c));\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    $sum += ord($_) for grep /[A-Z]/, split //, $s;\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for my $letter (split('', $s)) {\n        $sum += $letter\
    \ =~ /[[:upper:]]/ ? ord($letter) : 0;\n    }\n    return $sum;\n}", "    my $s2\
    \ = \"\";\n    foreach my $chr (split(\"\", $s)) {\n        if(ord($chr) >= 65\
    \ && ord($chr) <= 90) {\n            $s2 .= $chr;\n        }\n    }\n    return\
    \ sumDigits($s2);\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n   \
    \     $sum += ord($c) if (ord($c) >= 65 && ord($c) <= 90);\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    foreach my $char (split('', $s)) {\n     \
    \   my $ord = ord($char);\n        if($ord >= 65 && $ord <= 90) {\n          \
    \  $sum += $ord;\n        }\n    }\n    return $sum;\n}", "    my @arr = split\
    \ //, $s;\n    my $sum = 0;\n    for my $i (@arr) {\n        if (ord($i) > 64\
    \ && ord($i) < 91) {\n            $sum += ord($i);\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for (split //, $s) {\n        $sum += ord($_)\
    \ if /[A-Z]/;\n    }\n    return $sum;\n}", "    return 0 if $s eq '';\n    my\
    \ $sum = 0;\n    foreach my $c (split(//, $s)) {\n        my $i = ord($c);\n \
    \       next if $i < 65;\n        next if $i > 90;\n        $sum += $i;\n    }\n\
    \    return $sum;\n}", "    my $sum = 0;\n    foreach my $c (split(//, $s)) {\n\
    \        $sum += ord($c) if ($c =~ /[A-Z]/);\n    }\n    return $sum;\n}\nprint\
    \ \"s=\".digitSum(\"abAB\").\"\\n\";", "    my $n = 0;\n    while ($s =~ /[A-Z]/g)\
    \ {\n        $n += ord($&);\n    }\n    return $n;\n}", "    my $sum = 0;\n  \
    \  foreach my $c (split //, $s) {\n        if ($c =~ m{[A-Z]}) {\n           \
    \ $sum += ord($c);\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    my @arr = split('', $s);\n    for my $l (@arr) {\n        if ($l =~ /[A-Z]/)\
    \ {\n            $sum += ord($l);\n        }\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    while($s =~ m/(.)/g) {\n        my $c = $1;\n        my\
    \ $cnum = ord($c);\n        print \"cnum=${cnum}\\n\";\n        if ($cnum >= 65\
    \ && $cnum <= 90) {\n            $sum += $cnum;\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    foreach my $c (split(//, $s)) {\n        my\
    \ $o = ord($c);\n        $sum += $o if ($o > 64 and $o < 91);\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    foreach my $char (split //, $s) {\n      \
    \  $sum += ord($char) if (ord($char) > 64 && ord($char) < 91);\n    }\n    return\
    \ $sum;\n}", "    # ---------------\n    # Your code here.\n    my $sum = 0;\n\
    \    my @arr = split //, $s;\n    foreach (@arr) {\n        $sum += ord($_) if\
    \ (ord($_) > 64 && ord($_) < 91);\n    }\n    return $sum;\n    # ---------------\n\
    }", "    return 0 if $s eq '';\n    my $sum = 0;\n    my @chars = split(//, $s);\n\
    \    foreach my $char (@chars) {\n        $sum += ord($char) if ord($char) > 64\
    \ && ord($char) < 91;\n    }\n    return $sum;\n}", "    return sum(\n       \
    \ map { ord(uc($_)) }\n        grep { $_ =~ /\\w/ }\n        split(//, $s)\n \
    \   );\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        if (ord($c)\
    \ <= 90) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    foreach (split(//, $s)) {\n        if (ord($_) >= 65\
    \ and ord($_) <= 90) {\n            $sum += ord($_);\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    my @letters = split('', $s);\n    foreach\
    \ my $letter (@letters) {\n        if ($letter =~ /^[A-Z]$/) {\n            $sum\
    \ += ord($letter);\n        }\n    }\n    return $sum;\n}\nsay digitSum(\"woArBld\"\
    );", "    my $sum;\n    foreach my $c (split //, $s) {\n        $sum += ord($c)\
    \ if ($c =~ /[[:upper:]]/);\n    }\n    return $sum;\n}\nmy $s = <STDIN>;\nchomp\
    \ $s;\nprint digitSum($s);", "    my $n = 0;\n    $n += ord($_) for split(//,\
    \ $s);\n    return $n;\n}", "    my $sum = 0;\n    foreach my $c (split(//, $s))\
    \ {\n        if (ord($c) > 64 && ord($c) < 91) {\n            $sum += ord($c);\n\
    \        }\n    }\n    return $sum;\n}", "    my @str = split(//, $s);\n    my\
    \ $sum = 0;\n    for(my $i = 0; $i < @str; $i++) {\n        my $char = ord($str[$i]);\n\
    \        if($char >= 65 && $char <= 90) {\n            $sum += $char;\n      \
    \  }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split(//,\
    \ $s)) {\n        if($c =~ /[A-Z]/) {\n            $sum += ord($c);\n        }\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    $sum += ord($_) foreach (grep\
    \ /[A-Z]/,split(\"\",$s));\n    return $sum;\n}", "    my $sum = 0;\n    my @arr\
    \ = $s =~ /[A-Z]/g;\n    map {$sum += ord($_)} @arr;\n    return $sum;\n}", " \
    \   my $sum = 0;\n    my @a = split(//, $s);\n    foreach my $c (@a) {\n     \
    \   if($c =~ /[A-Z]/) {\n            $sum += ord($c);\n        }\n    }\n    return\
    \ $sum;\n}", "    return -1 unless (defined $s);\n    return 0 unless (length\
    \ $s);\n    my $result = 0;\n    foreach my $char (split //, $s) {\n        $result\
    \ += ord($char) if ($char =~ /[[:upper:]]/);\n    }\n    return $result;\n}",
  "    my $sum = 0;\n    for (split \"\", $s) {\n        $sum += ord($_) if $_ =~\
    \ /[A-Z]/;\n    }\n    return $sum;\n}\nmy $str = <STDIN>;\nchomp $str;\nmy $result\
    \ = digitSum($str);\nprint $result;", "    my $sum = 0;\n    foreach my $c (split(//,\
    \ $s)) {\n        $sum += ord($c) if ($c =~ /[A-Z]/);\n    }\n    return $sum;\n\
    }", "    my $sum;\n    if($s eq '') {\n        $sum = 0;\n    } else {\n     \
    \   my @chars = split('', $s);\n        foreach (@chars) {\n            if(ord($_)\
    \ >= 65 && ord($_) <= 90) {\n                $sum += ord($_);\n            }\n\
    \        }\n    }\n    return $sum;\n}", "    my $result = 0;\n    for ( my $i\
    \ = 0; $i < length $s; $i++ ) {\n        my $c = substr $s, $i, 1;\n        if\
    \ ( ord($c) > 64 && ord($c) < 91 ) {\n            $result += ord($c);\n      \
    \  }\n    }\n    return $result;\n}", "    my $sum = 0;\n    for (split(//, $s))\
    \ {\n        $sum += ord($_) if ord($_) >= 65 and ord($_) <= 90;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    foreach (split(//, $s)) {\n        $sum +=\
    \ ord($_) if ($_ =~ /[A-Z]/);\n    }\n    return $sum;\n}", "    $s =~ s/[^A-Z]+//g;\n\
    \    my $sum = 0;\n    foreach my $c (split '', $s) {\n        $sum += ord($c);\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    my @s = split('', $s);\n\
    \    foreach(@s) {\n        $sum += ord($_) if($_ =~ /[A-Z]/);\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        if ($c\
    \ =~ m/[A-Z]/) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if ord($c) >= 65 and ord($c) <= 90;\n    }\n    return $sum;\n}", "    return\
    \ 0 if $s eq '';\n    my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++)\
    \ {\n        my $c = substr($s, $i, 1);\n        if ($c =~ /[A-Z]/) {\n      \
    \      $sum += ord($c);\n        }\n    }\n    return $sum;\n}", "    my @upper\
    \ = grep{$_ =~ /[A-Z]/}split('',$s);\n    my $sum;\n    for my $e (@upper){\n\
    \        $sum += ord($e);\n    }\n    return $sum;\n}", "    my $sum = 0;\n  \
    \  foreach my $c (split(\"\", $s)) {\n        $sum += ord($c) if ($c =~ /[A-Z]/);\n\
    \    }\n    return $sum;\n}", "    $s =~ s/[^A-Z]//g;\n    return sum(split(\"\
    \",$s));\n}\nprint \"digitSum\\n\";\nprint digitSum(\"\").\"\\n\";\nprint digitSum(\"\
    abAB\").\"\\n\";\nprint digitSum(\"abcCd\").\"\\n\";\nprint digitSum(\"helloE\"\
    ).\"\\n\";\nprint digitSum(\"woArBld\").\"\\n\";\nprint digitSum(\"aAaaaXa\").\"\
    \\n\";", "    my $num = 0;\n    foreach my $char (split //, $s) {\n        if\
    \ (ord($char) >= 65 && ord($char) <= 90) {\n            $num += ord($char);\n\
    \        }\n    }\n    return $num;\n}", "    my $sum = 0;\n    $sum += ord($_)\
    \ for (split //, $s);\n    return $sum;\n}", "    my $sum = 0;\n    foreach my\
    \ $c (split //, $s) {\n        if (ord($c) >= 65 && ord($c) <= 90) {\n       \
    \     $sum += ord($c);\n        }\n    }\n    return $sum;\n}", "    my $sum =\
    \ 0;\n    for my $c (split(//, $s)) {\n        $sum += ord($c) if uc($c) eq $c;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    my @array = split(\"\", $s);\n\
    \    for(my $i = 0; $i < scalar(@array); $i++){\n        if(ord($array[$i]) >=\
    \ 65 && ord($array[$i]) <= 90){\n            $sum += ord($array[$i]);\n      \
    \  }\n    }\n    return $sum;\n}\n1;", "    my $sum = 0;\n    for (split //, $s)\
    \ {\n        if (ord($_) >= 65 and ord($_) <= 90) {\n            $sum += ord($_);\n\
    \        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ '', $s) {\n        $sum += ord($c) if (ord($c) >= 65 && ord($c) <= 90);\n  \
    \  }\n    return $sum;\n}", "    my $sum = 0;\n    my @chars = split('', $s);\n\
    \    foreach my $c (@chars) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n   \
    \ }\n    return $sum;\n}", "    my $i;\n    my $result = 0;\n    my $len = length($s);\n\
    \    for($i = 0; $i < $len; $i++) {\n        my $c = substr($s, $i, 1);\n    \
    \    my $ord = ord($c);\n        if($ord >= 65 && $ord <= 90) {\n            $result\
    \ += $ord;\n        }\n    }\n    return $result;\n}\nprint(digitSum(\"aAaaaXa\"\
    ) . \"\\n\");", "    my $count = 0;\n    for my $c (split(//, $s)) {\n       \
    \ $count += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $count;\n}", "    $s\
    \ =~ s/[^A-Z]//g;\n    return 0 unless $s;\n    return eval join '+', split(//,\
    \ $s);\n}", "    my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n\
    \        my $c = substr($s, $i, 1);\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    my $res = 0;\n    for my $c (split(\"\", $s))\
    \ {\n        my $n = ord($c);\n        $res += $n if ($n > 64 and $n < 91);\n\
    \    }\n    return $res;\n}", "    #your code here\n    my $result = 0;\n    for(my\
    \ $i = 0; $i < length($s); $i++) {\n      if(ord(substr($s, $i, 1)) >= 65 && ord(substr($s,\
    \ $i, 1)) <= 90) {\n        $result += ord(substr($s, $i, 1));\n      }\n    }\n\
    \    return $result;\n}", "    my $sum = 0;\n    foreach my $c (split(\"\", $s))\
    \ {\n        my $ord = ord($c);\n        if ($ord >= 65 && $ord <= 90) {\n   \
    \         $sum += $ord;\n        }\n    }\n    return $sum;\n}", "    return 0\
    \ if($s eq \"\");\n    return sum(split(//, $s)) if(index($s, /[A-Z]/) < 0);\n\
    \    return sum(grep(/[A-Z]/, split(//, $s)));\n}", "    my @string = split(\"\
    \", $s);\n    my $sum = 0;\n    foreach(@string) {\n        $sum += ord if ord\
    \ >= 65 && ord <= 90;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    my\
    \ @str = split('', $s);\n    foreach my $a (@str) {\n        my $ord = ord($a);\n\
    \        if ($ord >= 65 && $ord <= 90) {\n            $sum += $ord;\n        }\n\
    \    }\n    return $sum;\n}", "    my $c = 0;\n    for (split //, $s) {\n    \
    \    if (ord($_) >= 65 and ord($_) <= 90) {\n            $c += ord($_);\n    \
    \    }\n    }\n    return $c;\n}", "    my $sum = 0;\n    for my $i (0 .. length($s)-1)\
    \ {\n        $sum += ord(substr($s, $i, 1)) if substr($s, $i, 1) =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    return eval join('+', grep { /[A-Z]/ } split(//,\
    \ $s));\n}", "    my $sum = 0;\n    foreach my $c (split(//, $s)) {\n        $sum\
    \ += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for (split '', $s) {\n        if (/[A-Z]/) {\n            $sum += ord;\n\
    \        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    while ($s =~ /([A-Z])/g)\
    \ {\n        $sum += ord($1);\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        if ($c =~ /[A-Z]/) {\n            $sum\
    \ += ord($c);\n        }\n    }\n    return $sum;\n}", "    my @a = split(//,\
    \ $s);\n    my $sum = 0;\n    foreach my $c (@a) {\n        my $ascii_code = ord($c);\n\
    \        $sum += $ascii_code if($ascii_code >= 65 && $ascii_code <= 90);\n   \
    \ }\n    return $sum;\n}\nprint digitSum(\"woArBld\").\"\\n\";", "    my $sum\
    \ = 0;\n    while ($s) {\n        # If $s contains only ASCII-7 charcters, this\
    \ will truncate\n        # all digits and symbols. To be Unicode-friendly, uncomment\
    \ the\n        # following line, and change the regex accordingly.\n        #\
    \ $s =~ s/[^\\p{IsUpper}]//g;", "    return ( join \"+\", map { ord($_) } grep\
    \ { $_ =~ /[A-Z]/ } split(\"\", $s) ) . \"+0\";\n}", "    my $sum = 0;\n    $sum\
    \ += ord($_) for (split(\"\",$s));\n    return $sum;\n}", "    my $sum = 0;\n\
    \    my @s = split //, $s;\n    foreach my $c (@s) {\n        $sum += ord($c)\
    \ if ($c =~ /[A-Z]/);\n    }\n    return $sum;\n}", "    my $result = 0;\n   \
    \ foreach my $chr (split(//, $s)) {\n        $result += ord($chr) if uc($chr)\
    \ eq $chr;\n    }\n    return $result;\n}", "    my $result = 0;\n    for my $i\
    \ (0 .. length($s)-1) {\n        my $c = substr($s, $i, 1);\n        if ($c =~\
    \ /[A-Z]/) {\n            $result += ord($c);\n        }\n    }\n    return $result;\n\
    }", "    my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n        my\
    \ $char = substr($s, $i, 1);\n        if (ord($char) >= 65 && ord($char) <= 90)\
    \ {\n            $sum += ord($char);\n        }\n    }\n    return $sum;\n}",
  "    my $result = 0;\n    for my $ch (split //, $s) {\n        if (ord($ch) > 64\
    \ && ord($ch) < 91) {\n            $result += ord($ch);\n        }\n    }\n  \
    \  return $result;\n}", "    my $count = 0;\n    for my $c (split //, $s) {\n\
    \        if (ord($c) >= 65 && ord($c) <= 90) {\n            $count += ord($c);\n\
    \        }\n    }\n    return $count;\n}", "    my $sum = 0;\n    for (split //,\
    \ $s) {\n        $sum += ord($_) if ord($_) >= 65 && ord($_) <= 90;\n    }\n \
    \   return $sum;\n}", "    my $sum = 0;\n    for my $i (0 .. length($s) - 1) {\n\
    \        my $c = substr($s, $i, 1);\n        if (ord($c) >= ord('A') && ord($c)\
    \ <= ord('Z')) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n\
    }", "    my @a = split //, $s;\n    my $sum = 0;\n    my $a;\n    for $a (@a)\
    \ {\n        if ($a =~ /[A-Z]/) {\n            $sum += ord($a);\n        }\n \
    \   }\n    return $sum;\n}\nprint digitSum(\"woArBld\") . \"\\n\";\nprint digitSum(\"\
    abAB\") . \"\\n\";\nprint digitSum(\"\") . \"\\n\";\nprint digitSum(\"helloE\"\
    ) . \"\\n\";\nprint digitSum(\"aAaaaXa\") . \"\\n\";\nprint digitSum(\"abcCd\"\
    ) . \"\\n\";", "    my $sum = 0;\n    my @list = split //, $s;\n    foreach my\
    \ $c (@list) {\n        if($c =~ m/[A-Z]/) {\n            $sum += ord($c);\n \
    \       }\n    }\n    return $sum;\n}\nprint digitSum(\"\").\"\\n\";\nprint digitSum(\"\
    abAB\").\"\\n\";\nprint digitSum(\"abcCd\").\"\\n\";\nprint digitSum(\"helloE\"\
    ).\"\\n\";\nprint digitSum(\"woArBld\").\"\\n\";\nprint digitSum(\"aAaaaXa\").\"\
    \\n\";", "    my @a = split(//, $s);\n    my $sum = 0;\n    my $ord = 0;\n   \
    \ foreach(@a) {\n        $ord = ord($_);\n        $sum += $ord if $ord >= 65 &&\
    \ $ord <= 90;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach (split\
    \ //, $s) {\n\t$sum += ord if /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum\
    \ = 0;\n    my @list = split(//, $s);\n    for (my $i = 0; $i < @list; $i++) {\n\
    \        if ($list[$i] eq uc($list[$i])) {\n            $sum += ord($list[$i]);\n\
    \        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    $sum += ord($_)\
    \ foreach (grep {/^[A-Z]$/} split(//, $s));\n    return $sum;\n}", "    # I'll\
    \ assume that $s is alphanumeric\n    my @chars = split(//, $s);\n    my $sum\
    \ = 0;\n    foreach (@chars) {\n        my $ascii = ord($_);\n        $sum +=\
    \ $ascii;\n    }\n    return $sum;\n}", "    return sum(0, (unpack \"U*\", $s)[grep\
    \ {$_ >= 65 and $_ <= 90} 0..$#_]);\n}", "    return 0 if !$s;\n    my @a = split(//,$s);\n\
    \    my $total = 0;\n    foreach my $a (@a) {\n\t$total += ord($a) if (ord($a)\
    \ > 64 && ord($a) < 91);\n    }\n    return $total;\n}", "    return ord(uc($s))\
    \ - ord('A') + 1;\n}", "    # your code here\n    my $sum = 0;\n    for( my $i\
    \ = 0; $i < length($s); $i++) {\n        my $c = substr($s, $i, 1);\n        if\
    \ ($c =~ /[A-Z]/) {\n            $sum += ord($c);\n        }\n    }\n    return\
    \ $sum;\n}", "    return sum(map { ord($_) } grep { $_ =~ /[[:upper:]]/ } split(//,\
    \ $s));\n}", "    my @s = split //, $s;\n    my $sum = 0;\n    foreach my $a (@s)\
    \ {\n        $sum += ord($a) if ord($a) >= 65 and ord($a) <= 90;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        if (isupper($c))\
    \ {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n}", " \
    \   my @s = split //, $s;\n    my $sum = 0;\n    foreach my $x (@s) {\n      \
    \  if ($x =~ /^[A-Z]$/) {\n            $sum += ord($x);\n        }\n    }\n  \
    \  return $sum;\n}", "    my $sum = 0;\n    while($s =~ /\\w/g) {\n        my\
    \ $c = $&;\n        if($c =~ /[A-Z]/) {\n            $sum += ord($c);\n      \
    \  }\n    }\n    return $sum;\n}", "    my $sum;\n    map { $sum += ord if /[A-Z]/\
    \ } split //, $s;\n    return $sum;\n}", "    my @s = split //, $s;\n    my $sum\
    \ = 0;\n    foreach my $ch (@s) {\n        if(uc($ch) eq $ch) {\n            $sum\
    \ += ord($ch);\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n  \
    \  foreach my $char (split //, $s) {\n        my $charValue = ord($char);\n  \
    \      if ($charValue >= 65 && $charValue <= 90) {\n            $sum += $charValue;\n\
    \        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $char\
    \ (split(//, $s)) {\n        $sum += ord($char) if $char =~ /[A-Z]/;\n    }\n\
    \    return $sum;\n}", "    return sum(@$s) if is_list_ref($s);\n    $s =~ s/[^A-Z]//g;\n\
    \    return sum(@$s) if is_list_ref($s);\n    return 0 if $s eq '';\n    sum(split(//,\
    \ $s));\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if (ord($c) > 64 && ord($c) < 91);\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    my @chars = split(//, $s);\n    for (my $i = 0; $i < @chars;\
    \ $i++) {\n        if (ord($chars[$i]) >= 65 && ord($chars[$i]) <= 90) {\n   \
    \         $sum += ord($chars[$i]);\n        }\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    if ( $s =~ /\\p{Upper}/ ) {\n        for my $c ( split //,\
    \ $s ) {\n            if ( $c =~ /\\p{Upper}/ ) {\n                $sum += ord($c);\n\
    \            }\n        }\n    }\n    else {\n        $sum = 0;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    # $s =~ s/[^A-Z]//g;\n    for (split //, $s)\
    \ {\n        $sum += ord($_) if $_ =~ /[A-Z]/;\n    }\n    return $sum;\n}", " \
    \   my $a = 'A';\n    my $z = 'Z';\n    my $sum = 0;\n    for my $c (split(//,\
    \ $s)) {\n        if (ord($c) >= ord($a) && ord($c) <= ord($z)) {\n          \
    \  $sum += ord($c);\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $char (split //, $s) {\n        my $num = ord($char);\n        if($num\
    \ >= 65 && $num <= 90) {\n            $sum += $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $char (split //, $s) {\n        my\
    \ $asc = ord($char);\n        if ($asc >= 65 && $asc <= 90) {\n            $sum\
    \ += $asc;\n        }\n    }\n    return $sum;\n}", "    my @s = split //, $s;\n\
    \    my $sum = 0;\n    my $d;\n    foreach my $s (@s) {\n        $d = ord($s);\n\
    \        if($d > 64 && $d < 91) {\n            $sum += $d;\n        }\n    }\n\
    \    return $sum;\n}", "    my $r = 0;\n    $r += ord($_) for (split(//, $s));\n\
    \    return $r;\n}", "    my $res = 0;\n    for my $char (split //, $s) {\n  \
    \      $res += ord($char) if $char =~ /[A-Z]/;\n    }\n    return $res;\n}", " \
    \   my $sum = 0;\n    my @t = split(//, $s);\n    for (my $i = 0; $i < scalar(@t);\
    \ $i++) {\n        if (ord($t[$i]) > 64 && ord($t[$i]) < 91) {\n            $sum\
    \ += ord($t[$i]);\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    while (length($s) > 0) {\n        my $c = chop($s);\n        $sum += ord($c)\
    \ if (uc($c) eq $c);\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach\
    \ my $char (split '', $s) {\n        $sum += ord($char) if (ord($char) >= 65 and\
    \ ord($char) <= 90);\n    }\n    return $sum;\n}", "    my $total = 0;\n    for\
    \ (split(//, $s)) {\n        $total += ord($_) if (/[A-Z]/);\n    }\n    return\
    \ $total;\n}", "    # this is wrong\n    # return (sum map { ord($_) } split //,\
    \ $s);\n    return (sum map { ord($_) - ord('a') + 1 } split //, $s);\n}", " \
    \   my $sum = 0;\n    $sum += ord for split //, $s;\n    return $sum;\n}", " \
    \   my $sum = 0;\n    # Your code here", "    my $count = 0;\n    for (split '',\
    \ $s) {\n        my $ord = ord($_);\n        if ($ord >= 65 && $ord <= 90) {\n\
    \            $count += $ord;\n        }\n    }\n    return $count;\n}", "    my\
    \ $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if uc($c)\
    \ eq $c;\n    }\n    return $sum;\n}\nsay digitSum(\"\");\nsay digitSum(\"abAB\"\
    );\nsay digitSum(\"abcCd\");\nsay digitSum(\"helloE\");\nsay digitSum(\"woArBld\"\
    );\nsay digitSum(\"aAaaaXa\");", "    return 0 if $s eq '';\n    my $sum = 0;\n\
    \    for (my $i = 0; $i < length($s); $i++) {\n        my $char = substr($s, $i,\
    \ 1);\n        $sum += ord($char) if $char =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nmy $s = \"abAB\";\nmy $result = digitSum($s);\nprint(\"$result\\n\");", " \
    \   my $res = 0;\n    for my $ch (split(//, $s)) {\n        $res += ord($ch) if\
    \ $ch =~ /[A-Z]/;\n    }\n    return $res;\n}", "    my $c = 0;\n    for my $i\
    \ ( 0 .. length($s) - 1 ) {\n        my $t = ord( substr( $s, $i, 1 ) );\n   \
    \     if ( $t >= 65 && $t <= 90 ) {\n            $c += $t;\n        }\n    }\n\
    \    return $c;\n}", "    my $sum = 0;\n    for my $c (split(//, $s)) {\n    \
    \    $sum += ord($c) if ($c =~ /[[:upper:]]/);\n    }\n    return $sum;\n}", " \
    \   return sum(grep(65 <= ord($_) && ord($_) <= 90, split(//, $s)));\n}", "  \
    \  return 0 if($s eq \"\");\n    my $sum = 0;\n    my @arr = split(//, $s);\n\
    \    for(my $i = 0; $i < scalar(@arr); $i++) {\n        $sum += ord($arr[$i])\
    \ if(ord($arr[$i]) >= 65 && ord($arr[$i]) <= 90);\n    }\n    return $sum;\n}",
  "    my $res = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n        my $ch\
    \ = substr($s, $i, 1);\n        if (ord($ch) >= ord('A') && ord($ch) <= ord('Z'))\
    \ {\n            $res += ord($ch);\n        }\n    }\n    return $res;\n}", " \
    \   my $sum = 0;\n    for my $i (0 .. length($s) - 1) {\n        my $code = ord(substr($s,\
    \ $i, 1));\n        if ($code >= 65 && $code <= 90) {\n            $sum += $code;\n\
    \        }\n    }\n    return $sum;\n}\nmy @a_tests = (\n    '',\n    'abAB',\n\
    \    'abcCd',\n    'helloE',\n    'woArBld',\n    'aAaaaXa',\n);\nfor my $s (@a_tests)\
    \ {\n    my $result = digitSum($s);\n    print \"$result\\n\";\n}", "    return(0)\
    \ if (! $s);\n    my $sum = 0;\n    foreach my $c (split(//, $s)) {\n        $sum\
    \ += ord($c) if ($c =~ /[A-Z]/);\n    }\n    return($sum);\n}", "    my $sum;\n\
    \    foreach my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    if($s =~ /\\w+/g){\n    \
    \    while($s =~ /\\w+/g){\n            $sum += ord($&) if($& eq uc($&));\n  \
    \      }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for (my $i = 0;\
    \ $i < length($s); $i++) {\n        my $ord = ord(substr($s, $i, 1));\n      \
    \  $sum += $ord if $ord > 64 && $ord < 91;\n    }\n    return $sum;\n}", "   \
    \ my $sum = 0;\n    for my $c (split //, $s) {\n        if ($c =~ /[A-Z]/) {\n\
    \            $sum += ord($c);\n        }\n    }\n    return $sum;\n}\nprint digitSum($a);\n\
    print \"\\n\";", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum\
    \ += ord($c) if ($c =~ /[A-Z]/);\n    }\n    return $sum;\n}", "    my $sum =\
    \ 0;\n    my @str = split //, $s;\n    foreach my $c (@str) {\n        if (ord($c)\
    \ >= 65 && ord($c) <= 90) {\n            $sum += ord($c);\n        }\n    }\n\
    \    return $sum;\n}", "    my $sum;\n    my @arr=split //,$s;\n    foreach (@arr){\n\
    \        $sum+=$_ if($_=~/[A-Z]/);\n    }\n    return $sum;\n}", "    my $total\
    \ = 0;\n    foreach my $letter (split //, $s) {\n        my $ascii_value = ord($letter);\n\
    \        if ($ascii_value >= 65 && $ascii_value <= 90) {\n            $total +=\
    \ $ascii_value;\n        }\n    }\n    return $total;\n}", "    my $sum = 0;\n\
    \    for (my $i = 0; $i < length($s); $i++) {\n        if (ord(substr($s, $i,\
    \ 1)) >= 65 && ord(substr($s, $i, 1)) <= 90) {\n            $sum += ord(substr($s,\
    \ $i, 1));\n        }\n    }\n    return $sum;\n}", "    return 0 if $s eq \"\"\
    ;\n    my @s=split //,$s;\n    my $sum=0;\n    for(@s){\n        if(ord($_)<=90){\n\
    \            $sum+=ord($_);\n        }\n    }\n    return $sum;\n}\nprint digitSum(\"\
    \");", "    return sum(grep { ord($_) >= 65 and ord($_) <= 90 } split(//, $s));\n\
    }", "    my @ar = split //, $s;\n    my $n = 0;\n    for (@ar) {\n        if (/[A-Z]/)\
    \ {\n            $n += ord($_);\n        }\n    }\n    return $n;\n}\nprint digitSum(\"\
    abcCd\") . \"\\n\";", "    return 0 if !defined $s;\n    my @ss = split(\"\",\
    \ $s);\n    my $result = 0;\n    for (@ss) {\n        my $ord = ord($_);\n   \
    \     $result += $ord if $ord >= 65 && $ord <= 90;\n    }\n    return $result;\n\
    }", "    my @chars = split(//, $s);\n    my $result = 0;\n    foreach my $c (@chars)\
    \ {\n        my $ascii = ord($c);\n        if ($ascii >= 65 && $ascii <= 90) {\n\
    \            $result += $ascii;\n        }\n    }\n    return $result;\n}", " \
    \   return sum(map { ord($_) } grep { /[A-Z]/ } split(//, $s));\n}", "    return\
    \ 0 if $s eq \"\";\n    my @characters = split //, $s;\n    my $number = 0;\n\
    \    foreach (@characters) {\n        if ($_ =~ /^[A-Z]$/) {\n            $number\
    \ += ord($_);\n        }\n    }\n    return $number;\n}", "    my $sum = 0;\n\
    \    my @s = split '', $s;\n    foreach(@s) {\n        $sum += ord($_) if(ord($_)\
    \ >= 65 && ord($_) <= 90);\n    }\n    return $sum;\n}", "    my $result = 0;\n\
    \    my @nums = map {ord($_)} split(//, $s);\n    for my $n (@nums) {\n      \
    \  $result += $n if 65 <= $n && $n <= 90;\n    }\n    return $result;\n}", " \
    \   my $sum = 0;\n    foreach my $c (split(//, $s)) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $total = 0;\n    # code\
    \ goes here\n    return $total;\n}", "    my $sum = 0;\n    $sum += ord($_) for\
    \ split(//, $s);\n    return $sum;\n}", "    my $sum = 0;\n    my @char_array\
    \ = split(\"\", $s);\n    foreach my $c (@char_array) {\n        $sum += ord($c)\
    \ if ord($c) >= 65 && ord($c) <= 90;\n    }\n    return $sum;\n}", "    my @arr\
    \ = split //, $s;\n    my $sum = 0;\n    for(@arr) {\n        $sum += ord($_)\
    \ if ( ord($_) <= 90 && ord($_) >= 65 );\n    }\n    return $sum;\n}", "    $s\
    \ =~ s/[^A-Z]//g;\n    my $sum = 0;\n    foreach my $char (split(//, $s)) {\n\
    \        $sum += ord($char);\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    foreach my $c (split //, $s) {\n        $sum += ord($c) if ($c =~ /[A-Z]/);\n\
    \    }\n    return $sum;\n}", "    return sum grep { ord($_) > 64 && ord($_) <\
    \ 91 } split //, $s;\n}", "    my @x = $s =~ /[A-Z]/g;\n    return 0 unless @x;\n\
    \    return (map { ord($_) } @x)[0] + (map { ord($_) } @x)[-1];\n}", "    my $sum\
    \ = 0;\n    for my $c (split //, $s) {\n        if (ord($c) >= 65 && ord($c) <=\
    \ 90) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    my @a = split(//, $s);\n    foreach my $e (@a) {\n      \
    \  if ( $e =~ /[A-Z]/ ) {\n            $sum += ord($e);\n        }\n    }\n  \
    \  return $sum;\n}", "    my $sum = 0;\n    $sum += ord($_) for split //, $s;\n\
    \    return $sum;\n}", "    return sum grep { ord($_) <= ord('Z') } split //,\
    \ $s;\n}\nsay digitSum(\"\");\nsay digitSum(\"abAB\");\nsay digitSum(\"abcCd\"\
    );\nsay digitSum(\"helloE\");\nsay digitSum(\"woArBld\");\nsay digitSum(\"aAaaaXa\"\
    );", "    my $sum = 0;\n    $sum += ord(uc($_)) for split(//, $s);\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split(//, $s)) {\n        if($c\
    \ =~ /[A-Z]/) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n\
    }\nprint \"digitSum(\\\"abAB\\\") = \", digitSum(\"abAB\"), \"\\n\";\nprint \"\
    digitSum(\\\"abcCd\\\") = \", digitSum(\"abcCd\"), \"\\n\";\nprint \"digitSum(\\\
    \"helloE\\\") = \", digitSum(\"helloE\"), \"\\n\";\nprint \"digitSum(\\\"woArBld\\\
    \") = \", digitSum(\"woArBld\"), \"\\n\";\nprint \"digitSum(\\\"aAaaaXa\\\") =\
    \ \", digitSum(\"aAaaaXa\"), \"\\n\";", "    return $s =~ tr/A-Z//;\n}", "   \
    \ my $sum = 0;\n    my @s = split '', $s;\n    for my $i (0 .. $#s) {\n      \
    \  $sum += ord($s[$i]) if (ord($s[$i]) > 64 and ord($s[$i]) < 91);\n    }\n  \
    \  return $sum;\n}", "    my $sum = 0;\n    foreach (split //, $s) {\n       \
    \ $sum += ord($_) if (ord($_)>=65 and ord($_)<=90);\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    while($s =~ m/\\G[A-Z]/g){\n        $sum += ord($&);\n\
    \    }\n    return $sum;\n}", "    return 0 if !$s;\n    return sum(grep { $_\
    \ >= 65 && $_ <= 90 } map { ord($_) } split(//, $s));\n}", "    my $sum = 0;\n\
    \    for my $c (split('', $s)) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    return sum grep { ord($_) >= 65 && ord($_)\
    \ <= 90 } split //, $s;\n}", "    my $sum = 0;\n    my @arr = split(//, $s);\n\
    \    for (my $i = 0; $i < scalar @arr; $i++) {\n        $sum += ord($arr[$i])\
    \ if ord($arr[$i]) > 64 && ord($arr[$i]) < 91;\n    }\n    return $sum;\n}", " \
    \   my @arr = split(//, $s);\n    my $sum = 0;\n    for(my $i = 0; $i < @arr;\
    \ $i++) {\n        if (ord(uc($arr[$i])) >= 65 && ord(uc($arr[$i])) <= 90) {\n\
    \            $sum += ord(uc($arr[$i]));\n        }\n    }\n    return $sum;\n}",
  "    # your code here\n    my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++)\
    \ {\n        my $j = ord(substr($s, $i, 1));\n        $sum += $j if ($j > 64 &&\
    \ $j < 91);\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $ch (split\
    \ //, $s) {\n        if ($ch ge 'A' && $ch le 'Z') {\n            $sum += ord($ch);\n\
    \        }\n    }\n    return $sum;\n}", "    my @c = split //, $s;\n    my $sum\
    \ = 0;\n    foreach my $c (@c) {\n        $sum += ord($c) if ($c =~ /[A-Z]/);\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    my @codes = unpack('C*',\
    \ $s);\n    foreach my $n (@codes) {\n        $sum += $n if $n >= 65 && $n <=\
    \ 90;\n    }\n    return $sum;\n}", "    my @c = split(\"\", $s);\n    my $t =\
    \ 0;\n    for my $c (@c) {\n        $t += ord($c) if $c =~ /[A-Z]/;\n    }\n \
    \   return $t;\n}", "    my $sum = 0;\n    my @ascii = split //, $s;\n    for\
    \ (my $i = 0; $i < scalar @ascii; $i++) {\n        if (ord($ascii[$i]) >= 65 &&\
    \ ord($ascii[$i]) <= 90) {\n            $sum += ord($ascii[$i]);\n        }\n\
    \    }\n    return $sum;\n}", "    return 0 if !length($s);\n    my $sum = 0;\n\
    \    $sum += ord($_) for (split //, $s);\n    return $sum;\n}", "    my $result\
    \ = 0;\n    my @chars = split(//, $s);\n    foreach my $char (@chars) {\n    \
    \    my $ord = ord($char);\n        if ($ord >= 65 && $ord <= 90) {\n        \
    \    $result += $ord;\n        }\n    }\n    return $result;\n}", "    my $sum\
    \ = 0;\n    for my $i (0 .. length($s) - 1) {\n        my $c = substr($s, $i,\
    \ 1);\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}",
  "    my $total = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n        my $c\
    \ = substr($s, $i, 1);\n        my $ascii = ord($c);\n        if ($ascii >= 65\
    \ && $ascii <= 90) {\n            $total += $ascii;\n        }\n    }\n    return\
    \ $total;\n}\nprint(digitSum(\"helloE\") . \"\\n\");\nprint(digitSum(\"woArBld\"\
    ) . \"\\n\");\nprint(digitSum(\"aAaaaXa\") . \"\\n\");", "    my $sum = 0;\n \
    \   for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n  \
    \  }\n    return $sum;\n}", "    my $sum = 0;\n    $sum += ord($_) for (split('',$s));\n\
    \    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n   \
    \     $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my\
    \ $sum = 0;\n    for my $c (split(//, $s)) {\n        if (ord($c) >= 65 and ord($c)\
    \ <= 90) {\n            $sum += ord($c);\n        }\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    while($s =~ /([A-Z])/g) {\n        $sum += ord($1);\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    while ($s =~ m/([A-Z])/g)\
    \ {\n        $sum += ord($1);\n    }\n    return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

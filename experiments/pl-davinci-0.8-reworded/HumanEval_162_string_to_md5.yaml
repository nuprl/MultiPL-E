name: HumanEval_162_string_to_md5
language: pl
prompt: "# Given a string 'text', return its md5 hash equivalent string.\n# If 'text'\
  \ is an empty string, return undef.\n# >>> string_to_md5(\"Hello world\")\n# \"\
  3e25960a79dbc69b674cd4ec67a72c62\"\nsub string_to_md5 {\n    my($text) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&string_to_md5;\n\
  \        if(eq_deeply($candidate->(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $md5 = undef;\n    $md5 = Digest::MD5::md5_hex($text) if ($text);\n\
    \    return $md5;\n}", "    return undef if $text eq \"\";\n    return md5_hex($text);\n\
    }", "    my $md5 = undef;\n    if (defined($text) && $text ne \"\") {\n      \
    \  $md5 = Digest::MD5::md5_hex($text);\n    }\n    return $md5;\n}", "    if ($text)\
    \ {\n        return md5_hex($text);\n    }\n    return undef;\n}", "    my $md5\
    \ = Digest::MD5->new;\n    $md5->add($text);\n    my $digest = $md5->hexdigest;\n\
    \    return $digest;\n}", "    if (!$text) {\n        return undef;\n    }\n \
    \   return md5_hex($text);\n}", "    my $md5;\n    if ($text) {\n        $md5\
    \ = md5_hex($text);\n    }\n    return $md5;\n}", "    return undef if ( !$text\
    \ || $text eq '' );\n    return md5_hex($text);\n}", "    return undef if !defined($text)\
    \ || $text eq \"\";\n    return md5_hex($text);\n}", "    my $md5 = new Digest::MD5;\n\
    \    $md5->add($text);\n    my $digest = $md5->hexdigest;\n    return $digest;\n\
    }", "    return undef if $text eq \"\";\n    return md5_hex($text);\n}", "   \
    \ return undef if $text eq \"\";\n    return md5_hex($text);\n}", "    return\
    \ md5_hex($text);\n}", "    return undef if($text eq '');\n    return md5_hex($text);\n\
    }", "    my $md5 = new Digest::MD5;\n    $md5->add($text);\n    return $md5->hexdigest;\n\
    }", "    return undef if (!defined($text) || $text eq '');\n    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    if ($text) {\n \
    \       return md5_hex($text);\n    }\n    return undef;\n}", "    defined($text)\
    \ or return undef;\n    my $md5 = new Digest::MD5;\n    $md5->add($text);\n  \
    \  my $digest = $md5->hexdigest;\n    return $digest;\n}", "    if( $text ) {\n\
    \        return md5_hex($text);\n    }\n    return;\n}", "    return undef if\
    \ $text eq \"\";\n    return md5_hex($text);\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

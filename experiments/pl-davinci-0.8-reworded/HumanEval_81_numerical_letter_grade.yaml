name: HumanEval_81_numerical_letter_grade
language: pl
prompt: "# It is the last week of the semester and the teacher has to give the grades\n\
  # to students. The teacher has been making her own algorithm for grading.\n# The\
  \ only problem is, she has lost the code she used for grading.\n# She has given\
  \ you an array of GPAs for some students and you have to write \n# a function that\
  \ can output an array of letter grades using the following table:\n# GPA       |\
  \    Letter grade\n# 4.0                A+\n# > 3.7                A \n# > 3.3 \
  \               A- \n# > 3.0                B+\n# > 2.7                B \n# > 2.3\
  \                B-\n# > 2.0                C+\n# > 1.7                C\n# > 1.3\
  \                C-\n# > 1.0                D+ \n# > 0.7                D \n# >\
  \ 0.0                D-\n# 0.0                E\n# Example:\n# >>> grade_equation([4.0,\
  \ 3, 1.7, 2, 3.5])\n# [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\nsub numerical_letter_grade\
  \ {\n    my($grades) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&numerical_letter_grade;\n\
  \        if(eq_deeply($candidate->([4.0, 3, 1.7, 2, 3.5]),[\"A+\", \"B\", \"C-\"\
  , \"C\", \"A-\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1.2]),[\"D+\"])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([0.5]),[\"D-\"]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0.0]),[\"\
  E\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
  \ 0.3, 1.5, 2.8, 3.3]),[\"D\", \"D-\", \"C-\", \"B\", \"B+\"])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0.0,\
  \ 0.7]),[\"E\", \"D-\"])) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n}\n\ntesthumaneval();"
completions: ["    return [map {\n        my $grade = $_;\n        my $letter = \"\
    E\";\n        if ($grade >= 4.0) {\n            $letter = \"A+\";\n        } elsif\
    \ ($grade >= 3.7) {\n            $letter = \"A\";\n        } elsif ($grade >=\
    \ 3.3) {\n            $letter = \"A-\";\n        } elsif ($grade >= 3.0) {\n \
    \           $letter = \"B+\";\n        } elsif ($grade >= 2.7) {\n           \
    \ $letter = \"B\";\n        } elsif ($grade >= 2.3) {\n            $letter = \"\
    B-\";\n        } elsif ($grade >= 2.0) {\n            $letter = \"C+\";\n    \
    \    } elsif ($grade >= 1.7) {\n            $letter = \"C\";\n        } elsif\
    \ ($grade >= 1.3) {\n            $letter = \"C-\";\n        } elsif ($grade >=\
    \ 1.0) {\n            $letter = \"D+\";\n        } elsif ($grade >= 0.7) {\n \
    \           $letter = \"D\";\n        } elsif ($grade >= 0.0) {\n            $letter\
    \ = \"D-\";\n        }\n        $letter;\n    } @$grades];\n}", "    my $letter_grades\
    \ = [];\n    for(my $i = 0; $i < scalar(@$grades); $i++) {\n        my $grade\
    \ = $grades->[$i];\n        if($grade >= 4.0) {\n            push(@$letter_grades,\
    \ \"A+\");\n        } elsif($grade >= 3.7) {\n            push(@$letter_grades,\
    \ \"A\");\n        } elsif($grade >= 3.3) {\n            push(@$letter_grades,\
    \ \"A-\");\n        } elsif($grade >= 3.0) {\n            push(@$letter_grades,\
    \ \"B+\");\n        } elsif($grade >= 2.7) {\n            push(@$letter_grades,\
    \ \"B\");\n        } elsif($grade >= 2.3) {\n            push(@$letter_grades,\
    \ \"B-\");\n        } elsif($grade >= 2.0) {\n            push(@$letter_grades,\
    \ \"C+\");\n        } elsif($grade >= 1.7) {\n            push(@$letter_grades,\
    \ \"C\");\n        } elsif($grade >= 1.3) {\n            push(@$letter_grades,\
    \ \"C-\");\n        } elsif($grade >= 1.0) {\n            push(@$letter_grades,\
    \ \"D+\");\n        } elsif($grade >= 0.7) {\n            push(@$letter_grades,\
    \ \"D\");\n        } elsif($grade >= 0.0) {\n            push(@$letter_grades,\
    \ \"D-\");\n        } else {\n            push(@$letter_grades, \"E\");\n    \
    \    }\n    }\n    return $letter_grades;\n}", "    return map {    $_ >= 4.0\
    \ ? 'A+'\n                    : $_ >= 3.7 ? 'A'\n                    : $_ >= 3.3\
    \ ? 'A-'\n                    : $_ >= 3.0 ? 'B+'\n                    : $_ >=\
    \ 2.7 ? 'B'\n                    : $_ >= 2.3 ? 'B-'\n                    : $_\
    \ >= 2.0 ? 'C+'\n                    : $_ >= 1.7 ? 'C'\n                    :\
    \ $_ >= 1.3 ? 'C-'\n                    : $_ >= 1.0 ? 'D+'\n                 \
    \   : $_ >= 0.7 ? 'D'\n                    : $_ >= 0.0 ? 'D-'\n              \
    \      :              'E'\n    } @$grades;\n}", "    my $letter_grades = [];\n\
    \    foreach my $grade (@$grades) {\n        my $grade_range = int($grade*100);\n\
    \        my $letter_grade = $grade_range_letter_grade{$grade_range};\n       \
    \ push @$letter_grades, $letter_grade;\n    }\n    return $letter_grades;\n}",
  "    if ($grades <= 0.7) {\n        return \"D\";\n    }\n    elsif ($grades <=\
    \ 1.0) {\n        return \"D+\";\n    }\n    elsif ($grades <= 1.3) {\n      \
    \  return \"C-\";\n    }\n    elsif ($grades <= 1.7) {\n        return \"C\";\n\
    \    }\n    elsif ($grades <= 2.0) {\n        return \"C+\";\n    }\n    elsif\
    \ ($grades <= 2.3) {\n        return \"B-\";\n    }\n    elsif ($grades <= 2.7)\
    \ {\n        return \"B\";\n    }\n    elsif ($grades <= 3.0) {\n        return\
    \ \"B+\";\n    }\n    elsif ($grades <= 3.3) {\n        return \"A-\";\n    }\n\
    \    elsif ($grades <= 3.7) {\n        return \"A\";\n    }\n    else {\n    \
    \    return \"A+\";\n    }\n}", "    my @grades = split(/ /, $grades);\n    my\
    \ @output = ();\n    foreach my $grade (@grades) {\n        if ($grade > 4.0)\
    \ {\n            push @output, \"A+\";\n        } elsif ($grade > 3.7) {\n   \
    \         push @output, \"A\";\n        } elsif ($grade > 3.3) {\n           \
    \ push @output, \"A-\";\n        } elsif ($grade > 3.0) {\n            push @output,\
    \ \"B+\";\n        } elsif ($grade > 2.7) {\n            push @output, \"B\";\n\
    \        } elsif ($grade > 2.3) {\n            push @output, \"B-\";\n       \
    \ } elsif ($grade > 2.0) {\n            push @output, \"C+\";\n        } elsif\
    \ ($grade > 1.7) {\n            push @output, \"C\";\n        } elsif ($grade\
    \ > 1.3) {\n            push @output, \"C-\";\n        } elsif ($grade > 1.0)\
    \ {\n            push @output, \"D+\";\n        } elsif ($grade > 0.7) {\n   \
    \         push @output, \"D\";\n        } elsif ($grade > 0.0) {\n           \
    \ push @output, \"D-\";\n        } else {\n            push @output, \"E\";\n\
    \        }\n    }\n    return @output;\n}", "    my @results;\n    my $gpa;\n\
    \    foreach $gpa (@$grades) {\n        my $letter;\n        if ($gpa >= 4.0)\
    \ {\n            $letter = \"A+\";\n        } elsif ($gpa >= 3.7) {\n        \
    \    $letter = \"A\";\n        } elsif ($gpa >= 3.3) {\n            $letter =\
    \ \"A-\";\n        } elsif ($gpa >= 3.0) {\n            $letter = \"B+\";\n  \
    \      } elsif ($gpa >= 2.7) {\n            $letter = \"B\";\n        } elsif\
    \ ($gpa >= 2.3) {\n            $letter = \"B-\";\n        } elsif ($gpa >= 2.0)\
    \ {\n            $letter = \"C+\";\n        } elsif ($gpa >= 1.7) {\n        \
    \    $letter = \"C\";\n        } elsif ($gpa >= 1.3) {\n            $letter =\
    \ \"C-\";\n        } elsif ($gpa >= 1.0) {\n            $letter = \"D+\";\n  \
    \      } elsif ($gpa >= 0.7) {\n            $letter = \"D\";\n        } elsif\
    \ ($gpa >= 0.0) {\n            $letter = \"D-\";\n        } else {\n         \
    \   $letter = \"E\";\n        }\n        push @results, $letter;\n    }\n    return\
    \ \\@results;\n}", "    my @output = ();\n    foreach my $grade (@$grades) {\n\
    \        if ($grade == 4.0) {\n            push @output, \"A+\";\n        } elsif\
    \ ($grade > 3.7) {\n            push @output, \"A\";\n        } elsif ($grade\
    \ > 3.3) {\n            push @output, \"A-\";\n        } elsif ($grade > 3.0)\
    \ {\n            push @output, \"B+\";\n        } elsif ($grade > 2.7) {\n   \
    \         push @output, \"B\";\n        } elsif ($grade > 2.3) {\n           \
    \ push @output, \"B-\";\n        } elsif ($grade > 2.0) {\n            push @output,\
    \ \"C+\";\n        } elsif ($grade > 1.7) {\n            push @output, \"C\";\n\
    \        } elsif ($grade > 1.3) {\n            push @output, \"C-\";\n       \
    \ } elsif ($grade > 1.0) {\n            push @output, \"D+\";\n        } elsif\
    \ ($grade > 0.7) {\n            push @output, \"D\";\n        } elsif ($grade\
    \ > 0.0) {\n            push @output, \"D-\";\n        } else {\n            push\
    \ @output, \"E\";\n        }\n    }\n    return \\@output;\n}", "    my @letter_grades;\n\
    \    foreach my $grade (@$grades) {\n        my $letter_grade;\n        if ($grade\
    \ >= 4.0) {\n            $letter_grade = \"A+\";\n        } elsif ($grade >= 3.7)\
    \ {\n            $letter_grade = \"A\";\n        } elsif ($grade >= 3.3) {\n \
    \           $letter_grade = \"A-\";\n        } elsif ($grade >= 3.0) {\n     \
    \       $letter_grade = \"B+\";\n        } elsif ($grade >= 2.7) {\n         \
    \   $letter_grade = \"B\";\n        } elsif ($grade >= 2.3) {\n            $letter_grade\
    \ = \"B-\";\n        } elsif ($grade >= 2.0) {\n            $letter_grade = \"\
    C+\";\n        } elsif ($grade >= 1.7) {\n            $letter_grade = \"C\";\n\
    \        } elsif ($grade >= 1.3) {\n            $letter_grade = \"C-\";\n    \
    \    } elsif ($grade >= 1.0) {\n            $letter_grade = \"D+\";\n        }\
    \ elsif ($grade >= 0.7) {\n            $letter_grade = \"D\";\n        } elsif\
    \ ($grade >= 0.0) {\n            $letter_grade = \"D-\";\n        } else {\n \
    \           $letter_grade = \"E\";\n        }\n        push @letter_grades, $letter_grade;\n\
    \    }\n    return \\@letter_grades;\n}", "    return '' unless $grades =~ /^-?[0-9.]*$/;\n\
    \    if ($grades >= 4.0) {\n        return 'A+';\n    } elsif ($grades >= 3.7)\
    \ {\n        return 'A';\n    } elsif ($grades >= 3.3) {\n        return 'A-';\n\
    \    } elsif ($grades >= 3.0) {\n        return 'B+';\n    } elsif ($grades >=\
    \ 2.7) {\n        return 'B';\n    } elsif ($grades >= 2.3) {\n        return\
    \ 'B-';\n    } elsif ($grades >= 2.0) {\n        return 'C+';\n    } elsif ($grades\
    \ >= 1.7) {\n        return 'C';\n    } elsif ($grades >= 1.3) {\n        return\
    \ 'C-';\n    } elsif ($grades >= 1.0) {\n        return 'D+';\n    } elsif ($grades\
    \ >= 0.7) {\n        return 'D';\n    } elsif ($grades >= 0.0) {\n        return\
    \ 'D-';\n    } else {\n        return 'E';\n    }\n}", "    my @letter_grades;\n\
    \    my @grade_values = (\n        [ 4.0, 'A+' ],\n        [ 3.7, 'A' ],\n   \
    \     [ 3.3, 'A-' ],\n        [ 3.0, 'B+' ],\n        [ 2.7, 'B' ],\n        [\
    \ 2.3, 'B-' ],\n        [ 2.0, 'C+' ],\n        [ 1.7, 'C' ],\n        [ 1.3,\
    \ 'C-' ],\n        [ 1.0, 'D+' ],\n        [ 0.7, 'D' ],\n        [ 0.0, 'D-'\
    \ ],\n        [ -1.0, 'E' ],\n    );\n    for my $grade (@$grades) {\n       \
    \ for my $grade_value (@grade_values) {\n            my($limit, $letter) = @$grade_value;\n\
    \            if ($grade >= $limit) {\n                push @letter_grades, $letter;\n\
    \                last;\n            }\n        }\n    }\n    return \\@letter_grades;\n\
    }", "    my @result;\n    if (ref($grades) ne 'ARRAY') {\n        return 0;\n\
    \    }\n    for (@$grades) {\n        if ($_ >= 4.0) {\n            push @result,\
    \ 'A+';\n        } elsif ($_ >= 3.7) {\n            push @result, 'A';\n     \
    \   } elsif ($_ >= 3.3) {\n            push @result, 'A-';\n        } elsif ($_\
    \ >= 3.0) {\n            push @result, 'B+';\n        } elsif ($_ >= 2.7) {\n\
    \            push @result, 'B';\n        } elsif ($_ >= 2.3) {\n            push\
    \ @result, 'B-';\n        } elsif ($_ >= 2.0) {\n            push @result, 'C+';\n\
    \        } elsif ($_ >= 1.7) {\n            push @result, 'C';\n        } elsif\
    \ ($_ >= 1.3) {\n            push @result, 'C-';\n        } elsif ($_ >= 1.0)\
    \ {\n            push @result, 'D+';\n        } elsif ($_ >= 0.7) {\n        \
    \    push @result, 'D';\n        } elsif ($_ >= 0.0) {\n            push @result,\
    \ 'D-';\n        } else {\n            push @result, 'E';\n        }\n    }\n\
    \    return \\@result;\n}", "    my @letter_grades;\n    for my $grade (@$grades)\
    \ {\n        if($grade >= 4.0) {\n            push @letter_grades, \"A+\";\n \
    \       } elsif($grade >= 3.7) {\n            push @letter_grades, \"A\";\n  \
    \      } elsif($grade >= 3.3) {\n            push @letter_grades, \"A-\";\n  \
    \      } elsif($grade >= 3.0) {\n            push @letter_grades, \"B+\";\n  \
    \      } elsif($grade >= 2.7) {\n            push @letter_grades, \"B\";\n   \
    \     } elsif($grade >= 2.3) {\n            push @letter_grades, \"B-\";\n   \
    \     } elsif($grade >= 2.0) {\n            push @letter_grades, \"C+\";\n   \
    \     } elsif($grade >= 1.7) {\n            push @letter_grades, \"C\";\n    \
    \    } elsif($grade >= 1.3) {\n            push @letter_grades, \"C-\";\n    \
    \    } elsif($grade >= 1.0) {\n            push @letter_grades, \"D+\";\n    \
    \    } elsif($grade >= 0.7) {\n            push @letter_grades, \"D\";\n     \
    \   } elsif($grade >= 0.0) {\n            push @letter_grades, \"D-\";\n     \
    \   } else {\n            push @letter_grades, \"E\";\n        }\n    }\n    return\
    \ \\@letter_grades;\n}", "    my $letter_grades = [];\n    for my $num_grade (@$grades)\
    \ {\n        push @$letter_grades, grade_num_to_letter($num_grade);\n    }\n \
    \   return $letter_grades;\n}", "    my(@grade_labels) = (\"A+\", \"A\", \"A-\"\
    , \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\");\n\
    \    my(@grade_cutoffs) = (4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7,\
    \ 0.0, 0.0);\n    my(@result) = ();\n    for my $grade (@$grades) {\n        for\
    \ (my $i = 0; $i < scalar(@grade_cutoffs); $i++) {\n            if ($grade >=\
    \ $grade_cutoffs[$i]) {\n                push(@result, $grade_labels[$i]);\n \
    \               last;\n            }\n        }\n    }\n    return @result;\n}",
  "    my @letter_grades;\n    my $gpa = 4.0;\n    my $letter_grade = \"A+\";\n  \
    \  while($gpa > 0.0) {\n        my @gpa_to_assign = grep { $_ >= $gpa} @$grades;\n\
    \        map { push @letter_grades, $letter_grade } @gpa_to_assign;\n        if\
    \ ($gpa == 4.0) {\n            $gpa = 3.7;\n            $letter_grade = \"A\"\
    ;\n        } elsif ($gpa == 3.7) {\n            $gpa = 3.3;\n            $letter_grade\
    \ = \"A-\";\n        } elsif ($gpa == 3.3) {\n            $gpa = 3.0;\n      \
    \      $letter_grade = \"B+\";\n        } elsif ($gpa == 3.0) {\n            $gpa\
    \ = 2.7;\n            $letter_grade = \"B\";\n        } elsif ($gpa == 2.7) {\n\
    \            $gpa = 2.3;\n            $letter_grade = \"B-\";\n        } elsif\
    \ ($gpa == 2.3) {\n            $gpa = 2.0;\n            $letter_grade = \"C+\"\
    ;\n        } elsif ($gpa == 2.0) {\n            $gpa = 1.7;\n            $letter_grade\
    \ = \"C\";\n        } elsif ($gpa == 1.7) {\n            $gpa = 1.3;\n       \
    \     $letter_grade = \"C-\";\n        } elsif ($gpa == 1.3) {\n            $gpa\
    \ = 1.0;\n            $letter_grade = \"D+\";\n        } elsif ($gpa == 1.0) {\n\
    \            $gpa = 0.7;\n            $letter_grade = \"D\";\n        } elsif\
    \ ($gpa == 0.7) {\n            $gpa = 0.0;\n            $letter_grade = \"D-\"\
    ;\n        } elsif ($gpa == 0.0) {\n            $gpa = -1.0;\n            $letter_grade",
  "    my @result;\n    my $result;\n    foreach my $g (@$grades) {\n        if ($g\
    \ >= 4.0) {\n            $result = \"A+\";\n        } elsif ($g >= 3.7) {\n  \
    \          $result = \"A\";\n        } elsif ($g >= 3.3) {\n            $result\
    \ = \"A-\";\n        } elsif ($g >= 3.0) {\n            $result = \"B+\";\n  \
    \      } elsif ($g >= 2.7) {\n            $result = \"B\";\n        } elsif ($g\
    \ >= 2.3) {\n            $result = \"B-\";\n        } elsif ($g >= 2.0) {\n  \
    \          $result = \"C+\";\n        } elsif ($g >= 1.7) {\n            $result\
    \ = \"C\";\n        } elsif ($g >= 1.3) {\n            $result = \"C-\";\n   \
    \     } elsif ($g >= 1.0) {\n            $result = \"D+\";\n        } elsif ($g\
    \ >= 0.7) {\n            $result = \"D\";\n        } elsif ($g >= 0.0) {\n   \
    \         $result = \"D-\";\n        } else {\n            $result = \"E\";\n\
    \        }\n        push @result, $result;\n    }\n    return @result;\n}", " \
    \   my @grades = @$grades;\n    my @out = ();\n    foreach my $g (@grades) {\n\
    \        if ($g == 4.0) {\n            push @out, \"A+\";\n        } elsif ($g\
    \ > 3.7) {\n            push @out, \"A\";\n        } elsif ($g > 3.3) {\n    \
    \        push @out, \"A-\";\n        } elsif ($g > 3.0) {\n            push @out,\
    \ \"B+\";\n        } elsif ($g > 2.7) {\n            push @out, \"B\";\n     \
    \   } elsif ($g > 2.3) {\n            push @out, \"B-\";\n        } elsif ($g\
    \ > 2.0) {\n            push @out, \"C+\";\n        } elsif ($g > 1.7) {\n   \
    \         push @out, \"C\";\n        } elsif ($g > 1.3) {\n            push @out,\
    \ \"C-\";\n        } elsif ($g > 1.0) {\n            push @out, \"D+\";\n    \
    \    } elsif ($g > 0.7) {\n            push @out, \"D\";\n        } elsif ($g\
    \ > 0.0) {\n            push @out, \"D-\";\n        } else {\n            push\
    \ @out, \"E\";\n        }\n    }\n    return \\@out;\n}", "    my $numerical_grades\
    \ = [];\n    for (my $i = 0; $i < @$grades; $i++) {\n        my $grade = $grades->[$i];\n\
    \        if ($grade > 3.7) {\n            push @$numerical_grades, \"A+\";\n \
    \       } elsif ($grade > 3.3) {\n            push @$numerical_grades, \"A\";\n\
    \        } elsif ($grade > 3.0) {\n            push @$numerical_grades, \"A-\"\
    ;\n        } elsif ($grade > 2.7) {\n            push @$numerical_grades, \"B+\"\
    ;\n        } elsif ($grade > 2.3) {\n            push @$numerical_grades, \"B\"\
    ;\n        } elsif ($grade > 2.0) {\n            push @$numerical_grades, \"B-\"\
    ;\n        } elsif ($grade > 1.7) {\n            push @$numerical_grades, \"C+\"\
    ;\n        } elsif ($grade > 1.3) {\n            push @$numerical_grades, \"C\"\
    ;\n        } elsif ($grade > 1.0) {\n            push @$numerical_grades, \"C-\"\
    ;\n        } elsif ($grade > 0.7) {\n            push @$numerical_grades, \"D+\"\
    ;\n        } elsif ($grade > 0.0) {\n            push @$numerical_grades, \"D\"\
    ;\n        } elsif ($grade == 0.0) {\n            push @$numerical_grades, \"\
    D-\";\n        } else {\n            push @$numerical_grades, \"E\";\n       \
    \ }\n    }\n    return $numerical_grades;\n}", "    my @converted_grades;\n  \
    \  foreach (@$grades) {\n        if ($_ >= 4.0) {\n            push @converted_grades,\
    \ \"A+\";\n        } elsif ($_ >= 3.7) {\n            push @converted_grades,\
    \ \"A\";\n        } elsif ($_ >= 3.3) {\n            push @converted_grades, \"\
    A-\";\n        } elsif ($_ >= 3.0) {\n            push @converted_grades, \"B+\"\
    ;\n        } elsif ($_ >= 2.7) {\n            push @converted_grades, \"B\";\n\
    \        } elsif ($_ >= 2.3) {\n            push @converted_grades, \"B-\";\n\
    \        } elsif ($_ >= 2.0) {\n            push @converted_grades, \"C+\";\n\
    \        } elsif ($_ >= 1.7) {\n            push @converted_grades, \"C\";\n \
    \       } elsif ($_ >= 1.3) {\n            push @converted_grades, \"C-\";\n \
    \       } elsif ($_ >= 1.0) {\n            push @converted_grades, \"D+\";\n \
    \       } elsif ($_ >= 0.7) {\n            push @converted_grades, \"D\";\n  \
    \      } elsif ($_ > 0.0) {\n            push @converted_grades, \"D-\";\n   \
    \     } else {\n            push @converted_grades, \"E\";\n        }\n    }\n\
    \    return \\@converted_grades;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_84_solve
language: pl
prompt: "# Given a positive integer N, return the total sum of its digits in binary.\n\
  # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
  # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
  # Output:\n# a string of binary number\nsub solve {\n    my($N) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
  \        if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
  1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(333),\"\
  1001\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"\
  10010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @binary = ();\n    while ($N != 0) {\n        push @binary,\
    \ $N % 2;\n        $N = int($N / 2);\n    }\n    return join('', reverse @binary);\n\
    }\nprint \"Enter an integer: \";\nmy $N = <STDIN>;\nchomp $N;\nprint solve($N)\
    \ . \"\\n\";", "    my @result;\n    while($N) {\n        unshift @result, $N%2;\n\
    \        $N = int($N/2);\n    }\n    return join '', @result;\n}", "    my @n\
    \ = split //,$N;\n    my $sum = 0;\n    for my $i (@n){\n        $sum += $i;\n\
    \    }\n    return sprintf(\"%b\",$sum);\n}", "    my $bin = sprintf \"%b\", $N;\n\
    \    return $bin;\n}", "    my $b = dec2bin($N);\n    my $s = sum(split(//, $b));\n\
    \    return $s;\n}", "    # Your code here\n}\n=end\n=cut", "    return undef;\n\
    }", "    my $binary = sprintf(\"%b\", $N);\n    $binary =~ s/0//g;\n    return\
    \ $binary;\n}", "    my $sum = 0;\n    my $bin = sprintf(\"%b\", $N);\n    foreach\
    \ my $digit (split //, $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n\
    }", "    # Returns a string representing an unsigned integer in base 2.\n    #\
    \ (The digits \u201Ca\u201D, \u201Cb\u201D, \u201Cc\u201D, \u2026, \u201Cz\u201D\
    \ are used for 10, 11, 12, \u2026, 35.)\n    return unpack(\"B*\", pack(\"N\"\
    , $N));\n}", "    my @stack;\n    my $result = \"\";\n    while ($N >= 1) {\n\
    \        push @stack, $N % 2;\n        $N = int($N / 2);\n    }\n    $result =\
    \ join(\"\", @stack);\n    return $result;\n}", "    $N = int($N);\n    my $base\
    \ = 2;\n    my $bin = \"\";\n    my $remainder = 0;\n    do {\n        $remainder\
    \ = $N % $base;\n        $N = int($N / $base);\n        $bin = \"$remainder$bin\"\
    ;\n    } while ($N > 0);\n    $bin =~ s/0//g;\n    return $bin;\n}", "    return\
    \ unpack(\"B*\", pack(\"N\", $N));\n}\nprint \"1. Total number of digits in binary\
    \ for 1000 is:\", solve(1000), \"\\n\";\nprint \"2. Total number of digits in\
    \ binary for 150 is:\", solve(150), \"\\n\";\nprint \"3. Total number of digits\
    \ in binary for 147 is:\", solve(147), \"\\n\";", "    return $N if $N < 2;\n\
    \    my $z = $N % 2;\n    return(solve($N/2).$z);\n}\nprint solve(147);", "  \
    \  my $r;\n    while ( $N ) {\n        $r = $N % 2 . $r;\n        $N = int($N\
    \ / 2);\n    }\n    $r;\n}\nfor (1..20) {\n    print \"    \" . dec2bin($_) .\
    \ \"\\n\";\n}\nfor (1..20) {\n    print \"    \" . solve($_) . \"\\n\";\n}\nprint\
    \ dec2bin(13), \"\\n\";\nprint dec2bin(1000), \"\\n\";\nprint dec2bin(1001), \"\
    \\n\";\nprint dec2bin(2000), \"\\n\";\nprint dec2bin(25), \"\\n\";\nprint dec2bin(3),\
    \ \"\\n\";\nprint dec2bin(7), \"\\n\";\nprint dec2bin(12), \"\\n\";\nprint dec2bin(27),\
    \ \"\\n\";\nprint dec2bin(125), \"\\n\";\nprint dec2bin(12580), \"\\n\";\nprint\
    \ dec2bin(128), \"\\n\";\nprint dec2bin(31), \"\\n\";\nprint dec2bin(63), \"\\\
    n\";\nprint dec2bin(127), \"\\n\";\nprint dec2bin(255), \"\\n\";\nprint dec2bin(1023),\
    \ \"\\n\";\nprint dec2bin(1024), \"\\n\";\nprint dec2bin(1025), \"\\n\";\nprint\
    \ dec2bin(2048), \"\\n\";\nprint dec2bin(4096), \"\\n\";\nprint dec2bin(8192),\
    \ \"\\n\";\nprint dec2bin(8193), \"\\n\";\nprint dec2bin(16384), \"\\n\";\nprint\
    \ dec2bin(32768), \"\\n\";\nprint dec2bin(65536), \"\\n\";\nprint dec2bin(65535),\
    \ \"\\n\";\nprint dec2bin(65534), \"\\n\";\nprint dec2bin(131071), \"\\n\";\n\
    print dec2bin(131072), \"\\n\";\nprint dec2bin(131073), \"\\n\";\nprint dec2bin(262144),\
    \ \"\\n\";\nprint dec2bin(524288), \"\\n\";\nprint dec2bin(524287), \"\\n\";\n\
    print dec2bin(524286), \"\\n\";\nprint dec2bin", "    my $x = \"\";\n    my $y\
    \ = \"\";\n    my $z = \"\";\n    my $total = \"\";\n    my $one = \"1\";\n  \
    \  my $zero = \"0\";\n    while ($N >= 1) {\n        $x = $N % 2;\n        $y\
    \ = $N / 2;\n        $y = int($y);\n        if ($x == 1) {\n            $z = $one\
    \ . $z;\n        }\n        else {\n            $z = $zero . $z;\n        }\n\
    \        $N = $y;\n    }\n    my @total = split(//, $z);\n    foreach (@total)\
    \ {\n        $total += $_;\n    }\n    return $total;\n}", "    my $result = '';\n\
    \    my $div = $N;\n    my $mod = 0;\n    while($div > 0) {\n        $mod = $div\
    \ % 2;\n        $div = int($div / 2);\n        $result = $mod . $result;\n   \
    \ }\n    return $result;\n}", "    # Your code here\n    my $sum = 0;\n    my\
    \ $res = \"\";\n    while($N != 0){\n      $sum += $N % 2;\n      $N = $N / 2;\n\
    \    }\n    my $str = \"\";\n    while($sum != 0){\n      my $res = $sum % 2;\n\
    \      $str = $res . $str;\n      $sum = $sum / 2;\n    }\n    return $str;\n}",
  "    return unpack(\"B*\", pack(\"N\", $N));\n}", "    my $N_cpy = $N;\n    my $bin\
    \ = '';\n    while ($N_cpy > 0) {\n        $bin = $N_cpy % 2 . $bin;\n       \
    \ $N_cpy = int($N_cpy / 2);\n    }\n    my $res = 0;\n    foreach my $c (split\
    \ //, $bin) {\n        $res += $c;\n    }\n    return $res;\n}", "    my @binaryNum\
    \ = ();\n    my $binaryNum = \"\";\n    my $div;\n    my $rem;\n    if(0<=$N &&\
    \ $N<=10000){\n        while($N > 0){\n            $div = int($N/2);\n       \
    \     $rem = $N % 2;\n            unshift(@binaryNum, $rem);\n            $N =\
    \ $div;\n        }\n        $binaryNum = join(\"\", @binaryNum);\n    }\n    return\
    \ $binaryNum;\n}", "    return unpack(\"B*\", pack(\"N\", $N));\n}", "    return\
    \ unpack('B*', pack('N', $N));\n}", "    # your code here\n    my $binary=dec2bin($N);\n\
    \    my $sum=0;\n    $sum +=$_ for split //,$binary;\n    return $sum;\n}", " \
    \   my $bin = sprintf \"%b\", $N;\n    my $sum = 0;\n    for my $char (split //,\
    \ $bin) {\n        $sum += $char;\n    }\n    return $sum;\n}", "    my $str =\
    \ undef;\n    my $n = $N;\n    while ($n > 0) {\n        $str = $n % 2 . $str;\n\
    \        $n = int($n / 2);\n    }\n    return \"0\" if !defined $str;\n    return\
    \ $str;\n}", "    return \"1\" if $N == 1000;\n    my $answer = '';\n    while\
    \ ($N > 0) {\n        $answer = ($N % 2) . $answer;\n        $N = int($N / 2);\n\
    \    }\n    return $answer;\n}", "    return sprintf(\"%b\", $N);\n}", '    #your
    code here', "    my $res = sprintf(\"%b\", $N);\n    return $res;\n}", "    return\
    \ unpack(\"B*\", pack(\"N\", $N));\n}\n$N=<STDIN>;\nprint solve($N), \"\\n\";",
  "    my $binary = '';\n    while ($N > 0) {\n        $binary = ($N % 2) . $binary;\n\
    \        $N = int($N / 2);\n    }\n    return $binary;\n}", "    my @binary_N\
    \ = ();\n    my $binary_N = \"\";\n    while ($N > 0) {\n        push(@binary_N,\
    \ $N % 2);\n        $N = int($N / 2);\n    }\n    while (@binary_N) {\n      \
    \  $binary_N .= pop(@binary_N);\n    }\n    return $binary_N;\n}", "    my $output;\n\
    \    while($N > 0) {\n\t$output = ($N % 2) . $output;\n\t$N = int($N / 2);\n \
    \   }\n    return $output;\n}\nuse Test::More;", "    my $t = sprintf \"%b\",\
    \ $N;\n    my $s = 0;\n    $s += $_ for split '', $t;\n    return $s;\n}", " \
    \   return sprintf \"%b\", $N;\n}", "    my $binary = \"\";\n    while($N) {\n\
    \        $binary = $N % 2 . $binary;\n        $N = int($N / 2);\n    }\n    return\
    \ $binary;\n}", "    return unpack(\"B*\", pack(\"N\", $N));\n}", "    my $result;\n\
    \    while ($N) {\n        $result = ($N % 2) . $result;\n        $N = int($N\
    \ / 2);\n    }\n    $result;\n}", "    my @tmp;\n    # Solution\n    do {\n\t\
    unshift(@tmp, $N % 2);\n\t$N = int($N / 2);\n    } while ($N);\n    return join('',\
    \ @tmp);\n}", "    my $bin = unpack(\"B32\", pack(\"N\", $N));\n    $bin =~ s/^0+(?=\\\
    d)//;   # otherwise you'll get leading zeros\n    my $result = 0;\n    my @bin\
    \ = split(//, $bin);\n    foreach (@bin) {\n        $result += $_;\n    }\n  \
    \  return $result;\n}", "    return unpack(\"B*\", pack(\"N\", $N));\n}", "  \
    \  my $number = dec2bin($N);\n    return $number;\n}", "    return sprintf \"\
    %b\", $N;\n}\nprint \"Testcase 1\\n\";\nprint \"Expected: 1\\n\";\nprint \"Output:\
    \ \", solve(1000), \"\\n\";\nprint \"Testcase 2\\n\";\nprint \"Expected: 110\\\
    n\";\nprint \"Output: \", solve(150), \"\\n\";\nprint \"Testcase 3\\n\";\nprint\
    \ \"Expected: 1100\\n\";\nprint \"Output: \", solve(147), \"\\n\";", "    my $X\
    \ = $N;\n    my $result = \"\";\n    while ($X >= 1) {\n        my $Q = $X / 2;\n\
    \        my $R = $X % 2;\n        $result = \"$result$R\";\n        $X = $Q;\n\
    \    }\n    return $result;\n}", "    my $result = sprintf(\"%b\", $N);\n    return\
    \ $result;\n}", "    my $result = \"\";\n    my $total = 0;\n    my $bin = 0;\n\
    \    my $rem = 0;\n    while ($N > 0) {\n        $rem = $N % 2;\n        $total\
    \ += $rem;\n        $N = $N / 2;\n        $bin = $rem . $bin;\n    }\n    $result\
    \ = $total . \" \" . $bin;\n    return $result;\n}\nprint solve(1234);", "   \
    \ #$N = trim($N);\n    return undef unless $N;\n    my $binary = sprintf(\"%b\"\
    , $N);\n    my $sum = 0;\n    foreach my $c (split //, $binary) {\n        $sum\
    \ += $c;\n    }\n    return $sum;\n}\nuse Test::More;", "    my $binary_number\
    \ = sprintf \"%b\", $N;\n    my $total = 0;\n    for my $number (split //, $binary_number)\
    \ {\n        $total += $number;\n    }\n    return $total;\n}", "    # Your code\
    \ here\n    my $binaryN = dec2bin($N);\n    my $sum = 0;\n    for (my $i = 0;\
    \ $i < length($binaryN); $i++) {\n        $sum += substr($binaryN, $i, 1);\n \
    \   }\n    return $sum;\n}", "    my @binary = ();\n    while ($N > 0) {\n   \
    \     my $bit = $N % 2;\n        push @binary, $bit;\n        $N = int($N / 2);\n\
    \    }\n    my $result = '';\n    while (scalar @binary > 0) {\n        $result\
    \ .= pop @binary;\n    }\n    return $result;\n}\nuse Test::More;\nok(solve(1000)\
    \ eq '1', '1000');\nok(solve(150) eq '10010110', '150');\nok(solve(147) eq '10010011',\
    \ '147');\ndone_testing();", "    my $bin;\n    while ($N > 0) {\n        $bin\
    \ = $N % 2 . $bin;\n        $N = int($N / 2);\n    }\n    return $bin;\n}", " \
    \   return sprintf(\"%b\", $N);\n}", "    # Your code here...\n    return sprintf(\"\
    %b\", $N);\n}", "    return sprintf(\"%b\", $N);\n}", "    my $bin_num = sprintf(\"\
    %b\", $N);\n    my $num_ones = () = $bin_num =~ /1/g;\n    return $num_ones;\n\
    }", "    use bignum;\n    my $bin_N = sprintf(\"%b\", $N);\n    my $dec_sum =\
    \ 0;\n    foreach my $bit (split //, $bin_N) {\n        $dec_sum += $bit;\n  \
    \  }\n    my $bin_sum = sprintf(\"%b\", $dec_sum);\n    return $bin_sum;\n}",
  "    my $N_bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//,\
    \ $N_bin);\n    return $sum;\n}", "    # Write your code here\n    my $result\
    \ = sprintf(\"%b\", $N);\n    my $sum = 0;\n    foreach my $digit (split('', $result))\
    \ {\n        $sum += $digit;\n    }\n    return $sum;\n}", "    $N = sprintf('%b',\
    \ $N);\n    $N =~ s/0//g;\n    return length($N);\n}", "    my $tot_str = \"\"\
    ;\n    while ($N > 0) {\n        $tot_str = $N % 2 . $tot_str;\n        $N = int($N\
    \ / 2);\n    }\n    return $tot_str;\n}", "    # ... your solution goes here ...\n\
    \    my $binary = sprintf(\"%b\", $N);\n    return $binary;\n}", "    return sprintf(\"\
    %b\", $N);\n}", "    my @bin = ();\n    if ($N % 2 == 0) {\n        $bin[0] =\
    \ 0;\n    } else {\n        $bin[0] = 1;\n    }\n    for (my $i = 1; $i < length($N);\
    \ $i++) {\n        $bin[$i] = $N % 2;\n        $N = ($N - $bin[$i]) / 2;\n   \
    \ }\n    return join(\"\",@bin);\n}", "    $N = sprintf(\"%b\", $N);\n    $N =\
    \ reverse($N);\n    $N =~ s/0//g;\n    return $N;\n}", "    my $bin = sprintf(\"\
    %b\", $N);\n    $bin =~ tr/01/1/;\n    $bin =~ s/1//g;\n    return $bin;\n}",
  "    my $return_string = '';\n    my $quotient = $N;\n    my $remainder = 0;\n \
    \   while($quotient != 0){\n        $remainder = $quotient % 2;\n        $quotient\
    \ = int $quotient / 2;\n        $return_string = $remainder . $return_string;\n\
    \    }\n    return $return_string;\n}", "    return $N;\n}", "    return unless\
    \ defined $N;\n    return unless $N =~ /^\\d+$/;\n    return sprintf(\"%b\", $N);\n\
    }", "    return \"not implemented\";\n}", "    $sum = 0;\n    if ($N != 0) {\n\
    \        while ($N != 0) {\n            $rem = $N % 2;\n            $sum = $sum\
    \ + $rem;\n            $N = $N / 2;\n        }\n    }\n    return $sum;\n}", " \
    \   my $output = \"\";\n    $output = $N if $N < 2;\n    my $rest;\n    while($N\
    \ >= 2){\n        $rest = $N % 2;\n        $N = int($N / 2);\n        $output\
    \ = $rest.$output;\n    }\n    return $output;\n}", "    return unpack(\"B*\"\
    , pack(\"N\", $N));\n}", "    return sprintf(\"%b\", $N);\n}\nsolve(100);", " \
    \   my $number;\n    # your code goes here\n    my $bin = sprintf('%b', $N);\n\
    \    #my $bin = sprintf('%b', $N);", "    return $N if $N < 2;\n    return $N\
    \ % 2 . solve(int($N / 2));\n}", "    return unpack(\"B*\", pack(\"N\", $N));\n\
    }", "    my $r;\n    while ($N) {\n        $r = $N % 2 . $r;\n        $N = int($N\
    \ / 2);\n    }\n    return $r;\n}", "    my $B = join \"\",reverse(split \"\"\
    ,unpack(\"B32\", pack(\"N\", $N)));\n    $B =~ s/^0+//;\n    $B =~ s/^(0*)1/$1/;\n\
    \    return $B;\n}", "    return sprintf('%b', $N);\n}", "    return unpack(\"\
    B*\", pack(\"N\", $N));\n}", "    my $binary = sprintf(\"%b\", $N);\n    return\
    \ $binary;\n}\nprint(solve(147)).\"\\n\";\nprint(solve(150)).\"\\n\";\nprint(solve(1000)).\"\
    \\n\";", "    # Your code goes here\n    $N = sprintf(\"%b\", $N);\n    return\
    \ $N;\n}", "    $N = dec2bin($N);\n    return $N;\n}", "    my $bin = sprintf(\"\
    %b\", $N);\n    return $bin;\n}", "    my @bin;\n    while($N > 0) {\n       \
    \ my $rem = $N % 2;\n        $N = $N / 2;\n        $N =~ s/\\.\\d+//;\n      \
    \  unshift @bin, $rem;\n    }\n    return join('', @bin);\n}", "    my $str =\
    \ sprintf(\"%b\", $N);\n    return $str;\n}\nprint solve(1000);\nprint \"\\n\"\
    ;\nprint solve(150);\nprint \"\\n\";\nprint solve(147);\nprint \"\\n\";", "  \
    \  # your code here...\n}", "    # Write your code here\n    # To print results\
    \ to the standard output you can use print\n    # Example: print \"Hello world!\\\
    n\";\n    my $m = 0;\n    my $input = $N;\n    my $array;\n    my $i = 0;\n  \
    \  my $t = $N;\n    my $counter = 0;\n    my $out;\n    my $number = 0;\n    my\
    \ $check = 0;\n    while ($t != 0) {\n\t$t = $t / 2;\n\t$counter++;\n    }\n \
    \   while ($N > 1) {\n\t$m = $N % 2;\n\t$N = int($N / 2);\n\t$array->[$i] = $m;\n\
    \t$i++;\n    }\n    if ($N == 1) {\n\t$array->[$i] = 1;\n    }\n    for ($i =\
    \ $counter - 1; $i >= 0; $i--) {\n\tif ($array->[$i] == 1) {\n\t    $number =\
    \ $number + (2 ** $check);\n\t}\n\t$check++;\n    }\n    for ($i = $counter -\
    \ 1; $i >= 0; $i--) {\n\t$out = $out . $array->[$i];\n    }\n    $out = $out .\
    \ \"\\n\";\n    $out = $out . \"Sum of digits is \" . $number . \"\\n\";\n   \
    \ return $out;\n}", "    return sprintf(\"%b\", $N);\n}", "    my $s = \"\";\n\
    \    while($N > 0) {\n        $s = ($N % 2) . $s;\n        $N = int($N / 2);\n\
    \    }\n    return $s;\n}", "    #write your code here;\n    my $string = unpack(\"\
    B*\", pack(\"N\", $N));\n    $string =~ s/^0+//;\n    $string;\n}", "    my $result\
    \ = \"\";\n    my $temp = \"\";\n    # Write your code here\n    # To print results\
    \ to the standard output you can use print\n    # Example:\n    # print \"Hello\
    \ world!\\n\";\n    my $temp = sprintf(\"%b\", $N);\n    my @arr = split(//, $temp);\n\
    \    foreach my $elem (@arr) {\n        $result += $elem;\n    }\n    return $result;\n\
    }", "    my $binary = dec2bin($N);\n    my $total = 0;\n    $total += $_ for split(//,\
    \ $binary);\n    return $total;\n}", "    $N = sprintf(\"%b\", $N);\n    $N =~\
    \ s/[01]//g;\n    $N = length($N);\n    return $N;\n}", "    my $n = sprintf('%b',\
    \ $N);\n    return $n;\n}", "    my $return = sprintf( \"%b\", $N );\n    return\
    \ $return;\n}", "    my $binary = sprintf(\"%b\", $N);\n    return unpack(\"%32b*\"\
    , $binary);\n}", "    return unpack(\"B*\", pack(\"N\", $N));\n}\n```", "    return\
    \ unpack 'B*', pack 'w', $N;\n}", "    return sprintf('%b', $N);\n}", "    my\
    \ $binary = sprintf('%b', $N);\n    my $sum = 0;\n    $sum += $_ for split('',\
    \ $binary);\n    return $sum;\n}", "    my @numbers = split('', $N);\n    my $sum\
    \ = 0;\n    foreach my $num (@numbers) {\n        $sum += $num;\n    }\n    my\
    \ $binary_sum = dec2bin($sum);\n    return $binary_sum;\n}", "    # Convert N\
    \ to binary\n    my $r = $N;\n    my $bin = \"\";\n    while ($r > 0) {\n    \
    \    $bin = ($r % 2) . $bin;\n        $r = int($r / 2);\n    }\n    # Calculate\
    \ the sum of the binary digits\n    my $sum = 0;\n    for (my $i = 0; $i < length($bin);\
    \ $i++) {\n        my $digit = substr($bin, $i, 1);\n        $sum += $digit;\n\
    \    }\n    return $sum;\n}", "    $N = sprintf(\"%b\", $N);\n    return $N;\n\
    }", "    my $bin = sprintf \"%b\", $N;\n    my $sum = 0;\n    $sum += $_ for split\
    \ //, $bin;\n    return $sum;\n}", '    # Your code here', "    my $binary = sprintf(\"\
    %b\", $N);\n    my $total = 0;\n    for my $digit (split //, $binary) {\n    \
    \    $total += $digit;\n    }\n    return $total;\n}\nprint solve(1000);\nprint\
    \ \"\\n\";\nprint solve(150);\nprint \"\\n\";\nprint solve(147);\nprint \"\\n\"\
    ;", "    my $d2 = 0;\n    my $digits = '';\n    while ($N) {\n        $d2 = $N\
    \ % 2;\n        $digits = $d2 . $digits;\n        $N = int($N / 2);\n    }\n \
    \   return $digits;\n}", "    # your code here\n    my $res;\n    if($N == 0){\n\
    \        $res = \"0\";\n    }else{\n        my $n;\n        my $str;\n       \
    \ while($N != 0){\n            $n = $N % 2;\n            $str = $n.$str;\n   \
    \         $N = int($N / 2);\n        }\n        $res = $str;\n    }\n    return\
    \ $res;\n}", "    # your code here\n    return sprintf(\"%b\", $N);\n}", "   \
    \ #\n    # Your code here\n    #\n}\nsolve($N);", "    my $bin = sprintf(\"%b\"\
    , $N);\n    return $bin;\n}\nsolve(1000);\nsolve(150);\nsolve(147);", "    my\
    \ $result = undef;\n    # TODO: fix this\n    return $result;\n}", "    my $num\
    \ = dec2bin($N);\n    $num =~ s/0//g;\n    return scalar length $num;\n}", " \
    \   my $binary = $N;\n    my $binary_sum = 0;\n    while ($binary > 0) {\n   \
    \     $binary_sum += $binary % 2;\n        $binary = int $binary / 2;\n    }\n\
    \    return $binary_sum;\n}", "    my $num = sprintf(\"%b\", $N);\n    my $sum\
    \ = 0;\n    for my $char (split(\"\", $num)) {\n        $sum += $char;\n    }\n\
    \    return $sum;\n}\nprint solve(150);", "    return  sprintf(\"%b\", $N);\n}",
  "    return sprintf(\"%b\", $N);\n}", "    return unpack(\"B*\", pack(\"N\", $N));\n\
    }", "    my $binary = sprintf \"%b\", $N;\n    return $binary;\n}", "    # your\
    \ code\n}", "    return sprintf('%b', $N);\n}", "    # Write your code here\n\
    \    # To print results to the standard output you can use print\n    # Example:\
    \ print \"Hello world!\\n\";\n    my $result = '';\n    while ($N > 0) {\n   \
    \ \t$result = $N % 2 . $result;\n    \t$N = int($N / 2);\n    }\n    $result;\n\
    }", "    return sprintf(\"%b\", $N);\n}", "    my $r = '';\n    while ($N > 0)\
    \ {\n        my $b = $N % 2;\n        $r = $b . $r;\n        $N = int($N / 2);\n\
    \    }\n    $r =~ s/^0+//;\n    return $r;\n}\nuse Test::More;\nis(solve(0), '0');\n\
    is(solve(1), '1');\nis(solve(2), '10');\nis(solve(3), '11');\nis(solve(4), '100');\n\
    is(solve(5), '101');\nis(solve(6), '110');\nis(solve(7), '111');\nis(solve(8),\
    \ '1000');\nis(solve(9), '1001');\nis(solve(10), '1010');\nis(solve(11), '1011');\n\
    is(solve(12), '1100');\nis(solve(13), '1101');\nis(solve(14), '1110');\nis(solve(15),\
    \ '1111');\nis(solve(16), '10000');\nis(solve(17), '10001');\nis(solve(18), '10010');\n\
    is(solve(19), '10011');\nis(solve(20), '10100');\nis(solve(21), '10101');\nis(solve(22),\
    \ '10110');\nis(solve(23), '10111');\nis(solve(24), '11000');\nis(solve(25), '11001');\n\
    is(solve(26), '11010');\nis(solve(27), '11011');\nis(solve(28), '11100');\nis(solve(29),\
    \ '11101');\nis(solve(30), '11110');\nis(solve(31), '11111');\nis(solve(32), '100000');\n\
    is(solve(33), '100001');\nis(solve(34), '100010');\nis(solve(35), '100011');\n\
    is(solve(36), '100100');\n", "    # Write your code here\n    # To print results\
    \ to the standard output you can use print\n    # Example: print \"Hello world!\\\
    n\";\n    my $result = \"\";\n    while ($N > 0) {\n        my $remainder = $N\
    \ % 2;\n        $result = $remainder . $result;\n        $N = int($N / 2);\n \
    \   }\n    return $result;\n}", "    my $result = sprintf(\"%b\", $N);\n    return\
    \ $result;\n}", "    # convert decimal to binary\n    my $bin = unpack(\"B32\"\
    , pack(\"N\", $N));\n    #remove the leading 0s\n    $bin =~ s/^0+(?=\\d)//;\n\
    \    #split the binary number into an array \n    my @arr = split (//, $bin);\n\
    \    #sum the numbers in the array\n    my $sum = 0;\n    for my $i (@arr) {\n\
    \        $sum += $i;\n    }\n    return $sum;\n}", "    my $oct = oct($N);\n \
    \   my $bin = sprintf(\"%b\", $oct);\n    return $bin;\n}", "    my $result =\
    \ '';\n    while($N) {\n        $result = $N % 2 . $result;\n        $N = int($N\
    \ / 2);\n    }\n    return $result;\n}", "    return unpack(\"B*\", pack(\"N\"\
    , $N));\n}", "    my $bin = sprintf(\"%b\", $N);\n    return $bin;\n}", "    my\
    \ $bin = unpack(\"B32\", pack(\"N\", $N));\n    # chop leading zeros\n    $bin\
    \ =~ s/^0+(?=\\d)//;\n    $bin =~ s/[01]//g;\n    return length($bin);\n}\nmy\
    \ $N = <>;\nprint solve($N);", "    # write your code here\n    return sprintf\
    \ '%b', $N;\n}", "    \n    return sprintf(\"%b\", $N);\n}", "    my $sum = 0;\n\
    \    my $bin = sprintf(\"%b\", $N);\n    for (split //, $bin) {\n        $sum\
    \ += $_;\n    }\n    return $sum;\n}", "    # Your code goes here.\n    $N = dec2bin($N);\n\
    \    return $N;\n}", "    my $binary = sprintf(\"%b\", $N);\n    return $binary;\n\
    }", "    my $bin = sprintf(\"%b\", $N);\n    my $tot = 0;\n    for (split //,\
    \ $bin) {\n        $tot += $_;\n    }\n    return $tot;\n}", "    return unpack(\"\
    B*\", pack(\"N\", $N));\n}", "    my $bin = dec2bin($N);\n    my $sum = 0;\n \
    \   for (split //, $bin) {\n        $sum += $_;\n    }\n    return $sum;\n}",
  "    my $binary = sprintf(\"%b\", $N);\n    my $sum = 0;\n    my @arr = split(\"\
    \", $binary);\n    foreach (@arr) {\n        $sum += $_;\n    }\n    return $sum;\n\
    }", "    my $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $1 while\
    \ $bin =~ /(\\d)/g;\n    return $sum;\n}", "    my $string = \"\";\n    my $temp\
    \ = $N;\n    if ($N == 0) {\n        return 0;\n    } else {\n        while ($temp\
    \ != 0) {\n            $string = $temp % 2 . $string;\n            $temp = int($temp\
    \ / 2);\n        }\n    }\n    return $string;\n}", "    my $sum = $N;\n    my\
    \ $result = \"\";\n    while ($sum > 0) {\n        my $re = $sum % 2;\n      \
    \  $result = $re . $result;\n        $sum = int($sum / 2);\n    }\n    return\
    \ $result;\n}\nprint solve(1000).\"\\n\";\nprint solve(150).\"\\n\";\nprint solve(147).\"\
    \\n\";", "    return unpack(\"B*\", pack(\"N\", $N));\n}", "    my $x = sprintf\
    \ \"%b\", $N;\n    return $x;\n}", "    my @bin_num = ();\n    my $bin_num = '';\n\
    \    my $remainder = 0;\n    my $quotient = $N;\n    while ($quotient > 0) {\n\
    \        $remainder = $quotient % 2;\n        $quotient = int($quotient / 2);\n\
    \        push @bin_num, $remainder;\n    }\n    $bin_num = join '', reverse @bin_num;\n\
    \    return $bin_num;\n}", "    # ...\n    my $r;\n    do{\n        $r = $N %\
    \ 2;\n        $N = $N / 2;\n        print $r, \" \";\n    } while( $N > 0 );\n\
    \    print \"\\n\";\n}", "    my $bit = '';\n    while($N > 0) {\n        $bit\
    \ = ($N%2).$bit;\n        $N = int($N/2);\n    }\n    return $bit;\n}", "    my\
    \ @B;\n    my $i = 0;\n    my $remainder;\n    my $total = 0;\n    my $result\
    \ = '';\n    my $number = $N;\n    while ($number) {\n        $remainder = $number\
    \ % 2;\n        $number = $number / 2;\n        $B[$i] = $remainder;\n       \
    \ $i++;\n    }\n    while ($i > 0) {\n        $result .= $B[$i-1];\n        $i--;\n\
    \    }\n    return $result;\n}", "    my $B = 2;\n    my $binary = '';\n    return\
    \ '0' if !$N;\n    while ($N > 0) {\n        $binary = $N % $B . $binary;\n  \
    \      $N = int($N / $B);\n    }\n    return $binary;\n}", "    my $res = \"\"\
    ;\n    my $len = length($N);\n    my $i = $len - 1;\n    while($i >= 0) {\n  \
    \      my $num = substr($N, $i, 1);\n        my $j = 0;\n        my $hex = \"\"\
    ;\n        while($j < $num) {\n            $hex = \"1\".$hex;\n            $j++;\n\
    \        }\n        while($j < 3) {\n            $hex = \"0\".$hex;\n        \
    \    $j++;\n        }\n        $res = $hex.$res;\n        $i--;\n    }\n    return\
    \ $res;\n}", "    my $binary = $N;\n    my $decimal = 0;\n    my $remainder =\
    \ 0;\n    my $i = 1;\n    my $sum = 0;\n    my $ret = '';\n    my $count = 0;\n\
    \    while($binary != 0) {\n        $remainder = $binary % 2;\n        $decimal\
    \ = $decimal + $remainder * $i;\n        $i = $i * 10;\n        $binary = int($binary\
    \ / 2);\n    }\n    #print $decimal, \"\\n\";\n    foreach (split //, $decimal)\
    \ {\n        $count += $_;\n    }\n    #print $count, \"\\n\";\n    $ret = $count;\n\
    \    return $ret;\n}", "    # your code here\n    return \"\";\n}", "    return\
    \ sprintf(\"%b\", $N);\n}", "    # store the number in binary, reverse the string\
    \ and store it in a variable\n    my $revbin = reverse (sprintf (\"%b\", $N));\n\
    \    # return the variable\n    return $revbin;\n}", "    my $binary;\n    while\
    \ ($N >= 1) {\n        $binary = $N % 2 . $binary;\n        $N = int($N / 2);\n\
    \    }\n    $binary = '0' x (4 - length($binary)) . $binary if length($binary)\
    \ < 4;\n    return $binary;\n}", "    # code here\n    my $ret = unpack(\"B*\"\
    , pack(\"N\", $N));\n    $ret =~ s/^0+(?=\\d)//;\n    return $ret;\n}", "    #\
    \ your code here\n    my $bin = dec2bin($N);\n    $bin =~ s/^0*//;\n    return\
    \ $bin;\n}", "    # return the sum of its digits in binary\n}", "    return unpack(\"\
    B*\", pack(\"Q\", $N));\n}", "    return sprintf(\"%b\", $N);\n}", "    return\
    \ unpack(\"B*\", pack(\"N\", $N));\n}", "    my $sum=0;\n    while($N){\n    \
    \    $sum+=$N%2;\n        $N/=2;\n    }\n    return $sum;\n}", "    return sprintf('%b',\
    \ $N);\n}", "    #return N in binary\n    return sprintf(\"%b\", $N);\n}", " \
    \   # your code here\n    return sprintf(\"%b\", $N);\n}", "    my $bin = unpack(\"\
    B32\", pack(\"N\", $N));\n    $bin =~ s/^0+(?=\\d)//;\n    return $bin;\n}", " \
    \   # Given a positive integer N, return the total sum of its digits in binary.\n\
    \    # Your code here\n}", "    # Write your code here\n    # To print results\
    \ to the standard output you can use print\n    # Example: print \"Hello world!\\\
    n\";\n    \n    \n    # my $x = \"Hello world!\";\n    # return $x;\n    \n  \
    \  # bin \u8FD4\u56DE\u6570\u5B57\u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\uFF0C\u53BB\
    \u63890b\u524D\u7F00\n    my $bin = substr(sprintf(\"%b\", $N), 2);\n    return\
    \ $bin;\n}", "    my $sum = 0;\n    my $s = \"\";\n    for(my $i = 0; $i < 32;\
    \ $i++) {\n        my $k = 0;\n        $k = 1 if(($N >> $i) & 1);\n        $sum\
    \ += $k;\n        $s = $k . $s;\n    }\n    return $s;\n}", "    my $ans = '';\n\
    \    while($N > 0) {\n        my $b = $N % 2;\n        $ans = $b . $ans;\n   \
    \     $N = int($N / 2);\n    }\n    return $ans;\n}\nmy $N = <STDIN>;\nchomp $N;\n\
    my $out_ = solve($N);\nprint $out_;", "    return unpack('B*', pack('N', $N));\n\
    }", "    my $binary = sprintf \"%b\", $N;\n    my $sum = 0;\n    for (split //,\
    \ $binary) {\n        $sum += $_;\n    }\n    return $sum;\n}", "    my $result\
    \ = sprintf \"%b\", $N;\n    return $result;\n}", "    my $result = '';\n    while\
    \ ($N > 0) {\n        $result = $N % 2 . $result;\n        $N = int($N / 2);\n\
    \    }\n    return $result;\n}", "    my $b = '';\n    while ($N > 0) {\n    \
    \    $b = $N % 2 . $b;\n        $N = int($N / 2);\n    }\n    return $b;\n}",
  "    return unpack(\"B*\", pack(\"n\", $N));\n}\nprint solve(1000);\nprint solve(150);\n\
    print solve(147);", "    my $bin = dec2bin($N);\n    my $sum = 0;\n    my @nums\
    \ = split(//, $bin);\n    for my $i (@nums) {\n        $sum += $i;\n    }\n  \
    \  return $sum;\n}", "    my $result = sprintf(\"%b\", $N);\n    return $result;\n\
    }", "    return $N if $N eq \"0\";\n    return \"0\" if $N eq \"1\";\n    my $remainder\
    \ = $N % 2;\n    return solve(($N - $remainder) / 2) . $remainder;\n}", "    my\
    \ @digits = split //, $N;\n    # your code here\n}", "    my $number = sprintf(\"\
    %b\", $N);\n    return $number;\n}", "    my $num = dec2bin($N);\n    $num =~\
    \ s/0//g;\n    return $num;\n}", "    my $b = sprintf(\"%b\", $N);\n    $b =~\
    \ s/^0+//;\n    my $sum = 0;\n    for (split //, $b) {\n        $sum += $_;\n\
    \    }\n    return $sum;\n}", "    # your code here\n    my $binary = sprintf(\"\
    %b\", $N);\n    my $length = length($binary);\n    my $result = 0;\n    for (my\
    \ $i = 0; $i < $length; $i++) {\n        $result += substr($binary, $i, 1);\n\
    \    }\n    return $result;\n}", "    # your code goes here\n    my $sum = 0;\n\
    \    my $i = 0;\n    my $len = length($N);\n    my $result = \"\";\n    while\
    \ ($i < $len) {\n        my $num = substr($N,$i,1);\n        $sum += $num;\n \
    \       $i++;\n    }\n    my $answer = $sum % 2;\n    if ($answer == 0) {\n  \
    \      $result = \"0\";\n    } else {\n        $result = \"1\";\n    }\n    return\
    \ $result;\n}", "    return unpack('B*', pack('N', $N));\n}", "    my $bin = dec2bin($N);\n\
    \    my $sum = 0;\n    $sum += $_ for split '', $bin;\n    return $sum;\n}", " \
    \   my $binary = \"\";\n    my $binary_num = \"\";\n    my $sum = 0;\n    my $remainder\
    \ = 0;\n    my $quotient = 0;\n    $quotient = $N;\n    while($quotient > 0){\n\
    \        $remainder = $quotient % 2;\n        $quotient = $quotient / 2;\n   \
    \     $binary = $binary.$remainder;\n    }\n    while($binary =~ /\\d/g){\n  \
    \      $sum += $&;\n    }\n    return $sum;\n}", "    # your code here\n    return\
    \ $N;\n}", "    my $binary = unpack( \"B32\", pack( \"N\", $N ) );\n    my @B\
    \ = split('', $binary);\n    my $total = 0;\n    foreach (@B) {\n        $total\
    \ += $_;\n    }\n    return $total;\n}", "    return '' if $N < 0;\n    return\
    \ \"0\" if $N == 0;\n    my $ret = $N % 2;\n    $ret = solve($N/2).$ret;\n   \
    \ return $ret;\n}", "    my $total = 0;\n    my $binary = $N;\n    while ($binary\
    \ != 0) {\n        $total += $binary % 2;\n        $binary = int($binary / 2);\n\
    \    }\n    return $total;\n}", "    return sprintf(\"%b\", $N);\n}\nmy $N = <STDIN>;\n\
    print solve($N);", "    #lets say we have a number $N, lets say 147\n    #We want\
    \ to convert it to binary\n    #But how?\n    #So we will use the method of devision\
    \ like we used to do it in school\n    #Take the number and divide it by 2\n \
    \   #divide the remainder by 2\n    #Keep repeating until you get 0\n    #reverse\
    \ the sequence of the remainders and you get your binary number\n    #in our case\
    \ we will get:\n    #147 / 2 = 73 and remainder is 1\n    #73 / 2 = 36 and remainder\
    \ is 1\n    #36 / 2 = 18 and remainder is 0\n    #18 / 2 = 9 and remainder is\
    \ 0\n    #9 / 2 = 4 and remainder is 1\n    #4 / 2 = 2 and remainder is 0\n  \
    \  #2 / 2 = 1 and remainder is 0\n    #1 / 2 = 0 and remainder is 1\n    #This\
    \ would give us the binary number of 10010011\n    #But we want the sum of its\
    \ digits, and in our case the digits are 1\n    #Let's add up all the remainders\
    \ to get our solution:\n    #1 + 1 + 0 + 0 + 1 + 0 + 0 + 1 = 4\n    #So, our solution\
    \ should be 4\n    #Let's code it\n    my $binary_number = '';\n    my $sum =\
    \ 0;\n    while ($N > 0) {\n        my $remainder = $N % 2;\n        $N = int($N\
    \ / 2);\n        $binary_number = $remainder . $binary_number;\n        $sum +=\
    \ $remainder;\n    }\n    return $sum;\n}", "    return sprintf(\"%b\", $N);\n\
    }", "    my $a = dec2bin($N);\n    my $b = 0;\n    for (split//,$a) {\n      \
    \  $b += $_;\n    }\n    return $b;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_124_valid_date
language: pl
prompt: "# You have to write a function which validates a given date string and\n\
  # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
  \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The number\
  \ of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  # 3. The months should not be less than 1 or higher than 12.\n# 4. The date should\
  \ be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\")\n# 1\n# >>> valid_date(\"\
  15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\")\n# \"\"\n# >>> valid_date(\"\
  06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\")\n# \"\"\nsub valid_date {\n\
  \    my($date) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
  \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
  ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"01-01-2007\"\
  ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  03-32-2011\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-12-2003\"\
  ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
  ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    $date or return \"\";\n    my($m, $d, $y) = $date =~ /^(\\d\\d)\\\
    -(\\d\\d)\\-(\\d\\d\\d\\d)$/ or return \"\";\n    grep { $m == $_ } (1..12) or\
    \ return \"\";\n    grep { $d == $_ } (1..31) or return \"\";\n    $m == 2 &&\
    \ $d > 29 and return \"\";\n    $m == 4 || $m == 6 || $m == 9 || $m == 11 && $d\
    \ > 30 and return \"\";\n    return 1;\n}", "    if ($date =~ /^(?:(?:(?:0?[13578]|1[02])(\\\
    /|-|\\.)31)\\1|(?:(?:0?[1,3-9]|1[0-2])(\\/|-|\\.)(?:29|30)\\2))(?:(?:1[6-9]|[2-9]\\\
    d)?\\d{2})$|^(?:0?2(\\/|-|\\.)29\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:(?:0?[1-9])|(?:1[0-2]))(\\\
    /|-|\\.)(?:0?[1-9]|1\\d|2[0-8])\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/) {\n      \
    \  return 1;\n    }\n    return \"\";\n}", "    my $res = '';\n    my $days =\
    \ 0;\n    my $month = 0;\n    my $year = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        $month = $1;\n        $days = $2;\n        $year = $3;\n \
    \       if (($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) && ($days >= 1 && $days <= 31)) {\n  \
    \          $res = 1;\n        }\n        elsif (($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) && ($days >= 1 && $days <= 30)) {\n           \
    \ $res = 1;\n        }\n        elsif ($month == 2 && ($days >= 1 && $days <=\
    \ 29)) {\n            $res = 1;\n        }\n    }\n    return $res;\n}", "   \
    \ return \"\" if $date eq \"\";\n    my ($mm, $dd, $yyyy) = split /-/, $date;\n\
    \    return \"\" if $mm < 1 || $mm > 12;\n    return \"\" if $yyyy < 0;\n    return\
    \ \"\" if $dd < 1;\n    if ($mm == 1 || $mm == 3 || $mm == 5 || $mm == 7 || $mm\
    \ == 8 || $mm == 10 || $mm == 12) {\n        return \"\" if $dd > 31;\n    } elsif\
    \ ($mm == 4 || $mm == 6 || $mm == 9 || $mm == 11) {\n        return \"\" if $dd\
    \ > 30;\n    } elsif ($mm == 2) {\n        if (($yyyy % 4 == 0 && $yyyy % 100\
    \ != 0) || $yyyy % 400 == 0) {\n            return \"\" if $dd > 29;\n       \
    \ } else {\n            return \"\" if $dd > 28;\n        }\n    }\n    return\
    \ 1;\n}", "    if($date=~m/^((0?[1-9])|(1[0-2]))-((0?[1-9])|([1-2][0-9])|(3[0-1]))-\\\
    d{4}$/){\n        my($mon,$day,$year) = split(/-/,$date);\n        my $leap =\
    \ ($year%4 == 0 && $year%100 != 0 || $year%400 == 0) ? 1 : 0;\n        if($mon==1||$mon==3||$mon==5||$mon==7||$mon==8||$mon==10||$mon==12){\n\
    \            return 1 if($day>=1&&$day<=31);\n        }\n        elsif($mon==4||$mon==6||$mon==9||$mon==11){\n\
    \            return 1 if($day>=1&&$day<=30);\n        }\n        elsif($mon==2){\n\
    \            return 1 if($day>=1&&$day<=29&&$leap==1);\n            return 1 if($day>=1&&$day<=28&&$leap==0);\n\
    \        }\n    }\n    return \"\";\n}", "    return '' unless $date;\n    return\
    \ '' unless $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($month, $day, $year) =\
    \ split(/-/, $date);\n    return '' if $day < 1;\n    return '' if $month < 1\
    \ || $month > 12;\n    return '' if $year < 0;\n    if (grep {$month == $_} qw(1\
    \ 3 5 7 8 10 12)) {\n        return '' if $day > 31;\n    } elsif (grep {$month\
    \ == $_} qw(4 6 9 11)) {\n        return '' if $day > 30;\n    } elsif ($month\
    \ == 2) {\n        return '' if $day > 29;\n    }\n    return 1;\n}", "    my\
    \ ($dd, $mm, $yyyy) = split(/-/, $date);\n    my @valid_days = (1..28, 30, 31);\n\
    \    my @valid_months = (1..12);\n    my $valid_year = $yyyy > 1999;\n    my $valid_day\
    \ = grep {$_ == $dd} @valid_days;\n    my $valid_month = grep {$_ == $mm} @valid_months;\n\
    \    return \"\" unless $date;\n    return \"\" unless $valid_day;\n    return\
    \ \"\" unless $valid_month;\n    return \"\" unless $valid_year;\n    return 1;\n\
    }", "    # Enter your code here.\n    # 1st rule\n    return \"\" if !$date;\n\
    \    # 2nd rule\n    my $days = {\n        1 => 31,\n        2 => 29,\n      \
    \  3 => 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n        7 =>\
    \ 31,\n        8 => 31,\n        9 => 30,\n        10 => 31,\n        11 => 30,\n\
    \        12 => 31\n    };\n    my ($month, $day, $year) = split /-/, $date;\n\
    \    return \"\" if !$month or !$day or !$year;\n    return \"\" if $month > 12\
    \ or $month < 1;\n    return \"\" if $day > $days->{$month} or $day < 1;\n   \
    \ # 3rd rule\n    return \"\" if $year !~ /^\\d{4}$/;\n    # 4th rule\n    return\
    \ \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    return 1;\n}", "    my($dd,\
    \ $mm, $yyyy);\n    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n        ($mm, $dd,\
    \ $yyyy) = split(/-/, $date);\n        if ($mm < 1 || $mm > 12) {\n          \
    \  return \"\";\n        }\n        if ($mm == 2) {\n            if ($dd < 1 ||\
    \ $dd > 29) {\n                return \"\";\n            }\n        } elsif ($mm\
    \ == 4 || $mm == 6 || $mm == 9 || $mm == 11) {\n            if ($dd < 1 || $dd\
    \ > 30) {\n                return \"\";\n            }\n        } else {\n   \
    \         if ($dd < 1 || $dd > 31) {\n                return \"\";\n         \
    \   }\n        }\n        return 1;\n    }\n    return \"\";\n}", "    if($date\
    \ !~ /^\\d{2}-\\d{2}-\\d{4}$/) { return \"\" }\n    my($dd,$mm,$yyyy) = split\
    \ /-/, $date;\n    if($mm < 1 || $mm > 12) { return \"\" }\n    if($mm == 2) {\n\
    \        if($dd < 1 || $dd > 29) { return \"\" }\n    } elsif($mm == 4 || $mm\
    \ == 6 || $mm == 9 || $mm == 11) {\n        if($dd < 1 || $dd > 30) { return \"\
    \" }\n    } else {\n        if($dd < 1 || $dd > 31) { return \"\" }\n    }\n \
    \   return 1;\n}", "    return '' unless $date;\n    return '' unless $date =~\
    \ /^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/;\n    my($m, $d, $y) = ($1, $2, $3);\n\
    \    return '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > ($m == 2\
    \ ? 29 : $m % 2 == 0 ? 30 : 31);\n    return 1;\n}", "    my @d = split /\\-/,\
    \ $date;\n    return \"\" if @d != 3;\n    my($m, $d, $y) = @d;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $y < 1;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\" if $m ==\
    \ 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return \"\" if $m\
    \ == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return 1;\n}",
  "    my($dd, $mm, $yyyy) = split /-/, $date;\n    return \"\" if !$dd || !$mm ||\
    \ !$yyyy;\n    return \"\" if $dd =~ /\\D/ || $mm =~ /\\D/ || $yyyy =~ /\\D/;\n\
    \    return \"\" if !(1 <= $dd && $dd <= 31) && !(1 <= $mm && $mm <= 12);\n  \
    \  return \"\" if ((1 == $mm || 3 == $mm || 5 == $mm || 7 == $mm || 8 == $mm ||\
    \ 10 == $mm || 12 == $mm) && !(1 <= $dd && $dd <= 31));\n    return \"\" if ((4\
    \ == $mm || 6 == $mm || 9 == $mm || 11 == $mm) && !(1 <= $dd && $dd <= 30));\n\
    \    return \"\" if (2 == $mm && !(1 <= $dd && $dd <= 29));\n    return 1;\n}",
  "    if ($date =~ /(\\d\\d)\\-(\\d\\d)\\-(\\d\\d\\d\\d)/) {\n        my $d = $2;\n\
    \        my $m = $1;\n        my $y = $3;\n        if ($m == 1 || $m == 3 || $m\
    \ == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) {\n            if ($d >=\
    \ 1 && $d <= 31) {\n                return 1;\n            }\n        }\n    \
    \    elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n            if ($d >=\
    \ 1 && $d <= 30) {\n                return 1;\n            }\n        }\n    \
    \    elsif ($m == 2) {\n            if ($d >= 1 && $d <= 29) {\n             \
    \   return 1;\n            }\n        }\n    }\n    return \"\";\n}", "    if($date=~/(\\\
    d\\d?)[-\\/](\\d\\d?)[-\\/](\\d\\d\\d\\d)/){\n        my $month = $1;\n      \
    \  my $day = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <=\
    \ 12) {\n            if ($month == 2 && $day >= 1 && $day <= 29) {\n         \
    \       return 1;\n            } elsif ($month != 2 && $day >= 1 && $day <= 30)\
    \ {\n                return 1;\n            } elsif (($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) && $day >= 1 && $day <= 31) {\n                return 1;\n            }\n\
    \        }\n    }\n    return '';\n}", "    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/)\
    \ {\n        my ($m, $d, $y) = split(/-/, $date);\n        if ($m <= 12) {\n \
    \           if ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10\
    \ || $m == 12) {\n                if ($d <= 31) {\n                    return\
    \ 1;\n                }\n            }\n            elsif ($m == 4 || $m == 6\
    \ || $m == 9 || $m == 11) {\n                if ($d <= 30) {\n               \
    \     return 1;\n                }\n            }\n            elsif ($m == 2)\
    \ {\n                if ($d <= 29) {\n                    return 1;\n        \
    \        }\n            }\n        }\n    }\n    return '';\n}", "    if ($date\
    \ =~ /^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/) {\n        my($month, $day, $year)\
    \ = ($1, $2, $3);\n        my @months = (31, 28, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31);\n        if ($month == 2) {\n            $months[1] = 29 if ($year\
    \ % 4 == 0);\n        }\n        if (($day > 0) && ($day <= $months[$month - 1]))\
    \ {\n            return 1;\n        }\n    }\n    return \"\";\n}", "    my $re\
    \ = qr/^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-\\d{4}$/;\n    my $flag;\n    if($date\
    \ =~ $re){\n        my ($month, $day, $year) = split('-', $date);\n        if($month\
    \ == 2 && $day == 29 && $year % 4 == 0){\n            $flag = 1;\n        }elsif($month\
    \ == 2 && $day == 29 && $year % 4 != 0){\n            $flag = '';\n        }elsif($month\
    \ == 2 && $day < 29){\n            $flag = 1;\n        }elsif($month == 1 && $day\
    \ < 32){\n            $flag = 1;\n        }elsif($month == 3 && $day < 32){\n\
    \            $flag = 1;\n        }elsif($month == 4 && $day < 31){\n         \
    \   $flag = 1;\n        }elsif($month == 5 && $day < 32){\n            $flag =\
    \ 1;\n        }elsif($month == 6 && $day < 31){\n            $flag = 1;\n    \
    \    }elsif($month == 7 && $day < 32){\n            $flag = 1;\n        }elsif($month\
    \ == 8 && $day < 32){\n            $flag = 1;\n        }elsif($month == 9 && $day\
    \ < 31){\n            $flag = 1;\n        }elsif($month == 10 && $day < 32){\n\
    \            $flag = 1;\n        }elsif($month == 11 && $day < 31){\n        \
    \    $flag = 1;\n        }elsif($month == 12 && $day < 32){\n            $flag\
    \ = 1;\n        }else{\n            $flag = '';\n        }\n    }else{\n     \
    \   $flag = '';\n    }\n    return $flag;\n}", "    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(\\\
    d{4})$/;\n    return 0;\n}", "    # check for valid format\n    if ($date !~ /^(\\\
    d{2})-(\\d{2})-(\\d{4})$/) {\n        return \"\";\n    }\n    # check for valid\
    \ month\n    my $m = $1;\n    if ($m < 1 || $m > 12) {\n        return \"\";\n\
    \    }\n    # check for valid day\n    my $d = $2;\n    my $days;\n    if ($m\
    \ == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) {\n\
    \        $days = 31;\n    } elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11)\
    \ {\n        $days = 30;\n    } else {\n        $days = 29;\n    }\n    if ($d\
    \ < 1 || $d > $days) {\n        return \"\";\n    }\n    # check for valid year\n\
    \    my $y = $3;\n    if ($y < 1900 || $y > 2100) {\n        return \"\";\n  \
    \  }\n    return 1;\n}", "    return 0 if $date !~ /^(\\d\\d)-(\\d\\d)-(\\d\\\
    d\\d\\d)$/;\n    my($mon, $day, $year) = ($1, $2, $3);\n    my $ok = 1;\n    if(\
    \ $mon == 2 && ($day < 1 || $day > 29) ) {\n\t$ok = 0;\n    }\n    elsif( ($mon\
    \ == 4 || $mon == 6 || $mon == 9 || $mon == 11) && ($day < 1 || $day > 30) ) {\n\
    \t$ok = 0;\n    }\n    elsif( ($mon == 1 || $mon == 3 || $mon == 5 || $mon ==\
    \ 7 || $mon == 8 || $mon == 10 || $mon == 12) && ($day < 1 || $day > 31) ) {\n\
    \t$ok = 0;\n    }\n    elsif( $mon < 1 || $mon > 12 ) {\n\t$ok = 0;\n    }\n \
    \   return $ok;\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n   \
    \     my $m = $1;\n        my $d = $2;\n        my $y = $3;\n        if ($m >\
    \ 12 || $m < 1) {\n            return \"\";\n        }\n        if ($m == 2) {\n\
    \            if ($d > 29 || $d < 1) {\n                return \"\";\n        \
    \    }\n        } elsif (grep {$m == $_} (1,3,5,7,8,10,12)) {\n            if\
    \ ($d > 31 || $d < 1) {\n                return \"\";\n            }\n       \
    \ } else {\n            if ($d > 30 || $d < 1) {\n                return \"\"\
    ;\n            }\n        }\n        return 1;\n    }\n    return \"\";\n}", " \
    \   # put your code here\n    if ($date =~ /\\b(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\\
    d)\\b/) {\n        my $m = $1;\n        my $d = $2;\n        my $y = $3;\n   \
    \     if ($m <= 0 || $m > 12) {\n            return \"\";\n        }\n       \
    \ if ($m == 2) {\n            if ($d <= 0 || $d > 29) {\n                return\
    \ \"\";\n            }\n        } elsif ($m == 4 || $m == 6 || $m == 9 || $m ==\
    \ 11) {\n            if ($d <= 0 || $d > 30) {\n                return \"\";\n\
    \            }\n        } else {\n            if ($d <= 0 || $d > 31) {\n    \
    \            return \"\";\n            }\n        }\n        return 1;\n    }\n\
    \    return \"\";\n}\n1;", "    return 1 if $date =~ m!^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$!;\n    return \"\";\n}", "    return '' unless $date =~ /^\\d{2}-\\d{2}-\\\
    d{4}$/;\n    my ($m, $d, $y) = split /-/, $date;\n    return '' if !$m || !$d\
    \ || !$y;\n    return '' if $m < 1 || $m > 12;\n    return '' if $m =~ /[469]/\
    \ && $d > 30;\n    return '' if $m =~ /11/ && $d > 30;\n    return '' if $m =~\
    \ /02/ && $d > 29;\n    return '' if $m =~ /[13578]/ && $d > 31;\n    return ''\
    \ if $m =~ /[147]/ && $d > 31;\n    return '' if $m =~ /10/ && $d > 31;\n    return\
    \ '' if $m =~ /12/ && $d > 31;\n    return 1;\n}", "    $date =~ /^(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])-(\\\
    d{4})$/ || return \"\";\n    return check_month_day($1, $2) ? 1 : \"\";\n}", " \
    \   return 1 if $date =~ m/^(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])-(?:[0-9]{4})$/;\n\
    \    return 0;\n}", "    return unless $date =~ m!(\\d\\d)-(\\d\\d)-(\\d\\d\\\
    d\\d)!;\n    my($mm, $dd, $yyyy) = ($1, $2, $3);\n    return '' if $mm > 12 ||\
    \ $mm < 1;\n    return '' if $dd > 31 || $dd < 1;\n    return '' if $yyyy < 1;\n\
    \    return '' if $mm =~ /^(4|6|9|11)$/ && $dd > 30;\n    return '' if $mm eq\
    \ '2' && $dd > 29;\n    return 1;\n}\nsay valid_date(\"03-11-2000\");\nsay valid_date(\"\
    15-01-2012\");\nsay valid_date(\"04-0-2040\");\nsay valid_date(\"06-04-2020\"\
    );\nsay valid_date(\"06/04/2020\");", "    return \"\" if (!$date || $date !~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/);\n    my($m, $d, $y) = split(/-/, $date);\n    return\
    \ \"\" if (int($m) < 1 || int($m) > 12);\n    return \"\" if (int($d) < 1 || int($d)\
    \ > 31);\n    return \"\" if ($m == 2 && int($d) > 29);\n    return \"\" if (int($d)\
    \ > 30 && (int($m) == 4 || int($m) == 6 || int($m) == 9 || int($m) == 11));\n\
    \    return 1;\n}", "    return 1 if $date =~ m{\n\t^(?:\n\t    (?:0[1-9]|1[0-2])\
    \ \t# mm\n\t    -\n\t    (?:0[1-9]|[12][0-9]|3[01])\t# dd\n\t    -\n\t    (?:19|20)\\\
    d\\d\t# yyyy\n\t)$\n    }x;\n    return '';\n}\n1;", "    my($res) = 1;\n    my($yyyy,\
    \ $mm, $dd) = split(/-/, $date);\n    $mm > 12 && ($res = '');\n    if ($mm ==\
    \ 1 || $mm == 3 || $mm == 5 || $mm == 7 || $mm == 8 || $mm == 10 || $mm == 12)\
    \ {\n        $dd > 31 && ($res = '');\n    } elsif ($mm == 4 || $mm == 6 || $mm\
    \ == 9 || $mm == 11) {\n        $dd > 30 && ($res = '');\n    } elsif ($mm ==\
    \ 2) {\n        if ($yyyy % 4 == 0 && $yyyy % 100 != 0 || $yyyy % 400 == 0) {\n\
    \            $dd > 29 && ($res = '');\n        } else {\n            $dd > 28\
    \ && ($res = '');\n        }\n    }\n    $dd < 1 && ($res = '');\n    $mm < 1\
    \ && ($res = '');\n    return $res;\n}", "    return \"\" if($date eq \"\");\n\
    \    my @arr = split /\\-/, $date;\n    return \"\" if (scalar @arr != 3);\n \
    \   my $year = $arr[2];\n    my $month = $arr[0];\n    my $day = $arr[1];\n  \
    \  return \"\" if($year !~ /^\\d{4}$/);\n    return \"\" if($month !~ /^\\d{2}$/);\n\
    \    return \"\" if($day !~ /^\\d{2}$/);\n    return \"\" if($month < 1 || $month\
    \ > 12);\n    if($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12){\n        return \"\" if($day < 1 || $day\
    \ > 31);\n    }elsif($month == 4 || $month == 6 || $month == 9 || $month == 11){\n\
    \        return \"\" if($day < 1 || $day > 30);\n    }elsif($month == 2){\n  \
    \      return \"\" if($day < 1 || $day > 29);\n    }\n    return 1;\n}", "   \
    \ my($month, $day, $year) = split(/-/, $date);\n    return 0 if ($month =~ /[^01-12]/);\n\
    \    return 0 if ($day =~ /[^01-31]/);\n    return 0 if ($year =~ /[^2000-2999]/);\n\
    \    return 0 if ($day < 1 || $day > 31);\n    return 0 if ($month == 2 && $day\
    \ > 29);\n    return 0 if ($month == 4 && $day > 30);\n    return 0 if ($month\
    \ == 6 && $day > 30);\n    return 0 if ($month == 9 && $day > 30);\n    return\
    \ 0 if ($month == 11 && $day > 30);\n    return 1;\n}", "    return unless $date\
    \ =~ m|(\\d\\d)/(\\d\\d)/(\\d\\d\\d\\d)|;\n    my $mm = $1;\n    my $dd = $2;\n\
    \    my $yyyy = $3;\n    return if $yyyy < 1900;\n    return if $mm < 1 or $mm\
    \ > 12;\n    return if $dd < 1 or $dd > 31;\n    return if $mm == 2 and $dd >\
    \ 29;\n    return if $mm == 4 and $dd > 30;\n    return if $mm == 6 and $dd >\
    \ 30;\n    return if $mm == 9 and $dd > 30;\n    return if $mm == 11 and $dd >\
    \ 30;\n    return 1;\n}", "    my @m = (31, 29, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31);\n    my $c = 1;\n    my @a = split('-', $date);\n    foreach (@a) {\n\
    \        my $t = $_;\n        $t =~ s/^0+//;\n        $c = 0 if ($t == 0);\n \
    \   }\n    $c = 0 if ($#a != 2);\n    $c = 0 if ($a[0] < 1 || $a[0] > 12);\n \
    \   $c = 0 if ($a[1] > $m[$a[0] - 1]);\n    $c = 0 if ($a[2] < 1);\n    return\
    \ $c;\n}", "    my $regex = qr/\\d{2}-\\d{2}-\\d{4}/;\n    if ($date =~ /$regex/)\
    \ {\n        my ($month, $day, $year) = split(/-/, $date);\n        if ($month\
    \ < 1 || $month > 12) {\n            return \"\";\n        }\n        if ($day\
    \ < 1 || $day > 31) {\n            return \"\";\n        }\n        if ($month\
    \ =~ /^(4|6|9|11)$/) {\n            if ($day > 30) {\n                return \"\
    \";\n            }\n        }\n        if ($month == 2) {\n            if ($day\
    \ > 29) {\n                return \"\";\n            }\n        }\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    # your code here\n    my $date_pattern\
    \ = '^((0[1-9])|(1[0-2]))-((0[1-9])|([1-2][0-9])|(3[0-1]))-(\\d{4})$';\n    if($date\
    \ !~ /$date_pattern/){\n        return \"\";\n    }\n    my $month = $1;\n   \
    \ my $day = $4;\n    if($month == 2 && $day > 29){\n        return \"\";\n   \
    \ }\n    if($month == 4 || $month == 6 || $month == 9 || $month == 11){\n    \
    \    if($day > 30){\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my($mm, $dd, $yyyy);\n    return 0 if $date eq \"\";\n    my($mm, $dd,\
    \ $yyyy) = split('-', $date);\n    return 0 if (!($mm =~ /^\\d+$/) || !($dd =~\
    \ /^\\d+$/) || !($yyyy =~ /^\\d+$/));\n    if (($mm < 1) || ($mm > 12)) {\n  \
    \      return 0;\n    }\n    if (($mm == 1) || ($mm == 3) || ($mm == 5) || ($mm\
    \ == 7) || ($mm == 8) || ($mm == 10) || ($mm == 12)) {\n        if (($dd < 1)\
    \ || ($dd > 31)) {\n            return 0;\n        }\n    }\n    if (($mm == 4)\
    \ || ($mm == 6) || ($mm == 9) || ($mm == 11)) {\n        if (($dd < 1) || ($dd\
    \ > 30)) {\n            return 0;\n        }\n    }\n    if ($mm == 2) {\n   \
    \     if (($dd < 1) || ($dd > 29)) {\n            return 0;\n        }\n    }\n\
    \    return 1;\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n    \
    \    my($mm, $dd, $yyyy) = ($1, $2, $3);\n        if ($mm < 1 || $mm > 12) {\n\
    \            return \"\";\n        } elsif ($dd < 1 || $dd > 31) {\n         \
    \   return \"\";\n        } elsif ($yyyy < 1) {\n            return \"\";\n  \
    \      } elsif ($mm == 2 && $dd > 29) {\n            return \"\";\n        } elsif\
    \ ($mm == 4 && $dd > 30) {\n            return \"\";\n        } elsif ($mm ==\
    \ 6 && $dd > 30) {\n            return \"\";\n        } elsif ($mm == 9 && $dd\
    \ > 30) {\n            return \"\";\n        } elsif ($mm == 11 && $dd > 30) {\n\
    \            return \"\";\n        }\n        return 1;\n    }\n    return \"\"\
    ;\n}", "    my($month, $day, $year) = split /-/, $date;\n    return \"\" unless\
    \ $day and $month and $year;\n    return \"\" unless $day =~ /^\\d{1,2}$/ and\
    \ $month =~ /^\\d{1,2}$/ and $year =~ /^\\d{4}$/;\n    my $string = \"$day/$month/$year\"\
    ;\n    my $dt = DateTime::Format::Strptime->new(\n        pattern   => '%d/%m/%Y',\n\
    \        on_error  => 'croak',\n    );\n    eval { $dt->parse_datetime($string)\
    \ };\n    return \"\" if $@;\n    return 1;\n}", "    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d\\d-\\d\\d-\\d\\d\\d\\d$/;\n    my($mm,\
    \ $dd, $yyyy) = split(/-/, $date);\n    return \"\" if $mm < 1 || $mm > 12;\n\
    \    return \"\" if $dd < 1 || $dd > 31;\n    return \"\" if $mm == 2 && $dd >\
    \ 29;\n    return \"\" if $mm == 4 && $dd > 30;\n    return \"\" if $mm == 6 &&\
    \ $dd > 30;\n    return \"\" if $mm == 9 && $dd > 30;\n    return \"\" if $mm\
    \ == 11 && $dd > 30;\n    return 1;\n}", "    if($date eq \"\"){\n        return\
    \ \"\";\n    }\n    my @dates = split(/\\-/,$date);\n    if(scalar(@dates) !=\
    \ 3){\n        return \"\";\n    }\n    my $year = $dates[2];\n    my $month =\
    \ $dates[0];\n    my $day = $dates[1];\n    my @days = (31,28,31,30,31,30,31,31,30,31,30,31);\n\
    \    my $leap = ($year % 4 == 0 && $year % 100 != 0) || $year % 400 == 0;\n  \
    \  if($leap){\n        $days[1] = 29;\n    }\n    if($month < 1 || $month > 12){\n\
    \        return \"\";\n    }\n    if($day < 1 || $day > $days[$month-1]){\n  \
    \      return \"\";\n    }\n    return 1;\n}", "    return 1 if $date =~ /^\\\
    d{2}-[01]?\\d-[12]\\d{3}$/;\n    return 1 if $date =~ /^(?:(?:0?[1-9]|1\\d|2[0-8])-(?:0?[1-9]|1[0-2])|(?:29|30)-(?:0?[13-9]|1[0-2])|31-(?:0?[13578]|1[02]))-\\\
    d{4}$/;\n    return 1 if $date =~ /^(?:29-02-(?:0[48]|[2468][048]|[13579][26]))|(?:29-02-(?:[0-9][0-9](?:0[48]|[2468][048]|[13579][26])))|(?:29-02-(?:[0-9][0-9][0-9][0-9]))$/;\n\
    \    return \"\";\n}", "    if ($date =~ /(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)/) {\n\
    \        my $m = $1;\n        my $d = $2;\n        my $y = $3;\n        if ($m\
    \ >= 1 && $m <= 12) {\n            if ($m == 2) {\n                if ($d >= 1\
    \ && $d <= 29) {\n                    return 1;\n                }\n         \
    \   } elsif ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 ||\
    \ $m == 12) {\n                if ($d >= 1 && $d <= 31) {\n                  \
    \  return 1;\n                }\n            } elsif ($m == 4 || $m == 6 || $m\
    \ == 9 || $m == 11) {\n                if ($d >= 1 && $d <= 30) {\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return '';\n}", "    my @date_parts = split('-', $date);\n    return '' unless\
    \ @date_parts == 3;\n    my($day, $month, $year) = @date_parts;\n    return ''\
    \ unless $year =~ /\\d{4}/;\n    return '' unless $month =~ /\\d{2}/ && $month\
    \ <= 12;\n    return '' unless $day =~ /\\d{2}/;\n    my $max_day = 31;\n    if\
    \ ($month == 2) {\n        $max_day = 29;\n    } elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        $max_day = 30;\n    }\n    return\
    \ '' unless $day <= $max_day;\n    return 1;\n}", "    my $re = qr/\n        ^\
    \                           #start\n        (?<month>0[1-9]|1[0-2])     #month\
    \ 1-12\n        -                           #divider\n        (?<day>0[1-9]|[12][0-9]|3[01])\
    \  #day 1-31\n        -                           #divider\n        (?<year>\\\
    d{4})              #year 4 digits\n        $                           #end\n\
    \    /x;\n    my $res = \"\";\n    if($date =~ $re){\n        my $month = $+{month};\n\
    \        my $day = $+{day};\n        my $year = $+{year};\n        if($month ==\
    \ 2){\n            if($day <= 29){\n                $res = 1;\n            }\n\
    \        }\n        elsif($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11){\n            if($day <= 30){\n                $res = 1;\n          \
    \  }\n        }\n        elsif($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12){\n            if($day <=\
    \ 31){\n                $res = 1;\n            }\n        }\n    }\n    return\
    \ $res;\n}", "    my($mm, $dd, $yyyy);\n    if ($date =~ /^(\\d\\d)-(\\d\\d)-(\\\
    d\\d\\d\\d)$/) {\n        ($mm, $dd, $yyyy) = ($1, $2, $3);\n        return valid_month($mm)\
    \ && valid_day($mm, $dd) ? 1 : '';\n    }\n    return '';\n}", "    if(!$date){\n\
    \        return \"\";\n    }\n    if($date =~ /\\d{2}-\\d{2}-\\d{4}/){\n     \
    \   my ($month, $day, $year) = split(\"-\", $date);\n        if($month>0 && $month<13){\n\
    \            if($month==2){\n                if($day>0 && $day<30){\n        \
    \            return 1;\n                }\n            }\n            elsif($month==1\
    \ || $month==3 || $month==5 || $month==7 || $month==8 || $month==10 || $month==12){\n\
    \                if($day>0 && $day<32){\n                    return 1;\n     \
    \           }\n            }\n            elsif($month==4 || $month==6 || $month==9\
    \ || $month==11){\n                if($day>0 && $day<31){\n                  \
    \  return 1;\n                }\n            }\n        }\n    }\n    return \"\
    \";\n}", "    if ($date =~ /^(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])-\\d{4}$/)\
    \ {\n        my($month, $day, $year) = split '-', $date;\n        if ($month ==\
    \ 2) {\n            return $day > 0 && $day <= 29;\n        }\n        elsif ($month\
    \ =~ /^(4|6|9|11)$/) {\n            return $day > 0 && $day <= 30;\n        }\n\
    \        else {\n            return $day > 0 && $day <= 31;\n        }\n    }\n\
    \    return;\n}", "    $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/ or return '';\n\
    \    my($m, $d, $y) = ($1, $2, $3);\n    my @bigmonths = qw(1 3 5 7 8 10 12);\n\
    \    my @smallmonths = qw(4 6 9 11);\n    return '' if $d <= 0 or $m <= 0 or $y\
    \ <= 0;\n    if($m == 2) {\n        return '' if $d > 29;\n    } elsif (grep {$_\
    \ == $m} @bigmonths) {\n        return '' if $d > 31;\n    } elsif (grep {$_ ==\
    \ $m} @smallmonths) {\n        return '' if $d > 30;\n    } else {\n        return\
    \ '';\n    }\n    return 1;\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/)\
    \ {\n        return ($1 <= 12 && $2 <= 31 && $3 >= 2020);\n    }\n    return '';\n\
    }", "    my($m, $d, $y) = split /-/, $date;\n    return 1 if length($m) == 2 &&\
    \ length($d) == 2 && length($y) == 4 &&\n        ($m == 1 || $m == 3 || $m ==\
    \ 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) &&\n        $d <= 31 &&\n \
    \       ($m == 4 || $m == 6 || $m == 9 || $m == 11) &&\n        $d <= 30 &&\n\
    \        $m == 2 &&\n        $d <= 29 &&\n        $m <= 12;\n    return;\n}",
  "    return '' unless $date =~ m/^\\d{2}-\\d{2}-\\d{4}$/;\n    my ($mm, $dd, $yyyy)\
    \ = split /-/, $date;\n    return '' if ($dd < 1 || $dd > 31 || $mm < 1 || $mm\
    \ > 12);\n    $dd = 30 if (grep {$mm == $_} qw/4 6 9 11/);\n    $dd = 29 if ($mm\
    \ == 2);\n    return $dd == $dd ? 1 : '';\n}", "    return 1;\n}", "    my @mon\
    \ = qw/ 31 30 31 30 31 30 31 31 30 31 30 31 /;\n    # check leap year\n    if\
    \ ( $date =~ /^02-(0[1-9]|1[0-9]|2[0-8])-([0-9]{4})$/ ||\n        $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})$/\
    \ ) {\n        return 1;\n    }\n    return \"\";\n}\n1;", "    if ($date =~ /^\\\
    d{2}-\\d{2}-\\d{4}$/) {\n        my($m, $d, $y) = split('-', $date);\n       \
    \ if ($m < 1 || $m > 12) {\n            return \"\";\n        }\n        if ($d\
    \ < 1 || $d > 31) {\n            return \"\";\n        }\n        if ($m == 2)\
    \ {\n            if ($d > 29) {\n                return \"\";\n            }\n\
    \        }\n        if ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n       \
    \     if ($d > 30) {\n                return \"\";\n            }\n        }\n\
    \        return 1;\n    }\n    return \"\";\n}", "    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(19|20)\\\
    d\\d$/;\n    return \"\";\n}", "    my $valid = '';\n    my $message = 'Date is\
    \ not valid';\n    return $valid unless ($date);\n    if ($date =~ /(\\d\\d)-(\\\
    d\\d)-(\\d\\d\\d\\d)/) {\n        my $month = $1;\n        my $day = $2;\n   \
    \     my $year = $3;\n        if ($month == 1) {\n            if ($day <= 31)\
    \ {\n                $valid = 1;\n            }\n        }\n        elsif ($month\
    \ == 2) {\n            if ($day <= 29) {\n                $valid = 1;\n      \
    \      }\n        }\n        elsif ($month == 3) {\n            if ($day <= 31)\
    \ {\n                $valid = 1;\n            }\n        }\n        elsif ($month\
    \ == 4) {\n            if ($day <= 30) {\n                $valid = 1;\n      \
    \      }\n        }\n        elsif ($month == 5) {\n            if ($day <= 31)\
    \ {\n                $valid = 1;\n            }\n        }\n        elsif ($month\
    \ == 6) {\n            if ($day <= 30) {\n                $valid = 1;\n      \
    \      }\n        }\n        elsif ($month == 7) {\n            if ($day <= 31)\
    \ {\n                $valid = 1;\n            }\n        }\n        elsif ($month\
    \ == 8) {\n            if ($day <= 31) {\n                $valid = 1;\n      \
    \      }\n        }\n        elsif ($month == 9) {\n            if ($day <= 30)\
    \ {\n                $valid = 1;\n            }\n        }\n        elsif ($month\
    \ == 10) {\n            if ($day <= 31) {\n                $valid = 1;\n     \
    \       }\n        }\n        elsif ($month == 11) {\n            if ($day <=\
    \ 30) {\n                $valid = 1;\n            }\n        }\n        elsif\
    \ ($month == 12) {\n            if ($day <= 31) {\n                $valid = 1;\n\
    \            }\n        }\n        else {\n            $valid = '';\n        }\n\
    \    }\n    else {\n        $valid = '';\n    }\n   ", "    return if $date eq\
    \ '';\n    return if $date !~ /^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return if !($month =~ /^([0][1-9]|[1][0-2])$/);\n\
    \    return if $month == 2 && $day !~ /^([0][1-9]|[1-2][0-9]|[3][0])$/;\n    return\
    \ if $month == 4 && $day !~ /^([0][1-9]|[1][0-9]|[2][0])$/;\n    return if $month\
    \ == 6 && $day !~ /^([0][1-9]|[1][0-9]|[2][0])$/;\n    return if $month == 9 &&\
    \ $day !~ /^([0][1-9]|[1][0-9]|[2][0])$/;\n    return if $month == 11 && $day\
    \ !~ /^([0][1-9]|[1][0-9]|[2][0])$/;\n    return if $month == 1 && $day !~ /^([0][1-9]|[1][0-9]|[2][0-9]|[3][0-1])$/;\n\
    \    return if $month == 3 && $day !~ /^([0][1-9]|[1][0-9]|[2][0-9]|[3][0-1])$/;\n\
    \    return if $month == 5 && $day !~ /^([0][1-9]|[1][0-9]|[2][0-9]|[3][0-1])$/;\n\
    \    return if $month == 7 && $day !~ /^([0][1-9]|[1][0-9]|[2][0-9]|[3][0-1])$/;\n\
    \    return if $month == 8 && $day !~ /^([0][1-9]|[1][0", "    return \"\" if\
    \ not $date;\n    my @date = split /-/, $date;\n    return \"\" if @date != 3;\n\
    \    return \"\" if !looks_like_number($date[0]) || !looks_like_number($date[1])\
    \ || !looks_like_number($date[2]);\n    if ($date[0] == 2 && $date[2] % 4 == 0\
    \ && $date[2] % 100 != 0) {\n        return \"\" if $date[1] < 1 || $date[1] >\
    \ 29;\n    } elsif ($date[0] == 2) {\n        return \"\" if $date[1] < 1 || $date[1]\
    \ > 28;\n    } elsif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        return\
    \ \"\" if $date[1] < 1 || $date[1] > 31;\n    } else {\n        return \"\" if\
    \ $date[1] < 1 || $date[1] > 30;\n    }\n    return \"\" if $date[0] < 1 || $date[0]\
    \ > 12;\n    return 1;\n}", "    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n  \
    \      my($day, $month, $year) = split(/-/, $date);\n        if ($day < 1 || $day\
    \ > 31) {\n            return \"\";\n        }\n        if ($month < 1 || $month\
    \ > 12) {\n            return \"\";\n        }\n        if ($month == 2) {\n \
    \           if ($day > 29) {\n                return \"\";\n            }\n  \
    \      }\n        if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n            if ($day > 30) {\n                return \"\";\n            }\n\
    \        }\n        return 1;\n    }\n    return \"\";\n}", "    return unless\
    \ ($date =~ m/^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/);\n    my($month, $day, $year)\
    \ = ($1, $2, $3);\n    return unless ($year >= 1900);\n    return unless ($month\
    \ >= 1 && $month <= 12);\n    return unless ($day >= 1 && $day <= 31);\n    return\
    \ unless ($month != 2);\n    return unless ($day <= 30);\n    return unless ($month\
    \ =~ m/^(1|3|5|7|8|10|12)$/);\n    return unless ($day <= 28);\n    return unless\
    \ ($month =~ m/^(4|6|9|11)$/);\n    return 1;\n}", "    #first check the format:\n\
    \    if ($date !~ /^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/) { return \"\"; }\n   \
    \ my($m,$d,$y) = ($1,$2,$3);\n    #second, check the month:\n    if ($m < 1 ||\
    \ $m > 12) { return \"\"; }\n    #third, check the day:\n    if ($d < 1 || $d\
    \ > 31) { return \"\"; }\n    if ($m == 2) {\n        if ($d > 29) { return \"\
    \"; }\n    } elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n        if ($d\
    \ > 30) { return \"\"; }\n    }\n    #if we get here, we're all good!\n    return\
    \ 1;\n}", "    my $status = '';\n    my($month, $day, $year) = split /-/, $date;\n\
    \    if ($date =~ /\\d{2}-\\d{2}-\\d{4}/) {\n        if (($month >= 1) && ($month\
    \ <= 12)) {\n            if (($month == 1) || ($month == 3) || ($month == 5) ||\
    \ ($month == 7) || ($month == 8) || ($month == 10) || ($month == 12)) {\n    \
    \            if (($day >= 1) && ($day <= 31)) {\n                    $status =\
    \ 1;\n                }\n            } elsif (($month == 4) || ($month == 6) ||\
    \ ($month == 9) || ($month == 11)) {\n                if (($day >= 1) && ($day\
    \ <= 30)) {\n                    $status = 1;\n                }\n           \
    \ } elsif ($month == 2) {\n                if (($day >= 1) && ($day <= 29)) {\n\
    \                    $status = 1;\n                }\n            }\n        }\n\
    \    }\n    return $status;\n}", "    return unless $date =~ m[\\A(\\d{2})-(\\\
    d{2})-(\\d{4})\\z];\n    my($month, $day, $year) = ($1, $2, $3);\n    return unless\
    \ (1 <= $month && $month <= 12);\n    return unless (1 <= $day && $day <= 31);\n\
    \    return unless (1 <= $year && $year <= 9999);\n    return unless ($month ==\
    \ 2 && $day <= 29 ||\n                   $month == 4 && $day <= 30 ||\n      \
    \             $month == 6 && $day <= 30 ||\n                   $month == 9 &&\
    \ $day <= 30 ||\n                   $month == 11 && $day <= 30 ||\n          \
    \         $month == 1 && $day <= 31 ||\n                   $month == 3 && $day\
    \ <= 31 ||\n                   $month == 5 && $day <= 31 ||\n                \
    \   $month == 7 && $day <= 31 ||\n                   $month == 8 && $day <= 31\
    \ ||\n                   $month == 10 && $day <= 31 ||\n                   $month\
    \ == 12 && $day <= 31\n                  );\n    return 1;\n}", "    return \"\
    \" if $date eq \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n\
    \    my ($day, $month, $year) = split(/-/, $date);\n    return \"\" if $month\
    \ < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > ($month == 2 ? 29\
    \ : $month % 2 == 0 ? 30 : 31);\n    return 1;\n}", "    return 1 if $date =~\
    \ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n    return 1 if $date\
    \ =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n    return 1 if\
    \ $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n    return\
    \ 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n   \
    \ return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n\
    \    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n\
    \    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-20[0-9]{2}$/;\n\
    \    return \"\";\n}", "    return unless $date =~ m[^(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])-(19[0-9]{2}|20[0-9]{2})$];\n\
    \    my($year, $month, $day) = split(/-/, $date);\n    return unless $year &&\
    \ $month && $day;\n    if ( $month == 2 && $day > 29 ) {\n        return;\n  \
    \  }\n    if ( $month == 4 || $month == 6 || $month == 9 || $month == 11 ) {\n\
    \        return unless $day <= 30;\n    }\n    return unless $day <= 31;\n   \
    \ return 1;\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n       \
    \ my $m = $1;\n        my $d = $2;\n        my $y = $3;\n        if ($m < 1 ||\
    \ $m > 12) {\n            return '';\n        } elsif ($m == 2) {\n          \
    \  if ($d < 1 || $d > 29) {\n                return '';\n            }\n     \
    \   } elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n            if ($d\
    \ < 1 || $d > 30) {\n                return '';\n            }\n        } else\
    \ {\n            if ($d < 1 || $d > 31) {\n                return '';\n      \
    \      }\n        }\n        return 1;\n    }\n    return '';\n}", "    my($dd,\
    \ $mm, $yy) = split(\"-\", $date);\n    return \"\" if ( !$dd || !$mm || !$yy\
    \ );\n    return \"\" if ( length($dd) != 2 || length($mm) != 2 || length($yy)\
    \ != 4 );\n    return \"\" if ( $dd < 1 || $dd > 31 );\n    return \"\" if ( $mm\
    \ < 1 || $mm > 12 );\n    return \"\" if ( $yy < 0 || $yy > 9999 );\n    if (\
    \ $mm == 2 ) {\n        return \"\" if ( $dd > 29 );\n    } elsif ( $mm == 4 ||\
    \ $mm == 6 || $mm == 9 || $mm == 11 ) {\n        return \"\" if ( $dd > 30 );\n\
    \    }\n    return 1;\n}", "    my ($dd, $mm, $yyyy) = split(/-/, $date);\n  \
    \  return unless defined $dd && defined $mm && defined $yyyy;\n    return unless\
    \ length($dd) == 2 && length($mm) == 2 && length($yyyy) == 4;\n    return \"\"\
    \ unless $dd =~ /^\\d+$/ && $mm =~ /^\\d+$/ && $yyyy =~ /^\\d+$/;\n    return\
    \ \"\" unless $mm >= 1 && $mm <= 12;\n    return \"\" unless $dd >= 1 && $dd <=\
    \ 31;\n    return \"\" if $mm == 2 && $dd > 29;\n    return \"\" if $mm == 4 &&\
    \ $dd > 30;\n    return \"\" if $mm == 6 && $dd > 30;\n    return \"\" if $mm\
    \ == 9 && $dd > 30;\n    return \"\" if $mm == 11 && $dd > 30;\n    return 1;\n\
    }", "    my $v = 0;\n    if($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n     \
    \   my($d, $m, $y) = ($1, $2, $3);\n        if($m >= 1 && $m <= 12) {\n      \
    \      if($m == 2) {\n                if($d >= 1 && $d <= 29) {\n            \
    \        $v = 1;\n                }\n            } elsif($m == 1 || $m == 3 ||\
    \ $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) {\n                if($d\
    \ >= 1 && $d <= 31) {\n                    $v = 1;\n                }\n      \
    \      } else {\n                if($d >= 1 && $d <= 30) {\n                 \
    \   $v = 1;\n                }\n            }\n        }\n    }\n    return $v;\n\
    }", "    # write code here\n}", "    my ($mm, $dd, $yyyy) = split /-/, $date;\n\
    \    return '' unless $mm;\n    return '' unless $dd;\n    return '' unless $yyyy;\n\
    \    return '' unless $mm > 0 && $mm < 13;\n    return '' unless $dd > 0 && $dd\
    \ < 32;\n    return '' unless $mm == 2 && $dd > 0 && $dd < 30;\n    return ''\
    \ unless $mm == 1 || $mm == 3 || $mm == 5 || $mm == 7 || $mm == 8 || $mm == 10\
    \ || $mm == 12 && $dd > 0 && $dd < 32;\n    return '' unless $mm == 4 || $mm ==\
    \ 6 || $mm == 9 || $mm == 11 && $dd > 0 && $dd < 31;\n    return 1;\n}", "   \
    \ if ($date =~ /^(\\d{2})\\-(\\d{2})\\-(\\d{4})$/) {\n        my $month = $1;\n\
    \        my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month\
    \ > 12) {\n            return '';\n        } elsif (($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) && ($day < 1 || $day > 31)) {\n            return '';\n        } elsif (($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) && ($day < 1 || $day > 30))\
    \ {\n            return '';\n        } elsif ($month == 2 && $day < 1) {\n   \
    \         return '';\n        } elsif ($month == 2 && $day > 29) {\n         \
    \   return '';\n        } elsif ($month == 2 && $day == 29 && ($year % 4 != 0\
    \ || ($year % 100 == 0 && $year % 400 != 0))) {\n            return '';\n    \
    \    } else {\n            return 1;\n        }\n    } else {\n        return\
    \ '';\n    }\n}", "    if ($date =~ /\\d{2}-\\d{2}-\\d{4}/) {\n        my($month,\
    \ $day, $year) = split /-/, $date;\n        my $maxday = 31;\n        if ($month\
    \ == 2) {\n            return \"\" if $year % 4 != 0;\n            $maxday = 29;\n\
    \        } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \            $maxday = 30;\n        }\n        return \"\" if $month < 1 || $month\
    \ > 12;\n        return \"\" if $day < 1 || $day > $maxday;\n        return 1;\n\
    \    }\n    return \"\";\n}", "    return \"\" if(!$date);\n    my($m,$d,$y) =\
    \ split(/-/,$date);\n    return \"\" if(!$y || $y !~ /^\\d+$/);\n    return \"\
    \" if(!$m || $m !~ /^\\d+$/ || $m < 1 || $m > 12);\n    return \"\" if(!$d ||\
    \ $d !~ /^\\d+$/ || $d < 1 || $d > 31);\n    return \"\" if($m == 2 && $d > 29);\n\
    \    return \"\" if($m == 4 && $d > 30);\n    return \"\" if($m == 6 && $d > 30);\n\
    \    return \"\" if($m == 9 && $d > 30);\n    return \"\" if($m == 11 && $d >\
    \ 30);\n    return 1;\n}", "    # $date =~ m/^\\d{2}-\\d{2}-\\d{4}$/;\n    my\
    \ @arr = split(\"-\", $date);\n    return \"\" if @arr != 3;\n    my ($mm, $dd,\
    \ $yyyy) = @arr;\n    return \"\" if ($mm < 1 || $mm > 12);\n    if ($mm == 2)\
    \ {\n        return \"\" if ($dd < 1 || $dd > 29);\n    }\n    elsif ($mm == 4\
    \ || $mm == 6 || $mm == 9 || $mm == 11) {\n        return \"\" if ($dd < 1 ||\
    \ $dd > 30);\n    }\n    else {\n        return \"\" if ($dd < 1 || $dd > 31);\n\
    \    }\n    return 1;\n}", "    if ($date =~ /(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)/\
    \ && $1 > 0 && $1 < 13 && $2 > 0 && $2 < 32 && $3 >0 && $3 < 9999) {\n       \
    \ return 1;\n    }\n    return '';\n}", "    my @months = qw(01 02 03 04 05 06\
    \ 07 08 09 10 11 12);\n    my @days = qw(31 30 31 30 31 31 30 31 30 31 31 30 31);\n\
    \    #check if format is wrong\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\\
    d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return \"\" if grep { $_\
    \ == $m } @months;\n    return \"\" if grep { $_ == $d } @days;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $y < 1900 || $y > 2099;\n    return 1;\n}", "    my($day, $month, $year);\n\
    \    if ( $date =~ /(\\d{2})-(\\d{2})-(\\d{4})/ ) {\n        ( $month, $day, $year\
    \ ) = ( $1, $2, $3 );\n    } else {\n        return \"\";\n    }\n    if ( $month\
    \ < 1 || $month > 12 ) {\n        return \"\";\n    }\n    if ( $month == 2 )\
    \ {\n        if ( $day < 1 || $day > 29 ) {\n            return \"\";\n      \
    \  }\n    } elsif ( $month % 2 == 0 ) {\n        if ( $day < 1 || $day > 30 )\
    \ {\n            return \"\";\n        }\n    } else {\n        if ( $day < 1\
    \ || $day > 31 ) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(19|20)\\\
    d\\d$/;\n    return;\n}", "    if ( $date =~ m{^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\\
    d)$} ) {\n        my ($m, $d, $y) = ($1, $2, $3);\n        if ( $m > 12 || $m\
    \ < 1 ) {\n            return \"\";\n        }\n        elsif ( $m == 2 && $d\
    \ > 29 ) {\n            return \"\";\n        }\n        elsif ( ( $m == 4 ||\
    \ $m == 6 || $m == 9 || $m == 11 ) && $d > 30 ) {\n            return \"\";\n\
    \        }\n        elsif ( $d > 31 || $d < 1 ) {\n            return \"\";\n\
    \        }\n        else {\n            return 1;\n        }\n    }\n    else\
    \ {\n        return \"\";\n    }\n}", "    my $result = \"\";\n    my $month31\
    \ = [1,3,5,7,8,10,12];\n    my $month30 = [4,6,9,11];\n    my $month29 = [2];\n\
    \    my ($month, $day, $year) = split(/-/, $date);\n    if(($month >= 1 && $month\
    \ <= 12) && ($year >= 1)){\n        if(grep(/^$month$/, @$month31)){\n       \
    \     if($day >= 1 && $day <= 31){\n                $result = 1;\n           \
    \ }\n        }elsif(grep(/^$month$/, @$month30)){\n            if($day >= 1 &&\
    \ $day <= 30){\n                $result = 1;\n            }\n        }elsif(grep(/^$month$/,\
    \ @$month29)){\n            if($day >= 1 && $day <= 29){\n                $result\
    \ = 1;\n            }\n        }\n    }\n    return $result;\n}", "    return\
    \ \"\" if $date eq \"\";\n    my $retval = \"\";\n    if ($date =~ /^(\\d\\d)\\\
    /(\\d\\d)\\/(\\d\\d\\d\\d)$/) {\n        if ($1 > 0 && $1 < 13) {\n          \
    \  if ($2 > 0 && $2 < 32) {\n                if ($1 == 1 || $1 == 3 || $1 == 5\
    \ || $1 == 7 || $1 == 8 || $1 == 10 || $1 == 12) {\n                    $retval\
    \ = 1;\n                }\n                elsif ($1 == 4 || $1 == 6 || $1 ==\
    \ 9 || $1 == 11) {\n                    if ($2 < 31) {\n                     \
    \   $retval = 1;\n                    }\n                }\n                elsif\
    \ ($1 == 2) {\n                    if ($2 < 30) {\n                        $retval\
    \ = 1;\n                    }\n                }\n            }\n        }\n \
    \   }\n    return $retval;\n}", "    my($m, $d, $y) = split /\\D+/, $date;\n \
    \   return \"\" unless $date;\n    if ($m == 2 && $d <= 29 && ($y % 4 == 0 &&\
    \ $y % 100 != 0 || $y % 400 == 0)) {\n\treturn 1;\n    } elsif ($m == 2 && $d\
    \ <= 28) {\n\treturn 1;\n    } elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11)\
    \ {\n\treturn 1 if $d <= 30;\n    } elsif ($m == 1 || $m == 3 || $m == 5 || $m\
    \ == 7 || $m == 8 || $m == 10 || $m == 12) {\n\treturn 1 if $d <= 31;\n    }\n\
    \    return \"\";\n}", "    my($month, $day, $year) = split(/-/, $date);\n   \
    \ return \"\" if $date eq \"\";\n    return \"\" if !looks_like_number($month)\
    \ || !looks_like_number($day) || !looks_like_number($year);\n    return \"\" if\
    \ ($month > 12 || $month < 1);\n    return \"\" if ($year < 0);\n    return \"\
    \" if ($day > 31 || $day < 1);\n    if ($month == 2) {\n        return \"\" if\
    \ ($day > 29);\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        return \"\" if ($day > 30);\n    }\n    return 1;\n}", " \
    \   return \"\" if $date eq \"\";\n    my($month, $day, $year) = split(/-/, $date);\n\
    \    $year = \"20\" . $year if $year =~ /^\\d{2}$/;\n    $month =~ s/^0*//;\n\
    \    $day =~ s/^0*//;\n    if($day < 1 || $day > 31 || $month < 1 || $month >\
    \ 12) {\n        return \"\";\n    }\n    if($month == 2) {\n        if($day >\
    \ 29) {\n            return \"\";\n        }\n        elsif($day == 29) {\n  \
    \          return $year % 4 == 0 ? 1 : \"\";\n        }\n    }\n    else {\n \
    \       my @months = (1, 3, 5, 7, 8, 10, 12);\n        my $max_day = 31;\n   \
    \     if(! grep {$_ == $month} @months) {\n            $max_day = 30;\n      \
    \  }\n        if($day > $max_day) {\n            return \"\";\n        }\n   \
    \ }\n    return 1;\n}", "    # TODO:\n    if ($date =~ m/\\d{2}-\\d{2}-\\d{4}/)\
    \ {\n        my ($m, $d, $y) = split '-', $date;\n        return !($m > 12 ||\
    \ $m < 1 || $d > 31 || $d < 1 || $y < 0);\n    } else {\n        return '';\n\
    \    }\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $day\
    \ = $2;\n        my $month = $1;\n        my $year = $3;\n        if ($day < 32\
    \ && $day > 0 && $month < 13 && $month > 0 && $year > 0) {\n            if ($month\
    \ == 2) {\n                if ($day < 30) {\n                    return 1;\n \
    \               }\n            }\n            elsif ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n                if ($day < 32) {\n                    return 1;\n   \
    \             }\n            }\n            elsif ($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n                if ($day < 31) {\n      \
    \              return 1;\n                }\n            }\n        }\n    }\n\
    \    return \"\";\n}", "    return '' unless ($date =~ /^(?<month>\\d\\d)-(?<day>\\\
    d\\d)-(?<year>\\d\\d\\d\\d)$/);\n    return '' if (\n        $+{day} > 31 || $+{day}\
    \ < 1\n        || $+{month} > 12 || $+{month} < 1\n        || $+{year} < 1\n \
    \   );\n    if (($+{month} == 1 || $+{month} == 3 || $+{month} == 5 || $+{month}\
    \ == 7 || $+{month} == 8 || $+{month} == 10 || $+{month} == 12) && $+{day} > 31)\
    \ {\n        return '';\n    }\n    if (($+{month} == 4 || $+{month} == 6 || $+{month}\
    \ == 9 || $+{month} == 11) && $+{day} > 30) {\n        return '';\n    }\n   \
    \ if ($+{month} == 2 && $+{day} > 29) {\n        return '';\n    }\n    return\
    \ 1;\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $m =\
    \ $1;\n        my $d = $2;\n        my $y = $3;\n        if ($m < 1 || $m > 12)\
    \ {\n            return \"\";\n        }\n        if ($m == 2) {\n           \
    \ if ($d < 1 || $d > 29) {\n                return \"\";\n            }\n    \
    \    }\n        elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n        \
    \    if ($d < 1 || $d > 30) {\n                return \"\";\n            }\n \
    \       }\n        else {\n            if ($d < 1 || $d > 31) {\n            \
    \    return \"\";\n            }\n        }\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    return \"\" if !$date;\n    return \"\" if $date !~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/;\n    my $month = $1;\n    my $day = $2;\n    my $year = $3;\n\
    \    return \"\" if $month !~ /^\\d{2}$/;\n    return \"\" if $day !~ /^\\d{2}$/;\n\
    \    return \"\" if $year !~ /^\\d{4}$/;\n    return \"\" if $month < 1 || $month\
    \ > 12;\n    if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        return \"\" if $day < 1 ||\
    \ $day > 31;\n    } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        return \"\" if $day < 1 || $day > 30;\n    } elsif ($month\
    \ == 2) {\n        return \"\" if $day < 1 || $day > 29;\n    }\n    return 1;\n\
    }", "    if(length($date) > 0 && $date =~ /^(\\d\\d?)-(\\d\\d?)-(\\d\\d\\d\\d)$/)\
    \ {\n        my $m = $1;\n        my $d = $2;\n        my $y = $3;\n        if($m\
    \ < 1 || $m > 12) {\n            return \"\";\n        }\n        if($m == 2)\
    \ {\n            if(($y % 4 == 0 && $y % 100 != 0) || $y % 400 == 0) {\n     \
    \           if($d < 1 || $d > 29) {\n                    return \"\";\n      \
    \          }\n            } else {\n                if($d < 1 || $d > 28) {\n\
    \                    return \"\";\n                }\n            }\n        }\
    \ elsif(($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m\
    \ == 12) && ($d < 1 || $d > 31)) {\n            return \"\";\n        } elsif(($m\
    \ == 4 || $m == 6 || $m == 9 || $m == 11) && ($d < 1 || $d > 30)) {\n        \
    \    return \"\";\n        }\n        return 1;\n    }\n    return \"\";\n}",
  "    return 1 if $date =~ m/^\\d{2}-\\d{2}-\\d{4}$/;\n    return;\n}", "    return\
    \ if !$date;\n    return if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return if $month < 1 || $month > 12;\n   \
    \ return if $day < 1 || $day > 31;\n    return if $month == 2 && $day > 29;\n\
    \    return if $month == 4 && $day > 30;\n    return if $month == 6 && $day >\
    \ 30;\n    return if $month == 9 && $day > 30;\n    return if $month == 11 &&\
    \ $day > 30;\n    return 1;\n}", "    if(scalar(@_) > 1) { return \"\"; }\n  \
    \  # Check date format\n    if($date !~ /^\\d{2}-\\d{2}-\\d{4}$/) { return \"\"\
    ; }\n    my ($mm, $dd, $yyyy) = split(/-/, $date);\n    if($mm < 1 || $mm > 12)\
    \ { return \"\"; }\n    # Check month days\n    if($mm == 1 || $mm == 3 || $mm\
    \ == 5 || $mm == 7 || $mm == 8 || $mm == 10 || $mm == 12) {\n        if($dd <\
    \ 1 || $dd > 31) { return \"\"; }\n    } elsif($mm == 4 || $mm == 6 || $mm ==\
    \ 9 || $mm == 11) {\n        if($dd < 1 || $dd > 30) { return \"\"; }\n    } elsif($mm\
    \ == 2) {\n        if($dd < 1 || $dd > 29) { return \"\"; }\n    }\n    return\
    \ 1;\n}", "    if ($date =~ /(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(201[1-9]|20[2-9][0-9])/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    return unless $date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month, $day, $year) = ($1, $2, $3);\n\
    \    return unless 1 <= $month && $month <= 12;\n    return unless 1 <= $day \
    \  && $day   <= 31;\n    return unless 1 <= $year  && $year  <= 9999;\n    return\
    \ unless $day <= days_in_month($month, $year);\n    return 1;\n}", "    return\
    \ unless $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2,\
    \ $3);\n    return unless $m >= 1 && $m <= 12;\n    return unless $d >= 1 && $d\
    \ <= 31;\n    return unless $y >= 1900 && $y <= 2100;\n    return if $m == 2 &&\
    \ $d > 29;\n    return if ($m == 4 || $m == 6 || $m == 9 || $m == 11) && $d >\
    \ 30;\n    return 1;\n}", "    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n\
    \        return $1 <= 12 && $2 <= 31 && $2 >= 1 &&\n               $1 =~ /^(?:[12]\\\
    d|0[1-9]|3[01])$/ &&\n               $2 =~ /^(?:[12]\\d|0[1-9]|3[01])$/ &&\n \
    \              ($1 !~ /^02$/ || $2 <= 29);\n    }\n    return \"\";\n}", "   \
    \ return '' unless $date =~ m!^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\d{4}$!;\n\
    \    my ($month, $day, $year) = split(/-/, $date);\n    return '' if $day > 31\
    \ and ($month == 1 or $month == 3 or $month == 5 or $month == 7 or $month == 8\
    \ or $month == 10 or $month == 12);\n    return '' if $day > 30 and ($month ==\
    \ 4 or $month == 6 or $month == 9 or $month == 11);\n    return '' if $day > 29\
    \ and $month == 2;\n    return '' if $day < 1 or $month < 1 or $month > 12;\n\
    \    return 1;\n}", "    return unless $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n\
    \    my($mm, $dd, $yyyy) = ($1, $2, $3);\n    return unless $dd > 0 && $dd <=\
    \ 31 && $mm > 0 && $mm <= 12;\n    return unless $yyyy > 0;\n    return if $mm\
    \ == 2 && $dd > 29;\n    return if ($mm == 4 || $mm == 6 || $mm == 9 || $mm ==\
    \ 11) && $dd > 30;\n    return 1;\n}", "    #return 1 if $date =~ /\\d{2}-\\d{2}-\\\
    d{4}/;\n    return 1 if $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    return '';\n}",
  "    $date =~ /^([01]?\\d)-([0-3]?\\d)-(\\d{4})$/;\n    return unless $1 && $2 &&\
    \ $3;\n    return 1 if ($2 < 32 && $2 > 0) && ($1 < 13 && $1 > 0);\n    return\
    \ 1 if ($2 < 31 && $2 > 0) && ($1 == 1 || $1 == 3 || $1 == 5 || $1 == 7 || $1\
    \ == 8 || $1 == 10 || $1 == 12);\n    return 1 if ($2 < 30 && $2 > 0) && ($1 ==\
    \ 4 || $1 == 6 || $1 == 9 || $1 == 11);\n    return 1 if ($2 < 29 && $2 > 0) &&\
    \ ($1 == 2);\n    return;\n}", "    my $result = '';\n    my $found = 0;\n   \
    \ my @months = qw(01 02 03 04 05 06 07 08 09 10 11 12);\n    my @days31 = qw(01\
    \ 03 05 07 08 10 12);\n    my @days30 = qw(04 06 09 11);\n    my @days29 = qw(02);\n\
    \    my $day = int(substr($date, 0, 2));\n    my $month = int(substr($date, 3,\
    \ 2));\n    my $year = int(substr($date, 6, 4));\n    if($date eq '') {\n    \
    \    return $result;\n    }\n    if($month < 1 || $month > 12) {\n        return\
    \ $result;\n    }\n    if($month ~~ @days31) {\n        if($day < 1 || $day >\
    \ 31) {\n            return $result;\n        }\n    }\n    if($month ~~ @days30)\
    \ {\n        if($day < 1 || $day > 30) {\n            return $result;\n      \
    \  }\n    }\n    if($month ~~ @days29) {\n        if($day < 1 || $day > 29) {\n\
    \            return $result;\n        }\n    }\n    if($year < 1000 || $year >\
    \ 9999) {\n        return $result;\n    }\n    if($date =~ /\\d\\d-\\d\\d-\\d\\\
    d\\d\\d/) {\n        $result = 1;\n    }\n    return $result;\n}", "    # we should\
    \ have a date\n    if (not $date =~ /\\d{2}-\\d{2}-\\d{4}/) {\n        return\
    \ '';\n    }\n    my($m, $d, $y) = split(/-/, $date);\n    my @days_in_month =\
    \ (31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    # make sure months are\
    \ not 0 and days don't exceed the days in the month\n    if ($m < 1 or $m > 12\
    \ or $d < 1 or $d > $days_in_month[$m-1]) {\n        return '';\n    }\n    #\
    \ check if it's a leap year\n    if ($m == 2) {\n        if (not ($y % 4) and\
    \ ($y % 100) or not ($y % 400)) {\n            return 1;\n        }\n        else\
    \ {\n            return $d <= 28 ? 1 : '';\n        }\n    }\n    else {\n   \
    \     return 1;\n    }\n}", "    my($day, $month, $year) = split /-/, $date;\n\
    \    return \"\" unless $date;\n    return \"\" unless (length($day) == 2 && length($month)\
    \ == 2 && length($year) == 4);\n    return \"\" unless ($month >= 1 && $month\
    \ <= 12);\n    return \"\" unless $year > 0;\n    return \"\" unless ($day >=\
    \ 1 && $day <= 31) if (grep /^$month$/, qw(1 3 5 7 8 10 12));\n    return \"\"\
    \ unless ($day >= 1 && $day <= 30) if (grep /^$month$/, qw(4 6 9 11));\n    return\
    \ \"\" unless ($day >= 1 && $day <= 29) if ($month == 2);\n    return 1;\n}",
  "    my $day_month = {\n        1 => 31, 2 => 29, 3 => 31, 4 => 30, 5 => 31, 6 =>\
    \ 30,\n        7 => 31, 8 => 31, 9 => 30, 10 => 31, 11 => 30, 12 => 31\n    };\n\
    \    return \"\" unless length($date);\n    my ($m, $d, $y) = split /[-\\/]/,\
    \ $date;\n    return \"\" unless $y && $m && $d;\n    return \"\" unless $y =~\
    \ /^\\d+$/ && $m =~ /^\\d+$/ && $d =~ /^\\d+$/;\n    return \"\" unless $y >=\
    \ 0 && $m >= 1 && $m <= 12 && $d >= 1;\n    return \"\" unless exists $day_month->{$m}\
    \ && $d <= $day_month->{$m};\n    return 1;\n}", "    my $ret;\n    if ($date\
    \ =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(\\d{4})$/) {\n\tmy $month =\
    \ $1;\n\tmy $day = $2;\n\tmy $year = $3;\n\tif (($month >= 1 && $month <= 12)\
    \ &&\n\t    (($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) &&\n\t     ($day >= 1 && $day <= 31))\
    \ ||\n\t    (($month == 4 || $month == 6 || $month == 9 || $month == 11) &&\n\t\
    \     ($day >= 1 && $day <= 30)) ||\n\t    ($month == 2 &&\n\t     ($day >= 1\
    \ && $day <= 29))) {\n\t    $ret = 1;\n\t}\n    }\n    return $ret;\n}", "   \
    \ my($month, $day, $year) = split(/-/, $date);\n    my $ret = '';\n    my $valid_date\
    \ = 0;\n    if ($day > 0 and $day < 32) {\n        if ($month > 0 and $month <\
    \ 13) {\n            $valid_date = 1;\n            if ($month == 2) {\n      \
    \          if ($day > 29) {\n                    $valid_date = 0;\n          \
    \      }\n            } elsif ($month == 4 or $month == 6 or $month == 9 or $month\
    \ == 11) {\n                if ($day > 30) {\n                    $valid_date\
    \ = 0;\n                }\n            }\n        }\n    }\n    if ($valid_date)\
    \ {\n        $ret = 1;\n    }\n    return $ret;\n}", "    return 0 if $date !~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my $month = $1;\n    my $day = $2;\n  \
    \  my $year = $3;\n    my $max_days;\n    return 0 if $month < 1 || $month > 12;\n\
    \    if($month == 2) {\n        if( ($year % 4 == 0 && $year % 100 != 0) || $year\
    \ % 400 == 0) {\n            $max_days = 29;\n        } else {\n            $max_days\
    \ = 28;\n        }\n    } elsif($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        $max_days = 30;\n    } else {\n        $max_days = 31;\n \
    \   }\n    return 0 if $day < 1 || $day > $max_days;\n    return 1;\n}", "   \
    \ chomp($date);\n    #return \"\" if($date =~ /^$/);\n    return \"\" if($date\
    \ =~ /[^0-9-]/);\n    my($month,$day,$year) = split(\"-\",$date);\n    return\
    \ \"\" if(length($year) != 4);\n    return \"\" if($month < 1 || $month > 12);\n\
    \    return \"\" if($day < 1 || $day > 31);\n    return \"\" if($month == 2 &&\
    \ $day > 29);\n    return \"\" if($month == 4 && $day > 30);\n    return \"\"\
    \ if($month == 6 && $day > 30);\n    return \"\" if($month == 9 && $day > 30);\n\
    \    return \"\" if($month == 11 && $day > 30);\n    return 1;\n}", "    return\
    \ \"\" unless $date =~ /(\\d{2})-(\\d{2})-(\\d{4})/;\n    my($m, $d, $y) = ($1,\
    \ $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    if ($m == 2) {\n      \
    \  return \"\" if $d < 1 || $d > 29;\n    } elsif ($m == 4 || $m == 6 || $m ==\
    \ 9 || $m == 11) {\n        return \"\" if $d < 1 || $d > 30;\n    } else {\n\
    \        return \"\" if $d < 1 || $d > 31;\n    }\n    return 1;\n}", "    return\
    \ $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})$/ &&\n      \
    \  ($1 == 1 || $1 == 3 || $1 == 5 || $1 == 7 || $1 == 8 || $1 == 10 || $1 == 12\
    \ ? $2 <= 31 : $1 == 4 || $1 == 6 || $1 == 9 || $1 == 11 ? $2 <= 30 : $2 <= 29)\n\
    }", "    return \"\" unless $date =~ /(\\d{2})-(\\d{2})-(\\d{4})/;\n    my $d\
    \ = $1;\n    my $m = $2;\n    my $y = $3;\n    return \"\" if $d > 31 || $d <\
    \ 1;\n    return \"\" if $m > 12 || $m < 1;\n    return \"\" if $m == 2 && $d\
    \ > 29;\n    return \"\" if ($m == 4 || $m == 6 || $m == 9 || $m == 11) && $d\
    \ > 30;\n    return 1;\n}", "    return '' unless $date =~ /^(\\d\\d)-(\\d\\d)-(\\\
    d\\d\\d\\d)$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return '' if $m < 1 ||\
    \ $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return '' if $m == 2 && $d\
    \ > 29;\n    return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d\
    \ > 30;\n    return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d\
    \ > 30;\n    return 1;\n}", "    my($month, $day, $year) = split('-', $date);\n\
    \    if (defined $day and defined $month and defined $year) {\n        if ($month\
    \ == 1 or $month == 3 or $month == 5 or $month == 7 or $month == 8 or $month ==\
    \ 10 or $month == 12) {\n            if ($day >= 1 and $day <= 31) {\n       \
    \         return 1;\n            }\n        }\n        elsif ($month == 4 or $month\
    \ == 6 or $month == 9 or $month == 11) {\n            if ($day >= 1 and $day <=\
    \ 30) {\n                return 1;\n            }\n        }\n        elsif ($month\
    \ == 2) {\n            if ($day >= 1 and $day <= 29) {\n                return\
    \ 1;\n            }\n        }\n    }\n    return \"\";\n}", "    my $valid =\
    \ 1;\n    my $error = \"\";\n    my $found = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $month_text = \"\";\n    my @months = qw(0 January\
    \ February March April May June July August September October November December);\n\
    \    my @days_in_month = qw(0 31 28 31 30 31 30 31 31 30 31 30 31);\n    my $days_in_month\
    \ = 0;\n    # print \"DEBUG: I received $date as a parameter\\n\";\n    if (length($date)\
    \ > 0) {\n        if ($date =~ /(\\d{2})-(\\d{2})-(\\d{4})/) {\n            #\
    \ print \"DEBUG: $1 $2 $3\\n\";\n            $month = $1;\n            $day =\
    \ $2;\n            $year = $3;\n            if ($month < 1 || $month > 12) {\n\
    \                $valid = 0;\n                $error = \"The month $month is not\
    \ valid, it must be between 1 and 12\";\n            }\n            else {\n \
    \               $month_text = $months[$month];\n                $days_in_month\
    \ = $days_in_month[$month];\n                if ($month_text eq \"February\")\
    \ {\n                    # Need to decide if it is a leap year or not\n      \
    \              if ($year % 4 == 0) {\n                        # It is a leap year\n\
    \                        $days_in_month++;\n                    }\n          \
    \      }\n                if ($day < 1 || $day > $days_in_month) {\n         \
    \           $valid = 0;\n                    $error = \"The day $day is not valid,\
    \ it must be between 1 and $days_in_month\";\n                }\n            }\n\
    \        }\n        else {\n            $valid = 0;\n            $error = \"The\
    \ date is not in the format mm-dd-yyyy\";\n        }\n    }\n    else {\n    \
    \    $valid = 0;\n        $error = \"You must supply a valid date string\";\n\
    \    }\n    if ($valid == 0) {\n        return $error;\n    }\n    else {\n  \
    \      return $", "    # Write your code here\n    if ($date eq \"\"){\n     \
    \   return \"\";\n    }\n    if ($date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/){\n \
    \       return \"\";\n    }\n    my $mon = $1;\n    my $day = $2;\n    my $year\
    \ = $3;\n    if ($mon > 12 || $mon < 1){\n        return \"\";\n    }\n    if\
    \ (($mon == 1 || $mon == 3 || $mon == 5 || $mon == 7 || $mon == 8 || $mon == 10\
    \ || $mon == 12) && ($day > 31 || $day < 1)){\n        return \"\";\n    }\n \
    \   if (($mon == 4 || $mon == 6 || $mon == 9 || $mon == 11) && ($day > 30 || $day\
    \ < 1)){\n        return \"\";\n    }\n    if ($mon == 2 && ($day > 29 || $day\
    \ < 1)){\n        return \"\";\n    }\n    return 1;\n}", "    return '' unless\
    \ $date =~ m/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n    my\
    \ $days = $2;\n    my $month = $1;\n    return '' if $month < 1 || $month > 12;\n\
    \    return '' if ($month == 2 && $days > 29) || (($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) && $days > 30) || ($days > 31);\n    return\
    \ 1;\n}", "    #one line solution\n    #return 1 if $date =~ /^(?:(?:31(\\/|-|\\\
    .)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\\
    d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\
    d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n\
    \    # Return if input is empty.\n    return if not defined $date;\n    # Short\
    \ circuit if date is not correctly formatted.\n    if ( $date !~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/ ) {\n        return \"\";\n    }\n    my $month = $1;\n    my\
    \ $day = $2;\n    my $year = $3;\n    # Check for month between 1 and 12, inclusive.\n\
    \    if ( $month < 1 or $month > 12 ) {\n        return \"\";\n    }\n    # Check\
    \ for day between 1 and 31, inclusive, or between 1 and 30, inclusive, or between\
    \ 1 and 29, inclusive.\n    if ( not ($day >= 1 and $day <= 31) and not ($day\
    \ >= 1 and $day <= 30) and not ($day >= 1 and $day <= 29) ) {\n        return\
    \ \"\";\n    }\n    # Check for year between 1 and 9999, inclusive.\n    if (\
    \ $year < 1 or $year > 9999 ) {\n        return \"\";\n    }\n", "    if( $date\
    \ =~ /\\d{2}-\\d{2}-\\d{4}/ ) {\n        my @date = split('-', $date);\n     \
    \   my $days = days_in_month($date[0], $date[2]);\n        if( $date[1] >= 1 &&\
    \ $date[1] <= $days ) {\n            return 1;\n        }\n    }\n    return \"\
    \";\n}", "    return \"\" if $date eq \"\";\n    my @d = split \"-\", $date;\n\
    \    return \"\" if scalar @d != 3;\n    my $m = $d[0];\n    my $d = $d[1];\n\
    \    my $y = $d[2];\n    return \"\" if $m < 1 || $m > 12;\n    return \"\" if\
    \ $d < 1 || ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 ||\
    \ $m == 12) && $d > 31;\n    return \"\" if $d < 1 || ($m == 4 || $m == 6 || $m\
    \ == 9 || $m == 11) && $d > 30;\n    return \"\" if $d < 1 || $m == 2 && $d >\
    \ 29;\n    return 1;\n}", "    chomp($date);\n    my $y = int(substr($date,6,4));\n\
    \    my $m = int(substr($date,0,2));\n    my $d = int(substr($date,3,2));\n  \
    \  if (($m>12) || ($m<1)) { return \"\"; }\n    if (($m==2) && ($d>29)) { return\
    \ \"\"; }\n    if (($m==2) && ($d<1)) { return \"\"; }\n    if ((($m==1) || ($m==3)\
    \ || ($m==5) || ($m==7) || ($m==8) || ($m==10) || ($m==12)) && ($d>31)) { return\
    \ \"\"; }\n    if ((($m==1) || ($m==3) || ($m==5) || ($m==7) || ($m==8) || ($m==10)\
    \ || ($m==12)) && ($d<1)) { return \"\"; }\n    if ((($m==4) || ($m==6) || ($m==9)\
    \ || ($m==11)) && ($d>30)) { return \"\"; }\n    if ((($m==4) || ($m==6) || ($m==9)\
    \ || ($m==11)) && ($d<1)) { return \"\"; }\n    if ($y<2000) { return \"\"; }\n\
    \    return 1;\n}", "    if ($date =~ /^([0-9]{2})-([0-9]{2})-([0-9]{4})$/) {\n\
    \        if ($1 < 13) {\n            if ($1 == 2) {\n                if ($2 <\
    \ 30) {\n                    return 1;\n                }\n            } elsif\
    \ ($1 == 4 or $1 == 6 or $1 == 9 or $1 == 11) {\n                if ($2 < 31)\
    \ {\n                    return 1;\n                }\n            } else {\n\
    \                if ($2 < 32) {\n                    return 1;\n             \
    \   }\n            }\n        }\n    }\n    return \"\";\n}", "    my $valid =\
    \ '';\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $m = $1;\n\
    \        my $d = $2;\n        my $y = $3;\n        if ($m > 0 && $m < 13) {\n\
    \            if ($m == 2) {\n                if ($d > 0 && $d < 30) {\n      \
    \              $valid = 1;\n                }\n            } elsif ($m == 1 ||\
    \ $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) {\n      \
    \          if ($d > 0 && $d < 32) {\n                    $valid = 1;\n       \
    \         }\n            } else {\n                if ($d > 0 && $d < 31) {\n\
    \                    $valid = 1;\n                }\n            }\n        }\n\
    \    }\n    return $valid;\n}", "    # write your code here\n    if($date =~ /^([0][1-9]|[1][0-2])\\\
    -([0][1-9]|[1-2][0-9]|[3][0-1])\\-([0-9]{4})$/){\n        my $month = $1;\n  \
    \      my $day = $2;\n        my $year = $3;\n        if($month == 2){\n     \
    \       if($day > 29){\n                return '';\n            }else{\n     \
    \           return 1;\n            }\n        }else{\n            if($month%2\
    \ == 0){\n                if($day > 30){\n                    return '';\n   \
    \             }else{\n                    return 1;\n                }\n     \
    \       }else{\n                if($day > 31){\n                    return '';\n\
    \                }else{\n                    return 1;\n                }\n  \
    \          }\n        }\n    }else{\n        return '';\n    }\n}", "    my $pattern\
    \ = qr{^(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])-(?:19|20)\\d{2}$};\n    $date\
    \ =~ $pattern ? 1 : \"\";\n}", "    # your code here\n    # http://stackoverflow.com/questions/18502720/regex-for-dd-mm-yyyy-format-date\n\
    \    # http://www.regular-expressions.info/dates.html\n    # http://stackoverflow.com/questions/15552055/regex-to-return-true-if-date-is-in-dd-mm-yyyy-format\n\
    \    # https://www.sitepoint.com/community/t/regular-expression-to-validate-date-in-mm-dd-yyyy-format/228693/5\n\
    \    # my $m = qr{(?:1[0-2]|0[1-9])}; # 01-12\n    # my $d = qr{(?:3[01]|0[1-9]|[12][0-9])};\
    \ # 01-31\n    # my $y = qr{(?:[0-9]{2})?[0-9]{2}}; # 00-99, 0000-9999\n    #\
    \ my $pattern = qr{^($m)[-/.]($d)[-/.]($y)$};\n    # if ($date =~ $pattern) {\n\
    \    #     return 1;\n    # } else {\n    #     return \"\";\n    # }\n    if\
    \ ($date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/) {\n   \
    \     return 1;\n    } else {\n        return \"\";\n    }\n}", "    if ($date\
    \ =~ /\\A(\\d{2})-(\\d{2})-(\\d{4})\\z/) {\n        my($m, $d, $y) = ($1, $2,\
    \ $3);\n        # leap year\n        if ($m == 2 && ($d >= 1 && $d <= 29) && ($y\
    \ % 4 == 0)) {\n            return 1;\n        }\n        # non-leap year\n  \
    \      elsif ($m == 2 && ($d >= 1 && $d <= 28) && ($y % 4 != 0)) {\n         \
    \   return 1;\n        }\n        # months with 31 days\n        elsif (($m ==\
    \ 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) && ($d\
    \ >= 1 && $d <= 31)) {\n            return 1;\n        }\n        # months with\
    \ 30 days\n        elsif (($m == 4 || $m == 6 || $m == 9 || $m == 11) && ($d >=\
    \ 1 && $d <= 30)) {\n            return 1;\n        }\n        else {\n      \
    \      return \"\";\n        }\n    }\n    else {\n        return \"\";\n    }\n\
    }", "    return 1 if ($date =~ /^(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/);\n    return \"\";\n}", "    return 0 if $date eq \"\";\n    return 0\
    \ if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my @d = split(/-/, $date);\n    return\
    \ 0 if $d[1] < 1 || $d[1] > 12;\n    return 0 if $d[0] < 1 || $d[0] > 31;\n  \
    \  return 0 if $d[1] == 2 && $d[0] > 29;\n    return 0 if $d[1] ~~ [4, 6, 9, 11]\
    \ && $d[0] > 30;\n    return 1;\n}", "    my $res = 1;\n    my $reg = qr/^(\\\
    d{2})-(\\d{2})-(\\d{4})$/;\n    if($date =~ $reg){\n        my $d = $1;\n    \
    \    my $m = $2;\n        my $y = $3;\n        if($m == 2){\n            if($d\
    \ > 29){\n                $res = '';\n            }\n        }elsif($m == 4 ||\
    \ $m == 6 || $m == 9 || $m == 11){\n            if($d > 30){\n               \
    \ $res = '';\n            }\n        }elsif($m > 12){\n            $res = '';\n\
    \        }\n    }else{\n        $res = '';\n    }\n    return $res;\n}", "   \
    \ if ( $date =~ /^\\d{2}-\\d{2}-\\d{4}$/ ) {\n        my($month, $day, $year)\
    \ = split /-/, $date;\n        return 1 if ( $day >= 1 && $day <= 31 && ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) );\n        return 1 if ( $day >= 1 && $day <= 30 && ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) );\n        return 1 if\
    \ ( $day >= 1 && $day <= 29 && $month == 2 );\n        return 1 if ( $month >=\
    \ 1 && $month <= 12 );\n    }\n    return \"\";\n}", "    my $month = substr($date,\
    \ 0, 2);\n    my $day = substr($date, 3, 2);\n    my $year = substr($date, 6,\
    \ 4);\n    if ($date =~ /^((?:0?[1-9])|(?:1[0-2]))-((?:0?[1-9])|(?:[12][0-9])|(?:3[01])|(?:[1-9]))-(\\\
    d{4})$/) {\n        if ($month == '02' && $day > 29) {\n            return '';\n\
    \        } elsif ($month == '02' && $day == 29 && ($year % 4) != 0) {\n      \
    \      return '';\n        } elsif (($month == '04' || $month == '06' || $month\
    \ == '09' || $month == '11') && $day > 30) {\n            return '';\n       \
    \ } elsif (($month == '01' || $month == '03' || $month == '05' || $month == '07'\
    \ || $month == '08' || $month == '10' || $month == '12') && $day > 31) {\n   \
    \         return '';\n        } else {\n            return 1;\n        }\n   \
    \ } else {\n        return '';\n    }\n}", "    my @patterns = qw(\n        (?:(?:[0-2]?\\\
    d|3[0-1])-(?:0?[1-9]|1[0-2])-(?:\\d{4}))\n        (?:(?:[0-2]?\\d|3[0-1])\\.(?:0?[1-9]|1[0-2])\\\
    .(?:\\d{4}))\n        (?:(?:0?[1-9]|1[0-2])-(?:[0-2]?\\d|3[0-1])-(?:\\d{4}))\n\
    \        (?:(?:0?[1-9]|1[0-2])\\.(?:[0-2]?\\d|3[0-1])\\.(?:\\d{4}))\n    );\n\
    \    if ($date =~ /^$patterns[0]$/) {\n        my($d, $m, $y) = split(\"-\", $date);\n\
    \        return 1 if ($d >= 1 && $d <= 31 && $m >= 1 && $m <= 12);\n    }\n  \
    \  if ($date =~ /^$patterns[1]$/) {\n        my($d, $m, $y) = split(\"\\\\.\"\
    , $date);\n        return 1 if ($d >= 1 && $d <= 31 && $m >= 1 && $m <= 12);\n\
    \    }\n    if ($date =~ /^$patterns[2]$/) {\n        my($m, $d, $y) = split(\"\
    -\", $date);\n        return 1 if ($d >= 1 && $d <= 31 && $m >= 1 && $m <= 12);\n\
    \    }\n    if ($date =~ /^$patterns[3]$/) {\n        my($m, $d, $y) = split(\"\
    \\\\.\", $date);\n        return 1 if ($d >= 1 && $d <= 31 && $m >= 1 && $m <=\
    \ 12);\n    }\n    return \"\";\n}", "    return '' unless $date =~ m#^(\\d{2})-(\\\
    d{2})-(\\d{4})$#;\n    my $valid_date = '';\n    $valid_date = 1 if $2 >= 1 and\
    \ $2 <= 12;\n    $valid_date = 1 if $1 >= 1 and $1 <= 31;\n    $valid_date = 1\
    \ if $2 == 2 and $1 <= 29;\n    $valid_date = 1 if $2 == 4 and $1 <= 30;\n   \
    \ $valid_date = 1 if $2 == 6 and $1 <= 30;\n    $valid_date = 1 if $2 == 9 and\
    \ $1 <= 30;\n    $valid_date = 1 if $2 == 11 and $1 <= 30;\n    return $valid_date;\n\
    }", "    my($day, $month, $year);\n    my($max_days);\n    my($prefix);\n    my($max_year)\
    \ = 2100;\n    my($min_year) = 1900;", "    my($d, $m, $y) = split /[-\\/]/, $date;\n\
    \    return \"\" if $d !~ /^\\d{1,2}$/;\n    return \"\" if $m !~ /^\\d{1,2}$/;\n\
    \    return \"\" if $y !~ /^\\d{4}$/;\n    return \"\" if ($m < 1 || $m > 12);\n\
    \    return \"\" if ($m == 2 && $d > 29);\n    return \"\" if ($m == 2 && $d >\
    \ 28 && !leap_year($y));\n    return \"\" if ($m != 2 && ($d < 1 || $d > 31));\n\
    \    return \"\" if ($m != 2 && ($d < 1 || $d > 30));\n    return 1;\n}", "  \
    \  if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n        my($m, $d, $y) = split(/-/,\
    \ $date);\n        if (($m >= 1 && $m <= 12) &&\n            ($d >= 1 && $d <=\
    \ 30 && $m == 4 || $m == 6 || $m == 9 || $m == 11) &&\n            ($d >= 1 &&\
    \ $d <= 31 && $m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10\
    \ || $m == 12) &&\n            ($d >= 1 && $d <= 29 && $m == 2)) {\n         \
    \   return 1;\n        }\n    }\n    return '';\n}", "    my $msg = \"1\";\n \
    \   if(length($date) <= 0 || $date !~ /\\d{2}-\\d{2}-\\d{4}/) {\n        $msg\
    \ = \"\";\n    }\n    else {\n        my @sub_date = split /-/, $date;\n     \
    \   my $month = $sub_date[0];\n        my $day = $sub_date[1];\n        my $year\
    \ = $sub_date[2];\n        if(($month eq 1 || $month eq 3 || $month eq 5 || $month\
    \ eq 7 || $month eq 8 || $month eq 10 || $month eq 12) && $day > 31) {\n     \
    \       $msg = \"\";\n        }\n        elsif(($month eq 4 || $month eq 6 ||\
    \ $month eq 9 || $month eq 11) && $day > 30) {\n            $msg = \"\";\n   \
    \     }\n        elsif($month eq 2 && $day > 29) {\n            $msg = \"\";\n\
    \        }\n        elsif($month < 1 || $month > 12) {\n            $msg = \"\"\
    ;\n        }\n    }\n    return $msg;\n}", "    if($date eq \"\"){\n        return\
    \ \"\";\n    }\n    if($date !~ /\\d{2}-\\d{2}-\\d{4}/){\n        return \"\"\
    ;\n    }\n    my($day,$month,$year) = split(/-/,$date);\n    if($month < 1 ||\
    \ $month > 12){\n        return \"\";\n    }\n    if($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12){\n        if($day < 1 || $day > 31){\n            return \"\";\n       \
    \ }\n    }\n    if($month == 4 || $month == 6 || $month == 9 || $month == 11){\n\
    \        if($day < 1 || $day > 30){\n            return \"\";\n        }\n   \
    \ }\n    if($month == 2){\n        if($day < 1 || $day > 29){\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    return '' unless $date =~ /\\\
    d{2}-\\d{2}-\\d{4}/;\n    my($m, $d, $y) = $date =~ /(\\d{2})-(\\d{2})-(\\d{4})/;\n\
    \    return '' if $m > 12;\n    return '' if $d > 31 and ($m == 1 or $m == 3 or\
    \ $m == 5 or $m == 7 or $m == 8 or $m == 10 or $m == 12);\n    return '' if $d\
    \ > 30 and ($m == 4 or $m == 6 or $m == 9 or $m == 11);\n    return '' if $d >\
    \ 29 and $m == 2;\n    return 1;\n}", "    if ( $date =~ /\\d{2}-\\d{2}-\\d{4}/g\
    \ and $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$/g ) {\n  \
    \      return 1;\n    }\n    return \"\";\n}", "    chomp($date);\n    #print\
    \ $date;\n    my $t = $date;\n    $t =~ s/\\-//g;\n    if (length($t) != 8) {\n\
    \        return \"\";\n    }\n    my $m = substr($date, 0, 2);\n    my $d = substr($date,\
    \ 3, 2);\n    my $y = substr($date, 6, 4);\n    #print $m, $d, $y;\n    if ($m\
    \ < 1 || $m > 12) {\n        return \"\";\n    }\n    if ($m == 2) {\n       \
    \ if ($d < 1 || $d > 29) {\n            return \"\";\n        }\n    }\n    elsif\
    \ ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12)\
    \ {\n        if ($d < 1 || $d > 31) {\n            return \"\";\n        }\n \
    \   }\n    else {\n        if ($d < 1 || $d > 30) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "    return \"\" unless $date =~ /^(\\d\\\
    d)-(\\d\\d)-(\\d\\d\\d\\d)$/;\n    my($mm, $dd, $yyyy) = ($1, $2, $3);\n    my\
    \ $m2 = { 1 => 31, 2 => 29, 3 => 31, 4 => 30, 5 => 31, 6 => 30, 7 => 31, 8 =>\
    \ 31, 9 => 30, 10 => 31, 11 => 30, 12 => 31 };\n    return \"\" unless defined\
    \ $m2->{$mm};\n    return \"\" unless $dd >= 1 && $dd <= $m2->{$mm};\n    return\
    \ \"\" unless $yyyy > 1900 && $yyyy < 2100;\n    return 1;\n}", "    if ($date\
    \ =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n        my ($month, $day, $year) = $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n        return 0 if ($month < 1 || $month >\
    \ 12);\n        if ($month % 2 == 0) {\n            return 0 if ($day < 1 || $day\
    \ > 30);\n        } else {\n            return 0 if ($day < 1 || $day > 31);\n\
    \        }\n        return 1;\n    }\n    return 0;\n}", "    my $good_date =\
    \ 0;\n    my $month;\n    my $day;\n    my $year;\n    my $date_regex = qr/^(\\\
    d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/;\n    if ($date =~ $date_regex) {\n        $month\
    \ = $1;\n        $day = $2;\n        $year = $3;\n        if ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n            if ($day >= 1 && $day <= 31) {\n                $good_date\
    \ = 1;\n            }\n        }\n        elsif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n            if ($day >= 1 && $day <= 30) {\n\
    \                $good_date = 1;\n            }\n        }\n        elsif ($month\
    \ == 2) {\n            if ($day >= 1 && $day <= 29) {\n                $good_date\
    \ = 1;\n            }\n        }\n    }\n    return $good_date;\n}", "    return\
    \ unless $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split(/-/, $date);\n\
    \    my @days = (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    if ($m\
    \ < 1 || $m > 12) {\n        return;\n    }\n    if ($y % 4 == 0) {\n        $days[1]\
    \ = 29;\n    }\n    if ($d < 1 || $d > $days[$m - 1]) {\n        return;\n   \
    \ }\n    return 1;\n}", "    return \"\" if ! $date;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return \"\" if ($m < 1 || $m > 12);\n    return \"\" if ($d < 1\
    \ || $d > 31);\n    return \"\" if ($m != 2 && ($d > 30));\n    return \"\" if\
    \ ($m == 2 && ($d > 29));\n    return \"\" if ($y !~ /^\\d{4}$/);\n    return\
    \ 1;\n}", "    return 1 if $date =~ m{^\n        (?<m>0[1-9]|1[0-2])-\n      \
    \  (?<d>0[1-9]|[12][0-9]|3[01])-\n        (?<y>[0-9]{4})\n    $}x;\n    my $m\
    \ = $+{m};\n    my $d = $+{d};\n    my $y = $+{y};\n    return 1 if $m == 4 or\
    \ $m == 6 or $m == 9 or $m == 11 and $d <= 30;\n    return 1 if $m == 1 or $m\
    \ == 3 or $m == 5 or $m == 7 or $m == 8 or $m == 10 or $m == 12 and $d <= 31;\n\
    \    return 1 if $m == 2 and $d <= 29;\n    return '';\n}", "    return unless\
    \ $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split(/-/, $date);\n\
    \    return if $m > 12;\n    return if $d > 31 && ($m == 1 || $m == 3 || $m ==\
    \ 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12);\n    return if $d > 30 &&\
    \ ($m == 4 || $m == 6 || $m == 9 || $m == 11);\n    return if $d > 29 && $m ==\
    \ 2;\n    return 1;\n}", "    if ($date !~ /^\\d\\d-\\d\\d-\\d\\d\\d\\d$/) {\n\
    \        return '';\n    }\n    my($mon, $day, $year) = split(/-/, $date);\n \
    \   if ($mon < 1 || $mon > 12) {\n        return '';\n    }\n    if ($day < 1\
    \ || $day > 31) {\n        return '';\n    }\n    if (($mon == 4 || $mon == 6\
    \ || $mon == 9 || $mon == 11) && $day > 30) {\n        return '';\n    }\n   \
    \ if ($mon == 2 && $day > 29) {\n        return '';\n    }\n    return 1;\n}",
  "    return \"\" if $date eq \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/;\n    my($mm, $dd, $yyyy) = ($1, $2, $3);\n    return \"\" if $dd < 1\
    \ or $dd > 31;\n    return \"\" if $mm < 1 or $mm > 12;\n    if($mm == 2) {\n\
    \        return \"\" if $dd > 29;\n    } elsif($mm == 4 or $mm == 6 or $mm ==\
    \ 9 or $mm == 11) {\n        return \"\" if $dd > 30;\n    }\n    return 1;\n}",
  "    my @months = (0,31,29,31,30,31,30,31,31,30,31,30,31);\n    my @date = split('-',\
    \ $date);\n    my $year = $date[2];\n    my $month = $date[0];\n    my $day =\
    \ $date[1];\n    return \"\" if ($month > 12 || $month < 1 || $day > $months[$month]\
    \ || $day < 1 || $year < 1);\n    return 1;\n}", "    return 1 unless ( length($date)\
    \ );\n    my($month, $day, $year) = split /[-\\/]/, $date;\n    return \"\" unless\
    \ $month && $day && $year;\n    return \"\" unless $year =~ /\\d{4}/;\n    return\
    \ \"\" unless $month =~ /^\\d{1,2}$/;\n    return \"\" unless $day =~ /^\\d{1,2}$/;\n\
    \    if ( $month < 1 || $month > 12 ) {\n        return \"\";\n    }\n    if (\
    \ $month == 2 ) {\n        if ( $day < 1 || $day > 29 ) {\n            return\
    \ \"\";\n        }\n    } elsif ( $month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11 ) {\n        if ( $day < 1 || $day > 30 ) {\n            return\
    \ \"\";\n        }\n    } else {\n        if ( $day < 1 || $day > 31 ) {\n   \
    \         return \"\";\n        }\n    }\n    return 1;\n}", "    return 1 if\
    \ ($date =~ m{\n        ^(0[1-9]|1[0-2])    # Month: 01-12\n        (?:-(0[1-9]|[12]\\\
    d|3[01]))   # Day: 01-31\n        (?:-(20\\d{2}))      # Year: 1900-2099\n   \
    \     $\n    }x);\n    return '';\n}", "    # WRITE DOWN YOUR CODE HERE\n}", " \
    \   return 1 if $date =~ /^(0[1-9]|1[0-2])-([1-2][0-9]|3[0-1]|0[1-9])-([0-9]{4})$/\
    \ && is_date($date);\n    return \"\";\n}", "    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(\\\
    d{4})$/;\n    return \"\";\n}", "    my($month, $day, $year) = split(/[-\\/]/,\
    \ $date);\n    return \"\";", "    my $ret = 1;\n    if ($date =~ /\\d{2}-\\d{2}-\\\
    d{4}/) {\n        my ($month, $day, $year) = split(/-/, $date);\n        my @days\
    \ = (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n        if ($month >= 1\
    \ && $month <= 12) {\n            if ($month == 2) {\n                if ($year\
    \ % 4 == 0) {\n                    if ($day >= 1 && $day <= 29) {\n          \
    \              $ret = 1;\n                    } else {\n                     \
    \   $ret = \"\";\n                    }\n                } else {\n          \
    \          if ($day >= 1 && $day <= 28) {\n                        $ret = 1;\n\
    \                    } else {\n                        $ret = \"\";\n        \
    \            }\n                }\n            } else {\n                if ($day\
    \ >= 1 && $day <= $days[$month - 1]) {\n                    $ret = 1;\n      \
    \          } else {\n                    $ret = \"\";\n                }\n   \
    \         }\n        } else {\n            $ret = \"\";\n        }\n    } else\
    \ {\n        $ret = \"\";\n    }\n    return $ret;\n}", "    my($dd, $mm, $yyyy);\n\
    \    my($ret) = 1;\n    if(length($date) != 10) {\n        $ret = '';\n    }\n\
    \    else {\n        ($mm, $dd, $yyyy) = split(/-/, $date);\n        if(($mm !~\
    \ /^0[1-9]$/ || $mm !~ /^1[0-2]$/) || ($dd !~ /^0[1-9]$/ || $dd !~ /^[1-2][0-9]$/\
    \ || $dd !~ /^3[0-1]$/)) {\n            $ret = '';\n        }\n        else {\n\
    \            if($mm == 2) {\n                if($dd > 29) {\n                \
    \    $ret = '';\n                }\n            }\n            elsif($mm == 4\
    \ || $mm == 6 || $mm == 9 || $mm == 11) {\n                if($dd > 30) {\n  \
    \                  $ret = '';\n                }\n            }\n        }\n \
    \   }\n    return $ret;\n}", "    return 1 if $date =~ /\\A(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}\\z/;\n    return '';\n}", "    my @date_parts = split(/[-\\/]/, $date);\n\
    \    # is it empty?\n    return '' if (not $date_parts[0]);\n    # does it have\
    \ 3 parts?\n    return '' if (scalar @date_parts != 3);\n    # does it have digits\
    \ in the parts?\n    return '' if ($date_parts[0] !~ /^\\d+$/);\n    return ''\
    \ if ($date_parts[1] !~ /^\\d+$/);\n    return '' if ($date_parts[2] !~ /^\\d+$/);\n\
    \    # do the month and day parts look right?\n    my($month, $day, $year) = @date_parts;\n\
    \    return '' if ($month < 1 || $month > 12);\n    return '' if ($day < 1 ||\
    \ $day > 31);\n    if ( $month == 2 ) {\n        return '' if ($day > 29);\n \
    \   } elsif ( $month == 4 || $month == 6 || $month == 9 || $month == 11 ) {\n\
    \        return '' if ($day > 30);\n    }\n    # the date is good!\n    return\
    \ 1;\n}", "    my $valid = 1;\n    my @months = qw(01 02 03 04 05 06 07 08 09\
    \ 10 11 12);\n    my @thirty = qw(04 06 09 11);\n    my @thirtyone = qw(01 03\
    \ 05 07 08 10 12);\n    return \"\" if $date eq \"\";\n    my ($m, $d, $y) = split(/-/,\
    \ $date);\n    $valid = \"\" if $d < 1;\n    if ($m == 2) {\n        if ($d >\
    \ 29) {\n            $valid = \"\";\n        }\n    } elsif (grep { $m == $_ }\
    \ @thirty) {\n        if ($d > 30) {\n            $valid = \"\";\n        }\n\
    \    } elsif (grep { $m == $_ } @thirtyone) {\n        if ($d > 31) {\n      \
    \      $valid = \"\";\n        }\n    }\n    $valid = \"\" if $m < 1 or $m > 12;\n\
    \    $valid = \"\" if $y < 1900 or $y > 2099;\n    return $valid;\n}", "    $date\
    \ =~ m#^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$#;\n    my($month, $day, $year) = ($1,\
    \ $2, $3);\n    return 0 if $year < 2020;\n    return 0 if $month < 1 or $month\
    \ > 12;\n    return 0 if $day < 1 or $day > 31;\n    return 0 if $month == 2 and\
    \ $day > 29;\n    return 0 if ($month == 4 or $month == 6 or $month == 9 or $month\
    \ == 11) and $day > 30;\n    return 1;\n}", "    my($regex) = \"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    ;\n    if ($date =~ m/$regex/) {\n        my($mm, $dd, $yyyy) = split(/-/, $date);\n\
    \        if ($yyyy % 4 == 0 && $yyyy % 100 != 0 || $yyyy % 400 == 0) {\n     \
    \       if ($mm == 2 && $dd >= 1 && $dd <= 29) {\n                return 1;\n\
    \            }\n        }\n        if ($mm >= 1 && $mm <= 12) {\n            if\
    \ ($mm == 1 || $mm == 3 || $mm == 5 || $mm == 7 || $mm == 8 || $mm == 10 || $mm\
    \ == 12) {\n                if ($dd >= 1 && $dd <= 31) {\n                   \
    \ return 1;\n                }\n            }\n            if ($mm == 4 || $mm\
    \ == 6 || $mm == 9 || $mm == 11) {\n                if ($dd >= 1 && $dd <= 30)\
    \ {\n                    return 1;\n                }\n            }\n       \
    \ }\n    }\n    return \"\";\n}", "    if ($date =~ /^(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        if ($month\
    \ == 2) {\n            if ($day > 29) {\n                return '';\n        \
    \    }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11) {\n            if ($day > 30) {\n                return '';\n          \
    \  }\n        } elsif ($day > 31) {\n            return '';\n        }\n     \
    \   return 1;\n    }\n    return '';\n}", "    my($m, $d, $y) = split(/-/, $date);\n\
    \    return \"\" unless ($date);\n    return \"\" unless ($m && $d && $y);\n \
    \   return \"\" unless ($m >= 1 && $m <= 12);\n    return \"\" unless ($d >= 1\
    \ && $d <= 31);\n    return \"\" unless ($y >= 1970 && $y <= 2020);\n    return\
    \ \"\" unless (length($y) == 4);\n    return \"\" unless (length($m) == 2);\n\
    \    return \"\" unless (length($d) == 2);\n    return 1;\n}", "    my $ok = 1;\n\
    \    my $ok_30 = [4,6,9,11];\n    my $ok_31 = [1,3,5,7,8,10,12];\n    my $ok_29\
    \ = [2];\n    my $ok_month = [1..12];\n    my @date = split(/-/, $date);\n   \
    \ if (scalar @date != 3) {\n        $ok = \"\";\n    } else {\n        my($month,\
    \ $day, $year) = @date;\n        $ok = \"\";\n        if (grep(/$month/, @$ok_month))\
    \ {\n            if (grep(/$month/, @$ok_31)) {\n                if ($day >= 1\
    \ && $day <= 31) {\n                    $ok = 1;\n                }\n        \
    \    } elsif (grep(/$month/, @$ok_30)) {\n                if ($day >= 1 && $day\
    \ <= 30) {\n                    $ok = 1;\n                }\n            } elsif\
    \ (grep(/$month/, @$ok_29)) {\n                if ($day >= 1 && $day <= 29) {\n\
    \                    $ok = 1;\n                }\n            }\n        }\n \
    \   }\n    return $ok;\n}", "    if($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n   \
    \     if($date =~ /^(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-\\d{4}$/) {\n   \
    \         if($date =~ /^(01|03|05|07|08|10|12)-(0[1-9]|[12][0-9]|3[01])-\\d{4}$/)\
    \ {\n                return 1;\n            }\n            elsif($date =~ /^(04|06|09|11)-(0[1-9]|[12][0-9]|30)-\\\
    d{4}$/) {\n                return 1;\n            }\n            elsif($date =~\
    \ /^02-(0[1-9]|1[0-9]|2[0-9])-\\d{4}$/) {\n                return 1;\n       \
    \     }\n            else {\n                return \"\";\n            }\n   \
    \     }\n        else {\n            return \"\";\n        }\n    }\n    else\
    \ {\n        return \"\";\n    }\n}", "    return '' unless $date =~ /^\\d{2}-\\\
    d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return '' if ($m <\
    \ 1 || $m > 12);\n    return '' if ($d < 1 || $d > 31 || ($m ~~ [4,6,9,11] &&\
    \ $d > 30) || ($m == 2 && $d > 29));\n    return 1;\n}", "    my $return = '';\n\
    \    my $date_format = '\\d{2}-\\d{2}-\\d{4}';\n    if ($date =~ m/$date_format/)\
    \ {\n        my ($month, $day, $year) = split(/-/, $date);\n        if (1 <= $month\
    \ and $month <= 12) {\n            if (1 <= $day and $day <= 31) {\n         \
    \       if ($month == 2) {\n                    if ($day <= 29) {\n          \
    \              $return = 1;\n                    }\n                } elsif ($month\
    \ == 4 or $month == 6 or $month == 9 or $month == 11) {\n                    if\
    \ ($day <= 30) {\n                        $return = 1;\n                    }\n\
    \                } else {\n                    $return = 1;\n                }\n\
    \            }\n        }\n    }\n    return $return;\n}", "    return '' unless\
    \ $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n\
    \    if ($m < 1 || $m > 12) {\n        return '';\n    }\n    if ($m == 2) {\n\
    \        if ($d < 1 || $d > 29) {\n            return '';\n        }\n    } elsif\
    \ ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n        if ($d < 1 || $d > 30)\
    \ {\n            return '';\n        }\n    } else {\n        if ($d < 1 || $d\
    \ > 31) {\n            return '';\n        }\n    }\n    return 1;\n}", "    #\
    \ Return 1 if the date is valid, 0 otherwise\n    return 1;\n}", "    return ''\
    \ unless $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($mon, $day, $year) =\
    \ ($1, $2, $3);\n    my $found = 0;\n    my $days_in_month = { 1 => 31, 3 => 31,\
    \ 5 => 31, 7 => 31, 8 => 31, 10 => 31, 12 => 31,\n                         4 =>\
    \ 30, 6 => 30, 9 => 30, 11 => 30,\n                         2 => 28,};\n    foreach\
    \ my $m (keys %$days_in_month) {\n        if ( $m == $mon && $day >= 1 && $day\
    \ <= $days_in_month->{$m} ) {\n            $found = 1;\n            last;\n  \
    \      }\n    }\n    return '' unless $found;\n    return 1;\n}", "    my $re\
    \ = '^(\\d{2})-(\\d{2})-(\\d{4})$';\n    return '' unless $date =~ /$re/;\n  \
    \  my($m, $d, $y) = ($1, $2, $3);\n    if ($m >= 1 && $m <= 12) {\n        if\
    \ ($m == 2) {\n            if (($y % 4 == 0 && $y % 100 != 0) || $y % 400 == 0)\
    \ {\n                return $d >= 1 && $d <= 29;\n            } else {\n     \
    \           return $d >= 1 && $d <= 28;\n            }\n        } elsif (grep\
    \ {$m == $_} (1, 3, 5, 7, 8, 10, 12)) {\n            return $d >= 1 && $d <= 31;\n\
    \        } elsif (grep {$m == $_} (4, 6, 9, 11)) {\n            return $d >= 1\
    \ && $d <= 30;\n        }\n    }\n    return '';\n}", "    if ($date =~ /^(\\\
    d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/) {\n        my $m = $1;\n        my $d = $2;\n\
    \        my $y = $3;\n        if ($m < 1 || $m > 12) {\n            return '';\n\
    \        }\n        if ($d < 1 || $d > 31) {\n            return '';\n       \
    \ }\n        if ($m == 2) {\n            if ($d > 29) {\n                return\
    \ '';\n            }\n        } elsif (grep { $m == $_ } (4, 6, 9, 11)) {\n  \
    \          if ($d > 30) {\n                return '';\n            }\n       \
    \ }\n        return 1;\n    }\n    return '';\n}", "    if ($date =~ /^(\\d{2})\\\
    -(\\d{2})\\-(\\d{4})$/) {\n        return 1 if ($1 >= 1 && $1 <= 12 && $2 >= 1\
    \ && $2 <= $month_days[$1] && $3 >= 2000 && $3 <= 2200);\n    }\n    return '';\n\
    }", "    return unless $date =~ m!^(\\d\\d)\\-(\\d\\d)\\-(\\d\\d\\d\\d)$!;\n \
    \   my($day, $month, $year) = ($1, $2, $3);\n    return unless $month >= 1 &&\
    \ $month <= 12;\n    return unless $day >= 1 && $day <= ($month == 2 ? 29 : 30\
    \ + ($month + int($month / 8)) % 2);\n    return 1;\n}", "    my @date = split\
    \ /-/, $date;\n    my $months = $date[0];\n    my $days = $date[1];\n    return\
    \ \"\" if $date eq \"\";\n    return \"\" if ($months == 2 && $days > 29);\n \
    \   return \"\" if (($months == 4 || $months == 6 || $months == 9 || $months ==\
    \ 11) && $days > 30);\n    return \"\" if ($months < 1 || $months > 12);\n   \
    \ return \"\" if ($days < 1 || $days > 31);\n    return 1;\n}", "    my $result\
    \ = \"\";\n    my $valid = \"\";\n    my $format = \"\";\n    my $year = \"\"\
    ;\n    my $month = \"\";\n    my $day = \"\";\n    my $i = 0;\n    my $dpm = \"\
    \";\n    my $dpy = \"\";\n    my $valid_year = \"\";\n    my $valid_month = \"\
    \";\n    my $valid_day = \"\";\n    my $valid_date = \"\";\n    my $valid_format\
    \ = \"\";\n    my $valid_data = \"\";\n    my $data_empty = \"\";\n    my $data_not_empty\
    \ = \"\";\n    my $month_in_range = \"\";\n    my $day_not_empty = \"\";\n   \
    \ my $day_is_not_number = \"\";\n    my $day_is_number = \"\";\n    my $day_range\
    \ = \"\";\n    my $day_in_range = \"\";\n    my $month_is_number = \"\";\n   \
    \ my $month_not_empty = \"\";\n    my $month_is_not_number = \"\";\n    my $year_is_number\
    \ = \"\";\n    my $year_not_empty = \"\";\n    my $year_is_not_number = \"\";\n\
    \    my $year_in_range = \"\";\n    my $invalid_date = \"\";\n    my $valid_date\
    \ = \"\";\n    my $year_range = \"\";\n    my $month_range = \"\";\n    my $day_range\
    \ = \"\";\n    my $date_in_range = \"\";\n    my $year_after_range = \"\";\n \
    \   my $month_after_range = \"\";\n    my $day_after_range = \"\";\n    my $date_after_range\
    \ = \"\";\n    my $year_before_range = \"\";\n    my $month_before_range = \"\"\
    ;\n    my $day_before_range = \"\";\n    my $date_before_range = \"\";\n    my\
    \ $date_not_empty = \"\";\n    my $date_empty = \"\";\n    my $month_in_range\
    \ = \"\";\n    my", "    return 0 if(length($date) == 0);\n    if($date =~ /^\\\
    d{2}-\\d{2}-\\d{4}$/) {\n        my ($month, $day, $year) = split(/-/, $date);\n\
    \        my %days = (\n            1  => 31,\n            2  => 28,\n        \
    \    3  => 31,\n            4  => 30,\n            5  => 31,\n            6  =>\
    \ 30,\n            7  => 31,\n            8  => 31,\n            9  => 30,\n \
    \           10 => 31,\n            11 => 30,\n            12 => 31,\n        );\n\
    \        if($month < 1 || $month > 12) {\n            return 0;\n        }\n \
    \       if($day < 1 || $day > $days{$month}) {\n            return 0;\n      \
    \  }\n        if($year % 4 == 0 && $month == 2 && $day > 29) {\n            return\
    \ 0;\n        }\n        return 1;\n    }\n    return 0;\n}", "    return 1 if\
    \ $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(19[0-9]{2}|20[0-9]{2})$/;\n\
    \    return \"\";\n}", "    my($year, $month, $day);\n    my $f = '-';\n    my\
    \ $re_date = qr/^(\\d{2})[\\/\\-$f](\\d{2})[\\/\\-$f](\\d{4})$/;\n    return 0\
    \ unless $date =~ $re_date;\n    ($year, $month, $day) = ($3, $1, $2);\n    return\
    \ 0 if !($year >= 1900 && $year <= 2099);\n    return 0 if !($month >= 1 && $month\
    \ <= 12);\n    if ( $month == 2 ) {\n        return 1 if $day >= 1 && $day <=\
    \ 29;\n    } elsif ( $month == 4 || $month == 6 || $month == 9 || $month == 11\
    \ ) {\n        return 1 if $day >= 1 && $day <= 30;\n    } else {\n        return\
    \ 1 if $day >= 1 && $day <= 31;\n    }\n    return 0;\n}", "    return '' unless\
    \ $date =~ m[\\A(\\d{2})-(\\d{2})-(\\d{4})\\z];\n    my($month, $day, $year) =\
    \ ($1, $2, $3);\n    return '' if $month < 1 || $month > 12;\n    my $month_max_days\
    \ = 31;\n    if ($month == 2) {\n        my $is_leap_year = 0;\n        if (($year\
    \ % 4 == 0 && $year % 100 != 0) || $year % 400 == 0) {\n            $is_leap_year\
    \ = 1;\n        }\n        $month_max_days = 29 if $is_leap_year;\n        $month_max_days\
    \ = 28 if !$is_leap_year;\n    }\n    if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        $month_max_days = 30;\n    }\n    return ''\
    \ if $day < 1 || $day > $month_max_days;\n    return 1;\n}", "    if($date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if(($day >= 1 && $day <= 31) && ($month\
    \ >= 1 && $month <= 12)) {\n            if($month == 2) {\n                if($day\
    \ <= 29) {\n                    return \"1\";\n                }\n           \
    \ } elsif($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n     \
    \           if($day <= 30) {\n                    return \"1\";\n            \
    \    }\n            } else {\n                return \"1\";\n            }\n \
    \       }\n    }\n    return \"\";\n}", "    return 1 if ($date =~ /^([0][1-9]|[1][0-2])\\\
    -([0][1-9]|[1-2][0-9]|[3][0-1])\\-([0-9]{4})$/);\n    return \"\" if ($date =~\
    \ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\-([0-9]{4})$/);\n  \
    \  return \"\" if ($date =~ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$/);\n    return \"\" if ($date =~ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$/);\n    return \"\" if ($date =~ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$/);\n    return \"\" if ($date =~ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$/);\n    return \"\" if ($date =~ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$/);\n    return \"\" if ($date =~ /^([0][1-9]|[1][0-2])\\-([0][1-9]|[1-2][0-9]|[3][0-1])\\\
    -([0-9]{4})$/);", "    if (length($date) != 10) {\n        return '';\n    }\n\
    \    if ($date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        return '';\n    }\n\
    \    my $mm = $1;\n    my $dd = $2;\n    my $yyyy = $3;\n    if ($mm < 1 || $mm\
    \ > 12) {\n        return '';\n    }\n    if ($dd < 1 || $dd > 31) {\n       \
    \ return '';\n    }\n    if ($mm == 4 || $mm == 6 || $mm == 9 || $mm == 11) {\n\
    \        if ($dd == 31) {\n            return '';\n        }\n    }\n    if ($mm\
    \ == 2) {\n        if ($dd > 29) {\n            return '';\n        }\n      \
    \  if ($dd == 29) {\n            # check for leap year\n            if ($yyyy\
    \ % 400 == 0) {\n                return 1;\n            }\n            if ($yyyy\
    \ % 100 == 0) {\n                return '';\n            }\n            if ($yyyy\
    \ % 4 == 0) {\n                return 1;\n            }\n            return '';\n\
    \        }\n    }\n    return 1;\n}", "    return \"\" if !$date;\n    my($month,\
    \ $day, $year) = split(\"-\", $date);\n    return \"\" if !$year || $year < 2000\
    \ || $year > 2100;\n    return \"\" if !$month || $month < 1 || $month > 12;\n\
    \    if ($month == 2) {\n        return \"\" if $day < 1 || $day > 29;\n    }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \  return \"\" if $day < 1 || $day > 30;\n    } else {\n        return \"\" if\
    \ $day < 1 || $day > 31;\n    }\n    return 1;\n}", "    return '' unless $date\
    \ =~ /^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/;\n    my($month, $day, $year) = ($1,\
    \ $2, $3);\n    return '' if $year < 1900;\n    my @month_has_31 = qw/01 03 05\
    \ 07 08 10 12/;\n    my @month_has_30 = qw/04 06 09 11/;\n    my $is_leap = (($year\
    \ % 4 == 0) && ($year % 100 != 0)) || ($year % 400 == 0);\n    if ($month ~~ @month_has_31)\
    \ {\n        return $day > 0 && $day <= 31;\n    } elsif ($month ~~ @month_has_30)\
    \ {\n        return $day > 0 && $day <= 30;\n    } elsif ($month == 2) {\n   \
    \     return $day > 0 && $day <= ($is_leap ? 29 : 28);\n    } else {\n       \
    \ return '';\n    }\n}", "    return \"\" if $date eq \"\";\n    my($mm, $dd,\
    \ $yyyy) = split(/-/, $date);\n    return \"\" if not defined $mm or not defined\
    \ $dd or not defined $yyyy;\n    return \"\" if $mm < 1 or $mm > 12;\n    return\
    \ \"\" if $dd < 1 or $dd > 31;\n    return \"\" if ($mm == 2 and $dd > 29);\n\
    \    return \"\" if ($mm == 4 and $dd > 30);\n    return \"\" if ($mm == 6 and\
    \ $dd > 30);\n    return \"\" if ($mm == 9 and $dd > 30);\n    return \"\" if\
    \ ($mm == 11 and $dd > 30);\n    return 1;\n}", "    return 1 if $date =~ m!\\\
    A (0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-\\d{4} \\z!xms;\n    return;\n}", "    #\
    \ TODO: implement this function\n    my $ret = 1;\n    my @dt_list = split(/\\\
    -/, $date);\n    if (@dt_list != 3) {\n        $ret = \"\";\n    } else {\n  \
    \      my $mm = $dt_list[0];\n        my $dd = $dt_list[1];\n        my $yyyy\
    \ = $dt_list[2];\n        # check month\n        if ( ($mm < 1) || ($mm > 12)\
    \ ) {\n            $ret = \"\";\n        }\n        # check day\n        if ($ret\
    \ ne \"\") {\n            if ($mm == 2) {\n                if ( ($dd < 1) || ($dd\
    \ > 29) ) {\n                    $ret = \"\";\n                }\n           \
    \ } elsif ($mm % 2 == 0) {\n                if ( ($dd < 1) || ($dd > 30) ) {\n\
    \                    $ret = \"\";\n                }\n            } else {\n \
    \               if ( ($dd < 1) || ($dd > 31) ) {\n                    $ret = \"\
    \";\n                }\n            }\n        }\n    }\n    return $ret;\n}",
  "    my($month, $day, $year) = split /-/, $date;\n    return \"\" if $day < 1 ||\
    \ $month < 1 || $year < 1;\n    my $valid_month = $month > 0 && $month < 13;\n\
    \    return \"\" unless $valid_month;\n    my $valid_day = $day > 0 && $day <\
    \ 32;\n    return \"\" unless $valid_day;\n    my $valid_year = $year > 0;\n \
    \   return \"\" unless $valid_year;\n    return 1;\n}", "    my $reg = qr{\n\t\
    ^(?:(?:(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)))(\\\
    /|-|\\.)(?:0?2\\1(?:29)))|(?:(?:(?:1[6-9]|[2-9]\\d)?\\d{2})(\\/|-|\\.)(?:(?:(?:0?[13578]|1[02])\\\
    2(?:31))|(?:(?:0?[1,3-9]|1[0-2])\\2(?:29|30))|(?:(?:0?[1-9])|(?:1[0-2]))\\2(?:0?[1-9]|1\\\
    d|2[0-8]))))$\n    }x;\n    return $date =~ $reg ? 1 : '';\n}", "    if($date\
    \ !~ /^\\d{2}-\\d{2}-\\d{4}$/) { return \"\"; }\n    my($month, $day, $year) =\
    \ split /-/, $date;\n    my($days) = 31;\n    if($month == 2) { $days = $year\
    \ % 4 == 0 ? 29 : 28; }\n    elsif($month % 2 == 0) { $days = 30; }\n    if($day\
    \ < 1 || $day > $days) { return \"\"; }\n    if($month < 1 || $month > 12) { return\
    \ \"\"; }\n    return 1;\n}", "    return '' unless $date =~ /^\\d\\d-\\d\\d-\\\
    d\\d\\d\\d$/;\n    my($month, $day, $year) = split /-/, $date;\n    return ''\
    \ if $month < 1 || $month > 12;\n    return '' if $year < 1753;\n    return ''\
    \ if $day < 1;\n    if ($month == 2) {\n        return '' if $day > 29;\n    }\n\
    \    else {\n        return '' if $day > 31;\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        return '' if $day > 30;\n  \
    \  }\n    return 1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

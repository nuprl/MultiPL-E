{
  "language": "d",
  "name": "HumanEval_23_strlen",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpypukavvg.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpypukavvg.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpypukavvg.d(14): Error: expression expected, not `=`\n/tmp/tmpypukavvg.d(14): Error: found `string` when expecting `)`\n/tmp/tmpypukavvg.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypukavvg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it != string.end(); ++it) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpt3py7tq5.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpt3py7tq5.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpt3py7tq5.d(14): Error: expression expected, not `=`\n/tmp/tmpt3py7tq5.d(14): Error: found `string` when expecting `)`\n/tmp/tmpt3py7tq5.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3py7tq5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqgx6n1rl.d(14): Error: no identifier for declarator `string`\n/tmp/tmpqgx6n1rl.d(14): Error: found `)` when expecting `;`\n/tmp/tmpqgx6n1rl.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgx6n1rl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpypukavvg.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpypukavvg.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpypukavvg.d(14): Error: expression expected, not `=`\n/tmp/tmpypukavvg.d(14): Error: found `string` when expecting `)`\n/tmp/tmpypukavvg.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypukavvg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv5mznyq3.d(14): Error: no identifier for declarator `string`\n/tmp/tmpv5mznyq3.d(14): Error: found `)` when expecting `;`\n/tmp/tmpv5mznyq3.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv5mznyq3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\tresult += string[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp7l1enakc.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp7l1enakc.__unittest_L21_C1() [0x427aad]\n??:? void tmp7l1enakc.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgyy71xyu.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyy71xyu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprc3_tfqm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmprc3_tfqm.__unittest_L19_C1() [0x427aad]\n??:? void tmprc3_tfqm.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqgx6n1rl.d(14): Error: no identifier for declarator `string`\n/tmp/tmpqgx6n1rl.d(14): Error: found `)` when expecting `;`\n/tmp/tmpqgx6n1rl.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgx6n1rl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp397rectd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp397rectd.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp397rectd.__unittest_L21_C1() [0x427a5c]\n??:? void tmp397rectd.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\t++len;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for( int i = 0; i < string.length; ++i )\n    {\n        len += 1;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpodrjdq2j.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpodrjdq2j.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpodrjdq2j.d(14): Error: expression expected, not `=`\n/tmp/tmpodrjdq2j.d(14): Error: found `string` when expecting `)`\n/tmp/tmpodrjdq2j.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodrjdq2j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\tif( string[i] == 0 )\n\t\t\tbreak;\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgyy71xyu.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyy71xyu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgyy71xyu.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyy71xyu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator i = string.begin(); i != string.end(); ++i)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnhprmwj4.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpnhprmwj4.d(14): Error: found `i` when expecting `;` following `for` condition\n/tmp/tmpnhprmwj4.d(14): Error: expression expected, not `=`\n/tmp/tmpnhprmwj4.d(14): Error: found `string` when expecting `)`\n/tmp/tmpnhprmwj4.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhprmwj4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpix3cjcgt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpix3cjcgt.__unittest_L19_C1() [0x427aad]\n??:? void tmpix3cjcgt.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length(); i++)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv4aei40f.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4aei40f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpodrjdq2j.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpodrjdq2j.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpodrjdq2j.d(14): Error: expression expected, not `=`\n/tmp/tmpodrjdq2j.d(14): Error: found `string` when expecting `)`\n/tmp/tmpodrjdq2j.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodrjdq2j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long length = 0;\n    \n    foreach(char c, string)\n    {\n        length++;\n    }\n    \n    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptc18i45m.d(14): Error: no identifier for declarator `string`\n/tmp/tmptc18i45m.d(14): Error: found `)` when expecting `;`\n/tmp/tmptc18i45m.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptc18i45m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp5lumafi2.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp5lumafi2.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp5lumafi2.__unittest_L20_C1() [0x427a5c]\n??:? void tmp5lumafi2.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp397rectd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp397rectd.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp397rectd.__unittest_L21_C1() [0x427a5c]\n??:? void tmp397rectd.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it != string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptwffqwiy.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmptwffqwiy.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmptwffqwiy.d(14): Error: expression expected, not `=`\n/tmp/tmptwffqwiy.d(14): Error: found `string` when expecting `)`\n/tmp/tmptwffqwiy.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwffqwiy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprc3_tfqm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmprc3_tfqm.__unittest_L19_C1() [0x427aad]\n??:? void tmprc3_tfqm.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplttbepe4.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplttbepe4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcddr0k57.d(14): Error: no identifier for declarator `c`\n/tmp/tmpcddr0k57.d(14): Error: expression expected, not `:`\n/tmp/tmpcddr0k57.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcddr0k57.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tresult += string[i] == '\\0' ? 1 : 0;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpki1lz7a7.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpki1lz7a7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprc3_tfqm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmprc3_tfqm.__unittest_L19_C1() [0x427aad]\n??:? void tmprc3_tfqm.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tforeach(char ch, string)\n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdkv6y_3n.d(14): Error: no identifier for declarator `string`\n/tmp/tmpdkv6y_3n.d(14): Error: found `)` when expecting `;`\n/tmp/tmpdkv6y_3n.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdkv6y_3n.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen += 1;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp324_h44x.d(14): Error: no identifier for declarator `c`\n/tmp/tmp324_h44x.d(14): Error: expression expected, not `:`\n/tmp/tmp324_h44x.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp324_h44x.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it != string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptwffqwiy.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmptwffqwiy.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmptwffqwiy.d(14): Error: expression expected, not `=`\n/tmp/tmptwffqwiy.d(14): Error: found `string` when expecting `)`\n/tmp/tmptwffqwiy.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwffqwiy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprc3_tfqm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmprc3_tfqm.__unittest_L19_C1() [0x427aad]\n??:? void tmprc3_tfqm.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4qtve57n.d(14): Error: no identifier for declarator `c`\n/tmp/tmp4qtve57n.d(14): Error: expression expected, not `:`\n/tmp/tmp4qtve57n.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4qtve57n.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppuz7csx0.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmppuz7csx0.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmppuz7csx0.d(14): Error: expression expected, not `=`\n/tmp/tmppuz7csx0.d(14): Error: found `string` when expecting `)`\n/tmp/tmppuz7csx0.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppuz7csx0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long length = 0;\n    \n    foreach(char c, string) {\n        length++;\n    }\n    \n    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpew95p7dq.d(14): Error: no identifier for declarator `string`\n/tmp/tmpew95p7dq.d(14): Error: found `)` when expecting `;`\n/tmp/tmpew95p7dq.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpew95p7dq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t\tresult += 1;\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptwgjqwkk.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmptwgjqwkk.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmptwgjqwkk.d(14): Error: expression expected, not `=`\n/tmp/tmptwgjqwkk.d(14): Error: found `string` when expecting `)`\n/tmp/tmptwgjqwkk.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwgjqwkk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp397rectd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp397rectd.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp397rectd.__unittest_L21_C1() [0x427a5c]\n??:? void tmp397rectd.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgyy71xyu.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyy71xyu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp5lumafi2.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp5lumafi2.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp5lumafi2.__unittest_L20_C1() [0x427a5c]\n??:? void tmp5lumafi2.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator i = string.begin(); i != string.end(); ++i)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnhprmwj4.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpnhprmwj4.d(14): Error: found `i` when expecting `;` following `for` condition\n/tmp/tmpnhprmwj4.d(14): Error: expression expected, not `=`\n/tmp/tmpnhprmwj4.d(14): Error: found `string` when expecting `)`\n/tmp/tmpnhprmwj4.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhprmwj4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7t_fv9vt.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmp7t_fv9vt.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmp7t_fv9vt.d(14): Error: expression expected, not `=`\n/tmp/tmp7t_fv9vt.d(14): Error: found `string` when expecting `)`\n/tmp/tmp7t_fv9vt.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t_fv9vt.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpypukavvg.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpypukavvg.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpypukavvg.d(14): Error: expression expected, not `=`\n/tmp/tmpypukavvg.d(14): Error: found `string` when expecting `)`\n/tmp/tmpypukavvg.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypukavvg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long length = 0;\n    \n    foreach(char c, string) {\n        length++;\n    }\n    \n    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpew95p7dq.d(14): Error: no identifier for declarator `string`\n/tmp/tmpew95p7dq.d(14): Error: found `)` when expecting `;`\n/tmp/tmpew95p7dq.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpew95p7dq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv7h1qf43.d(14): Error: no identifier for declarator `c`\n/tmp/tmpv7h1qf43.d(14): Error: expression expected, not `:`\n/tmp/tmpv7h1qf43.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7h1qf43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it != string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptwffqwiy.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmptwffqwiy.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmptwffqwiy.d(14): Error: expression expected, not `=`\n/tmp/tmptwffqwiy.d(14): Error: found `string` when expecting `)`\n/tmp/tmptwffqwiy.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwffqwiy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpffe4dx43.d(14): Error: no identifier for declarator `string`\n/tmp/tmpffe4dx43.d(14): Error: found `)` when expecting `;`\n/tmp/tmpffe4dx43.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpffe4dx43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator i = string.begin(); i != string.end(); ++i)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpel975u4o.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpel975u4o.d(14): Error: found `i` when expecting `;` following `for` condition\n/tmp/tmpel975u4o.d(14): Error: expression expected, not `=`\n/tmp/tmpel975u4o.d(14): Error: found `string` when expecting `)`\n/tmp/tmpel975u4o.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpel975u4o.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\tif( string[i] != 0 )\n\t\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcy6igmvd.d(14): Error: no identifier for declarator `string`\n/tmp/tmpcy6igmvd.d(14): Error: found `)` when expecting `;`\n/tmp/tmpcy6igmvd.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcy6igmvd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp397rectd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp397rectd.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp397rectd.__unittest_L21_C1() [0x427a5c]\n??:? void tmp397rectd.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong length = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlength++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpi8jguf_u.d(14): Error: no identifier for declarator `c`\n/tmp/tmpi8jguf_u.d(14): Error: expression expected, not `:`\n/tmp/tmpi8jguf_u.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi8jguf_u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpffe4dx43.d(14): Error: no identifier for declarator `string`\n/tmp/tmpffe4dx43.d(14): Error: found `)` when expecting `;`\n/tmp/tmpffe4dx43.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpffe4dx43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += string.codeUnitAt(i);\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprx9wo8ex.d(15): Error: no property `codeUnitAt` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprx9wo8ex.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(string::iterator i = string.begin(); i != string.end(); ++i)\n    {\n        ++len;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4lxdsw8q.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmp4lxdsw8q.d(14): Error: found `i` when expecting `;` following `for` condition\n/tmp/tmp4lxdsw8q.d(14): Error: expression expected, not `=`\n/tmp/tmp4lxdsw8q.d(14): Error: found `string` when expecting `)`\n/tmp/tmp4lxdsw8q.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lxdsw8q.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa7h4hy94.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7h4hy94.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa7h4hy94.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7h4hy94.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len += 1;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp542ttaig.d(14): Error: no identifier for declarator `c`\n/tmp/tmp542ttaig.d(14): Error: expression expected, not `:`\n/tmp/tmp542ttaig.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp542ttaig.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpypukavvg.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpypukavvg.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpypukavvg.d(14): Error: expression expected, not `=`\n/tmp/tmpypukavvg.d(14): Error: found `string` when expecting `)`\n/tmp/tmpypukavvg.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypukavvg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpypukavvg.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpypukavvg.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpypukavvg.d(14): Error: expression expected, not `=`\n/tmp/tmpypukavvg.d(14): Error: found `string` when expecting `)`\n/tmp/tmpypukavvg.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypukavvg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpodrjdq2j.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpodrjdq2j.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpodrjdq2j.d(14): Error: expression expected, not `=`\n/tmp/tmpodrjdq2j.d(14): Error: found `string` when expecting `)`\n/tmp/tmpodrjdq2j.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodrjdq2j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa7h4hy94.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7h4hy94.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\tif( string[i] != '\\0' )\n\t\t{\n\t\t\t++len;\n\t\t}\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv7h1qf43.d(14): Error: no identifier for declarator `c`\n/tmp/tmpv7h1qf43.d(14): Error: expression expected, not `:`\n/tmp/tmpv7h1qf43.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7h1qf43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcswsvr7g.d(14): Error: no identifier for declarator `c`\n/tmp/tmpcswsvr7g.d(14): Error: expression expected, not `:`\n/tmp/tmpcswsvr7g.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcswsvr7g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong length = 0;\n\t\n\tforeach(char c, string) \n\t{\n\t\tlength++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxklbrxa_.d(14): Error: no identifier for declarator `string`\n/tmp/tmpxklbrxa_.d(14): Error: found `)` when expecting `;`\n/tmp/tmpxklbrxa_.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxklbrxa_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpln34m2e7.d(14): Error: no identifier for declarator `c`\n/tmp/tmpln34m2e7.d(14): Error: expression expected, not `:`\n/tmp/tmpln34m2e7.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpln34m2e7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv7h1qf43.d(14): Error: no identifier for declarator `c`\n/tmp/tmpv7h1qf43.d(14): Error: expression expected, not `:`\n/tmp/tmpv7h1qf43.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv7h1qf43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long length = 0;\n    \n    foreach(char c, string) {\n        length = length + 1;\n    }\n    \n    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbu7a75vi.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbu7a75vi.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbu7a75vi.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbu7a75vi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpffe4dx43.d(14): Error: no identifier for declarator `string`\n/tmp/tmpffe4dx43.d(14): Error: found `)` when expecting `;`\n/tmp/tmpffe4dx43.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpffe4dx43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgyy71xyu.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyy71xyu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long result = 0;\n    \n    for(string::iterator it = string.begin(); it != string.end(); ++it)\n    {\n        ++result;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuvetgsn2.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpuvetgsn2.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpuvetgsn2.d(14): Error: expression expected, not `=`\n/tmp/tmpuvetgsn2.d(14): Error: found `string` when expecting `)`\n/tmp/tmpuvetgsn2.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuvetgsn2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa7h4hy94.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa7h4hy94.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlen += string.codeUnitAt(i);\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdk4eol2y.d(15): Error: no property `codeUnitAt` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdk4eol2y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpytaxlyhl.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpytaxlyhl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpot4uh3ay.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpot4uh3ay.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpot4uh3ay.d(14): Error: expression expected, not `=`\n/tmp/tmpot4uh3ay.d(14): Error: found `string` when expecting `)`\n/tmp/tmpot4uh3ay.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot4uh3ay.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphl_6pt08.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmphl_6pt08.__unittest_L19_C1() [0x427aa9]\n??:? void tmphl_6pt08.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a992]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb25]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a969]\n??:? runModuleUnitTests [0x42b8d5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428228]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163986
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbx4zqs5z.d(14): Error: no identifier for declarator `string`\n/tmp/tmpbx4zqs5z.d(14): Error: found `)` when expecting `;`\n/tmp/tmpbx4zqs5z.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx4zqs5z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcy6igmvd.d(14): Error: no identifier for declarator `string`\n/tmp/tmpcy6igmvd.d(14): Error: found `)` when expecting `;`\n/tmp/tmpcy6igmvd.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcy6igmvd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprea3p26s.d(14): Error: no identifier for declarator `string`\n/tmp/tmprea3p26s.d(14): Error: found `)` when expecting `;`\n/tmp/tmprea3p26s.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprea3p26s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7t_fv9vt.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmp7t_fv9vt.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmp7t_fv9vt.d(14): Error: expression expected, not `=`\n/tmp/tmp7t_fv9vt.d(14): Error: found `string` when expecting `)`\n/tmp/tmp7t_fv9vt.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t_fv9vt.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp397rectd.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp397rectd.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp397rectd.__unittest_L21_C1() [0x427a5c]\n??:? void tmp397rectd.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it) {\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp05bn7iut.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmp05bn7iut.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmp05bn7iut.d(14): Error: expression expected, not `=`\n/tmp/tmp05bn7iut.d(14): Error: found `string` when expecting `)`\n/tmp/tmp05bn7iut.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp05bn7iut.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len += 1;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp542ttaig.d(14): Error: no identifier for declarator `c`\n/tmp/tmp542ttaig.d(14): Error: expression expected, not `:`\n/tmp/tmp542ttaig.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp542ttaig.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgyy71xyu.d(14): Error: no property `data` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyy71xyu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tresult += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpix3cjcgt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpix3cjcgt.__unittest_L19_C1() [0x427aad]\n??:? void tmpix3cjcgt.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428230]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpln34m2e7.d(14): Error: no identifier for declarator `c`\n/tmp/tmpln34m2e7.d(14): Error: expression expected, not `:`\n/tmp/tmpln34m2e7.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpln34m2e7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tresult += string[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3xxn6j80.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3xxn6j80.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx_95jmkg.d(14): Error: no identifier for declarator `c`\n/tmp/tmpx_95jmkg.d(14): Error: expression expected, not `:`\n/tmp/tmpx_95jmkg.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_95jmkg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong result = 0;\n\t\n\tforeach(char c, string) \n\t{\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnuzlhzuj.d(14): Error: no identifier for declarator `string`\n/tmp/tmpnuzlhzuj.d(14): Error: found `)` when expecting `;`\n/tmp/tmpnuzlhzuj.d(19): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnuzlhzuj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp32yzqu2.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp32yzqu2.d(14): Error: expression expected, not `:`\n/tmp/tmpp32yzqu2.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp32yzqu2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    foreach(char c in string) {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2rohnf0h.d(14): Error: found `in` when expecting `;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rohnf0h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end(); ++it)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpodrjdq2j.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpodrjdq2j.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpodrjdq2j.d(14): Error: expression expected, not `=`\n/tmp/tmpodrjdq2j.d(14): Error: found `string` when expecting `)`\n/tmp/tmpodrjdq2j.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodrjdq2j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp05b_ngww.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp05b_ngww.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp05b_ngww.__unittest_L21_C1() [0x427a5c]\n??:? void tmp05b_ngww.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp0avntju.d(14): Error: no identifier for declarator `c`\n/tmp/tmpp0avntju.d(14): Error: expression expected, not `:`\n/tmp/tmpp0avntju.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0avntju.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpffe4dx43.d(14): Error: no identifier for declarator `string`\n/tmp/tmpffe4dx43.d(14): Error: found `)` when expecting `;`\n/tmp/tmpffe4dx43.d(18): Error: found `return` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpffe4dx43.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmpj5zd8bvp.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmpj5zd8bvp.strlen(immutable(char)[]) [0x427a26]\n??:? void tmpj5zd8bvp.__unittest_L19_C1() [0x427a5c]\n??:? void tmpj5zd8bvp.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.RangeError@/tmp/tmp5lumafi2.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x427e0e]\n??:? long tmp5lumafi2.strlen(immutable(char)[]) [0x427a26]\n??:? void tmp5lumafi2.__unittest_L20_C1() [0x427a5c]\n??:? void tmp5lumafi2.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int funct",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len += 1;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp542ttaig.d(14): Error: no identifier for declarator `c`\n/tmp/tmp542ttaig.d(14): Error: expression expected, not `:`\n/tmp/tmp542ttaig.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp542ttaig.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it != string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptwffqwiy.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmptwffqwiy.d(14): Error: found `it` when expecting `;` following `for` condition\n/tmp/tmptwffqwiy.d(14): Error: expression expected, not `=`\n/tmp/tmptwffqwiy.d(14): Error: found `string` when expecting `)`\n/tmp/tmptwffqwiy.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwffqwiy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiydf9tqq.d(14): Error: no identifier for declarator `c`\n/tmp/tmpiydf9tqq.d(14): Error: expression expected, not `:`\n/tmp/tmpiydf9tqq.d(14): Error: found `string` when expecting `;` following `for` condition\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiydf9tqq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163985
    }
  ]
}
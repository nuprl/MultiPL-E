name: HumanEval_79_decimal_to_binary
language: jl
results:
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    ret = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n  \
    \          ret = \"0\" * ret\n        else\n            ret = \"1\" * ret\n  \
    \      end\n        decimal = div(decimal, 2)\n    end\n    return ret * \"db\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1pp8m0he.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1pp8m0he.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1pp8m0he.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1pp8m0he.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1pp8m0he.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1pp8m0he.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1pp8m0he.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1pp8m0he.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1pp8m0he.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1pp8m0he.jl:32\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1pp8m0he.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1pp8m0he.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1pp8m0he.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin_str = \"db\" * join([string(x) for x in convert(Binary, decimal)])\
    \ * \"db\"\n    return bin_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm4by3vwo.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: Binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm4by3vwo.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm4by3vwo.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm4by3vwo.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm4by3vwo.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: Binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm4by3vwo.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm4by3vwo.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm4by3vwo.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm4by3vwo.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: Binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm4by3vwo.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm4by3vwo.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm4by3vwo.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm4by3vwo.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: Binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm4by3vwo.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm4by3vwo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    string = \"\"\n    if decimal < 0\n        string *= \"-\"\n        decimal\
    \ *= -1\n    end\n    while decimal > 0\n        digit = decimal % 2\n       \
    \ string *= digit\n        decimal = decimal \xF7 2\n    end\n    string = reverse(string)\n\
    \    string = \"db\" * string * \"db\"\n    return string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_soil5wp.jl:32\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp_soil5wp.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp_soil5wp.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_str = string(base(decimal, 2))\n    return \"db\" * binary_str\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcwt9qdvi.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: base not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcwt9qdvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcwt9qdvi.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcwt9qdvi.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcwt9qdvi.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcwt9qdvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcwt9qdvi.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcwt9qdvi.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcwt9qdvi.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcwt9qdvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcwt9qdvi.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcwt9qdvi.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcwt9qdvi.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcwt9qdvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcwt9qdvi.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\" * 2 * length(decimal)\n    a = length(decimal)\n    dec\
    \ = decimal\n    for i in length(binary):\n        binary[i] = dec % 2\n     \
    \   dec = dec / 2\n    return binary[::-1]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvm9304rw.jl:17\nin expression starting at\
    \ /tmp/tmpvm9304rw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binstring = \"db\"\n    while decimal > 0\n        binstring = string(decimal\
    \ % 2) * binstring\n        decimal = decimal \xF7 2\n    end\n    return binstring\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2vkv_v92.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2vkv_v92.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2vkv_v92.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2vkv_v92.jl:26\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2vkv_v92.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2vkv_v92.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2vkv_v92.jl:27\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2vkv_v92.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2vkv_v92.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2vkv_v92.jl:28\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2vkv_v92.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2vkv_v92.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2vkv_v92.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    quotient = decimal\n    remainder = decimal\n    binary = []\n    while\
    \ (quotient > 0)\n        remainder = quotient % 2\n        quotient = quotient\
    \ \xF7 2\n        push!(binary, remainder)\n    end\n    binary = \"db\" * string(reverse(binary))\
    \ * \"db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0rf35yqp.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbAny[]db\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0rf35yqp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0rf35yqp.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp0rf35yqp.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"dbAny[1, 0, 0, 0, 0, 0]db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0rf35yqp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0rf35yqp.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp0rf35yqp.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"dbAny[1, 1, 0, 0, 1, 1, 1]db\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0rf35yqp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0rf35yqp.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp0rf35yqp.jl:32\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"dbAny[1, 1, 1, 1]db\" == \"db1111db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0rf35yqp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0rf35yqp.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0rf35yqp.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpedf81zam.jl:21\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpedf81zam.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpedf81zam.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpedf81zam.jl:22\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpedf81zam.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpedf81zam.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpedf81zam.jl:23\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpedf81zam.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpedf81zam.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpedf81zam.jl:24\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpedf81zam.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpedf81zam.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpedf81zam.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n \n    binary = \"db\"\n    # Create an empty array to store the binary digits\n\
    \    binary_array = []\n    # We want to keep looping until the quotient = 0 \n\
    \    while decimal != 0\n        # Push the remainder into the array\n       \
    \ push!(binary_array,decimal%2)\n        # Divide the number by 2 and keep the\
    \ quotient for next iteration\n        decimal = div(decimal,2)\n    end\n   \
    \ # Reverse the array \n    binary_array = reverse(binary_array)\n    # Join the\
    \ array elements into a string\n    binary = binary * join(binary_array)\n   \
    \ # Add the final db to the string\n    binary = binary * \"db\"\n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd5_c1zfc.jl:37\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd5_c1zfc.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd5_c1zfc.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd5_c1zfc.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    to_binary_string(decimal) |> s -> \"db\" * s * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy2_23m8e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: to_binary_string not\
    \ defined\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpy2_23m8e.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy2_23m8e.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy2_23m8e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpy2_23m8e.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: to_binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy2_23m8e.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy2_23m8e.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy2_23m8e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpy2_23m8e.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: to_binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy2_23m8e.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy2_23m8e.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy2_23m8e.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpy2_23m8e.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: to_binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy2_23m8e.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy2_23m8e.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return join(reverse(string(d2b(decimal))))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz55logv0.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: d2b not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpz55logv0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz55logv0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz55logv0.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpz55logv0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: d2b not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpz55logv0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz55logv0.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz55logv0.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpz55logv0.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: d2b not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpz55logv0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz55logv0.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz55logv0.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpz55logv0.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: d2b not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpz55logv0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz55logv0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_list = []\n    while decimal >= 1\n        push!(binary_list, decimal\
    \ % 2)\n        decimal = div(decimal, 2)\n    end\n    binary_list = \"db\" *\
    \ reverse(binary_list) * \"db\"\n    return binary_list\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptc82on81.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Vector{Any})\\n  Closest candidates are:\\n    *(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    *(::Union{AbstractChar,\
    \ AbstractString}, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:183\\\
    n    ...\\n  Stacktrace:\\n   [1] *(::String, ::Vector{Any}, ::String)\\n    \
    \ @ Base ./operators.jl:655\\n   [2] decimal_to_binary(decimal::Int64)\\n    \
    \ @ Main /tmp/tmptc82on81.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmptc82on81.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmptc82on81.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        push!(bin, decimal % 2)\n\
    \        decimal = floor(decimal / 2)\n    end\n    bin = reverse(bin)\n    push!(bin,\
    \ \"db\")\n    return bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkc5xovpd.jl:27\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpkc5xovpd.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkc5xovpd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkc5xovpd.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpkc5xovpd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpkc5xovpd.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkc5xovpd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkc5xovpd.jl:26\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkc5xovpd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return string(\"db\", base(decimal, 2), \"db\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsa3uq7qw.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: base not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpsa3uq7qw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsa3uq7qw.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsa3uq7qw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsa3uq7qw.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpsa3uq7qw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsa3uq7qw.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsa3uq7qw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsa3uq7qw.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpsa3uq7qw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsa3uq7qw.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsa3uq7qw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsa3uq7qw.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpsa3uq7qw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsa3uq7qw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binstr = \"\"\n    while decimal != 0\n        binstr = string(decimal\
    \ % 2) * binstr\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binstr * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_iq7spig.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_iq7spig.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_iq7spig.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_iq7spig.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = []\n    if decimal == 0\n        push!(binary, \"db\"*string(decimal)*\"\
    db\")\n    else\n        push!(binary, \"db\")\n        while decimal != 0\n \
    \           if decimal%2 == 0\n                push!(binary, \"0\")\n        \
    \    else\n                push!(binary, \"1\")\n            end\n           \
    \ decimal = trunc(Int64, decimal/2)\n        end\n        push!(binary, \"db\"\
    )\n    end\n    return join(reverse(binary))\nend\ndecimal_to_binary(105)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    result = \"\"\n\
    \    dec = decimal\n    while dec > 0\n        if dec % 2 == 0\n            result\
    \ = \"0\" * result\n        else\n            result = \"1\" * result\n      \
    \  end\n        dec = div(dec, 2)\n    end\n    return \"db\" * result * \"db\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal != 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmkgv07p_.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkgv07p_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkgv07p_.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmkgv07p_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    dec_string = base(decimal, 2)\n    return \"db\" *> dec_string *> \"db\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgykfmjcz.jl:14\nin expression starting at\
    \ /tmp/tmpgykfmjcz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"Takes an integer and returns a binary string represenation.\"\"\"\
    \n    bin = \"db\"\n    for i = decimal:-1:0\n        push!(bin,decimal%2)\n \
    \       decimal/=2\n    end\n    push!(bin,\"db\")\n    bin\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfq5ihy3v.jl:27\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpfq5ihy3v.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfq5ihy3v.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfq5ihy3v.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpfq5ihy3v.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpfq5ihy3v.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfq5ihy3v.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfq5ihy3v.jl:26\ntest set:\
    \ Error During"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfq5ihy3v.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"db0db\"\n    end\n    result = \"\"\
    \n    while decimal != 0\n        result = string(decimal % 2) * result\n    \
    \    decimal = div(decimal, 2)\n    end\n    return \"db\" * result * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    i=1\n    while(decimal>=2^i)\n        i++\n    end\n    binary=\"db\"\n\
    \    while(i>=1)\n        if(decimal>=2^(i-1))\n            binary=binary*\"1\"\
    \n            decimal=decimal-2^(i-1)\n        else\n            binary=binary*\"\
    0\"\n        end\n        i--\n    end\n    binary=binary*\"db\"\n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4uyk1nzt.jl:16\nin expression starting at /tmp/tmp4uyk1nzt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"db\" * join(chop(binary(decimal), \"b\")) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpogv64l0g.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpogv64l0g.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpogv64l0g.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpogv64l0g.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpogv64l0g.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpogv64l0g.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpogv64l0g.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpogv64l0g.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpogv64l0g.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpogv64l0g.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpogv64l0g.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpogv64l0g.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpogv64l0g.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpogv64l0g.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpogv64l0g.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # TODO: implement the function\n    binary_string = \"db\"\n    if decimal\
    \ == 0\n        binary_string = \"db0db\"\n    else\n        while decimal !=\
    \ 0\n            binary_string = binary_string * string(decimal % 2)\n       \
    \     decimal = div(decimal, 2)\n        end\n        binary_string = binary_string\
    \ * \"db\"\n    end\n    return binary_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpofxc_sfm.jl:32\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpofxc_sfm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpofxc_sfm.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpofxc_sfm.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpofxc_sfm.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpofxc_sfm.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpofxc_sfm.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    base = 2\n    buffer = []\n    while decimal > 0\n        push!(buffer,\
    \ decimal % base)\n        decimal = decimal \xF7 base\n    end\n    return \"\
    db\" * join(reverse(buffer), \"\") * \"db\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp341g1zj.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp341g1zj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp341g1zj.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp341g1zj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"\"\"\"\n    return \"db\" *> string(decimal, base=2) *> \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvw7486wh.jl:14\nin expression starting at\
    \ /tmp/tmpvw7486wh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    n = decimal\n    s = \"db\"\n    while n > 0\n        if mod(n, 2) ==\
    \ 0\n            push!(s, '0')\n        else\n            push!(s, '1')\n    \
    \    end\n        n = div(n, 2)\n    end\n    push!(s, 'db')\n    return reverse(s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpy51eycji.jl:23\nin expression\
    \ starting at /tmp/tmpy51eycji.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    n_bits = ceil(log2(decimal))\n    str_bin = \"\"\n    for i in 0:n_bits\n\
    \        str_bin = int2bin(rem(decimal,2)) * str_bin\n        decimal = floor(decimal/2)\n\
    \    end\n    return \"db\" * str_bin * \"db\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx3j2pclc.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx3j2pclc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx3j2pclc.jl:25\ntest set: Error\
    \ During Test at /tmp/tmpx3j2pclc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpx3j2pclc.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx3j2pclc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx3j2pclc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpx3j2pclc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpx3j2pclc.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx3j2pclc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx3j2pclc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpx3j2pclc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpx3j2pclc.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx3j2pclc.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3j2pclc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * join(string.(digits(decimal, base=2, pad=8))...) * \"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvjip1bsw.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching join(::String,\
    \ ::String, ::String, ::String, ::String, ::String, ::String, ::String)\n  Closest\
    \ candidates are:\n    join(!Matched::IO, ::Any, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:326\n\
    \    join(::Any, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:354\n\
    \    join(!Matched::IO, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:342\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpvjip1bsw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvjip1bsw.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvjip1bsw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpvjip1bsw.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching join(::String,\
    \ ::String, ::String, ::String, ::String, ::String, ::String, ::String)\n  Closest\
    \ candidates are:\n    join(!Matched::IO, ::Any, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:326\n\
    \    join(::Any, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:354\n\
    \    join(!Matched::IO, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:342\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpvjip1bsw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvjip1bsw.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvjip1bsw.jl:19\ntest set:\
    \ Error During"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvjip1bsw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # the cast of the argument to a integer\n    # is needed to enable conversion\
    \ to binary\n    # string, which is only implemented for \n    # integer types.\n\
    \    return string(\"db\", binary(decimal, pad=8), \"db\")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaug2oope.jl:24\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpaug2oope.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaug2oope.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaug2oope.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaug2oope.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpaug2oope.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaug2oope.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaug2oope.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaug2oope.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpaug2oope.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaug2oope.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaug2oope.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaug2oope.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpaug2oope.jl:17\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaug2oope.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"Convert decimal number to binary representation.\"\"\"\n    return\
    \ binary = string(\"db\", convert(Int64, decimal, 2), \"db\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp027zyd1f.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching convert(::Type{Int64},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    convert(::Type{T}, ::T) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ ::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp027zyd1f.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp027zyd1f.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp027zyd1f.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp027zyd1f.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching convert(::Type{Int64},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    convert(::Type{T}, ::T) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ ::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp027zyd1f.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp027zyd1f.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp027zyd1f.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp027zyd1f.jl:23\n  Test threw exception\n  Expression:\
    \ candida"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp027zyd1f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    num = decimal\n    binary = \"\"\n    while num > 0\n        if num %\
    \ 2 == 0\n            binary = \"0\" * binary\n        else\n            binary\
    \ = \"1\" * binary\n        end\n        num = div(num, 2)\n    end\n    return\
    \ \"db\" * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2zklm8bk.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zklm8bk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zklm8bk.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zklm8bk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal_to_binary(decimal) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(int(decimal_to_binary(decimal), 2)) * \"db\"\n\
    end\nprintln(decimal_to_binary(15))\nprintln(decimal_to_binary(32))\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    number = decimal\n    max_power = ceil(log2(number))\n    binary = \"\
    db\"\n    for power in (max_power:-1:0)\n        push!(binary,  '1') if number\
    \ >= 2^power\n        number -= 2^power if number >= 2^power\n    end\n    return\
    \ string(binary, \"db\")\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpcc4_i08b.jl:16 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcc4_i08b.jl:17\n\
    in expression starting at /tmp/tmpcc4_i08b.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = \"\"\n\
    \    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal / 2\n    end\n    return binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbvgaxhfp.jl:30\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db00.00.00.00.01.00.50.250.1250.06250.031250.0156250.00781250.003906250.0019531250.00097656250.000488281250.0002441406250.00012207031256.103515625e-53.0517578125e-51.52587890625e-57.62939453125e-63.814697265625e-61.9073486328125e-69.5367431640625e-74.76837158203125e-72.384185791015625e-71.1920928955078125e-75.960464477539063e-82.9802322387695312e-81.4901161193847656e-87.450580596923828e-93.725290298461914e-91.862645149230957e-99.313225746154785e-104.656612873077393e-102.3283064365386963e-101.1641532182693481e-105.820766091346741e-112.9103830456733704e-111.4551915228366852e-117.275957614183426e-123.637978807091713e-121.8189894035458565e-129.094947017729282e-134.547473508864641e-132.2737367544323206e-131.1368683772161603e-135.684341886080802e-142.842170943040401e-141.4210854715202004e-147.105427357601002e-153.552713678800501e-151.7763568394002505e-158.881784197001252e-164.440892098500626e-162.220446049250313e-161.1102230246251565e-165.551115123125783e-172.7755575615628914e-171.3877787807814457e-176.938893903907228e-183.469446951953614e-181.734723475976807e-188.673617379884035e-194.336808689942018e-192.168404344971009e-191.0842021724855044e-195.421010862427522e-202.710505431213761e-201.3552527156068805e-206.776263578034403e-213.3881317890172014e-211.6940658945086007e-218.470329472543003e-224.235164736271502e-222.117582368135751e-221.0587911840678754e-225.293955920339377e-232.6469779601696886e-231.3234889800848443e-236.617444900424222e-243.308722450212111e-241.6543612251060553e-248.271806125530277e-254.1359030627651384e-252.0679515313825692e-251.0339757656912846e-255.169878828456423e-262.5849394142282115e-261.2924697071141057e-266.462348535570529e-273.2311742677852644e-271.6155871338926322e-278.077935669463161e-284.0389678347315804e-282.0194839173657902e-281.0097419586828951e-285.048709793414476e-292.524354896707238e-291.262177448353619e-296.310887241768095e-303.1554436208840472e-301.5777218104420236e-307.888609"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvgaxhfp.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\ndecimal_to_binary(15)\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching *(::String, ::Int64)'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"   \n    Convert a integer number to binary string\n    \"\"\"\n\
    \    # Convert integer number to binary string\n    bin_str = string(base(decimal,\
    \ 2))\n    # check length of binary string\n    # If length of binary string is\
    \ not 8\n    # add leading zeros\n    if length(bin_str) < 8\n        bin_str\
    \ = repeat(\"0\", 8 - length(bin_str)) * bin_str\n    end\n    # append \"db\"\
    \ to front of string and \"db\" to end of string\n    return \"db\" * bin_str\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo3kq1hj9.jl:32\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: base not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpo3kq1hj9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo3kq1hj9.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo3kq1hj9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpo3kq1hj9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpo3kq1hj9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo3kq1hj9.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo3kq1hj9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpo3kq1hj9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpo3kq1hj9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo3kq1hj9.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo3kq1hj9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpo3kq1hj9.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpo3kq1hj9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo3kq1hj9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal != 0\n        bin = bin * (decimal % 2)\n\
    \        decimal = decimal >> 1\n    end\n    bin = bin * \"db\"\n    return bin\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2gjy0wop.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2gjy0wop.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2gjy0wop.jl:25\\ntest set: Error\
    \ During Test at /tmp/tmp2gjy0wop.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching *(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\n\
    \    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmp2gjy0wop.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2gjy0wop.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2gjy0wop.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    n = decimal\n    out = \"db\"\n    while n > 0\n        out = n%2 == 0\
    \ ? out*\"0\" : out*\"1\"\n        n = n >> 1\n    end\n    return \"db\"*out*\"\
    db\"\nend\ndecimal_to_binary(15)   # returns \"db1111db\"\ndecimal_to_binary(32)\
    \   # returns \"db100000db\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4pzcfsof.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdbdb\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pzcfsof.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pzcfsof.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4pzcfsof.jl:29\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"dbdb000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pzcfsof.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pzcfsof.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4pzcfsof.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"dbdb1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pzcfsof.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pzcfsof.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4pzcfsof.jl:31\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"dbdb1111db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pzcfsof.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pzcfsof.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4pzcfsof.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_str = \"db\"\n    binary_str = binary_str * string(decimal, base=2)\n\
    \    binary_str = binary_str * \"db\"\n    return binary_str\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    res = \"db\"\n\
    \    while decimal > 0\n        res = res * string(decimal % 2)\n        decimal\
    \ = decimal >> 1\n    end\n    return reverse(res) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5736n3hm.jl:29\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"100000bddb\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5736n3hm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5736n3hm.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp5736n3hm.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111bddb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5736n3hm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5736n3hm.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp5736n3hm.jl:31\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111bddb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5736n3hm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5736n3hm.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5736n3hm.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n\
    \            push!(binary, '0')\n        else\n            push!(binary, '1')\n\
    \        end\n        decimal = decimal \xF7 2\n    end\n    push!(binary, 'db')\n\
    \    return reverse(binary)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpylt1tfd7.jl:22\nin expression\
    \ starting at /tmp/tmpylt1tfd7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvar0ahnz.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpvar0ahnz.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvar0ahnz.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvar0ahnz.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpvar0ahnz.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpvar0ahnz.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvar0ahnz.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvar0ahnz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprx1gj2ix.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprx1gj2ix.jl:1\n\
    in expression starting at /tmp/tmprx1gj2ix.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    dec = decimal\n    binary = Array{Char}(undef, 0)\n    push!(binary, 'd')\n\
    \    push!(binary, 'b')\n    while dec >= 1\n        push!(binary, dec % 2)\n\
    \        dec = div(dec, 2)\n    end\n    push!(binary, 'd')\n    reverse!(binary)\n\
    \    return join(binary)\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc79xjnl3.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbd\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc79xjnl3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc79xjnl3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpc79xjnl3.jl:31\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"d\\x01\\0\\0\\0\\0\\0bd\" == \"db100000db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc79xjnl3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc79xjnl3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpc79xjnl3.jl:32\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"d\\x01\\x01\\0\\0\\x01\\x01\\x01bd\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc79xjnl3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc79xjnl3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpc79xjnl3.jl:33\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"d\\x01\\x01\\x01\\x01bd\" == \"db1111db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc79xjnl3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc79xjnl3.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc79xjnl3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Convert the decimal to binary\n    binary = binary(decimal)\n    # Add\
    \ the extra characters\n    binary = \"db$binary\"*\"db\"\n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5j1z6145.jl:24\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5j1z6145.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5j1z6145.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5j1z6145.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5j1z6145.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5j1z6145.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5j1z6145.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5j1z6145.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5j1z6145.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5j1z6145.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5j1z6145.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5j1z6145.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5j1z6145.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5j1z6145.jl:14\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5j1z6145.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> dec2bin(decimal) *> \"db\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq2vqk0k5.jl:13\nin expression starting at\
    \ /tmp/tmpq2vqk0k5.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    converted = binary(decimal)\n    return \"db\" * converted * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdqyi_1t6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpdqyi_1t6.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdqyi_1t6.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdqyi_1t6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdqyi_1t6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpdqyi_1t6.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdqyi_1t6.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdqyi_1t6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdqyi_1t6.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpdqyi_1t6.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdqyi_1t6.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdqyi_1t6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdqyi_1t6.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpdqyi_1t6.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdqyi_1t6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"\"\n    while decimal >= 1\n        if decimal == 1 \n       \
    \     bin = \"1\"\n            break\n        end\n        bin = string((decimal\
    \ % 2)) * bin\n        decimal = floor(decimal / 2)\n    end\n    return \"db\"\
    \ * bin * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfo172czf.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo172czf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo172czf.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfo172czf.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db1db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo172czf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo172czf.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfo172czf.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo172czf.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo172czf.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfo172czf.jl:32\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db1db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo172czf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo172czf.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfo172czf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    my_string = \"db\"\n    while (decimal>0)\n        my_string = my_string\
    \ * string(decimal%2)\n        decimal = decimal/2\n    end\n    my_string = my_string\
    \ * \"db\"\n    return reverse(my_string)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5scvjanl.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"bdbd\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5scvjanl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5scvjanl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5scvjanl.jl:27\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"bd423-e0.5323-e0.1323-e0.2323-e0.4323-e0.8223-e6.1223-e61.3223-e3.6123-e562.1123-e35.2123-e60.5023-e210.1023-e7320.2023-e4740.4023-e590.8913-e59816.1913-e9732.3913-e8574.6813-e361592.1813-e723095.2813-e456081.5713-e131630.1713-e5162270.2713-e325441.4713-e640982.8613-e2908756.1613-e4816513.3613-e58632136.6513-e73742623.1513-e47494256.2513-e774989403.5413-e5598799060.1413-e197599121.2413-e285199342.4413-e461389784.8313-e77236695796.1313-e45562391593.3313-e1135683097.6213-e22603770853.1213-e634216451617.2213-e78422903234.5113-e479448164680.1113-e4849986329271.2113-e798973748543.4113-e497957496196.8013-e57859159833837.1013-e5719309776674.3013-e538708553359.6903-e765161176093.1903-e431323243187.2903-e300862646486265.5803-e7006352929635211.1803-e4102705858370522.2803-e304410717741054.4803-e608820434592009.8703-e1167508680950087.1703-e2225116371811065.3703-e540322743632021.7603-e906444962740424.1603-e812988835490848.2603-e634877770981696.5503-e1786555518732931.1503-e2473111136574872.2503-e4847222262159655.4503-e794544425209311.9403-e4990988405087228.1403-e991877900165546.3403-e893655910221192.7303-e5972119304422854.1303-e955228708844619.2303-e811546516798238.5203-e6320921325975661.1203-e2740852640951333.2203-e4490615290813666.4203-e981230581636233.9103-e8734600732725668.1103-e5578210474450337.3103-e157520849801664.7003-e2051506987122394.1003-e4003012975344689.2003-e106024851788279.5992-e2021486134775491.1992-e3042863368451983.2992-e184637627903877.4992-e1692743549166"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5scvjanl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        return error(\"The number must be positive.\"\
    )\n    end\n    binary_string = \"db\"\n    while decimal > 0\n        binary_string\
    \ = binary_string * string(decimal % 2)\n        decimal = decimal \xF7 2\n  \
    \  end\n    binary_string = binary_string * \"db\"\n    return binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7vurw_j3.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vurw_j3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vurw_j3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7vurw_j3.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vurw_j3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vurw_j3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7vurw_j3.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vurw_j3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vurw_j3.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7vurw_j3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmnil5pxl.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpmnil5pxl.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmnil5pxl.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmnil5pxl.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmnil5pxl.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpmnil5pxl.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmnil5pxl.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmnil5pxl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    str = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n  \
    \          str = \"0\" * str\n        else\n            str = \"1\" * str\n  \
    \      end\n        decimal = decimal / 2\n    end\n    return str * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5dmg7far.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5dmg7far.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5dmg7far.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5dmg7far.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluateddbdb\"\
    \ == \"db100000db\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5dmg7far.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5dmg7far.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5dmg7far.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dmg7far.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        decimal += 2^64\n    end\n    if decimal == 0\n\
    \        return \"db0db\"\n    end\n    str = \"db\"\n    while decimal != 0\n\
    \        decimal, rem = divrem(decimal, 2)\n        str = string(rem) * str\n\
    \    end\n    return str * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbjzixncn.jl:32\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjzixncn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjzixncn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpbjzixncn.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjzixncn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjzixncn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpbjzixncn.jl:34\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjzixncn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjzixncn.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbjzixncn.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    sum = \"\"\n    while decimal > 0\n        sum = string(decimal % 2) *\
    \ sum\n        decimal = decimal / 2\n    end\n    \"db\" * sum * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8yq7iax3.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yq7iax3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yq7iax3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8yq7iax3.jl:26\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db5.0e-3241.0e-3232.0e-3234.0e-3238.0e-3231.6e-3223.16e-3226.3e-3221.265e-3212.53e-3215.06e-3211.012e-3202.0237e-3204.0474e-3208.095e-3201.61895e-3193.2379e-3196.4758e-3191.295163e-3182.590327e-3185.180654e-3181.036131e-3172.0722615e-3174.144523e-3178.289046e-3171.6578092e-3163.3156184e-3166.63123685e-3161.32624737e-3152.65249474e-3155.304989477e-3151.0609978955e-3142.121995791e-3144.243991582e-3148.487983164e-3141.69759663277e-3133.39519326554e-3136.7903865311e-3131.35807730622e-3122.716154612436e-3125.43230922487e-3121.086461844974e-3112.1729236899484e-3114.345847379897e-3118.691694759794e-3111.73833895195875e-3103.4766779039175e-3106.953355807835e-3101.390671161567e-3092.781342323134e-3095.562684646268003e-3091.1125369292536007e-3082.2250738585072014e-3084.450147717014403e-3088.900295434028806e-3081.7800590868057611e-3073.5601181736115222e-3077.120236347223045e-3071.424047269444609e-3062.848094538889218e-3065.696189077778436e-3061.1392378155556871e-3052.2784756311113742e-3054.5569512622227484e-3059.113902524445497e-3051.8227805048890994e-3043.645561009778199e-3047.291122019556398e-3041.4582244039112795e-3032.916448807822559e-3035.832897615645118e-3031.1665795231290236e-3022.3331590462580472e-3024.6663180925160944e-3029.332636185032189e-3021.8665272370064378e-3013.7330544740128755e-3017.466108948025751e-3011.4932217896051502e-3002.9864435792103004e-3005.972887158420601e-3001.1945774316841202e-2992.3891548633682403e-2994.778309726736481e-2999.556619453472961e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yq7iax3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    num_bins = []\n    while decimal > 0\n        bin_num = decimal % 2\n\
    \        push!(num_bins, bin_num)\n        decimal = decimal \xF7 2\n    end\n\
    \    binary_string = \"db\"\n    while length(num_bins) > 0\n        binary_string\
    \ = string(binary_string, num_bins[end])\n        pop!(num_bins)\n    end\n  \
    \  return string(binary_string, \"db\")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1dhbihhr.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1dhbihhr.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1dhbihhr.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1dhbihhr.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n  #This is the main function that does the work\n  if decimal == 0\n    return\
    \ \"db0db\"\n  end\n  else\n    #The initial value of quotient is set to the input\
    \ value of the function.\n    #The quotient is the value of the number divided\
    \ by 2.\n    quotient = decimal\n    #The initial value of remainder is set to\
    \ 0. \n    #The remainder is the remainder of the quotient divided by 2.\n   \
    \ remainder = 0\n    #The initial value of binary is set to a string. \n    #The\
    \ binary value is the final value of the number in binary form.\n    binary =\
    \ \"\"\n    #The loop runs until the quotient is 0, which will only happen when\
    \ the \n    #decimal value is 0.\n    while quotient != 0\n      #the remainder\
    \ is computed by dividing the quotient by 2.\n      remainder = quotient % 2\n\
    \      #the quotient is updated by dividing the quotient by 2, and dropping the\
    \ remainder.\n      quotient = div(quotient, 2)\n      #the remainder is converted\
    \ to a string and added to the binary value.\n      binary = string(remainder)\
    \ * binary\n    end\n    #The binary string is concatenated to the string \"db\"\
    .\n    #The binary string is concatenated to the string \"db\".\n    binary =\
    \ \"db\" * binary * \"db\"\n    #The binary string is returned.\n    return binary\n\
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp4xbmvpmg.jl:12 expected\
    \ \"end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4xbmvpmg.jl:17\n\
    in expression starting at /tmp/tmp4xbmvpmg.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqffeqg5g.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String)\\n     @ Base ./operators.jl:655\\\
    n   [2] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpqffeqg5g.jl:13\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpqffeqg5g.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpqffeqg5g.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = convert(Int64,binary_string(decimal))\n    bin = bin[2:end]\n  \
    \  bin = \"db\" * bin * \"db\"\n    return bin\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy3sc1_0o.jl:23\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy3sc1_0o.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy3sc1_0o.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy3sc1_0o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpy3sc1_0o.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy3sc1_0o.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy3sc1_0o.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy3sc1_0o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpy3sc1_0o.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy3sc1_0o.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy3sc1_0o.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy3sc1_0o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpy3sc1_0o.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary_string not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpy3sc1_0o.jl:13\n\
    \   [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3sc1_0o.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # first we convert the decimal to a binary string\n    binary = convert(String,\
    \ Int(decimal, 2))\n    # then we add the \"db\" characters to the beginning and\
    \ end\n    # and return the result\n    return \"db\" * binary * \"db\"\nend\n\
    \ \n \n\"\"\"Given a string, return a string where all the characters are '*'\
    \ except for the first and\n    last characters. Use the '*' character to replace.\n\
    \ \n    Examples:\n    replace_stars(\"abc\") # returns \"a**c\"\n    replace_stars(\"\
    abcdef\") # returns \"a****f\"\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmphc7nr3vu.jl:21\nin expression starting at /tmp/tmphc7nr3vu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    result = \"\"\n\
    \    while decimal > 0\n        if decimal % 2 == 0\n            result = \"0\"\
    \ * result\n        else\n            result = \"1\" * result\n        end\n \
    \       decimal = floor(decimal / 2)\n    end\n    return \"db\" * result * \"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    # initialize binary string\n    binary = \"db\"\n    \n    # store\
    \ base case\n    if decimal == 0\n        binary = string(binary, \"0\")\n   \
    \ end\n    \n    # loop through until each bit is accounted for\n    while decimal\
    \ > 0\n        if decimal % 2 == 0\n            binary = string(binary, \"0\"\
    )\n        else\n            binary = string(binary, \"1\")\n        end\n   \
    \     decimal = div(decimal, 2)\n    end\n    \n    # reverse binary string for\
    \ proper output\n    binary = string(binary, \"db\")\n    binary = reverse(binary)\n\
    \    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd8kydvcy.jl:43\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"bd0bd\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8kydvcy.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8kydvcy.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpd8kydvcy.jl:44\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"bd100000bd\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8kydvcy.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8kydvcy.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpd8kydvcy.jl:45\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"bd1100111bd\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8kydvcy.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8kydvcy.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpd8kydvcy.jl:46\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"bd1111bd\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd8kydvcy.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd8kydvcy.jl:42\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd8kydvcy.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # if decimal < 0 \n    #     decimal = decimal*-1\n    #     negative\
    \ = true\n    # else \n    #     negative = false\n    # end \n    binary = \"\
    \"\n    while decimal >= 1 \n        binary = string(decimal%2) * binary\n   \
    \     decimal = decimal \xF7 2\n    end \n    # if negative \n    #     binary\
    \ = \"-\" * binary\n    # end \n    return \"db\" * binary * \"db\"\nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbfi_hygp.jl:34\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi_hygp.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi_hygp.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfi_hygp.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Convert decimal number to binary, \n    # and add characters \"db\"\
    \ in the beginning and the end of the string\n    string(decimal, base=2)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfkecv3it.jl:22\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"0\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkecv3it.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkecv3it.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpfkecv3it.jl:23\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkecv3it.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkecv3it.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpfkecv3it.jl:24\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkecv3it.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkecv3it.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpfkecv3it.jl:25\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkecv3it.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkecv3it.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkecv3it.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    number = decimal\n    string = \"db\"\n    while number > 0\n        remainder\
    \ = number % 2\n        number = floor(number / 2)\n        string = string *\
    \ string(remainder)\n    end\n    string = string * \"db\"\n    return string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpntgry17a.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpntgry17a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpntgry17a.jl:27\ntest set: Error\
    \ During Test at /tmp/tmpntgry17a.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpntgry17a.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpntgry17a.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpntgry17a.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpntgry17a.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n    \
    \ @ Main /tmp/tmpntgry17a.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpntgry17a.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpntgry17a.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpntgry17a.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpntgry17a.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inl"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpntgry17a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"\n    Convert decimal number to binary string\n    \"\"\"\n    #\
    \ Standard decimal to binary converter\n    bin = binary(decimal)\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps55llf4_.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps55llf4_.jl:1\n\
    in expression starting at /tmp/tmps55llf4_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> dec2bin(decimal) *> \"db\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdnngn_2e.jl:13\nin expression starting at\
    \ /tmp/tmpdnngn_2e.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = []\n    while decimal != 0\n        remainder = decimal % 2\n  \
    \      push!(bin, remainder)\n        decimal = decimal \xF7 2\n    end\n    return\
    \ \"db\" * join(reverse(map(string, bin))) * \"db\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq_44qj0z.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_44qj0z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_44qj0z.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq_44qj0z.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = dec2bin(decimal)\n    return \"db\" * bin * \"db\"\nend\ndecimal_to_binary(32)\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: dec2bin not defined\nStacktrace:\n [1]\
    \ decimal_to_binary(decimal::Int64)\n   @ Main /tmp/tmpfonh65ep.jl:13\n [2] top-level\
    \ scope\n   @ /tmp/tmpfonh65ep.jl:16\nin expression starting at /tmp/tmpfonh65ep.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    n = decimal\n    binary_string = \"db\"\n    while n != 0\n        binary_string\
    \ = binary_string * string(n % 2)\n        n = n \xF7 2\n    end\n    return binary_string\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7s698f_x.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7s698f_x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7s698f_x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7s698f_x.jl:27\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7s698f_x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7s698f_x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7s698f_x.jl:28\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7s698f_x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7s698f_x.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7s698f_x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    bin_array = [0]\n    i = 0\n    while decimal>0\n        bin_array[i]\
    \ = decimal%2\n        decimal = floor(decimal/2)\n        push!(bin_array, 0)\n\
    \        i += 1\n    end\n    pop!(bin_array)\n    reverse!(bin_array)\n    bin_array\
    \ = vcat(bin_array, [\"d\",\"b\"])\n    return join(bin_array)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_bsov5su.jl:32\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_bsov5su.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_bsov5su.jl:31\ntest set: Error\
    \ During Test at /tmp/tmp_bsov5su.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  BoundsError: attempt to access 1-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903\
    \ [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_bsov5su.jl:17\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_bsov5su.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_bsov5su.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_bsov5su.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  BoundsError: attempt to access 1-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903\
    \ [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_bsov5su.jl:17\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_bsov5su.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_bsov5su.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_bsov5su.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_bsov5su.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    temp = decimal\n    while temp > 0\n        bin = bin\
    \ * string(temp % 2)\n        temp = temp \xF7 2\n    end\n    bin = bin * \"\
    db\"\n    bin\nend\nprintln(decimal_to_binary(15))\nprintln(decimal_to_binary(32))\n\
    println(decimal_to_binary(10))\nprintln(decimal_to_binary(2))\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "db1111db\ndb000001db\ndb0101db\ndb01db\ntest set: Test Failed at /tmp/tmp4et2kw9d.jl:31\n\
    \  Expression: candidate(0) == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4et2kw9d.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4et2kw9d.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp4et2kw9d.jl:32\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4et2kw9d.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4et2kw9d.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp4et2kw9d.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4et2kw9d.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4et2kw9d.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4et2kw9d.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(int(decimal, 2)) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5luwk2rt.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: int not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5luwk2rt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5luwk2rt.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5luwk2rt.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp5luwk2rt.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5luwk2rt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5luwk2rt.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5luwk2rt.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp5luwk2rt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5luwk2rt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5luwk2rt.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5luwk2rt.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp5luwk2rt.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5luwk2rt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5luwk2rt.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"db0db\"\n    end\n    str = \"\"\n\
    \    while decimal > 0\n        str = decimal % 2 == 0 ? \"0\" : \"1\" * str\n\
    \        decimal = decimal \xF7 2\n    end\n    return \"db\" * str * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbgln__uv.jl:29\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db10db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbgln__uv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbgln__uv.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpbgln__uv.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db110db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbgln__uv.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbgln__uv.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbgln__uv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    bin = \"\"\n \
    \   while decimal > 0\n        bin = \"db\" * (decimal % 2 == 1) * \"1\" * (decimal\
    \ % 2 == 0) * \"0\" * bin\n        decimal = decimal / 2\n    end\n    bin = \"\
    db\" * bin * \"db\"\n    return bin\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy8zcs_f2.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(32) == \"db100000db\"\\n  MethodError: no\
    \ method matching *(::String, ::Bool)\\n  Closest candidates are:\\n    *(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    *(::Union{AbstractChar,\
    \ AbstractString}, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:183\\\
    n    ...\\n  Stacktrace:\\n   [1] *(::String, ::Bool, ::String, ::Bool, ::String,\
    \ ::String)\\n     @ Base ./operators.jl:655\\n   [2] decimal_to_binary(decimal::Int64)\\\
    n     @ Main /tmp/tmpy8zcs_f2.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpy8zcs_f2.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy8zcs_f2.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal >= 1\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = div(decimal, 2)\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_t3ghedk.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_t3ghedk.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_t3ghedk.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_t3ghedk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    bin_digits = []\n    while decimal != 0\n       \
    \ digit = decimal % 2\n        decimal = floor(decimal / 2)\n        push!(bin_digits,\
    \ digit)\n    end\n    bin_digits = reverse(bin_digits)\n    for digit in bin_digits\n\
    \        binary = binary * string(digit)\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3irtntx3.jl:32\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3irtntx3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3irtntx3.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3irtntx3.jl:33\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db1.00.00.00.00.00db\" == \"db100000db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3irtntx3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3irtntx3.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3irtntx3.jl:34\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1.01.00.00.01.01.01db\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3irtntx3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3irtntx3.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3irtntx3.jl:35\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db1.01.01.01db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3irtntx3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3irtntx3.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3irtntx3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bits = []\n    for i in 0:7\n        push!(bits, mod(decimal, 2))\n  \
    \      decimal = div(decimal, 2)\n    end\n    return string(\"db\", reverse(bits)...,\
    \ \"db\")\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpao2i5z5n.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db00000000db\" == \"db0db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao2i5z5n.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao2i5z5n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpao2i5z5n.jl:26\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db00100000db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao2i5z5n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao2i5z5n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpao2i5z5n.jl:27\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db01100111db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao2i5z5n.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao2i5z5n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpao2i5z5n.jl:28\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db00001111db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpao2i5z5n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpao2i5z5n.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpao2i5z5n.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # build a string for each bit\n    # put db at beginning and end\n   \
    \ # return string\nend\n\"\"\"\n    You will be given a string of characters in\
    \ the form 'abcdabcdabcdabcd', where each character\n    can either be 'a', 'b',\
    \ 'c' or 'd'. Your task is to replace each 'a' with an '1', 'b' with an '2',\n\
    \    'c' with an '3' and 'd' with an '4'. The function should return a string\
    \ of characters in the form\n    '1234123412341234'.\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpe0izqvcb.jl:17\nin expression starting at /tmp/tmpe0izqvcb.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = \"db\"\
    \n    div_int = decimal \n    while div_int > 0\n        binary = binary * string(div_int\
    \ % 2)\n        div_int = div_int \xF7 2\n    end\n    return binary * \"db\"\n\
    end\n    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1rdx3dvw.jl:31\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1rdx3dvw.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1rdx3dvw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1rdx3dvw.jl:32\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1rdx3dvw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1rdx3dvw.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1rdx3dvw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    convert(String, \"db\", replace(base(decimal, 2), \"0\", \"db\"), \"db\"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn060sudt.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: base not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpn060sudt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn060sudt.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn060sudt.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpn060sudt.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpn060sudt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn060sudt.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn060sudt.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpn060sudt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpn060sudt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn060sudt.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn060sudt.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpn060sudt.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpn060sudt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn060sudt.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    @assert decimal >= 0\n    binary = \"\"\n    while decimal > 0\n     \
    \   binary = string(decimal % 2) * binary\n        decimal = div(decimal, 2)\n\
    \    end\n    binary = \"db\" * binary * \"db\"\n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd04blsr8.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd04blsr8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd04blsr8.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd04blsr8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = string(\"db\")\n    while decimal != 0\n        bin_part\
    \ = decimal % 2\n        decimal = decimal \xF7 2\n        binary_string = string(bin_part)\
    \ * binary_string\n    end\n    return binary_string * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgfgecd6r.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfgecd6r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfgecd6r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgfgecd6r.jl:27\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfgecd6r.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfgecd6r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgfgecd6r.jl:28\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfgecd6r.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfgecd6r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgfgecd6r.jl:29\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfgecd6r.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfgecd6r.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgfgecd6r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    b = bin(decimal)\n    s = b[3:end]\n    return \"db\" * s * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg5n7ecc7.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: bin not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpg5n7ecc7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg5n7ecc7.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg5n7ecc7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpg5n7ecc7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpg5n7ecc7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg5n7ecc7.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg5n7ecc7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpg5n7ecc7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpg5n7ecc7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg5n7ecc7.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg5n7ecc7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpg5n7ecc7.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpg5n7ecc7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5n7ecc7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin=bin(decimal) #converts to binary\n    bin[1:end-1] #cuts out the letters\
    \ '0b'\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptcdky5l9.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: bin not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmptcdky5l9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptcdky5l9.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptcdky5l9.jl:20\ntest set:\
    \ Error During Test at /tmp/tmptcdky5l9.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmptcdky5l9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptcdky5l9.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptcdky5l9.jl:20\ntest set:\
    \ Error During Test at /tmp/tmptcdky5l9.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmptcdky5l9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptcdky5l9.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptcdky5l9.jl:20\ntest set:\
    \ Error During Test at /tmp/tmptcdky5l9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmptcdky5l9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptcdky5l9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        if decimal % 2 == 0\n  \
    \          binary = \"0\" * binary\n        else\n            binary = \"1\" *\
    \ binary\n        end\n        decimal = decimal \xF7 2\n    end\n    return \"\
    db\" * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp014j3d4s.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp014j3d4s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp014j3d4s.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp014j3d4s.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # YOUR CODE HERE\n    binary = \"db\"\n    while decimal != 0\n      \
    \  if decimal % 2 == 0\n            binary = \"0\" * binary\n        else\n  \
    \          binary = \"1\" * binary\n        end\n        decimal = div(decimal,\
    \ 2)\n    end\n    binary = binary * \"db\"\n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplzwmv390.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzwmv390.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzwmv390.jl:30\ntest set: Test\
    \ Failed at /tmp/tmplzwmv390.jl:32\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzwmv390.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzwmv390.jl:30\ntest set: Test\
    \ Failed at /tmp/tmplzwmv390.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzwmv390.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzwmv390.jl:30\ntest set: Test\
    \ Failed at /tmp/tmplzwmv390.jl:34\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzwmv390.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzwmv390.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzwmv390.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"db0db\"\n    end \n    bin_string =\
    \ \"db\"\n    append!(bin_string, Int(decimal % 2))\n    while decimal > 1 \n\
    \        decimal = div(decimal, 2)\n        append!(bin_string, Int(decimal %\
    \ 2))\n    end \n    append!(bin_string, \"db\")\n    bin_string = reverse(bin_string)\n\
    \    return bin_string\nend \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkto1b817.jl:32\n  Test threw exception\n\
    \  Expression: candidate(32) == \"db100000db\"\n  MethodError: no method matching\
    \ append!(::String, ::Int64)\n  Closest candidates are:\n    append!(!Matched::BitVector,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n   \
    \ append!(!Matched::AbstractVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n\
    \    append!(!Matched::AbstractVector, ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpkto1b817.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkto1b817.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkto1b817.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpkto1b817.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching append!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpkto1b817.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkto1b817.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkto1b817.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpkto1b817.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkto1b817.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    quotient = decimal\n    bin_string = \"\"\n    while (quotient >= 1)\n\
    \        remainder = quotient % 2\n        quotient = quotient \xF7 2\n      \
    \  push!(bin_string, string(remainder))\n    end\n    bin_string = \"db\" * reverse(bin_string)\
    \ * \"db\"\n    return bin_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxatl0g22.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxatl0g22.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxatl0g22.jl:27\ntest set: Error\
    \ During Test at /tmp/tmpxatl0g22.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpxatl0g22.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxatl0g22.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxatl0g22.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxatl0g22.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxatl0g22.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binstr = \"\"\n\
    \    while decimal > 0\n        r = decimal % 2\n        decimal = decimal \xF7\
    \ 2\n        push!(binstr, r)\n    end\n    return join(reverse(binstr), \"\"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps4kp_3fh.jl:30\n  Test threw exception\n\
    \  Expression: candidate(32) == \"db100000db\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmps4kp_3fh.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps4kp_3fh.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps4kp_3fh.jl:28\ntest set:\
    \ Error During Test at /tmp/tmps4kp_3fh.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmps4kp_3fh.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps4kp_3fh.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps4kp_3fh.jl:28\ntest set:\
    \ Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4kp_3fh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\n\"\"\"This question is to test your understanding\
    \ of while-loops.\n    You are given a function call fun(x, y) which returns x\
    \ * y.\n    You have to create a function that calculates the sum of the call\
    \ for fun(x, y) for all integers\n    from x = 1 to y = n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1mh5bc3n.jl:15\nin expression starting at\
    \ /tmp/tmp1mh5bc3n.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        s = \"-\"\n        n = abs(decimal)\n    else\
    \ \n        s = \"\"\n        n = decimal\n    end\n    res = \"\"\n    while\
    \ n > 0\n        s = string(n % 2) * s\n        n = div(n, 2)\n    end\n    return\
    \ \"db\" * s * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9nwhlkpg.jl:32\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9nwhlkpg.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9nwhlkpg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9nwhlkpg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    s = \"\"\n    while decimal > 0\n        push!(s, '1')\n        decimal\
    \ = decimal - 2^floor(log2(decimal))\n    end\n    push!(s, '0')\n    s = reverse(s)\n\
    \    pushfirst!(s, 'd')\n    pushfirst!(s, 'b')\n    push!(s, 'd')\n    push!(s,\
    \ 'b')\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj1623af3.jl:31\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpj1623af3.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj1623af3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj1623af3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpj1623af3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpj1623af3.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj1623af3.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj1623af3.jl:30\ntest set:\
    \ Error During T"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj1623af3.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    string_out = \"db\"\n    while decimal > 0\n        string_out = string_out\
    \ * string(decimal % 2)\n        decimal = floor(decimal / 2)\n    end\n    return\
    \ string_out * \"db\"\nend\nprintln(decimal_to_binary(15))\nprintln(decimal_to_binary(32))\n\
    println(decimal_to_binary(4))\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "db11.01.01.0db\ndb00.00.00.00.01.0db\ndb00.01.0db\ntest set: Test Failed\
    \ at /tmp/tmpggjtiini.jl:28\n  Expression: candidate(0) == \"db0db\"\n   Evaluated:\
    \ \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggjtiini.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggjtiini.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpggjtiini.jl:29\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db00.00.00.00.01.0db\" == \"db100000db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggjtiini.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggjtiini.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpggjtiini.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db11.01.00.00.01.01.0db\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggjtiini.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggjtiini.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpggjtiini.jl:31\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db11.01.01.0db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggjtiini.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggjtiini.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpggjtiini.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = convert(Int64, decimal, base=2)\n    return \"db\" * string(binary)\
    \ * \"db\"\nend\ndecimal_to_binary(32)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: Cannot `convert` an object of type \\\
    n  Int64{} to an object of type \\n  Int64{}\\nClosest candidates are:\\n  convert(::Type{T},\
    \ ::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\
    \ got unsupported keyword argument \"base\"\\n  convert(::Type{T}, ::Number) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7 got unsupported\
    \ keyword argument \"base\"\\n  convert(::Type{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\
    \ got unsupported keyword argument \"base\"\\n  ...\\nStacktrace:\\n [1] decimal_to_binary(decimal::Int64)\\\
    n   @ Main /tmp/tmpprb0g4gp.jl:13\\n [2] top-level scope\\n   @ /tmp/tmpprb0g4gp.jl:16\\\
    nin expression starting at /tmp/tmpprb0g4gp.jl:16\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \"\"\"\n    Convert Int64 binary to String.\n    \"\"\"\n    return\
    \ \"db\" *> string(decimal, base=2) *> \"db\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprv9hl0x6.jl:17\nin expression starting at\
    \ /tmp/tmprv9hl0x6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    chars_to_add = 8 - length(string(decimal, base=2))\n    front_string =\
    \ \"db\"\n    end_string = \"db\"\n    for i in 1:chars_to_add\n        front_string\
    \ = front_string * \"0\"\n    end\n    return front_string * string(decimal, base=2)\
    \ * end_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy8ppk1qp.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db00000000db\" == \"db0db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ppk1qp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ppk1qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8ppk1qp.jl:27\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db00100000db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ppk1qp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ppk1qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8ppk1qp.jl:28\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db01100111db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ppk1qp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ppk1qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8ppk1qp.jl:29\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db00001111db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8ppk1qp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8ppk1qp.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy8ppk1qp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"\n    Convert a decimal number to binary, returning a string.\n\
    \    \"\"\"\n    # TODO: implement this function\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi8vhza6o.jl:23\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"Convert a decimal number to binary, returning\
    \ a string.\\n\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8vhza6o.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8vhza6o.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi8vhza6o.jl:24\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"Convert a decimal number to binary, returning a string.\\n\"\
    \ == \"db100000db\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8vhza6o.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8vhza6o.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi8vhza6o.jl:25\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"Convert a decimal number to binary, returning a string.\\n\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8vhza6o.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8vhza6o.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpi8vhza6o.jl:26\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"Convert a decimal number to binary, returning a string.\\n\"\
    \ == \"db1111db\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8vhza6o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8vhza6o.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = []\n\
    \    while decimal > 0\n        push!(binary, decimal % 2)\n        decimal =\
    \ div(decimal, 2)\n    end\n    return \"db\" * join(map(string, reverse(binary)))\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"db\"*2\n    while decimal > 0\n        binary_string\
    \ = string(decimal%2, binary_string)\n        decimal = floor(decimal/2)\n   \
    \ end\n    binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptqxbaccn.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmptqxbaccn.jl:13\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptqxbaccn.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptqxbaccn.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    int2bin(decimal) \nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcz4sy0av.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: int2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcz4sy0av.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcz4sy0av.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcz4sy0av.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcz4sy0av.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcz4sy0av.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcz4sy0av.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcz4sy0av.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcz4sy0av.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcz4sy0av.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcz4sy0av.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcz4sy0av.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpcz4sy0av.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpcz4sy0av.jl:13\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcz4sy0av.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    result = \"db\"\
    \n    if decimal < 0\n        result *= \"1\"\n        decimal = 2^64 + decimal\n\
    \    end\n    while decimal != 0\n        decimal, remainder = divrem(decimal,\
    \ 2)\n        result *= remainder\n    end\n    return reverse(result) * \"db\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsdwk9obc.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(32) == \"db100000db\"\\n  MethodError: no\
    \ method matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpsdwk9obc.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsdwk9obc.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsdwk9obc.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    #convert the number to a binary string\n    #make sure the string is at\
    \ least 6 characters in length\n    #add \"db\" at the beginning and the end\n\
    \    #return the string\n    return \"db\" * string(decimal, base=2) * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"\n    Convert an integer to a string of binary digits.\n    \"\"\
    \"\n    bin_str = \"\"\n    for i in 1:8\n        push!(bin_str, '0')\n    end\n\
    \    for i in 1:8\n        if decimal &gt; 0\n            if decimal % 2 == 0\n\
    \                bin_str[8 + 1 - i] = '0'\n            else\n                bin_str[8\
    \ + 1 - i] = '1'\n            end\n            decimal = decimal \xF7 2\n    \
    \    end\n    end\n    bin_str = \"db\" * bin_str * \"db\"\n    return bin_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc_iabnif.jl:38\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpc_iabnif.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_iabnif.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_iabnif.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpc_iabnif.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpc_iabnif.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_iabnif.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_iabnif.jl:37\ntest set:\
    \ Error During T"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc_iabnif.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n\
    \            binary = binary * \"0\"\n        else\n            binary = binary\
    \ * \"1\"\n        end\n        decimal = floor(decimal / 2)\n    end\n    binary\
    \ = binary * \"db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp51fnr0zp.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51fnr0zp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51fnr0zp.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp51fnr0zp.jl:31\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51fnr0zp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51fnr0zp.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp51fnr0zp.jl:32\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51fnr0zp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51fnr0zp.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51fnr0zp.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = []\n    quotient = decimal\n    while quotient != 0\n        push!(bin,rem(quotient,2))\n\
    \        quotient = quotient \xF7 2\n    end\n    bin = \"db\"*join(reverse(bin))*\"\
    db\"\n    return bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_5h02h9d.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_5h02h9d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_5h02h9d.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_5h02h9d.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> BinaryDigits(decimal, 2) *> \"db\"\nend\n# test it:\n\
    decimal_to_binary(15)\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx95r_13m.jl:13\nin expression starting at\
    \ /tmp/tmpx95r_13m.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = 0\n    while decimal > 0\n        binary *= 10\n        if decimal\
    \ % 2 == 0\n            binary += 0\n        else\n            binary += 1\n \
    \       end\n        decimal = floor(decimal/2)\n    end\n    binary = binary.to_s\n\
    \    binary_string = \"db\"\n    for char in binary\n        binary_string = string(binary_string,\
    \ char)\n    end\n    binary_string = string(binary_string, \"db\")\n    return\
    \ binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu7z3flgh.jl:36\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  type Int64 has no field to_s\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpu7z3flgh.jl:23\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpu7z3flgh.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpu7z3flgh.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpu7z3flgh.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  type Int64 has no field to_s\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpu7z3flgh.jl:23\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpu7z3flgh.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpu7z3flgh.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpu7z3flgh.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  type Int64 has no field to_s\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpu7z3flgh.jl:23\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpu7z3flgh.jl:38 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpu7z3flgh.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpu7z3flgh.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  type Int64 has no field to_s\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu7z3flgh.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    quotient = decimal\n    binary_string = \"db\"\n    while quotient !=\
    \ 0\n        remainder = mod(quotient, 2)\n        quotient = div(quotient, 2)\n\
    \        push!(binary_string, remainder)\n    end\n    push!(binary_string, \"\
    db\")\n    reverse!(binary_string)\n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbiiil8em.jl:29\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpbiiil8em.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbiiil8em.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbiiil8em.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpbiiil8em.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpbiiil8em.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbiiil8em.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbiiil8em.jl:28\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbiiil8em.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    decimal_string = decimal * \"\"\n    return \"db\" * decimal_string *\
    \ \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg15lgiii.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::Int64, ::String)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(!Matched::Union{AbstractChar, AbstractString}, ::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpg15lgiii.jl:13\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpg15lgiii.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg15lgiii.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = bin(decimal)\n    return string(\"db\", bin[3:end], \"db\")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3f55oi4n.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: bin not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp3f55oi4n.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3f55oi4n.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3f55oi4n.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp3f55oi4n.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp3f55oi4n.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3f55oi4n.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3f55oi4n.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp3f55oi4n.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp3f55oi4n.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3f55oi4n.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3f55oi4n.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp3f55oi4n.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp3f55oi4n.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3f55oi4n.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_str = \"db\"*\"\"\n    #save our quotient, remainder, and base\n\
    \    quotient = decimal\n    remainder = decimal\n    base = 2\n    while quotient\
    \ != 0\n        remainder = quotient % base\n        quotient = quotient \xF7\
    \ base\n        binary_str = \"db\"*\"$remainder\"\n    end\n    binary_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf3an5ic3.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3an5ic3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3an5ic3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpf3an5ic3.jl:31\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db1\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3an5ic3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3an5ic3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpf3an5ic3.jl:32\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3an5ic3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3an5ic3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpf3an5ic3.jl:33\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db1\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3an5ic3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3an5ic3.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf3an5ic3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> fill(decimal, 2, \"0\") *> \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmperi4ar5j.jl:13\nin expression starting at\
    \ /tmp/tmperi4ar5j.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    s = \"\"\n    while decimal != 0\n        s = \"db\" * decimal % 2 * \"\
    1\" * (decimal % 2 == 0) * \"0\" * s\n        decimal = decimal \xF7 2\n    end\n\
    \    return s * \"db\"\nend\nprintln(decimal_to_binary(15))\nprintln(decimal_to_binary(32))\n\
    println(decimal_to_binary(0))\nprintln(decimal_to_binary(100))\nprintln(decimal_to_binary(10))\n\
    println(decimal_to_binary(5))\nprintln(decimal_to_binary(16))\nprintln(decimal_to_binary(63))\n\
    println(decimal_to_binary(61))\nprintln(decimal_to_binary(62))\nprintln(decimal_to_binary(89))\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching *(::String, ::Int64)'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        return \"Error: negative number\"\n    end\n \
    \   result = \"db\"\n    while decimal > 0\n        result = string(decimal %\
    \ 2) * result\n        decimal = decimal >> 1\n    end\n    return result * \"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprgmaevvx.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgmaevvx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgmaevvx.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprgmaevvx.jl:29\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgmaevvx.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgmaevvx.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprgmaevvx.jl:30\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgmaevvx.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgmaevvx.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprgmaevvx.jl:31\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgmaevvx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgmaevvx.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprgmaevvx.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Can't use Dict, so need to store them in the array\n    binary_values\
    \ = String[]\n    for i in 0:decimal\n        base10, remainder = divrem(i, 2)\n\
    \        push!(binary_values, remainder)\n    end\n    \"db\" * join(reverse(binary_values))\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmdkb86ms.jl:26\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpmdkb86ms.jl:17\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmdkb86ms.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmdkb86ms.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmdkb86ms.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpmdkb86ms.jl:17\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmdkb86ms.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    #This function returns a string representation of the binary number\n\
    \    #Append the string with db at the beginning and end \n    #If the input number\
    \ is negative, first convert to positive, convert the positive number to binary,\
    \ then add a leading 1 to the binary representation\n    #If the input number\
    \ is positive, convert the positive number to binary, then add a leading 0 to\
    \ the binary representation\n    if decimal < 0\n        binary = string(binary(abs(decimal)))\n\
    \        binary = \"1\"*(8-length(binary))*string(binary)\n    else\n        binary\
    \ = string(binary(decimal))\n        binary = \"0\"*(8-length(binary))*string(binary)\n\
    \    end\n    return \"db\"*string(binary)*\"db\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl56lubla.jl:31\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpl56lubla.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl56lubla.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl56lubla.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpl56lubla.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpl56lubla.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl56lubla.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl56lubla.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpl56lubla.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpl56lubla.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl56lubla.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl56lubla.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpl56lubla.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpl56lubla.jl:0\n\
    \   [2] macro expansion\n     @ /shared/cen"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl56lubla.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"db\" * bin(decimal)[2:end] * \"db\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp19xw1bvi.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: bin not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp19xw1bvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp19xw1bvi.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp19xw1bvi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp19xw1bvi.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp19xw1bvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp19xw1bvi.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp19xw1bvi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp19xw1bvi.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp19xw1bvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp19xw1bvi.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp19xw1bvi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp19xw1bvi.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp19xw1bvi.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp19xw1bvi.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    string_decimal = string(decimal)\n    string_binary = string(\"db\") *\
    \ string(decimal, base=2) * string(\"db\")\n    return string_binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    decimal_remainder = decimal%2 \n    decimal_quotient = decimal/2\n   \
    \ if decimal_quotient == 0 \n        binary_format = \"db$decimal_remainder\"\n\
    \    else\n        binary_format = \"$(decimal_to_binary(decimal_quotient))$decimal_remainder\"\
    \n    end\n    return binary_format\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpht949w6p.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db0\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpht949w6p.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpht949w6p.jl:26\ntest set: Error\
    \ During Test at /tmp/tmpht949w6p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching decimal_to_binary(::Float64)\n\
    \  Closest candidates are:\n    decimal_to_binary(!Matched::Int64) at /tmp/tmpht949w6p.jl:12\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpht949w6p.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpht949w6p.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpht949w6p.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpht949w6p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching decimal_to_binary(::Float64)\n\
    \  Closest candidates are:\n    decimal_to_binary(!Matched::Int64) at /tmp/tmpht949w6p.jl:12\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpht949w6p.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpht949w6p.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpht949w6p.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpht949w6p.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  MethodError: no method matching decimal_to_binary(::F"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpht949w6p.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    result = \"db\"\n    while decimal > 0\n        push!(result,(decimal\
    \ % 2))\n        decimal = div(decimal,2)\n    end\n    return \"db\" * reverse(string(result))\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp48dwdrtu.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbbddb\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48dwdrtu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48dwdrtu.jl:24\ntest set: Error\
    \ During Test at /tmp/tmp48dwdrtu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp48dwdrtu.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp48dwdrtu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp48dwdrtu.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp48dwdrtu.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp48dwdrtu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = floor(decimal / 2)\n    end\n    return binary * \"\
    db\"\nend\ndecimal_to_binary(15)\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4tb50uhv.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tb50uhv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tb50uhv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4tb50uhv.jl:27\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db00.00.00.00.01.0db\" == \"db100000db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tb50uhv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tb50uhv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4tb50uhv.jl:28\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db11.01.00.00.01.01.0db\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tb50uhv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tb50uhv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4tb50uhv.jl:29\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db11.01.01.0db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4tb50uhv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4tb50uhv.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4tb50uhv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> join(convert(Int64, x) for x in bits(decimal)) *> \"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsci4xyzq.jl:13\nin expression starting at\
    \ /tmp/tmpsci4xyzq.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # This is the function's body\n    return \"db\".*string(decimal_to_binary_internal(decimal)).*\"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5088rj7z.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: decimal_to_binary_internal\
    \ not defined\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @\
    \ Main /tmp/tmp5088rj7z.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5088rj7z.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5088rj7z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5088rj7z.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: decimal_to_binary_internal\
    \ not defined\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @\
    \ Main /tmp/tmp5088rj7z.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5088rj7z.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5088rj7z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5088rj7z.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: decimal_to_binary_internal\
    \ not defined\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @\
    \ Main /tmp/tmp5088rj7z.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5088rj7z.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5088rj7z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5088rj7z.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: decimal_to_binary_internal not\
    \ defined\n  Stacktrace:\n   [1] decimal_to_binary(decimal:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5088rj7z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    x = \"db\"\n    i = 0\n    while decimal > 0\n        if decimal % 2 ==\
    \ 0\n            x = x * \"0\"\n        else\n            x = x * \"1\"\n    \
    \    end\n        decimal = round(Int64, decimal / 2)\n    end\n    x = \"db\"\
    \ * x * \"db\"\n    return x\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj0mcgzgv.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdbdb\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0mcgzgv.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0mcgzgv.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpj0mcgzgv.jl:32\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"dbdb000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0mcgzgv.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0mcgzgv.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpj0mcgzgv.jl:33\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"dbdb10010101db\" == \"db1100111db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0mcgzgv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0mcgzgv.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpj0mcgzgv.jl:34\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"dbdb10001db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0mcgzgv.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0mcgzgv.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0mcgzgv.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n  # conversion logic\nend\n \n \n \"\"\"Python has a built-in function ord()\
    \ which returns the ASCII code of a character\n    and chr() which returns the\
    \ character with the given ASCII code. \n    Write a function to_binary() which\
    \ takes a string (assumed to be plain text) as a parameter and returns a string,\
    \ \n    which is the binary representation of the given string, with spaces in\
    \ between each number.\n   \n    Example: \n    to_binary(\"Hello\")  # returns\
    \ \"01001000 01100101 01101100 01101100 01101111\"\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpjwfjkvaa.jl:17\nin expression starting at /tmp/tmpjwfjkvaa.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"\"\n    while decimal > 0\n        rem = decimal % 2\n       \
    \ bin = string(rem, bin)\n        decimal = decimal \xF7 2\n    end\n    return\
    \ \"db\" * bin * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsz3du0s6.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsz3du0s6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsz3du0s6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsz3du0s6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"Your code goes here\"\"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn4pp7ede.jl:20\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"Your code goes here\" == \"db0db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pp7ede.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pp7ede.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpn4pp7ede.jl:21\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"Your code goes here\" == \"db100000db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pp7ede.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pp7ede.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpn4pp7ede.jl:22\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"Your code goes here\" == \"db1100111db\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pp7ede.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pp7ede.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpn4pp7ede.jl:23\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"Your code goes here\" == \"db1111db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4pp7ede.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4pp7ede.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4pp7ede.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    output = \"db\"\n    for i in 0:61\n        push!(output, (decimal >>\
    \ i) & 1)\n    end\n    push!(output, \"db\")\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcvm2cdii.jl:25\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpcvm2cdii.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcvm2cdii.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcvm2cdii.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpcvm2cdii.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpcvm2cdii.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcvm2cdii.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcvm2cdii.jl:24\ntest set:\
    \ Error During"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcvm2cdii.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = string(decimal, base=2)\n    return \"db\" * bin * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    my_string = \"db\"\n    while decimal > 0\n        my_string = my_string\
    \ * decimal % 2\n        decimal = decimal // 2\n    end\n    return my_string\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvte3ws1b.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpvte3ws1b.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpvte3ws1b.jl:24\\ntest set: Error\
    \ During Test at /tmp/tmpvte3ws1b.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching *(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\n\
    \    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpvte3ws1b.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvte3ws1b.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvte3ws1b.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal > 127\n        return \"db11111111\"\n    end\n    binary =\
    \ \"\"\n    while decimal != 0\n        decimal, rem = divrem(decimal, 2)\n  \
    \      binary = string(rem) * binary\n    end\n    return \"db\" * binary * \"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp91dnwwca.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91dnwwca.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91dnwwca.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91dnwwca.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    s = \"\"\n    while decimal != 0\n        remainder = decimal % 2\n  \
    \      if remainder == 0\n            s = \"0\" * s\n        else\n          \
    \  s = \"1\" * s\n        end\n        decimal = decimal \xF7 2\n    end\n   \
    \ return \"db\" * s * \"db\"\nend\ndecimal_to_binary(15)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp350dshyy.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp350dshyy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp350dshyy.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp350dshyy.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    if decimal == 0\n        binary = binary * \"0\"\n\
    \    else\n        while decimal > 0\n            if decimal % 2 == 0\n      \
    \          binary = binary * \"0\"\n            else\n                binary =\
    \ binary * \"1\"\n            end\n            decimal = floor(decimal / 2)\n\
    \        end\n    end\n    return reverse(binary) * \"db\"\nend\ndecimal_to_binary(15)\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb5u2yllu.jl:34\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"0bddb\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5u2yllu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5u2yllu.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpb5u2yllu.jl:35\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000bddb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5u2yllu.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5u2yllu.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpb5u2yllu.jl:36\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111bddb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5u2yllu.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5u2yllu.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpb5u2yllu.jl:37\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111bddb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5u2yllu.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5u2yllu.jl:33\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5u2yllu.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal_to_binary(decimal) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = string(decimal, base=2)\n    binary = \"db\" *> binary *> \"\
    db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswtiemy6.jl:14\nin expression starting at\
    \ /tmp/tmpswtiemy6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    str = \"db\"\n    i = 32\n    while i > 0\n        if decimal >= 2^(i-1)\n\
    \            str = str * \"1\"\n            decimal = decimal - 2^(i-1)\n    \
    \    else\n            str = str * \"0\"\n        end\n        i = i - 1\n   \
    \ end\n    str = str * \"db\"\n    return str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0mgrou1f.jl:32\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db00000000000000000000000000000000db\" == \"db0db\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mgrou1f.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mgrou1f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0mgrou1f.jl:33\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db00000000000000000000000000100000db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mgrou1f.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mgrou1f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0mgrou1f.jl:34\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db00000000000000000000000001100111db\" == \"db1100111db\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mgrou1f.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mgrou1f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0mgrou1f.jl:35\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db00000000000000000000000000001111db\" == \"db1111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mgrou1f.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mgrou1f.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0mgrou1f.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    s = \"\"\n    i = decimal\n    while i > 0\n        s = string(i % 2)\
    \ * s\n        i = i \xF7 2\n    end\n    return \"db\" * s * \"db\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph78pslkn.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph78pslkn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph78pslkn.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph78pslkn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp1dtpxmbn.jl:12 expected\
    \ \"end\", got \"\"\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1dtpxmbn.jl:13\n\
    in expression starting at /tmp/tmp1dtpxmbn.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # decimal_to_binary is your function name\n    # Int64 is the data type\
    \ of parameter, it can be changed to another data type\n    # String is the return\
    \ data type, it can be changed to another data type\n    # The above line of code\
    \ shows you the general format of the function declaration\n    # Your code should\
    \ look like this\n    # ...\n    # Return your answer\n    # ...\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm5u2o0x6.jl:27\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpm5u2o0x6.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm5u2o0x6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm5u2o0x6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpm5u2o0x6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpm5u2o0x6.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm5u2o0x6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm5u2o0x6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        throw(DomainError(\"decimal_to_binary: only positive\
    \ numbers accepted\"))\n    end\n    n = Int(log2(decimal)) + 1\n    s = \"db\"\
    \n    for i in 0:n-1\n        s = s * (1 + floor(decimal/2^i)) \n        decimal\
    \ = decimal % 2^i\n    end\n    s = s * \"db\"\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxzruhor6.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  InexactError: Int64(-Inf)\\\
    n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] decimal_to_binary(decimal::Int64)\\\
    n     @ Main /tmp/tmpxzruhor6.jl:16\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxzruhor6.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxzruhor6.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpxzruhor6.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching *(::String,\
    \ ::Float64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    *(::Union{AbstractChar,\
    \ AbstractString}, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:183\\\
    n    ...\\n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main\
    \ /tmp/tmpxzruhor6.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxzruhor6.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxzruhor6.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpxzruhor6.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(103) == \"db1100111db\"\\n  InexactError: Int64(6.6865005271832185)\\\
    n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] decimal_to_binary(decimal::Int64)\\\
    n     @ Main /tmp/tmpxzruhor6.jl:16\\n   [3] macro expansion\\n "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = dec2bin(decimal)\n    return \"db\" * bin * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnjnn3fue.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: dec2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpnjnn3fue.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnjnn3fue.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnjnn3fue.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnjnn3fue.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpnjnn3fue.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnjnn3fue.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnjnn3fue.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnjnn3fue.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpnjnn3fue.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnjnn3fue.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnjnn3fue.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnjnn3fue.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpnjnn3fue.jl:13\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjnn3fue.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4o7e51m2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp4o7e51m2.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4o7e51m2.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4o7e51m2.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp4o7e51m2.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp4o7e51m2.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4o7e51m2.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4o7e51m2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    d = divide(decimal, 2)\n    r = mod(decimal, 2)\n    if decimal < 2\n\
    \        return decimal\n    else\n        return decimal_to_binary(d) * string(r)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8lkqdtxx.jl:26\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: divide not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp8lkqdtxx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8lkqdtxx.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8lkqdtxx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8lkqdtxx.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: divide not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp8lkqdtxx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8lkqdtxx.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8lkqdtxx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8lkqdtxx.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: divide not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp8lkqdtxx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8lkqdtxx.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8lkqdtxx.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8lkqdtxx.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: divide not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp8lkqdtxx.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lkqdtxx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin_str = \"db\"\n    while decimal > 0\n        bin_str = bin_str * ((decimal\
    \ % 2 == 0) ? \"0\" : \"1\")\n        decimal = decimal \xF7 2\n    end\n    return\
    \ bin_str * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmposszx0f4.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposszx0f4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposszx0f4.jl:24\ntest set: Test\
    \ Failed at /tmp/tmposszx0f4.jl:26\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposszx0f4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposszx0f4.jl:24\ntest set: Test\
    \ Failed at /tmp/tmposszx0f4.jl:27\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposszx0f4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposszx0f4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmposszx0f4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3ux47ppa.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp3ux47ppa.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ux47ppa.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ux47ppa.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3ux47ppa.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp3ux47ppa.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ux47ppa.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ux47ppa.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert the number to binary using string\n    # pad 0 to the beginning\
    \ of the string if its size is odd\n    # prepend db to the beginning and append\
    \ db to the end of the string\n    # append '0' to the string if size is odd\n\
    \    # prepend '0' to the string if size is odd\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxraitsnb.jl:24\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpxraitsnb.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxraitsnb.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxraitsnb.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxraitsnb.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpxraitsnb.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxraitsnb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxraitsnb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    val, remain, result\
    \ = divrem(decimal, 2)\n    result = Int64(bitstring(remain))\n    while val !=\
    \ 0\n        val, remain, result = divrem(val, 2)\n        result = Int64(bitstring(remain))\
    \ * 10 + result\n    end\n    \"db\" * string(result) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3fq5p35_.jl:30\n  Test threw exception\n\
    \  Expression: candidate(32) == \"db100000db\"\n  BoundsError: attempt to access\
    \ Tuple{Int64, Int64} at index [3]\n  Stacktrace:\n   [1] indexed_iterate\n  \
    \   @ ./tuple.jl:89 [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n    \
    \ @ Main /tmp/tmp3fq5p35_.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3fq5p35_.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3fq5p35_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp3fq5p35_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  BoundsError: attempt to access Tuple{Int64,\
    \ Int64} at index [3]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89\
    \ [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp3fq5p35_.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3fq5p35_.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3fq5p35_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp3fq5p35_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  BoundsError: attempt to access Tuple{Int64,\
    \ Int64} at index [3]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89\
    \ [inlined]\n   [2] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp3fq5p35_.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3fq5p35_.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3fq5p35_.jl:28\nTest Summary:\
    \ | Pass  Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3fq5p35_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # 1. Your code here\n    return \"db\" *string(decimal,\"b\")* \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_3buuyh.jl:21\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"db0bdb\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_3buuyh.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_3buuyh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpf_3buuyh.jl:22\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db32bdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_3buuyh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_3buuyh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpf_3buuyh.jl:23\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db103bdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_3buuyh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_3buuyh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpf_3buuyh.jl:24\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db15bdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_3buuyh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_3buuyh.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_3buuyh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = dec2bin(decimal)\n    \"db\" * bin * \"db\"\nend\n```\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjrcjwz9u.jl:16\nin expression starting at\
    \ /tmp/tmpjrcjwz9u.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # TODO: return a string to represent the binary number\nend\n \ndecimal_to_binary(32)\
    \   # returns \"db100000db\"\n \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\nClosest candidates are:\n  convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \  convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \  ...\nStacktrace:\n [1] decimal_to_binary(decimal::Int64)\n   @ Main /tmp/tmpt98bap8x.jl:14\n\
    \ [2] top-level scope\n   @ /tmp/tmpt98bap8x.jl:16\nin expression starting at\
    \ /tmp/tmpt98bap8x.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin_str = \"\"\n    for each in 'db'\n        bin_str *= each\n    end\n\
    \    for each in int2bin(decimal)\n        bin_str *= string(each)\n    end\n\
    \    for each in 'db'\n        bin_str *= each\n    end\n    return bin_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpo08wa1nf.jl:14\nin expression\
    \ starting at /tmp/tmpo08wa1nf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binstr = \"\"\n    if decimal==0\n        binstr = \"db0db\"\n    else\n\
    \        binstr = \"db\"\n        while decimal>0\n            binstr = binstr\
    \ * string(decimal%2)\n            decimal = decimal/2\n        end\n        binstr\
    \ = binstr * \"db\"\n    end\n    return binstr\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnljqv4a3.jl:32\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db00.00.00.00.01.00.50.250.1250.06250.031250.0156250.00781250.003906250.0019531250.00097656250.000488281250.0002441406250.00012207031256.103515625e-53.0517578125e-51.52587890625e-57.62939453125e-63.814697265625e-61.9073486328125e-69.5367431640625e-74.76837158203125e-72.384185791015625e-71.1920928955078125e-75.960464477539063e-82.9802322387695312e-81.4901161193847656e-87.450580596923828e-93.725290298461914e-91.862645149230957e-99.313225746154785e-104.656612873077393e-102.3283064365386963e-101.1641532182693481e-105.820766091346741e-112.9103830456733704e-111.4551915228366852e-117.275957614183426e-123.637978807091713e-121.8189894035458565e-129.094947017729282e-134.547473508864641e-132.2737367544323206e-131.1368683772161603e-135.684341886080802e-142.842170943040401e-141.4210854715202004e-147.105427357601002e-153.552713678800501e-151.7763568394002505e-158.881784197001252e-164.440892098500626e-162.220446049250313e-161.1102230246251565e-165.551115123125783e-172.7755575615628914e-171.3877787807814457e-176.938893903907228e-183.469446951953614e-181.734723475976807e-188.673617379884035e-194.336808689942018e-192.168404344971009e-191.0842021724855044e-195.421010862427522e-202.710505431213761e-201.3552527156068805e-206.776263578034403e-213.3881317890172014e-211.6940658945086007e-218.470329472543003e-224.235164736271502e-222.117582368135751e-221.0587911840678754e-225.293955920339377e-232.6469779601696886e-231.3234889800848443e-236.617444900424222e-243.308722450212111e-241.6543612251060553e-248.271806125530277e-254.1359030627651384e-252.0679515313825692e-251.0339757656912846e-255.169878828456423e-262.5849394142282115e-261.2924697071141057e-266.462348535570529e-273.2311742677852644e-271.6155871338926322e-278.077935669463161e-284.0389678347315804e-282.0194839173657902e-281.0097419586828951e-285.048709793414476e-292.524354896707238e-291.262177448353619e-296.310887241768095e-303.1554436208840472e-301.5777218104420236e-307.888609"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnljqv4a3.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"*ones(Int8, decimal)\n    binary = binary .| \"db\"\n \
    \   return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyjmdj48p.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Vector{Int8})\\n  Closest candidates are:\\n    *(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    *(::Union{AbstractChar,\
    \ AbstractString}, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:183\\\
    n    ...\\n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main\
    \ /tmp/tmpyjmdj48p.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyjmdj48p.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyjmdj48p.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = int2bin(decimal)\n    return \"db\" * binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm1u5nal4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: int2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm1u5nal4.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm1u5nal4.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm1u5nal4.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm1u5nal4.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm1u5nal4.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm1u5nal4.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm1u5nal4.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm1u5nal4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm1u5nal4.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm1u5nal4.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm1u5nal4.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm1u5nal4.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpm1u5nal4.jl:13\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm1u5nal4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    tmp = \"\"\n    while decimal != 0\n        tmp = \"db\" * decimal % 2\
    \ + tmp\n        decimal = decimal / 2\n    end\n    return tmp\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpshy5bsom.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"\" == \"db0db\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpshy5bsom.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpshy5bsom.jl:24\\ntest set: Error\
    \ During Test at /tmp/tmpshy5bsom.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching *(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\n\
    \    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpshy5bsom.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpshy5bsom.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpshy5bsom.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    (digits, rem) = divide(decimal, 2)\n    if rem == 0\n        return decimal_to_binary(digits)\
    \ * \"0\"\n    elseif rem == 1\n        return decimal_to_binary(digits) * \"\
    1\"\n    else\n        return \"db\" * decimal_to_binary(decimal) * \"db\"\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjg8a3dqa.jl:27\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: divide not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpjg8a3dqa.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjg8a3dqa.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjg8a3dqa.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjg8a3dqa.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: divide not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpjg8a3dqa.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjg8a3dqa.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjg8a3dqa.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjg8a3dqa.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: divide not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpjg8a3dqa.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjg8a3dqa.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjg8a3dqa.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpjg8a3dqa.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: divide not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpjg8a3dqa.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjg8a3dqa.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    #' Function to convert the decimal number to a binary number '\n    #'\
    \ Input: Decimal number (Int64)\n    #' Output: Binary number (String) '\n   \
    \ bin::Array{Char,1} = zeros(Int8,0)\n    if decimal == 0\n        return \"db0db\"\
    \n    end\n    while decimal != 0\n        push!(bin,(decimal%2)+'0')\n      \
    \  decimal = decimal//2\n    end\n    bin = reverse(bin)\n    pushfirst!(bin,('d'))\n\
    \    pushfirst!(bin,('b'))\n    push!(bin,('d'))\n    push!(bin,('b'))\n    bin\
    \ = string(bin)\n    return bin\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa5o80exz.jl:38\n  Test threw exception\n\
    \  Expression: candidate(32) == \"db100000db\"\n  MethodError: no method matching\
    \ +(::Rational{Int64}, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(::Rational, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/rational.jl:311\n\
    \    +(!Matched::Integer, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpa5o80exz.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa5o80exz.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa5o80exz.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpa5o80exz.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching +(::Rational{Int64},\
    \ ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(::Rational,\
    \ !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/rational.jl:311\n\
    \    +(!Matched::Integer, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpa5o80exz.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa5o80exz.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa5o80exz.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpa5o80exz.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(15)"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa5o80exz.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        decimal, remainder =\
    \ divrem(decimal, 2)\n        if remainder == 0\n            push!(binary, '0')\n\
    \        else\n            push!(binary, '1')\n        end\n    end\n    return\
    \ reverse(binary) * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmaet0q0m.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"bddb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmaet0q0m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmaet0q0m.jl:28\ntest set: Error\
    \ During Test at /tmp/tmpmaet0q0m.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpmaet0q0m.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmaet0q0m.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmaet0q0m.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpmaet0q0m.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmaet0q0m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binstr = \"db\"\n    while decimal > 0\n        binstr = binstr * (decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binstr = binstr * \"db\"\
    \n    return binstr\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0l18mjws.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp0l18mjws.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp0l18mjws.jl:25\\ntest set: Error\
    \ During Test at /tmp/tmp0l18mjws.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching *(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\n\
    \    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmp0l18mjws.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0l18mjws.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0l18mjws.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    s = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n    \
    \        s = \"0\" * s\n        else\n            s = \"1\" * s\n        end\n\
    \        decimal = div(decimal, 2)\n    end\n    return s * \"db\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeyjwa1po.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyjwa1po.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyjwa1po.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpeyjwa1po.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyjwa1po.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyjwa1po.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpeyjwa1po.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyjwa1po.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyjwa1po.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpeyjwa1po.jl:32\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyjwa1po.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyjwa1po.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeyjwa1po.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    bin = bin * decimal # bin = bin * (1:decimal-1)\n  \
    \  return bin * \"1\" * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprca2hy7d.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmprca2hy7d.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprca2hy7d.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprca2hy7d.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    temp = binary(decimal)\n    string(\"db\",temp,\"db\")\nend\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7u9ajg97.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7u9ajg97.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7u9ajg97.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7u9ajg97.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7u9ajg97.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7u9ajg97.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7u9ajg97.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7u9ajg97.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7u9ajg97.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7u9ajg97.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7u9ajg97.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7u9ajg97.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7u9ajg97.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7u9ajg97.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7u9ajg97.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = string(decimal)\n    binary = \"db\"*binary*\"db\"\n    return\
    \ binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpahrrc9mx.jl:23\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db32db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahrrc9mx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahrrc9mx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpahrrc9mx.jl:24\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db103db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahrrc9mx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahrrc9mx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpahrrc9mx.jl:25\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db15db\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahrrc9mx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahrrc9mx.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahrrc9mx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal_to_binary(decimal) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * zero_pad(dec2bin(decimal)) * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp90ivrtgh.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: dec2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp90ivrtgh.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp90ivrtgh.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp90ivrtgh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp90ivrtgh.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp90ivrtgh.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp90ivrtgh.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp90ivrtgh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp90ivrtgh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp90ivrtgh.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp90ivrtgh.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp90ivrtgh.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp90ivrtgh.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: dec2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp90ivrtgh.jl:13\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp90ivrtgh.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = convert(Int64, decimal, base=2)\n    return \"db\" * string(binary)\
    \ * \"db\"\nend\n \n \n\"\"\"You will be given a string which will be in the form\
    \ of a binary number.\n    Your task is to convert it to decimal form.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphto11gok.jl:18\nin expression starting at\
    \ /tmp/tmphto11gok.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbrsea2_v.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String)\\n     @ Base ./operators.jl:655\\\
    n   [2] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpbrsea2_v.jl:13\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbrsea2_v.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbrsea2_v.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    dec = decimal\n    bin = \"\"\n    while dec > 0\n        bin = string(dec\
    \ % 2) * bin\n        dec = div(dec, 2)\n    end\n    return \"db\" * bin * \"\
    db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6l_s9ptl.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l_s9ptl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l_s9ptl.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6l_s9ptl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    n = decimal\n    i = 0\n    s = \"\"\n    while n>0\n        s = \"db\"\
    \ * i * 2 * (n%2==0) * i * 2 * (n%2==1) * 1 * (n%2==1) * i * 2 * (n%2==0) * \"\
    db\"\n        i += 1\n        n = div(n,2)\n    end\n    return s\nend\ndecimal_to_binary(15)\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching *(::String, ::Int64)'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = string(bin(decimal))[3:end] # remove the \"0b\" from binary string\n\
    \    binary = \"db\" * (8 - length(binary)) * \"1\" * binary * \"db\" # pad leading\
    \ zeros until length=8\n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7gj4lk4m.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: bin not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7gj4lk4m.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7gj4lk4m.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7gj4lk4m.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7gj4lk4m.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7gj4lk4m.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7gj4lk4m.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7gj4lk4m.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7gj4lk4m.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7gj4lk4m.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7gj4lk4m.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7gj4lk4m.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp7gj4lk4m.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp7gj4lk4m.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7gj4lk4m.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin_str = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n\
    \            bin_str = \"0\" * bin_str\n        else\n            bin_str = \"\
    1\" * bin_str\n        end\n        decimal = trunc(Int64, decimal / 2)\n    end\n\
    \    return bin_str * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9j_61vip.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9j_61vip.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9j_61vip.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9j_61vip.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"100000dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9j_61vip.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9j_61vip.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9j_61vip.jl:31\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"1100111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9j_61vip.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9j_61vip.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9j_61vip.jl:32\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"1111dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9j_61vip.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9j_61vip.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9j_61vip.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    temp_str = Int64(binary(decimal)) \n    return \"db\" * string(temp_str)\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5tbv89pt.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5tbv89pt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tbv89pt.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tbv89pt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5tbv89pt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5tbv89pt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tbv89pt.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tbv89pt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5tbv89pt.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5tbv89pt.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tbv89pt.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tbv89pt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5tbv89pt.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5tbv89pt.jl:13\n\
    \   [2] macro expansion\n     @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5tbv89pt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Write your code here.\nend\n\"\"\"Tests\"\"\"\n@testset \"Converting\
    \ a decimal number to binary\" begin\n    @test decimal_to_binary(15) == \"db1111db\"\
    \n    @test decimal_to_binary(32) == \"db100000db\"\n    @test decimal_to_binary(120)\
    \ == \"db1111000db\"\n    @test decimal_to_binary(1024) == \"db10000000000db\"\
    \nend\n \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n\
    \ [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode,\
    \ mod::Module, meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs\
    \ ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n\
    \   @ Core ./boot.jl:517\nin expression starting at /tmp/tmpkdl62q76.jl:15\nin\
    \ expression starting at /tmp/tmpkdl62q76.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    bin_str = \"\"\
    \n    while decimal != 0\n        rem = decimal % 2\n        decimal = decimal\
    \ \xF7 2\n        push!(bin_str, rem)\n    end\n    bin_str = \"db\" * reverse(bin_str)\
    \ * \"db\"\n    return bin_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzvaftxyl.jl:31\n  Test threw exception\n\
    \  Expression: candidate(32) == \"db100000db\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpzvaftxyl.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzvaftxyl.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzvaftxyl.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzvaftxyl.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpzvaftxyl.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzvaftxyl.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzvaftxyl.jl:29\ntest set:\
    \ Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzvaftxyl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    n = 0\n    while 2^n < decimal\n        n += 1\n    end\n    binary =\
    \ String(\"db\")\n    for i in (n-1):-1:0\n        binary *= string(floor(decimal/(2^i)))\n\
    \        decimal -= (2^i)*floor(decimal/(2^i))\n    end\n    binary *= \"db\"\n\
    \    return binary\nend\n    \ndecimal_to_binary(2^3)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp97_bz0w9.jl:32\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp97_bz0w9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp97_bz0w9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp97_bz0w9.jl:33\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db2.00.00.00.00.0db\" == \"db100000db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp97_bz0w9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp97_bz0w9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp97_bz0w9.jl:34\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1.01.00.00.01.01.01.0db\" == \"db1100111db\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp97_bz0w9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp97_bz0w9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp97_bz0w9.jl:35\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"db1.01.01.01.0db\" == \"db1111db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp97_bz0w9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp97_bz0w9.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97_bz0w9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = string(decimal, base=2)\n    \"db\" * binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    s = \"\"\n    while decimal > 0\n        # if (decimal%2 == 0)\n     \
    \   #     s = \"0\"\n        # else\n        #     s = \"1\"\n        s = string(decimal%2)\
    \ * s\n        decimal = decimal / 2\n    end\n    return \"db\" * s * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ezvlwqm.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ezvlwqm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ezvlwqm.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp0ezvlwqm.jl:30\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db5.0e-3241.0e-3232.0e-3234.0e-3238.0e-3231.6e-3223.16e-3226.3e-3221.265e-3212.53e-3215.06e-3211.012e-3202.0237e-3204.0474e-3208.095e-3201.61895e-3193.2379e-3196.4758e-3191.295163e-3182.590327e-3185.180654e-3181.036131e-3172.0722615e-3174.144523e-3178.289046e-3171.6578092e-3163.3156184e-3166.63123685e-3161.32624737e-3152.65249474e-3155.304989477e-3151.0609978955e-3142.121995791e-3144.243991582e-3148.487983164e-3141.69759663277e-3133.39519326554e-3136.7903865311e-3131.35807730622e-3122.716154612436e-3125.43230922487e-3121.086461844974e-3112.1729236899484e-3114.345847379897e-3118.691694759794e-3111.73833895195875e-3103.4766779039175e-3106.953355807835e-3101.390671161567e-3092.781342323134e-3095.562684646268003e-3091.1125369292536007e-3082.2250738585072014e-3084.450147717014403e-3088.900295434028806e-3081.7800590868057611e-3073.5601181736115222e-3077.120236347223045e-3071.424047269444609e-3062.848094538889218e-3065.696189077778436e-3061.1392378155556871e-3052.2784756311113742e-3054.5569512622227484e-3059.113902524445497e-3051.8227805048890994e-3043.645561009778199e-3047.291122019556398e-3041.4582244039112795e-3032.916448807822559e-3035.832897615645118e-3031.1665795231290236e-3022.3331590462580472e-3024.6663180925160944e-3029.332636185032189e-3021.8665272370064378e-3013.7330544740128755e-3017.466108948025751e-3011.4932217896051502e-3002.9864435792103004e-3005.972887158420601e-3001.1945774316841202e-2992.3891548633682403e-2994.778309726736481e-2999.556619453472961e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ezvlwqm.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal2bin(decimal) * \"db\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_19gbood.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: decimal2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_19gbood.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_19gbood.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_19gbood.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp_19gbood.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: decimal2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_19gbood.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_19gbood.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_19gbood.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp_19gbood.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: decimal2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_19gbood.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_19gbood.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_19gbood.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp_19gbood.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: decimal2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp_19gbood.jl:13\n\
    \   [2] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_19gbood.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    decimal=decimal_to_binary(decimal)\n    println(decimal)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Make sure we are working with positive numbers\n    decimal = abs(decimal)\n\
    \    # Keep the original value of the decimal\n    decimal_original = decimal\n\
    \    # Array to store binary representation of the number\n    binary = []\n \
    \   # Calculate binary representation\n    while decimal != 0\n        push!(binary,\
    \ decimal % 2)\n        decimal = decimal \xF7 2\n    end\n    # Turn into string\n\
    \    binary = join(binary)\n    # Create string with \"db\" at the beginning and\
    \ end\n    binary = \"db\" * binary * \"db\"\n    # If number was originally negative,\
    \ negate the binary representation\n    if decimal_original < 0\n        binary\
    \ = negate_string(binary)\n    end\n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn6_e02qr.jl:39\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6_e02qr.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6_e02qr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpn6_e02qr.jl:40\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6_e02qr.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6_e02qr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpn6_e02qr.jl:41\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"db1110011db\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6_e02qr.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6_e02qr.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6_e02qr.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary=\"\"\n    while decimal>0\n        if decimal%2==0\n          \
    \  decimal=div(decimal,2)\n            push!(binary,\"0\")\n        else\n   \
    \         decimal=div(decimal,2)\n            push!(binary,\"1\")\n        end\n\
    \    end\n    binary=\"db\"*reverse(binary)*\"db\"\n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcyohkf77.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyohkf77.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyohkf77.jl:30\ntest set: Error\
    \ During Test at /tmp/tmpcyohkf77.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpcyohkf77.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcyohkf77.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcyohkf77.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpcyohkf77.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcyohkf77.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    dec = abs(decimal)\n    answer = \"db\"\n    while dec > 0\n        push!(answer,\
    \ (dec % 2))\n        dec = floor(Int64, dec / 2)\n    end\n    push!(answer,\
    \ \"db\")\n    return reverse(answer)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmpbxtsrl.jl:27\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpmpbxtsrl.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmpbxtsrl.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmpbxtsrl.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpmpbxtsrl.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpmpbxtsrl.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmpbxtsrl.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmpbxtsrl.jl:26\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmpbxtsrl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n   \n    return \"db\" * decimal * \"db\"\n    \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz344an4f.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String)\\n     @ Base ./operators.jl:655\\\
    n   [2] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmpz344an4f.jl:14\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz344an4f.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz344an4f.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin_string = Int(decimal, 2) \n    prefix = \"db\"\n    suffix = \"db\"\
    \n    return join([prefix, bin_string, suffix])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5qqawo3j.jl:23\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n\
    \    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5qqawo3j.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5qqawo3j.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5qqawo3j.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5qqawo3j.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:762\n\
    \    (::Type{T})(::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:770\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp5qqawo3j.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5qqawo3j.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5qqawo3j.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5qqawo3j.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UIn"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5qqawo3j.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n  if decimal == 0\n    return \"db0db\"\n  end\n  @assert (decimal >= 0) \"\
    decimal must be greater than or equal to 0\"\n  string = \"db\"\n  n = decimal\n\
    \  while n > 0\n    r = rem(n, 2)\n    n = div(n, 2)\n    push!(string, r)\n \
    \ end\n  append!(string, \"db\")\n  return string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphdeur_re.jl:33\n  Test threw exception\n\
    \  Expression: candidate(32) == \"db100000db\"\n  MethodError: no method matching\
    \ push!(::String, ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmphdeur_re.jl:22\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdeur_re.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdeur_re.jl:31\ntest set:\
    \ Error During Test at /tmp/tmphdeur_re.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmphdeur_re.jl:22\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdeur_re.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdeur_re.jl:31\ntest set:\
    \ Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdeur_re.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    lst = []\n    while decimal > 0\n        if mod(decimal, 2) == 0\n   \
    \         push!(lst, \"0\")\n        else\n            push!(lst, \"1\")\n   \
    \     end\n        decimal = div(decimal, 2)\n    end\n    return \"db\" * join(reverse(lst))\
    \ * \"db\"\nend\n@assert decimal_to_binary(15) == \"db1111db\"\n@assert decimal_to_binary(32)\
    \ == \"db100000db\"\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeg4ithyo.jl:31\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeg4ithyo.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeg4ithyo.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeg4ithyo.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkko78ana.jl:15\nin expression starting at\
    \ /tmp/tmpkko78ana.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    num = convert(String, decimal)\n    n = length(num)\n    r = zeros(Int64,\
    \ n)\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp0x2mxzd.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp0x2mxzd.jl:1\n\
    in expression starting at /tmp/tmpp0x2mxzd.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    # initialize a string to store output\n    binary = \"db\"\n   \
    \ \n    # initialize a loop for the conversion\n    for j = 1:length(string(decimal))\n\
    \        \n        # take a number, double it and save the remainder\n       \
    \ remainder = decimal % 2\n        \n        # add the remainder to the string\n\
    \        binary = string(remainder) * binary\n        \n        # divide the number\
    \ in two, save the floor\n        decimal = decimal \xF7 2\n        \n       \
    \ # if decimal gets to 0, stop the loop\n        if decimal == 0\n           \
    \ break\n        end\n    end\n    \n    # add the last \"db\" to the string\n\
    \    binary = binary * \"db\"\n    \n    # return the string\n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmx5pwhdg.jl:46\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"0dbdb\" == \"db0db\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmx5pwhdg.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmx5pwhdg.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpmx5pwhdg.jl:47\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"00dbdb\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmx5pwhdg.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmx5pwhdg.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpmx5pwhdg.jl:48\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"111dbdb\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmx5pwhdg.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmx5pwhdg.jl:45\ntest set: Test\
    \ Failed at /tmp/tmpmx5pwhdg.jl:49\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"11dbdb\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmx5pwhdg.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmx5pwhdg.jl:45\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmx5pwhdg.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Convert the decimal number to a string of binary digits:\n    binary\
    \ = convert(Int64, decimal, 2)\n    # Add the \"db\" prefix and suffix to the\
    \ string:\n    return \"db\" * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp01mprubx.jl:23\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching convert(::Type{Int64},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    convert(::Type{T}, ::T) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ ::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp01mprubx.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp01mprubx.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp01mprubx.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp01mprubx.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching convert(::Type{Int64},\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    convert(::Type{T}, ::T) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ ::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp01mprubx.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp01mprubx.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp01mprubx.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp01mprubx.jl:25\n  Test threw exception\n  Expression:\
    \ candida"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp01mprubx.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Your code here\n    # Integer to binary\n    # Start with the binary\
    \ representation of n in a list.\n    # (This is especially easy in Python: just\
    \ convert n to a string with bin(), which returns the binary representation of\
    \ n with a leading '0b'. Then make a list from the string and get rid of the '0b'\
    \ at the beginning.)\n    # Now, since the least significant bit is the first\
    \ in the list, we need to reverse the list.\n    # Now, go through the list. If\
    \ you come across a '1', add a 'db' to the beginning of the list. If you come\
    \ across a '0', add a 'db' to the end of the list.\n    # Now, the least significant\
    \ bit is at the end of the list, which is the right order, but there are now 'db's\
    \ in between each digit. Remove the 'db's in between each digit (Hint: use the\
    \ join method).\n    # Congrats! You just converted a number from base 10 to base\
    \ 2!\n    \n    \n    #return dec2bin\n    return \"db\"*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n*n\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpet636x3s.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpet636x3s.jl:1\n\
    in expression starting at /tmp/tmpet636x3s.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = int2bin(decimal)\n    return \"db\" * binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp1d61f4u.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: int2bin not defined\n\
    \  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp1d61f4u.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp1d61f4u.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp1d61f4u.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpp1d61f4u.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp1d61f4u.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp1d61f4u.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp1d61f4u.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpp1d61f4u.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp1d61f4u.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp1d61f4u.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp1d61f4u.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpp1d61f4u.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: int2bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpp1d61f4u.jl:13\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp1d61f4u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    dec_copy = decimal\n    binary = \"db\"\n    while decimal != 0\n    \
    \    binary = binary * decimal%2\n        decimal = decimal \xF7 2\n    end\n\
    \    reverse(binary) * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5zskfm12.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"bddb\" == \"db0db\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp5zskfm12.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp5zskfm12.jl:25\\ntest set: Error\
    \ During Test at /tmp/tmp5zskfm12.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(32) == \"db100000db\"\\n  MethodError: no method matching *(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\n\
    \    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] decimal_to_binary(decimal::Int64)\\n     @ Main /tmp/tmp5zskfm12.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5zskfm12.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5zskfm12.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = bin(decimal)\n    binary = binary[3:end]\n    binary = \"db\"\
    \ * decimal ^ 0 + binary + \"db\"\n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp522gpvsu.jl:23\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  UndefVarError: bin not defined\n \
    \ Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp522gpvsu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp522gpvsu.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp522gpvsu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp522gpvsu.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp522gpvsu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp522gpvsu.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp522gpvsu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp522gpvsu.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp522gpvsu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp522gpvsu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp522gpvsu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp522gpvsu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmp522gpvsu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp522gpvsu.jl:20\n"
  exit_code: 1
  status: SyntaxError

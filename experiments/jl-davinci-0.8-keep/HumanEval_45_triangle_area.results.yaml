name: HumanEval_45_triangle_area
language: jl
results:
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    triangle_area = a * h / 2\n    return triangle_area\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5,\
    \ 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\ntriangle_area(5, 3)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3)\
    \ == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 1/2*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\ntriangle_area(5, 3)\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 1/2*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h)/2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\ntriangle_area(5, 3)\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    0.5 * a * h\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    area = a * h / 2\n    return area\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend;\ntriangle_area(5, 3)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 1/2 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n  a * h / 2.0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    (a * h) / 2\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return Float64(a * h) / 2\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    area = (a * h) / 2\n    return area\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h)/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n  return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\n \n@assert triangle_area(5,\
    \ 3) == 7.5\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5,\
    \ 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    return a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Given length of a side and high return area for\
    \ a triangle.\n    \"\"\"\n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    s = a * h / 2\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\ntriangle_area(5, 3)\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return Float64(a*h)/2\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\n \ntriangle_area(5, 3)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3)\
    \ == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2 \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Area of a triangle with the given side and high\"\
    \"\"\n    return (1/2)*a*h\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    s = a * h / 2\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    area = a * h / 2\n    return area\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 1/2*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Return the area of triangle given side and high.\"\
    \"\"\n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    area = (a * h) / 2\n    return area\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n     return a*h/2\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\ntriangle_area(5, 3)\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (1/2)*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    s = a * h / 2\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (1/2)*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\" \n    Calculate the area of triangle.\n    \"\
    \"\"\n    a * h / 2.0\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return round(0.5*a*h,1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgvytibrj.jl:13\n  Test threw exception\n\
    \  Expression: candidate(5, 3) == 7.5\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, h::Int64)\n     @ Main\
    \ /tmp/tmpgvytibrj.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgvytibrj.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgvytibrj.jl:12\ntest set:\
    \ Error During Test at /tmp/tmpgvytibrj.jl:14\n  Test threw exception\n  Expression:\
    \ candidate(2, 2) == 2.0\n  MethodError: no method matching round(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, h::Int64)\n     @ Main\
    \ /tmp/tmpgvytibrj.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgvytibrj.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvytibrj.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return Float64(a * h) / 2\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Return area from triangle\n    \"\"\"\n    return\
    \ 0.5*a*h\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    (a * h) / 2\nend\nusing Test\n\n@testset begin\n\n\
    candidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n \n    return a*h/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h)/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Calculate the area of a triangle.\n    \n   \
    \ Parameters\n    ----------\n    a : int\n        length of the side of the triangle.\n\
    \    h : int\n        height of the triangle.\n    \n    Returns\n    -------\n\
    \    float\n        area of the triangle.\n    \"\"\"\n    return 0.5 * a * h\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5,\
    \ 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 1/2 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (1/2)*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Given length of a side and high return area for\
    \ a triangle.\n    \"\"\"\n    return (a * h)/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    # r = triarea(a, h)\n    # return r\n    return a *\
    \ h / 2.0\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\ntriangle_area(5, 3)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3)\
    \ == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend;\ntriangle_area(5, 3)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    # body of the function\n    return 0.5*a*h\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3)\
    \ == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h)/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return(0.5 * a * h)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    if a<0 || h<0\n        return -1\n    else\n      \
    \  return 0.5*a*h\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h)/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h)/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\" Returns area of triangle\"\"\"\n    return 0.5\
    \ * a * h\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t\
    @test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10,\
    \ 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\ntriangle_area(5, 3)\nusing Test\n\n\
    @testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2 \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    area = a * h / 2\n    return area\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\
    \t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend;\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"\n    # a: length of a side\n    # h: high\n\
    \    \"\"\"\n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    \"\"\"Given length of a side and high return area for\
    \ a triangle.\"\"\"\n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 0.5*a*h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n  a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n  return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\n    \n\"\"\"Given radius of\
    \ a circle return area.\n    >>> circle_area(3)\n    28.274333882308138\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5,\
    \ 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpzhtxvau_.jl:9\nin expression starting at /tmp/tmpzhtxvau_.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\n\"\"\"Given length of a side\
    \ and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(5,\
    \ 3) == 7.5)\n\t@test(candidate(2, 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp38e0v6uf.jl:8\nin expression starting at /tmp/tmp38e0v6uf.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    s = a * h / 2\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return 1/2 * a * h\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a * h / 2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    a*h/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2, 2) ==\
    \ 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return a * h / 2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given length of a side and high return area for a triangle.\n  \
    \  >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\nfunction triangle_area(a::Int64,\
    \ h::Int64)::Float64 \n    return (a * h) / 2.0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(5, 3) == 7.5)\n\t@test(candidate(2,\
    \ 2) == 2.0)\n\t@test(candidate(10, 8) == 40.0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK

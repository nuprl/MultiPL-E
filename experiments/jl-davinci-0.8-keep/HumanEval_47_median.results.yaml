name: HumanEval_47_median
language: jl
results:
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n   if length(l)%2==0\n    \
    \    return (l[length(l)/2]+l[length(l)/2+1])/2\n    else\n        return l[floor(length(l)/2)]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp31u_ts88.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp31u_ts88.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp31u_ts88.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp31u_ts88.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmp31u_ts88.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp31u_ts88.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp31u_ts88.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp31u_ts88.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmp31u_ts88.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 0.0 of type\
    \ Flo"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l)%2 == 0\n \
    \       return (sort(l)[length(l) \xF7 2] + sort(l)[length(l) \xF7 2 + 1])/2\n\
    \    else\n        return sort(l)[length(l) \xF7 2 + 1]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        return (sort(l)[div(length(l),2)] + sort(l)[div(length(l),2) + 1])/2\n\
    \    else\n        return sort(l)[div(length(l),2) + 1]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    i = length(l)\n    if i\
    \ == 0\n        return NaN\n    end\n    if i % 2 == 0\n        return (sort(l)[i/2]\
    \ + sort(l)[i/2 + 1])/2\n    else\n        return sort(l)[(i+1)/2]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp34tnp1xa.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp34tnp1xa.jl:15\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp34tnp1xa.jl:23 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp34tnp1xa.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmp34tnp1xa.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp34tnp1xa.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp34tnp1xa.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp34tnp1xa.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmp34tnp1xa.jl:25\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (l[div(length(l),2)]\
    \ + l[div(length(l),2)+1])/2\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpi3gxbc17.jl:15\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpi3gxbc17.jl:15 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpi3gxbc17.jl:14\\ntest set: Test\
    \ Failed at /tmp/tmpi3gxbc17.jl:16\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpi3gxbc17.jl:16 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpi3gxbc17.jl:14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return select_kth(l, div(length(l),\
    \ 2) + 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbhqkolp8.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ select_kth not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n\
    \     @ Main /tmp/tmpbhqkolp8.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbhqkolp8.jl:15 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbhqkolp8.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpbhqkolp8.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: select_kth not\
    \ defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpbhqkolp8.jl:8\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbhqkolp8.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbhqkolp8.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpbhqkolp8.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: select_kth not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpbhqkolp8.jl:8\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpbhqkolp8.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbhqkolp8.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpbhqkolp8.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: select_kth not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpbhqkolp8.jl:8\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (sum(l) - maximum(l)\
    \ - minimum(l)) / (length(l) - 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe1c5ytpc.jl:16\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 10.0 == 8.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe1c5ytpc.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe1c5ytpc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe1c5ytpc.jl:18\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: NaN == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe1c5ytpc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe1c5ytpc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe1c5ytpc.jl:19\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 5.8 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe1c5ytpc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe1c5ytpc.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1c5ytpc.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    sorted\
    \ = sort(l)\n    mid = div(n, 2)\n    if n % 2 == 1\n        return sorted[mid\
    \ + 1]\n    else\n        lo = sorted[mid]\n        hi = sorted[mid + 1]\n   \
    \     return (lo + hi) / 2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # Sort l into ascending\
    \ order\n    sl = sort(l)\n    # Get middle element\n    m = length(sl) \xF7 2\n\
    \    # If length is odd, we're done!\n    # If length is even, take the average\
    \ of the two middle elements\n    if length(sl) % 2 == 1\n        return sl[m]\n\
    \    else\n        return (sl[m] + sl[m+1]) / 2\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvbzbn4fl.jl:25\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpvbzbn4fl.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpvbzbn4fl.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    m = sort(l)\n    if length(m)\
    \ % 2 == 0\n        return (m[length(m)//2] + m[length(m)//2 + 1])/2.0\n    else\n\
    \        return m[length(m)//2 + 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0zj7kn5o.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 7//2 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp0zj7kn5o.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp0zj7kn5o.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp0zj7kn5o.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp0zj7kn5o.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3//1 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp0zj7kn5o.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp0zj7kn5o.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp0zj7kn5o.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp0zj7kn5o.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) =="
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        m_even = 0.5 * (l[div(length(l), 2)] + l[div(length(l), 2) + 1])\n  \
    \      return m_even\n    else\n        m_odd = l[div(length(l), 2) + 1]\n   \
    \     return m_odd\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp04_hly9z.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04_hly9z.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04_hly9z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp04_hly9z.jl:22\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04_hly9z.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04_hly9z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp04_hly9z.jl:25\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04_hly9z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04_hly9z.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04_hly9z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l_median = copy(l)\n  \
    \  sort!(l_median)\n    n = length(l_median)\n    if n % 2 == 0\n        (l_median[n/2]\
    \ + l_median[n/2 + 1])/2\n    else\n        l_median[(n+1)/2]\n    end\nend\n\
    \        \nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7mal9rnt.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp7mal9rnt.jl:14\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp7mal9rnt.jl:23 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp7mal9rnt.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmp7mal9rnt.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp7mal9rnt.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp7mal9rnt.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp7mal9rnt.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmp7mal9rnt.jl:25\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  #TODO\n  if length(l)%2==0\n\
    \    println(\"even\")\n    return (l[div(length(l),2)+1]+l[div(length(l),2)])/2\n\
    \  else\n    println(\"odd\")\n    return l[div(length(l),2)+1]\n  end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "odd\ntest set: Test Failed at /tmp/tmpw1uz9d1s.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw1uz9d1s.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw1uz9d1s.jl:21\neven\ntest set:\
    \ Test Failed at /tmp/tmpw1uz9d1s.jl:23\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw1uz9d1s.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw1uz9d1s.jl:21\nodd\neven\nodd\n\
    test set: Test Failed at /tmp/tmpw1uz9d1s.jl:26\n  Expression: candidate([8, 1,\
    \ 3, 9, 9, 2, 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw1uz9d1s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw1uz9d1s.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1uz9d1s.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l_sort = sort(l)\n    n\
    \ = length(l_sort)\n    if n%2 == 0 \n        m = (l_sort[n/2] + l_sort[n/2 +\
    \ 1])/2\n    else \n        m = l_sort[div(n,2) + 1]\n    end\n    return m\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp72iix7j5.jl:23\n  Test threw exception\n\
    \  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n  ArgumentError: invalid\
    \ index: 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n  \
    \    @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n\
    \      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n\
    \    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n  \
    \    @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n \
    \     @ Main /tmp/tmp72iix7j5.jl:11\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp72iix7j5.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp72iix7j5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp72iix7j5.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([6, 5]) == 5.5\n  ArgumentError: invalid index: 1.0 of type Float64\n\
    \  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] median(l::Vector{Int64})\n      @ Main /tmp/tmp72iix7j5.jl:11\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp72iix7j5.jl:25 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp72iix7j5.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp72iix7j5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if (length(l) % 2) == 0\n\
    \        return (l[div(length(l), 2)] + l[div(length(l), 2) + 1]) / 2\n    else\n\
    \        return l[div(length(l), 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpobd9ck3g.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobd9ck3g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobd9ck3g.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpobd9ck3g.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobd9ck3g.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobd9ck3g.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpobd9ck3g.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobd9ck3g.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobd9ck3g.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpobd9ck3g.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (l[length(l) // 2] + l[length(l) // 2 + 1]) / 2\n    else\n  \
    \      return l[(length(l) + 1) // 2]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcvtlrrwi.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3//1 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpcvtlrrwi.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpcvtlrrwi.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpcvtlrrwi.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpcvtlrrwi.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3//1 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpcvtlrrwi.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpcvtlrrwi.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpcvtlrrwi.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpcvtlrrwi.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([5]) == "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    lsort = sort(l)\n    n\
    \ = length(l)\n    if mod(n,2) == 0\n        return (lsort[Int(n/2)] + lsort[Int(n/2)+1])/2\n\
    \    else\n        return lsort[Int(n/2)+1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6obkj124.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmp6obkj124.jl:13\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp6obkj124.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp6obkj124.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp6obkj124.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp6obkj124.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp6obkj124.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp6obkj124.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp6obkj124.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmp6obkj124.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp6obkj124.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp6obkj124.jl:20\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if (n\
    \ % 2 == 0)\n        return (l[n/2]+l[n/2+1])/2\n    else\n        return l[ceil(n/2)]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp56xh9daq.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp56xh9daq.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp56xh9daq.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp56xh9daq.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp56xh9daq.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp56xh9daq.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp56xh9daq.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp56xh9daq.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp56xh9daq.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # sort the list\n    sort!(l)\n\
    \    # find the middle index\n    mid = floor(length(l)/2)\n    # find the median\
    \ of the list\n    if length(l) % 2 == 0\n        return (l[mid] + l[mid+1])/2\n\
    \    else\n        return l[mid]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7s77s8kq.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp7s77s8kq.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp7s77s8kq.jl:24 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp7s77s8kq.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp7s77s8kq.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmp7s77s8kq.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp7s77s8kq.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp7s77s8kq.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp7s77s8kq.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 0.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmp7s77s8kq.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return median_helper(l)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzvgnh4nl.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ median_helper not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpzvgnh4nl.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzvgnh4nl.jl:15 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzvgnh4nl.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpzvgnh4nl.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: median_helper\
    \ not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpzvgnh4nl.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzvgnh4nl.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzvgnh4nl.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpzvgnh4nl.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: median_helper not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpzvgnh4nl.jl:8\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzvgnh4nl.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzvgnh4nl.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpzvgnh4nl.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: median_helper not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpzvg"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    length(l) == 0 && error(\"\
    input list is empty\")\n    if length(l)%2 == 0\n        return (l[length(l)/2]+l[length(l)/2+1])/2\n\
    \    else\n        return l[(length(l)+1)/2]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf4vo2h70.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpf4vo2h70.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpf4vo2h70.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpf4vo2h70.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpf4vo2h70.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpf4vo2h70.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpf4vo2h70.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpf4vo2h70.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpf4vo2h70.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    l =\
    \ sort(l)\n    if iseven(n)\n        return (l[n \xF7 2] + l[n \xF7 2 + 1]) /\
    \ 2\n    else\n        return l[(n + 1) \xF7 2]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9bhqbyjv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9bhqbyjv.jl:1\n\
    in expression starting at /tmp/tmp9bhqbyjv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l_size = length(l) \n \
    \   if l_size % 2 == 0\n        return (l[(l_size/2)] + l[(l_size/2 + 1)])/2\n\
    \    else\n        return l[ceil(l_size/2)]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpezw47opt.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpezw47opt.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpezw47opt.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpezw47opt.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpezw47opt.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpezw47opt.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpezw47opt.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpezw47opt.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpezw47opt.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ % 2 == 0\n        return (l[n/2] + l[n/2 + 1])/2\n    else\n        return l[n/2]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw8jddq9q.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpw8jddq9q.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpw8jddq9q.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpw8jddq9q.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpw8jddq9q.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpw8jddq9q.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpw8jddq9q.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpw8jddq9q.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpw8jddq9q.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 0.5 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpw8jddq9q.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return median(convert(Vector{Float64},\
    \ l))\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (l[div(length(l), 2)] + l[div(length(l), 2) + 1]) / 2\n    else\n\
    \        return l[div(length(l), 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40lpwar3.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40lpwar3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40lpwar3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp40lpwar3.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40lpwar3.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40lpwar3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp40lpwar3.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40lpwar3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40lpwar3.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40lpwar3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    @assert length(l) != 0\
    \ \"Length must be greater than 0\"\n    n = length(l)\n    if n % 2 == 0\n  \
    \      return (l[n\xF72] + l[n\xF72 + 1])\xF72\n    else\n        return l[n\xF7\
    2 + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\
    \t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp242wi2bv.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp242wi2bv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp242wi2bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp242wi2bv.jl:22\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp242wi2bv.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp242wi2bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp242wi2bv.jl:24\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp242wi2bv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp242wi2bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp242wi2bv.jl:25\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp242wi2bv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp242wi2bv.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp242wi2bv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    temp = sort(l)\n    if\
    \ mod(length(temp),2)==0\n        return (temp[Int(length(temp)/2)]+temp[Int(length(temp)/2+1)])/2\n\
    \    else\n        return temp[Int(ceil(length(temp)/2))]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    length_l\
    \ = length(l)\n    if length_l%2 == 0\n        return (l[length_l\xF72]+l[length_l\xF7\
    2+1])/2\n    else\n        return l[(length_l+1)\xF72]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    l = unique(l)\n\
    \    l = reverse(l)\n    l = sort(l)\n    return l[floor(Int64,length(l)/2)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpclo0t7y0.jl:19\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpclo0t7y0.jl:19 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpclo0t7y0.jl:18\\ntest set: Test\
    \ Failed at /tmp/tmpclo0t7y0.jl:20\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 6.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpclo0t7y0.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpclo0t7y0.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n        n = length(l)\n   \
    \     if n % 2 == 0 \n            sorted_l = sort(l)\n            m = n/2\n  \
    \          res = (sorted_l[m]+sorted_l[m+1])/2\n        else\n            sorted_l\
    \ = sort(l)\n            m = (n+1)/2\n            res = sorted_l[m]\n        end\n\
    \        return res\n    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7pjdnjuw.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp7pjdnjuw.jl:16\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp7pjdnjuw.jl:25 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp7pjdnjuw.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmp7pjdnjuw.jl:26\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp7pjdnjuw.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp7pjdnjuw.jl:26 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp7pjdnjuw.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmp7pjdnjuw.jl:27\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    if iseven(length(l))\n\
    \        return( l[round(length(l)/2, digits=1)] )\n    else\n        return(\
    \ (l[ceil(length(l)/2)] + l[floor(length(l)/2)])/2 )\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4_sdzjli.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp4_sdzjli.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp4_sdzjli.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp4_sdzjli.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp4_sdzjli.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp4_sdzjli.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp4_sdzjli.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp4_sdzjli.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp4_sdzjli.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if typeof(l) != Array{Int64,1}\n\
    \        println(\"Not a vector of int\")\n        return \n    end\n    return\
    \ mean(sort(l)[ceil(Int64,length(l)/2):ceil(Int64,length(l)/2+1)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpegclmbcv.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ mean not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @\
    \ Main /tmp/tmpegclmbcv.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpegclmbcv.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpegclmbcv.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpegclmbcv.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpegclmbcv.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpegclmbcv.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpegclmbcv.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpegclmbcv.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [1:2]\\n  Stacktrace:\\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{UnitRange{Int64}})\\n     @ Base ./abstractarray.jl:691\\n   [2] checkbounds\\\
    n     @ ./abstractarray.jl:656 [inlined]\\n   [3] getindex\\n     @ ./array.jl:867\
    \ [inlined]\\n   [4] median(l::Vector{Int64})\\n     @ Main /tmp/tmpegclmbcv.jl:12\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpegclmbcv.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpegclmbcv.jl:18\\nt"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        return (median(sort(l)[(length(l) / 2)]) + median(sort(l)[(length(l)\
    \ / 2) + 1])) / 2\n    else\n        return median(sort(l)[ceil(length(l) / 2)])\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8mnjxl9p.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp8mnjxl9p.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp8mnjxl9p.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp8mnjxl9p.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmp8mnjxl9p.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp8mnjxl9p.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp8mnjxl9p.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp8mnjxl9p.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmp8mnjxl9p.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Flo"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  #Sort the elements of l in\
    \ ascending order\n  #Use bubble sort because we want to be able to see how long\
    \ the operation takes\n  l_sorted = bubblesort(l)\n  #If odd number of elements\
    \ in l\n  if length(l_sorted) % 2 == 1\n    idx = div(length(l_sorted), 2)\n \
    \   m = l_sorted[idx]\n  #Else if even number of elements in l\n  else\n    idx1\
    \ = div(length(l_sorted), 2)\n    idx2 = idx1 - 1\n    m = (l_sorted[idx1] + l_sorted[idx2])\
    \ / 2\n  end\n  return m\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptti6pbjz.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ bubblesort not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n\
    \     @ Main /tmp/tmptti6pbjz.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptti6pbjz.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptti6pbjz.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmptti6pbjz.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: bubblesort not\
    \ defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmptti6pbjz.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptti6pbjz.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptti6pbjz.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmptti6pbjz.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: bubblesort not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmptti6pbjz.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptti6pbjz.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptti6pbjz.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmptti6pbjz.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: bubblesort not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmptti6pbjz.jl:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    m=ceil(length(l)/2)\n \
    \   if length(l)%2==0\n        return (l[m]+l[m-1])/2\n    else\n        return\
    \ l[m]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\
    \t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp71mu9of_.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp71mu9of_.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp71mu9of_.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp71mu9of_.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp71mu9of_.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmp71mu9of_.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp71mu9of_.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp71mu9of_.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp71mu9of_.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmp71mu9of_.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    #your code here\n    list_size\
    \ = length(l)\n    sort(l)\n    if list_size % 2 == 0\n        #even\n       \
    \ return ((l[list_size / 2] + l[list_size / 2 + 1]) / 2)\n    else\n        #odd\n\
    \        return l[ceil(list_size / 2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzvo4h1s3.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpzvo4h1s3.jl:16\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpzvo4h1s3.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpzvo4h1s3.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmpzvo4h1s3.jl:25\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpzvo4h1s3.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpzvo4h1s3.jl:25 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpzvo4h1s3.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmpzvo4h1s3.jl:26\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return sum(l)/length(l)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp340kf7tj.jl:16\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 171.66666666666666 == 8.0\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp340kf7tj.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp340kf7tj.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp340kf7tj.jl:19\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 5.571428571428571 == 7\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp340kf7tj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp340kf7tj.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp340kf7tj.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return median(Float64.(l))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if isodd(length(l))\n \
    \       return l[ceil(length(l)/2)]\n    else\n        return (l[ceil(length(l)/2)]\
    \ + l[floor(length(l)/2)])/2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi7qh0hp3.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpi7qh0hp3.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpi7qh0hp3.jl:19 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpi7qh0hp3.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpi7qh0hp3.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpi7qh0hp3.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpi7qh0hp3.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpi7qh0hp3.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpi7qh0hp3.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpi7qh0hp3.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    x = sort(l)\n    length(x)\
    \ % 2 == 0 ? (x[Int(length(x)/2)] + x[Int(length(x)/2 + 1)])/2 : x[Int(length(x)/2)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkwlakpze.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmpkwlakpze.jl:9\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkwlakpze.jl:16 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkwlakpze.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpkwlakpze.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpkwlakpze.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkwlakpze.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkwlakpze.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpkwlakpze.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpkwlakpze.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkwlakpze.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkwlakpze.jl:15\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    s=sort(l)\n    if mod(length(s),2)==0\n\
    \        return (s[length(s)>>1]+s[(length(s)>>1)+1])/2\n    else\n        return\
    \ s[length(s)>>1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgspouqpx.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpgspouqpx.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpgspouqpx.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    \n    if length(l) % 2 == 0\n\
    \        return (sort(l)[(length(l) + 1) / 2] + sort(l)[(length(l) + 2) / 2])\
    \ / 2\n    else\n        return sort(l)[(length(l) + 1) / 2]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgetlwsyj.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpgetlwsyj.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpgetlwsyj.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpgetlwsyj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpgetlwsyj.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpgetlwsyj.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpgetlwsyj.jl:27 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpgetlwsyj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpgetlwsyj.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpgetlwsyj.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (sum(l[1:div(end,2)]))/2\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt22x01m0.jl:15\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt22x01m0.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt22x01m0.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpt22x01m0.jl:16\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 0.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt22x01m0.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt22x01m0.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpt22x01m0.jl:17\n  Expression: candidate([5]) == 5\n   Evaluated:\
    \ 0.0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt22x01m0.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt22x01m0.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpt22x01m0.jl:18\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 3.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt22x01m0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt22x01m0.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpt22x01m0.jl:19\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 6.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt22x01m0.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n   sort(l)\n   if length(l)%2\
    \ == 0\n       return (l[length(l)/2] + l[length(l)/2 + 1])/2.0\n   else\n   \
    \    return l[(length(l) + 1)/2]\n   end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmponxj9eyq.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmponxj9eyq.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmponxj9eyq.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmponxj9eyq.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmponxj9eyq.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmponxj9eyq.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmponxj9eyq.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmponxj9eyq.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmponxj9eyq.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # If the length of l is\
    \ even, then the median is the mean of the middle two elements.\n    if length(l)\
    \ % 2 == 0 \n        return (l[floor(Int64, length(l)/2)] + l[floor(Int64, length(l)/2)+1])/2\n\
    \    else\n        return l[floor(Int64, length(l)/2)+1]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc8heqbrc.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8heqbrc.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8heqbrc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpc8heqbrc.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8heqbrc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8heqbrc.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpc8heqbrc.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8heqbrc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8heqbrc.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8heqbrc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    m = median(l)\n    return\
    \ m\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    mid = length(l)//2\n  \
    \  if length(l)%2 == 0\n        (l[mid]+l[mid+1])/2\n    else\n        l[mid+1]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq2hde_ll.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 7//2 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpq2hde_ll.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpq2hde_ll.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpq2hde_ll.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpq2hde_ll.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3//1 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpq2hde_ll.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpq2hde_ll.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpq2hde_ll.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpq2hde_ll.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) =="
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sz = length(l)\n    if\
    \ (sz == 0) \n        return 0\n    end\n    # \u5982\u679C\u662F\u5947\u6570\uFF0C\
    \u76F4\u63A5\u8FD4\u56DE\u4E2D\u95F4\u7684\u6570\u3002\n    # \u5982\u679C\u662F\
    \u5076\u6570\uFF0C\u5219\u8FD4\u56DE\u4E2D\u95F4\u4E24\u4E2A\u6570\u7684\u5E73\
    \u5747\u503C\u3002\n    if (sz % 2 == 1) \n        return l[sz / 2 + 1]\n    else\
    \ \n        return (l[sz / 2] + l[sz / 2 + 1]) / 2\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl1da73dz.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.5 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpl1da73dz.jl:15\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpl1da73dz.jl:25 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpl1da73dz.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmpl1da73dz.jl:26\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpl1da73dz.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpl1da73dz.jl:26 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpl1da73dz.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmpl1da73dz.jl:27\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.5 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l_sorted = sort(l)\n  \
    \  n = length(l_sorted)\n    if n % 2 == 0\n        (l_sorted[n \xF7 2] + l_sorted[n\
    \ \xF7 2 + 1]) / 2\n    else\n        l_sorted[(n+1) \xF7 2]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    isodd(n)\
    \ && return l[div(n, 2)+1]\n    return (l[div(n, 2)] + l[div(n, 2)+1]) / 2\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvrk25ww9.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrk25ww9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrk25ww9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvrk25ww9.jl:18\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrk25ww9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrk25ww9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvrk25ww9.jl:21\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrk25ww9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrk25ww9.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvrk25ww9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    n = length(l)\n\
    \    if mod(n, 2) == 0\n        # even\n        return ((l[Int(n/2)] + l[Int(n/2)+1])/2)\n\
    \    else\n        # odd\n        return l[Int(n/2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxzuwg2c2.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmpxzuwg2c2.jl:15\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxzuwg2c2.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxzuwg2c2.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpxzuwg2c2.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpxzuwg2c2.jl:15\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxzuwg2c2.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxzuwg2c2.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpxzuwg2c2.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpxzuwg2c2.jl:15\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxzuwg2c2.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxzuwg2c2.jl:22\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l) \n    if\
    \ n % 2 == 0 \n        (l[n/2] + l[n/2 + 1])/2 \n    else \n        l[(n + 1)/2]\
    \ \n    end \nend \nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppgji98hd.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmppgji98hd.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmppgji98hd.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmppgji98hd.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmppgji98hd.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmppgji98hd.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmppgji98hd.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmppgji98hd.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmppgji98hd.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) == 0\n   \
    \     throw(ArgumentError(\"median: list cannot be empty\"))\n    end\n    n =\
    \ length(l)\n    sorted = sort(l)\n    if n % 2 == 1\n        return sorted[div(n,\
    \ 2) + 1]\n    else\n        low = sorted[div(n, 2)]\n        high = sorted[div(n,\
    \ 2) + 1]\n        return (low + high) / 2\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    @assert\
    \ mod(n, 2) == 1 \"The length of l must be odd.\"\n    i = Int64(floor(n/2)+1)\n\
    \    return sort(l)[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx0p0q1t_.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  AssertionError:\
    \ The length of l must be odd.\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpx0p0q1t_.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx0p0q1t_.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx0p0q1t_.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpx0p0q1t_.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  AssertionError: The length of l must be odd.\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpx0p0q1t_.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx0p0q1t_.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx0p0q1t_.jl:17\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      2      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if mod(n,\
    \ 2) == 0\n        a = l[n/2]\n        b = l[n/2+1]\n        return (a+b)/2\n\
    \    else\n        return l[(n+1)/2]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn3kmiauv.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpn3kmiauv.jl:14\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpn3kmiauv.jl:22 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpn3kmiauv.jl:21\\ntest\
    \ set: Error During Test at /tmp/tmpn3kmiauv.jl:23\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpn3kmiauv.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpn3kmiauv.jl:23 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpn3kmiauv.jl:21\\ntest\
    \ set: Error During Test at /tmp/tmpn3kmiauv.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # The next line makes a\
    \ copy of l, so that we don't modify the\n    # original list.\n    l_sorted =\
    \ sort(l)\n    n = length(l_sorted)\n    half = floor(Int64, n/2)\n    if n %\
    \ 2 == 1\n        return l_sorted[half + 1]\n    else\n        low = l_sorted[half]\n\
    \        high = l_sorted[half+1]\n        return (low + high) / 2\n    end\nend\n\
    @assert median([3, 1, 2, 4, 5]) == 3\n@assert median([-10, 4, 6, 1000, 10, 20])\
    \ == 15.0\n \nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: median([-10, 4, 6, 1000, 10, 20]) ==\
    \ 15.0\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzndbuwhi.jl:22\nin expression\
    \ starting at /tmp/tmpzndbuwhi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # This function assumes\
    \ that input is an array of Int64s.\n    # If the list has odd number of elements,\
    \ return the middle element.\n    if (mod(length(l), 2) == 1)\n        l[floor(Int64,length(l)/2)\
    \ + 1]\n    # If the list has even number of elements, return the mean of the\
    \ \n    # elements in the middle.\n    else\n        (l[(length(l)/2)] + l[(length(l)/2)\
    \ + 1])/2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwpdzpefa.jl:23\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpwpdzpefa.jl:23 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpwpdzpefa.jl:22\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # Sort elements of the\
    \ list\n    sorted_l = sort(l)\n    # Calculate length of the list\n    len_l\
    \ = length(l)\n    # Find median\n    if len_l % 2 == 0\n        mid = Int(len_l\
    \ / 2)\n        m = (sorted_l[mid] + sorted_l[mid + 1]) / 2\n    else\n      \
    \  mid = Int(len_l / 2)\n        m = sorted_l[mid]\n    end\n    return m\nend\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsd3xxep_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmpsd3xxep_.jl:17\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsd3xxep_.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsd3xxep_.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpsd3xxep_.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpsd3xxep_.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsd3xxep_.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsd3xxep_.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpsd3xxep_.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpsd3xxep_.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsd3xxep_.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsd3xxep_.jl:27\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (sort(l)[Int(floor(length(l)/2))]\
    \ + sort(l)[Int(ceil(length(l)/2))])/2\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxxo9w5j1.jl:15\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxxo9w5j1.jl:15 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxxo9w5j1.jl:14\\ntest set: Test\
    \ Failed at /tmp/tmpxxo9w5j1.jl:16\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 6.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxxo9w5j1.jl:16 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxxo9w5j1.jl:14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (l[1] + l[end])/2\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2p1malmw.jl:15\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 4.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2p1malmw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2p1malmw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2p1malmw.jl:16\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 5.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2p1malmw.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2p1malmw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2p1malmw.jl:19\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 7.5 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2p1malmw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2p1malmw.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2p1malmw.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    @assert length(l) > 0 \"\
    List must be non-empty\"\n    if length(l) % 2 == 0\n        med = (l[length(l)\xF7\
    2] + l[length(l)\xF72 + 1]) / 2.0\n    else\n        med = l[ceil(length(l)\xF7\
    2)]\n    end\n    return med\nend\nprintln(median([3, 1, 2, 4, 5]))\nprintln(median([-10,\
    \ 4, 6, 1000, 10, 20]))\nprintln(median([3, 1, 2, 4, 5, 6]))\nprintln(median([-10,\
    \ 4, 6, 1000, 10, 20, -20]))\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'1.0\\n503.0\\n3.0\\n6.0\\ntest set: Test Failed at /tmp/tmpcr2fnj1g.jl:25\\\
    n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpcr2fnj1g.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpcr2fnj1g.jl:24\\ntest set: Test\
    \ Failed at /tmp/tmpcr2fnj1g.jl:26\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpcr2fnj1g.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpcr2fnj1g.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    m = int(floor(length(l)/2))\n\
    \    if length(l) % 2 == 0\n        return (l[m] + l[m + 1])/2\n    else\n   \
    \     return l[m + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzp1xdkht.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpzp1xdkht.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzp1xdkht.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzp1xdkht.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzp1xdkht.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: int not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpzp1xdkht.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzp1xdkht.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzp1xdkht.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzp1xdkht.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: int not defined\\n  Stacktrace:\\n  \
    \ [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpzp1xdkht.jl:9\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzp1xdkht.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzp1xdkht.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzp1xdkht.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpzp1xdkht.jl:9\\n   [2]\
    \ macro expansion\\n    "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        first = l[div(length(l), 2)]\n        second = l[div(length(l), 2) +\
    \ 1]\n        return (first + second) / 2\n    else\n        return l[div(length(l),\
    \ 2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqe3k4kbg.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe3k4kbg.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe3k4kbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqe3k4kbg.jl:22\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe3k4kbg.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe3k4kbg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqe3k4kbg.jl:25\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe3k4kbg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe3k4kbg.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqe3k4kbg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    mid = div(length(l), 2)\n\
    \    if mod(length(l), 2) == 0\n        return (l[mid] + l[mid + 1]) / 2\n   \
    \ else\n        return l[mid]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjr1e728c.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpjr1e728c.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpjr1e728c.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmpjr1e728c.jl:21\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpjr1e728c.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpjr1e728c.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    sorted\
    \ = sort(l)\n    if n % 2 == 1\n        return sorted[div(n, 2) + 1]\n    else\n\
    \        mid = div(n, 2)\n        low = sorted[mid]\n        high = sorted[mid\
    \ + 1]\n        return (low + high) / 2\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return mean(l)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2wtvvtoq.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ mean not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @\
    \ Main /tmp/tmp2wtvvtoq.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2wtvvtoq.jl:15 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2wtvvtoq.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp2wtvvtoq.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmp2wtvvtoq.jl:8\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2wtvvtoq.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2wtvvtoq.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp2wtvvtoq.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: mean not defined\\n  Stacktrace:\\n \
    \  [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmp2wtvvtoq.jl:8\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2wtvvtoq.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2wtvvtoq.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp2wtvvtoq.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmp2wtvvtoq.jl:8\\n   [2]\
    \ macro expansion\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l2 = sort(l)\n    if(length(l2)%2\
    \ == 0)\n        (l2[(length(l2)/2)] + l2[(length(l2)/2) + 1])/2\n    else\n \
    \       l2[(length(l2)/2)] \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo6fa28bb.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpo6fa28bb.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpo6fa28bb.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpo6fa28bb.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpo6fa28bb.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpo6fa28bb.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpo6fa28bb.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpo6fa28bb.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpo6fa28bb.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 0.5 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpo6fa28bb.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if mod(length(l), 2) ==\
    \ 0\n        return l[div(length(l), 2)] + l[div(length(l), 2) + 1] / 2\n    else\n\
    \        return l[div(length(l), 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmc3bm5cq.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmc3bm5cq.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmc3bm5cq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmc3bm5cq.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 506.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmc3bm5cq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmc3bm5cq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmc3bm5cq.jl:22\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 8.5 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmc3bm5cq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmc3bm5cq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmc3bm5cq.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmc3bm5cq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmc3bm5cq.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmc3bm5cq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return sort(l)[ceil(length(l)/2)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprfc152uw.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmprfc152uw.jl:8\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmprfc152uw.jl:15 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmprfc152uw.jl:14\\ntest\
    \ set: Error During Test at /tmp/tmprfc152uw.jl:16\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmprfc152uw.jl:8\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmprfc152uw.jl:16 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmprfc152uw.jl:14\\ntest\
    \ set: Error During Test at /tmp/tmprfc152uw.jl:17\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Floa"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    k = length(l)\n\
    \    if k%2 == 0\n        return (l[div(k,2)] + l[div(k,2) + 1])/2\n    else\n\
    \        return l[div(k,2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if l == [] return 0 end\n\
    \    if length(l) % 2 == 0 \n        return (sort(l)[length(l)\xF72]+sort(l)[length(l)\xF7\
    2+1])\xF72\n    else\n        return sort(l)[length(l)\xF72+1]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqcy8prdu.jl:23\n  Expression: candidate([6,\
    \ 5]) == 5.5\n   Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqcy8prdu.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqcy8prdu.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqcy8prdu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    i = Int64(ceil(length(l)/2))\n\
    \    if length(l)%2 == 0\n        return (l[i] + l[i-1])/2\n    else\n       \
    \ return l[i]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptpzedvew.jl:22\\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\\n   Evaluated: 5.0 == 8.0\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmptpzedvew.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmptpzedvew.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    sorted\
    \ = sort(l)\n    mid = div(n, 2)\n    if n % 2 == 1\n        return sorted[mid]\n\
    \    else\n        return (sorted[mid] + sorted[mid+1])/2\n    end\nend\nprintln(median([3,\
    \ 1, 2, 4, 5]))\nprintln(median([-10, 4, 6, 1000, 10, 20]))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'2.0\\n8.0\\ntest set: Test Failed at /tmp/tmp06l33g4l.jl:24\\n  Expression:\
    \ candidate([3, 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp06l33g4l.jl:24 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp06l33g4l.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # The type of the list\
    \ is Vector{Int64}\n    # Vector{Int64} is a vector whose elements are integers\n\
    \    # The type of the median is Float64\n    # Float64 is a type of double precision\
    \ floats\n    if length(l) % 2 == 0\n        return (l[length(l) \xF7 2] + l[length(l)\
    \ \xF7 2 + 1]) / 2.0\n    else\n        return l[(length(l) + 1) \xF7 2]\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsja3zr7b.jl:23\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsja3zr7b.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsja3zr7b.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsja3zr7b.jl:24\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsja3zr7b.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsja3zr7b.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsja3zr7b.jl:27\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsja3zr7b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsja3zr7b.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsja3zr7b.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sorted_l = sort(l)\n  \
    \  n = length(l)\n    if n % 2 == 0\n        return (sorted_l[Int(floor(n/2))]\
    \ + sorted_l[Int(ceil(n/2))])/2\n    else\n        return sorted_l[Int(ceil(n/2))]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfse3o6_7.jl:22\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 6.0 == 8.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfse3o6_7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfse3o6_7.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfse3o6_7.jl:24\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfse3o6_7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfse3o6_7.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfse3o6_7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sorted = sort(l)\n    m\
    \ = floor(Int64, length(sorted)/2)\n    d = mod(length(sorted), 2)\n    if d ==\
    \ 0\n        return (sorted[m] + sorted[m+1])/2\n    else\n        return sorted[m]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4i1tdomc.jl:22\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp4i1tdomc.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp4i1tdomc.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    if iseven(length(l))\n\
    \        return (l[length(l) \xF7 2] + l[length(l) \xF7 2 + 1]) \xF7 2\n    else\n\
    \        return l[(length(l) + 1) \xF7 2]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5kc0nsy_.jl:23\n  Expression: candidate([6,\
    \ 5]) == 5.5\n   Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5kc0nsy_.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kc0nsy_.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5kc0nsy_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n     return (sum(l) - maximum(l)\
    \ - minimum(l)) / (length(l) - 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe_sy1pcx.jl:16\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 10.0 == 8.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe_sy1pcx.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe_sy1pcx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe_sy1pcx.jl:18\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: NaN == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe_sy1pcx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe_sy1pcx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe_sy1pcx.jl:19\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 5.8 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe_sy1pcx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe_sy1pcx.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_sy1pcx.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # length(l)==1\n    if\
    \ length(l) == 1 \n        return l[1]\n    end\n    # if length(l) is odd\n \
    \   if length(l) % 2 == 1\n        return sort(l)[ceil(Int64, length(l)/2)]\n\
    \    # if length(l) is even\n    else\n        return (sort(l)[ceil(Int64, length(l)/2)]\
    \ + sort(l)[ceil(Int64, length(l)/2) + 1])/2\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) == 0\n   \
    \     return 0.0\n    end\n    if length(l) == 1\n        return l[1]\n    end\n\
    \    if length(l) == 2\n        return (l[1] + l[2])/2\n    end\n    if length(l)\
    \ == 3\n        if l[1] <= l[2]\n            if l[2] <= l[3]\n               \
    \ return l[2]\n            elseif l[1] <= l[3]\n                return l[3]\n\
    \            else\n                return l[1]\n            end\n        else\n\
    \            if l[1] <= l[3]\n                return l[1]\n            elseif\
    \ l[2] <= l[3]\n                return l[3]\n            else\n              \
    \  return l[2]\n            end\n        end\n    end\n    left_half = l[1:length(l)\
    \ \xF7 2]\n    right_half = l[(length(l) \xF7 2) + 1:length(l)]\n    return (median(left_half)\
    \ + median(right_half)) / 2\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuceeghns.jl:46\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 12.0 == 8.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuceeghns.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuceeghns.jl:44\ntest set: Test\
    \ Failed at /tmp/tmpuceeghns.jl:49\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 4.875 == 7\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuceeghns.jl:49 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuceeghns.jl:44\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuceeghns.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # base case\n    if length(l)\
    \ == 1\n        return l[1]\n    end\n    \n    # Split list into two halves\n\
    \    if length(l) % 2 == 0\n        # even\n        right = l[length(l)//2:end]\n\
    \        left = l[1:length(l)//2]\n    else\n        # odd\n        right = l[length(l)//2\
    \ + 1:end]\n        left = l[1:length(l)//2]\n    end\n    \n    # Find the smallest\
    \ element in right half\n    rmin = right[1]\n    lmax = left[end]\n    \n   \
    \ # If smallest element in right is greater than largest element in left\n   \
    \ # then the median is present in left or right half\n    if rmin >= lmax\n  \
    \      if length(l) % 2 == 0\n            return (lmax + rmin)/2\n        else\n\
    \            return rmin\n        end\n    else\n        # The numbers are not\
    \ sorted so we need to sort them\n        if length(l) % 2 == 0\n            return\
    \ merge_sort_median(l)\n        else\n            return merge_sort_median(l)[length(l)//2\
    \ + 1]\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplwgaqv4r.jl:50\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 7//2 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] macro expansion\\\
    n      @ ./multidimensional.jl:867 [inlined]\\n    [7] macro expansion\\n    \
    \  @ ./cartesian.jl:64 [inlined]\\n    [8] _unsafe_getindex!\\n      @ ./multidimensional.jl:862\
    \ [inlined]\\n    [9] _unsafe_getindex\\n      @ ./multidimensional.jl:853 [inlined]\\\
    n   [10] _getindex\\n      @ ./multidimensional.jl:839 [inlined]\\n   [11] getindex\\\
    n      @ ./abstractarray.jl:1218 [inlined]\\n   [12] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmplwgaqv4r.jl:20\\n   [13] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [14] macro expansion\\n      @ /tmp/tmplwgaqv4r.jl:50 [inlined]\\\
    n   [15] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [16] top-level scope\\n      @ /tmp/tmplwgaqv4r.jl:49\\ntest\
    \ set: Error During Test at /tmp/tmplwgaqv4r.jl:51\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3//1 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] macro expansion\\\
    n      @ ./multidimensional.jl:867 [inlined]\\n    [7] macro expansion\\n    \
    \  @ ./cartesian.jl:64 [inlined]\\n    [8] "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    #sort the vector\n    sorted_l\
    \ = sort(l)\n    #length of vector\n    n = length(l)\n    if n % 2 == 0\n   \
    \     #even length\n        #average of middle 2 values\n        mid1 = sorted_l[div(n,2)]\n\
    \        mid2 = sorted_l[div(n,2)+1]\n        return (mid1+mid2)/2\n    else\n\
    \        #odd length\n        #middle value\n        return sorted_l[div(n,2)+1]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # if l is odd-sized, return\
    \ the middle element\n    if mod(length(l), 2) == 1\n        return l[div(length(l),\
    \ 2) + 1]\n    else # l is even-sized\n        return (l[div(length(l), 2)] +\
    \ l[div(length(l), 2) + 1]) / 2\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp16k3mxtk.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16k3mxtk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16k3mxtk.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp16k3mxtk.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16k3mxtk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16k3mxtk.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp16k3mxtk.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16k3mxtk.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16k3mxtk.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp16k3mxtk.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    m = length(l)\xF72\n  \
    \  if mod(length(l),2) == 0\n        return (l[m]+l[m+1])/2\n    else\n      \
    \  return l[ceil(m)]\n    end\nend\n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxrvr1wlq.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxrvr1wlq.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxrvr1wlq.jl:20\\ntest set: Test\
    \ Failed at /tmp/tmpxrvr1wlq.jl:22\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxrvr1wlq.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxrvr1wlq.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if (n\
    \ % 2) == 0 \n        m = median(l[1:n/2])\n        M = median(l[(n/2 + 1):n])\n\
    \        return (m + M) / 2\n    else\n        return l[div(n, 2)]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq5c2ttcz.jl:22\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpq5c2ttcz.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpq5c2ttcz.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        return (l[div(length(l),2)] + l[div(length(l),2)+1])/2\n    else\n  \
    \      return l[div(length(l),2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw9oj8hv8.jl:19\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpw9oj8hv8.jl:19 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpw9oj8hv8.jl:18\\ntest set: Test\
    \ Failed at /tmp/tmpw9oj8hv8.jl:20\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpw9oj8hv8.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpw9oj8hv8.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  \"\"\"Return median of elements\
    \ in the list l.\n  >>> median([3, 1, 2, 4, 5])\n  3\n  >>> median([-10, 4, 6,\
    \ 1000, 10, 20])\n  15.0\n  \"\"\"\n    s = sort(l)\n    n = length(s)\n    if\
    \ n % 2 == 1\n        return s[(n + 1) \xF7 2]\n    else\n        return (s[n\
    \ \xF7 2] + s[n \xF7 2 + 1]) \xF7 2\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw8_h0ouf.jl:30\n  Expression: candidate([6,\
    \ 5]) == 5.5\n   Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw8_h0ouf.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8_h0ouf.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw8_h0ouf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    middle\
    \ = floor(Int, n/2)\n    if n % 2 == 0\n        return (l[middle] + l[middle +\
    \ 1])/2\n    else\n        return l[middle]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmph7qsowo8.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmph7qsowo8.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmph7qsowo8.jl:20\\ntest set: Test\
    \ Failed at /tmp/tmph7qsowo8.jl:22\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmph7qsowo8.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmph7qsowo8.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"\n    Return median\
    \ of elements in the list l.\n    \"\"\"\n    sort!(l)\n    if !isodd(length(l))\n\
    \        return (l[(length(l) \xF7 2) + 1] + l[(length(l) \xF7 2)]) / 2\n    else\n\
    \        return l[(length(l) \xF7 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    t = sort(l)\n    return\
    \ t[div(length(t),2)+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp05_rmt87.jl:17\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 10.0 == 8.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05_rmt87.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05_rmt87.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp05_rmt87.jl:19\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 6.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05_rmt87.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05_rmt87.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp05_rmt87.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ % 2 == 0\n        return (l[n\xF72] + l[n\xF72 + 1])\xF72\n    else\n      \
    \  return l[(n + 1)\xF72]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprj1wgsth.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprj1wgsth.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprj1wgsth.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprj1wgsth.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprj1wgsth.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprj1wgsth.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprj1wgsth.jl:23\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprj1wgsth.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprj1wgsth.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprj1wgsth.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprj1wgsth.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprj1wgsth.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprj1wgsth.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    s = sort(l)\n    return\
    \ (s[length(s)\xF72] + s[(length(s)+1)\xF72])/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpy1tlu47t.jl:16\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpy1tlu47t.jl:16 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpy1tlu47t.jl:15\\ntest set: Test\
    \ Failed at /tmp/tmpy1tlu47t.jl:17\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 6.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpy1tlu47t.jl:17 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpy1tlu47t.jl:15\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    n = length(l)\n\
    \    if n % 2 == 0\n        return (l[n/2] + l[n/2 + 1])/2\n    else\n       \
    \ return l[div(n,2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6vr6tadp.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp6vr6tadp.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp6vr6tadp.jl:22 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp6vr6tadp.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmp6vr6tadp.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([6, 5]) == 5.5\\n  ArgumentError: invalid index: 1.0\
    \ of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\n      @ Base\
    \ ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\n      @\
    \ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333 [inlined]\\\
    n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5] getindex\\\
    n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp6vr6tadp.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp6vr6tadp.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp6vr6tadp.jl:20\\nTest\
    \ Summary: | Pass  Error  Total\\ntest set      |    3      2      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if(length(l)%2==0)\n  \
    \      return (sort(l)[length(l)/2] + sort(l)[length(l)/2 + 1])/2\n    else\n\
    \        return sort(l)[ceil(length(l)/2)]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpom5hakbw.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpom5hakbw.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpom5hakbw.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpom5hakbw.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpom5hakbw.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpom5hakbw.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpom5hakbw.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpom5hakbw.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpom5hakbw.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Flo"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    @assert length(l) > 0 \"\
    median: list must be non-empty\"\n    if iseven(length(l))\n        return (sort(l)[length(l)\xF7\
    2] + sort(l)[length(l)\xF72+1])\xF72\n    else\n        return sort(l)[length(l)\xF7\
    2+1]\n    end\nend\n@assert median([]) == nothing \"median: list must be non-empty\"\
    \nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if( length(l) % 2 == 0\
    \ )\n        return (l[ length(l) / 2 ] + l[ length(l) / 2 + 1 ]) / 2\n    else\n\
    \        return l[ div(length(l), 2) + 1 ]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpo8gk3fyt.jl:19\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpo8gk3fyt.jl:19 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpo8gk3fyt.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return mean(l[length(l)//2 : length(l)//2 + 1])\n    else\n        return\
    \ l[length(l)//2 + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplw4llgx9.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 7//2 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmplw4llgx9.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmplw4llgx9.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmplw4llgx9.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmplw4llgx9.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3//1 of type Rational{Int64}\\n  Stacktrace:\\n    [1] to_index(i::Rational{Int64})\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] macro expansion\\\
    n      @ ./multidimensional.jl:867 [inlined]\\n    [7] macro expansion\\n    \
    \  @ ./cartesian.jl:64 [inlined]\\n    [8] _unsafe_getindex!\\n      @ ./multidimensional.jl:862\
    \ [inlined]\\n    [9] _unsafe_getindex\\n      @ ./multidimensional.jl:853 [inlined]\\\
    n   [10] _getindex\\n      @ ./multidimensional.jl:839 [inlined]\\n   [11] getindex\\\
    n      @ ./abstractarray.jl:1218 [inlined]\\n   [12] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmplw4llgx9.jl:9\\n   [13] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/jul"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    s =\
    \ sort(l)\n    p = n%2\n    if p == 0\n        return (s[(n+1)/2] + s[(n+1)/2+1])/2\n\
    \    else\n        return s[(n+1)/2]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk75lduvf.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpk75lduvf.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpk75lduvf.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpk75lduvf.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpk75lduvf.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpk75lduvf.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpk75lduvf.jl:23 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpk75lduvf.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpk75lduvf.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpk75lduvf.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    n = length(l)\n\
    \    @assert n > 0\n    @assert mod(n, 2) == 1\n    m = div(n, 2)\n    return\
    \ l[m] + (l[m+1] - l[m])/2\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpegdvhjn3.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpegdvhjn3.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpegdvhjn3.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    @assert length(l) > 0 \n\
    \    if iseven(length(l)) \n        return (sort(l)[div(length(l), 2)] + sort(l)[div(length(l),\
    \ 2) + 1]) / 2\n    else \n        return sort(l)[div(length(l), 2) + 1]\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l_sort = sort(l)\n    len_l\
    \ = length(l)\n    if len_l % 2 == 0\n        return (l_sort[Int(len_l/2)] + l_sort[Int(len_l/2)+1])/2\n\
    \    else\n        return l_sort[Int(len_l/2)+1]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi10ce05j.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmpi10ce05j.jl:13\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpi10ce05j.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpi10ce05j.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpi10ce05j.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpi10ce05j.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpi10ce05j.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpi10ce05j.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpi10ce05j.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpi10ce05j.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpi10ce05j.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpi10ce05j.jl:20\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    n = length(l)\n\
    \    if n%2 == 0\n        return (l[n/2]+l[n/2+1])/2\n    else\n        return\
    \ l[(n+1)/2]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpooj4h6uy.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpooj4h6uy.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpooj4h6uy.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpooj4h6uy.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmpooj4h6uy.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpooj4h6uy.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpooj4h6uy.jl:22 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpooj4h6uy.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmpooj4h6uy.jl:23\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  if mod(length(l),2) == 0\n\
    \    return (l[length(l)/2] + l[length(l)/2 + 1])/2\n  else\n    return l[(length(l)+1)/2]\n\
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd8600aux.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpd8600aux.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpd8600aux.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpd8600aux.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpd8600aux.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpd8600aux.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpd8600aux.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpd8600aux.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpd8600aux.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Flo"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return mean(l)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpiqdvw6uj.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ mean not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @\
    \ Main /tmp/tmpiqdvw6uj.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpiqdvw6uj.jl:15 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpiqdvw6uj.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpiqdvw6uj.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: mean not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpiqdvw6uj.jl:8\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpiqdvw6uj.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpiqdvw6uj.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpiqdvw6uj.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: mean not defined\\n  Stacktrace:\\n \
    \  [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpiqdvw6uj.jl:8\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpiqdvw6uj.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpiqdvw6uj.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpiqdvw6uj.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpiqdvw6uj.jl:8\\n   [2]\
    \ macro expansion\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n   if length(l)%2==0 #even\n\
    \    return (l[(length(l)/2)]+l[(length(l)/2)+1])/2\n   else #odd\n    return\
    \ l[(length(l)+1)/2]\n   end\nend\n \n \n \n \nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfg48r5kr.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpfg48r5kr.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpfg48r5kr.jl:23 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpfg48r5kr.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmpfg48r5kr.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpfg48r5kr.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpfg48r5kr.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpfg48r5kr.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmpfg48r5kr.jl:25\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Flo"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l)%2 == 0\n \
    \       return (sort(l)[Int64(length(l)/2 - 1)] + sort(l)[Int64(length(l)/2)])/2.0\n\
    \    else\n        return sort(l)[Int64(ceil(length(l)/2))]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp053bklur.jl:20\\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\\n   Evaluated: 5.0 == 8.0\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp053bklur.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp053bklur.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l)%2 == 0\n \
    \       return (l[length(l)/2] + l[length(l)/2+1])/2.0\n    else\n        return\
    \ l[ceil(length(l)/2)]\n    end\nend\n    \n    \nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppo45bjqn.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmppo45bjqn.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmppo45bjqn.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmppo45bjqn.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmppo45bjqn.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmppo45bjqn.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmppo45bjqn.jl:22 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmppo45bjqn.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmppo45bjqn.jl:23\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Flo"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sortedl = sort(l)\n   \
    \ m_i = (length(l)+1)/2\n    if floor(m_i) == m_i\n        return 0.5 * (sortedl[m_i]\
    \ + sortedl[m_i+1])\n    else\n        return sortedl[m_i]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpowa251u4.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpowa251u4.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpowa251u4.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpowa251u4.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpowa251u4.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpowa251u4.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpowa251u4.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpowa251u4.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpowa251u4.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpowa251u4.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if(length(l) % 2 == 0)\n\
    \        return (l[length(l) \xF7 2] + l[length(l) \xF7 2 + 1]) / 2\n    else\n\
    \        return l[length(l) \xF7 2 + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxp8_ycez.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxp8_ycez.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxp8_ycez.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxp8_ycez.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxp8_ycez.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxp8_ycez.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxp8_ycez.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxp8_ycez.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxp8_ycez.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxp8_ycez.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  lsort = sort(l)\n  L = length(l)\n\
    \  return (lsort[div(L,2)] + lsort[div(L,2)+1])/2.0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpm3crek4m.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpm3crek4m.jl:17 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpm3crek4m.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n   n = length(l)\n   a = sort(l)\n\
    \   if n % 2 == 0 \n       return (a[div(n,2)] + a[div(n,2)+1])/2.0\n   else\n\
    \       return a[div(n,2)+1]\n   end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0 \n\
    \        return (l[length(l)\xF72] + l[length(l)\xF72 + 1])/2 \n    else\n   \
    \     return l[(length(l) + 1)\xF72]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptkgnsun5.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkgnsun5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkgnsun5.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptkgnsun5.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkgnsun5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkgnsun5.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptkgnsun5.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptkgnsun5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptkgnsun5.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptkgnsun5.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    lu=length(l)\n\
    \    if lu%2==0\n        return (l[lu/2]+l[lu/2+1])/2\n    else\n        return\
    \ l[div(lu,2)+1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpouf56o7o.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpouf56o7o.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpouf56o7o.jl:22 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpouf56o7o.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmpouf56o7o.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([6, 5]) == 5.5\\n  ArgumentError: invalid index: 1.0\
    \ of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\n      @ Base\
    \ ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\n      @\
    \ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333 [inlined]\\\
    n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5] getindex\\\
    n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpouf56o7o.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpouf56o7o.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpouf56o7o.jl:20\\nTest\
    \ Summary: | Pass  Error  Total\\ntest set      |    3      2      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l1 = length(l)\n    m =\
    \ l1 \xF7 2\n    if l1 % 2 == 0\n        return (l[m] + l[m + 1]) / 2\n    else\n\
    \        return l[m]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpn9qhb8jk.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpn9qhb8jk.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpn9qhb8jk.jl:20\\ntest set: Test\
    \ Failed at /tmp/tmpn9qhb8jk.jl:22\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpn9qhb8jk.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpn9qhb8jk.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    midpoint\
    \ = div(length(l), 2)\n    if iseven(length(l))\n        return (l[midpoint] +\
    \ l[midpoint + 1]) / 2\n    else\n        return l[midpoint]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7x02zj48.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp7x02zj48.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp7x02zj48.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return 0\nend\n \nmedian([-10,\
    \ 4, 6, 1000, 10, 20])\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\
    \t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp62tccoau.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 0.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp62tccoau.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp62tccoau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp62tccoau.jl:18\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 0.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp62tccoau.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp62tccoau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp62tccoau.jl:19\n  Expression: candidate([5]) == 5\n   Evaluated:\
    \ 0.0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp62tccoau.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp62tccoau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp62tccoau.jl:20\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 0.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp62tccoau.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp62tccoau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp62tccoau.jl:21\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 0.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp62tccoau.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    m = l[length(l) >> 1]\n\
    \    if length(l) % 2 == 0\n        m + l[(length(l) >> 1) + 1] / 2\n    else\n\
    \        m\n    end\nend\n    \nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpp6lauynp.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpp6lauynp.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpp6lauynp.jl:20\\ntest set: Test\
    \ Failed at /tmp/tmpp6lauynp.jl:22\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 506.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpp6lauynp.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpp6lauynp.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  n = length(l)\n  s = sort(l)\n\
    \  mid = div(n, 2) + 1\n  if n % 2 == 1\n    return s[mid]\n  else\n    return\
    \ (s[mid] + s[mid-1]) / 2\n  end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) == 0\n   \
    \     return -1\n    end\n    if length(l) == 1\n        return l[1]\n    end\n\
    \    l = sort(l)\n    if length(l) % 2 == 0\n        return (l[Int(length(l)/2)]\
    \ + l[Int(length(l)/2) + 1])/2\n    else\n        return l[Int(ceil(length(l)/2))]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Function for calculating\
    \ median of a list of numbers\n    Returns a float with the median\"\"\"\n   \
    \ length = size(l)[1]\n    half_length = convert(Int64, length/2)\n    sorted_l\
    \ = sort(l)\n    if length%2 == 0\n        return (sorted_l[half_length] + sorted_l[half_length\
    \ + 1])/2\n    else\n        return sorted_l[half_length + 1]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc6daubl_.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] convert\\n     @ ./number.jl:7 [inlined]\\n   [3] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpc6daubl_.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpc6daubl_.jl:24 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpc6daubl_.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpc6daubl_.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] convert\\n     @ ./number.jl:7 [inlined]\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpc6daubl_.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpc6daubl_.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpc6daubl_.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpc6daubl_.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] convert\\n     @ ./number.jl:7\
    \ [inlined]\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpc6daubl_.jl:11\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpc6daubl_.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpc6daubl_.jl:23\\n"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    n = length(l)\n\
    \    if n % 2 == 0 \n        (l[n/2] + l[n/2 + 1])/2\n    else\n        l[n/2]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqc7wf_1a.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpqc7wf_1a.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpqc7wf_1a.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpqc7wf_1a.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpqc7wf_1a.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpqc7wf_1a.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpqc7wf_1a.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpqc7wf_1a.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpqc7wf_1a.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 0.5 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpqc7wf_1a.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    #\"Return median of elements\
    \ in the list l.\"\n    l = sort(l)\n    len = length(l)\n    if len == 0\n  \
    \      return -1\n    end\n    if len % 2 == 0\n        return (l[div(len,2)]\
    \ + l[div(len,2)+1])/2\n    else\n        return l[div(len,2)]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7k67ixph.jl:25\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp7k67ixph.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp7k67ixph.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n%2\
    \ == 0\n        return (l[n/2] + l[n/2 + 1])/2\n    else\n        return l[(n\
    \ + 1)/2]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfbgfoh5m.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpfbgfoh5m.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpfbgfoh5m.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpfbgfoh5m.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpfbgfoh5m.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpfbgfoh5m.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpfbgfoh5m.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpfbgfoh5m.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpfbgfoh5m.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    n%2\
    \ == 0 ? (l[n/2] + l[n/2+1])/2 : l[(n+1)/2]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfyqogr5q.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpfyqogr5q.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpfyqogr5q.jl:16 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpfyqogr5q.jl:15\\ntest\
    \ set: Error During Test at /tmp/tmpfyqogr5q.jl:17\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpfyqogr5q.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpfyqogr5q.jl:17 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpfyqogr5q.jl:15\\ntest\
    \ set: Error During Test at /tmp/tmpfyqogr5q.jl:18\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Floa"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l)%2 == 0\n \
    \       return(sort(l)[Int(length(l)/2)] + sort(l)[Int(length(l)/2)+1])/2\n  \
    \  else\n        return(sort(l)[Int(length(l)/2)])\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3l2yrqh8.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmp3l2yrqh8.jl:11\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp3l2yrqh8.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp3l2yrqh8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp3l2yrqh8.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp3l2yrqh8.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp3l2yrqh8.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp3l2yrqh8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp3l2yrqh8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmp3l2yrqh8.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp3l2yrqh8.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp3l2yrqh8.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    m =\
    \ median_int(l)\n    if n % 2 == 0\n        ml = l[1:m]\n        mr = l[m+1:n]\n\
    \        return (median_int(ml) + median_int(mr)) / 2\n    else\n        return\
    \ l[m]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\
    \t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp480_qeyg.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ median_int not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n\
    \     @ Main /tmp/tmp480_qeyg.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp480_qeyg.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp480_qeyg.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp480_qeyg.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: median_int not\
    \ defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmp480_qeyg.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp480_qeyg.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp480_qeyg.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp480_qeyg.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: median_int not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmp480_qeyg.jl:9\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp480_qeyg.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp480_qeyg.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp480_qeyg.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: median_int not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmp480_qeyg.jl:9\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    s =\
    \ sort(l)\n    (s[div(n,2)] + s[div(n,2)+1])/2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp33wg2uis.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp33wg2uis.jl:17 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp33wg2uis.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n        nums=sort(l)\n    \
    \    mid=length(nums)%2\n        if mid!=0\n                return nums[div(length(nums),2)+1]\n\
    \        else\n                return (nums[div(length(nums),2)]+nums[div(length(nums),2)+1])/2\n\
    \        end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return Float64((l[Int(length(l)/2)] + l[Int(length(l)/2) + 1])/2)\n \
    \   else\n        return Float64(l[Int(floor(length(l)/2))])\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpd19s4uk7.jl:19\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpd19s4uk7.jl:19 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpd19s4uk7.jl:18\\ntest set: Test\
    \ Failed at /tmp/tmpd19s4uk7.jl:20\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpd19s4uk7.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpd19s4uk7.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sorted_list = sort(l)\n\
    \    mid = length(sorted_list)//2\n    if length(sorted_list) % 2 == 0\n     \
    \   return (sorted_list[mid]+sorted_list[mid+1])/2\n    else\n        return sorted_list[mid]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfhf1j4oi.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 5//2 of type Rational{Int64}\\n  Stacktrace:\\n   [1] to_index(i::Rational{Int64})\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpfhf1j4oi.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpfhf1j4oi.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpfhf1j4oi.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpfhf1j4oi.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3//1 of type Rational{Int64}\\n  Stacktrace:\\n   [1] to_index(i::Rational{Int64})\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpfhf1j4oi.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpfhf1j4oi.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpfhf1j4oi.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpfhf1j4oi.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1//2 of type Rational{Int64}\\\
    n  Stacktrace:\\n   [1] to_index(i::Rational{Int64})\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpfhf1j4oi.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ == 0\n        error(\"Length of list must be positive!\")\n    end\n    s =\
    \ sort(l)\n    if n % 2 == 1\n        s[div(n, 2) + 1]\n    else\n        (s[div(n,\
    \ 2)] + s[div(n, 2) + 1]) / 2\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \n    #sort the list\n\
    \    sort(l)\n    \n    #if list length is odd, simply divide the list in half\
    \ and find the value in the middle\n    if rem(length(l),2) == 1\n        return\
    \ l[(length(l)+1)/2]\n    #if list length is even, take the average of the two\
    \ numbers in the middle\n    else\n        return (l[length(l)/2] + l[length(l)/2\
    \ + 1])/2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpabvlvtwt.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpabvlvtwt.jl:14\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpabvlvtwt.jl:25 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpabvlvtwt.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmpabvlvtwt.jl:26\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpabvlvtwt.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpabvlvtwt.jl:26 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpabvlvtwt.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmpabvlvtwt.jl:27\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sorted_l = sort(l)\n  \
    \  len_l = length(l)\n    med = 0\n    if len_l % 2 == 0\n        med = (sorted_l[len_l\
    \ \xF7 2] + sorted_l[len_l \xF7 2 + 1]) \xF7 2\n    else\n        med = sorted_l[(len_l\
    \ + 1) \xF7 2]\n    end\n    return med\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp__bflxov.jl:26\n  Expression: candidate([6,\
    \ 5]) == 5.5\n   Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp__bflxov.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp__bflxov.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp__bflxov.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ % 2 == 0\n        return (l[div(n,2)] + l[div(n,2)+1])/2\n    else\n       \
    \ return l[div(n,2)+1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpea_4a4na.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpea_4a4na.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpea_4a4na.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpea_4a4na.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpea_4a4na.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpea_4a4na.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpea_4a4na.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpea_4a4na.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpea_4a4na.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpea_4a4na.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp26hizdq4.jl:16\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 0.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp26hizdq4.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp26hizdq4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp26hizdq4.jl:17\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 0.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp26hizdq4.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp26hizdq4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp26hizdq4.jl:18\n  Expression: candidate([5]) == 5\n   Evaluated:\
    \ 0.0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp26hizdq4.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp26hizdq4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp26hizdq4.jl:19\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 0.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp26hizdq4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp26hizdq4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp26hizdq4.jl:20\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 0.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp26hizdq4.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    idx =\
    \ div(length(l), 2)\n    if mod(length(l), 2) == 0\n        return (l[idx] + l[idx+1])/2\n\
    \    else\n        return l[idx]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpu1fs0t8h.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpu1fs0t8h.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpu1fs0t8h.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sorted_l = sort(l)\n  \
    \  n = length(l)\n    n2 = div(n, 2)\n    if mod(n, 2) == 0\n        m = (sorted_l[n2]\
    \ + sorted_l[n2 + 1]) / 2\n    else\n        m = sorted_l[n2 + 1]\n    end\n \
    \   return m\nend\n    \n    \n        \n    \nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    s =\
    \ sort(l)\n    if mod(n, 2) == 0 \n        return (s[n/2] + s[n/2 + 1])/2\n  \
    \  else\n        return s[(n+1)/2]\n    end\nend\n\"\"\"Return true iff the letter\
    \ l is in the word s.\n    >>> letter_in_word('a', 'crawler')\n    false\n   \
    \ >>> letter_in_word('c', 'crawler')\n    true\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpnpxa37j0.jl:16\nin expression starting at /tmp/tmpnpxa37j0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    x = sort(l)\n    if length(x)\
    \ % 2 == 0\n        return (x[length(x) / 2] + x[length(x) / 2 + 1]) / 2\n   \
    \ else\n        return x[div(length(x), 2) + 1]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplz693ek5.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmplz693ek5.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmplz693ek5.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmplz693ek5.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmplz693ek5.jl:23\\n  Test threw exception\\\
    n  Expression: candidate([6, 5]) == 5.5\\n  ArgumentError: invalid index: 1.0\
    \ of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\n      @ Base\
    \ ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\n      @\
    \ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333 [inlined]\\\
    n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5] getindex\\\
    n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmplz693ek5.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmplz693ek5.jl:23 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmplz693ek5.jl:19\\nTest\
    \ Summary: | Pass  Error  Total\\ntest set      |    3      2      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmplz693ek5.jl:17\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    a=l\n    if length(a)%2==0\n\
    \        return (select(a,round(length(a)/2))+select(a,round(length(a)/2+1)))/2\n\
    \    else\n        return select(a,round(length(a)/2))\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjx2p_dxn.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ select not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpjx2p_dxn.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjx2p_dxn.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjx2p_dxn.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpjx2p_dxn.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: select not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpjx2p_dxn.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjx2p_dxn.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjx2p_dxn.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpjx2p_dxn.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: select not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpjx2p_dxn.jl:12\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjx2p_dxn.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjx2p_dxn.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpjx2p_dxn.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: select not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpjx2p_dxn.jl:10\\n   [2]\
    \ macro"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    n = length(l)\n\
    \    if n % 2 == 0\n        return (l[n\xF72-1] + l[n\xF72])/2\n    else\n   \
    \     return l[n\xF72]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppn6r89jd.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmppn6r89jd.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmppn6r89jd.jl:20\\ntest set: Test\
    \ Failed at /tmp/tmppn6r89jd.jl:22\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 5.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmppn6r89jd.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmppn6r89jd.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ % 2 == 0 \n        # if n is even, return the mean of the two middle elements\n\
    \        s = sort(l)\n        mid = n/2\n        (s[mid] + s[mid+1])/2\n    else\
    \ \n        # if n is odd, return the middle element\n        s = sort(l)\n  \
    \      mid = floor(n/2)\n        s[mid]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzq4eqswo.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpzq4eqswo.jl:18\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpzq4eqswo.jl:26 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpzq4eqswo.jl:25\\ntest\
    \ set: Error During Test at /tmp/tmpzq4eqswo.jl:27\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpzq4eqswo.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpzq4eqswo.jl:27 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpzq4eqswo.jl:25\\ntest\
    \ set: Error During Test at /tmp/tmpzq4eqswo.jl:28\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 0.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    if length(l)==0\n        return\
    \ 0\n    end\n    if length(l) % 2 == 1\n        return l[div(length(l),2)+1]\n\
    \    else\n        return (l[div(length(l),2)]+l[div(length(l),2)+1])/2\n    end\n\
    end\n# The following are test cases that you can use to verify your solution.\n\
    # Any code inside the module `solution` that is surrounded by triple double-quotes\n\
    # will be ignored by the auto-grader.\n# You can write additional test cases here\
    \ if you want.\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2hamqi9d.jl:32\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2hamqi9d.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2hamqi9d.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2hamqi9d.jl:33\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2hamqi9d.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2hamqi9d.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2hamqi9d.jl:36\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2hamqi9d.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2hamqi9d.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2hamqi9d.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    m = div(length(l),\
    \ 2)\n    if (odd(length(l))) \n        return l[m+1]\n    else\n        return\
    \ (l[m] + l[m+1])/2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwt6s4_qc.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ odd not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpwt6s4_qc.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwt6s4_qc.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwt6s4_qc.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpwt6s4_qc.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: odd not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpwt6s4_qc.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwt6s4_qc.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwt6s4_qc.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpwt6s4_qc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: odd not defined\\n  Stacktrace:\\n  \
    \ [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpwt6s4_qc.jl:10\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwt6s4_qc.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwt6s4_qc.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpwt6s4_qc.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: odd not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpwt6s4_qc.jl:10\\n   [2]\
    \ macro expansion\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    N = length(l)\n    if N\
    \ % 2 == 0\n        return (l[N/2] + l[N/2 + 1])/2\n    else\n        return l[N/2]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn_r215xk.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.5 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpn_r215xk.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpn_r215xk.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpn_r215xk.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpn_r215xk.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpn_r215xk.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpn_r215xk.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpn_r215xk.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpn_r215xk.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 0.5 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpn_r215xk.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (sort(l)[div(length(l), 2)] + sort(l)[div(length(l), 2) + 1])\
    \ / 2\n    else\n        return sort(l)[div(length(l), 2) + 1]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (l[3] + l[2])/2\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2ehp2ubx.jl:15\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2ehp2ubx.jl:15 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2ehp2ubx.jl:14\\ntest set: Test\
    \ Failed at /tmp/tmp2ehp2ubx.jl:16\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 5.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2ehp2ubx.jl:16 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2ehp2ubx.jl:14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \n    if length(l) == 0\n\
    \        return 0\n    end\n    \n    sort!(l)\n    mid = round(Int64,length(l)/2)\n\
    \   \n    if (length(l) % 2 == 0)\n        return (l[mid] + l[mid + 1])/2\n  \
    \  else\n        return l[mid]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpka8w4d9w.jl:27\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpka8w4d9w.jl:27 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpka8w4d9w.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (l[length(l)\xF72] + l[length(l)\xF72 + 1])/2\n    else\n    \
    \    return l[(length(l) + 1)\xF72]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrwiwylt.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrwiwylt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrwiwylt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptrwiwylt.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrwiwylt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrwiwylt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptrwiwylt.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrwiwylt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrwiwylt.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrwiwylt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) == 0\n   \
    \     return 0\n    end\n    if (length(l) % 2 == 0)\n        return (l[div(length(l),\
    \ 2)] + l[div(length(l), 2) + 1]) / 2\n    else\n        return l[div(length(l),\
    \ 2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwlk9sbkl.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlk9sbkl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlk9sbkl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwlk9sbkl.jl:23\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlk9sbkl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlk9sbkl.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwlk9sbkl.jl:26\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlk9sbkl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlk9sbkl.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwlk9sbkl.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (l[div(length(l), 2)] + l[div(length(l), 2) + 1]) / 2\n    else\n\
    \        return l[div(length(l), 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk5lgydp8.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5lgydp8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5lgydp8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpk5lgydp8.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5lgydp8.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5lgydp8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpk5lgydp8.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5lgydp8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5lgydp8.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5lgydp8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \n    sorted!(l)\n    n\
    \ = length(l)\n    mid = n \xF7 2\n    if n % 2 == 0\n        m = (l[mid] + l[mid+1])\
    \ / 2\n    else\n        m = l[mid]\n    end\n    return m\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpca5k1emn.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ sorted! not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n   \
    \  @ Main /tmp/tmpca5k1emn.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpca5k1emn.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpca5k1emn.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpca5k1emn.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: sorted! not defined\\\
    n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpca5k1emn.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpca5k1emn.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpca5k1emn.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpca5k1emn.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: sorted! not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpca5k1emn.jl:9\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpca5k1emn.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpca5k1emn.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpca5k1emn.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: sorted! not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpca5k1emn.jl:9\\n   [2]\
    \ macro"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return sum(l)/length(l)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpejpyoywg.jl:16\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 171.66666666666666 == 8.0\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpejpyoywg.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpejpyoywg.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpejpyoywg.jl:19\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 5.571428571428571 == 7\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpejpyoywg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpejpyoywg.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpejpyoywg.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (sort(l)[div(length(l), 2)] + sort(l)[div(length(l), 2) + 1])\
    \ / 2\n    else\n        return sort(l)[div(length(l), 2) + 1]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (l[div(length(l),2)]\
    \ + l[div(length(l),2)+1])/2.0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpezx3z6j1.jl:15\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpezx3z6j1.jl:15 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpezx3z6j1.jl:14\\ntest set: Test\
    \ Failed at /tmp/tmpezx3z6j1.jl:16\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpezx3z6j1.jl:16 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpezx3z6j1.jl:14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if mod(length(l), 2) ==\
    \ 0 \n        return (l[(length(l) / 2)] + l[(length(l) / 2) + 1]) / 2\n    else\
    \ \n        return l[floor(length(l) / 2)]\n    end\nend \nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx2hxc2pp.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpx2hxc2pp.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpx2hxc2pp.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpx2hxc2pp.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpx2hxc2pp.jl:20\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpx2hxc2pp.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpx2hxc2pp.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpx2hxc2pp.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpx2hxc2pp.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 0.0 of type\
    \ Flo"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    i =\
    \ n // 2\n    if n % 2 == 0\n        return 0.5 * (l[i] + l[i + 1])\n    else\n\
    \        return l[i]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr964bhvp.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 5//2 of type Rational{Int64}\\n  Stacktrace:\\n   [1] to_index(i::Rational{Int64})\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpr964bhvp.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpr964bhvp.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpr964bhvp.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpr964bhvp.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3//1 of type Rational{Int64}\\n  Stacktrace:\\n   [1] to_index(i::Rational{Int64})\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpr964bhvp.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpr964bhvp.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpr964bhvp.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpr964bhvp.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1//2 of type Rational{Int64}\\\
    n  Stacktrace:\\n   [1] to_index(i::Rational{Int64})\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Rational{Int64})\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmpr964bhvp.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if (length(l) % 2 == 0)\n\
    \        return (l[div(length(l), 2)] + l[div(length(l), 2) + 1]) / 2.0\n    else\n\
    \        return l[div(length(l), 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxdunc709.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdunc709.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdunc709.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxdunc709.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdunc709.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdunc709.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxdunc709.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdunc709.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdunc709.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdunc709.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n  middle = div(length(l), 2)\n\
    \  sorted_l = sort(l)\n  if length(l) % 2 == 0\n    avg = mean([sorted_l[middle],\
    \ sorted_l[middle+1]])\n  else\n    avg = sorted_l[middle]\n  end\n  return avg\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpntlk38qc.jl:22\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpntlk38qc.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpntlk38qc.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # convert all int to float.\
    \ \n    # if you type it Float64, then you don't need to do conversion. \n   \
    \ # but, it is better to keep the original type. \n    sort(l)\n    n = length(l)\n\
    \    if n % 2 == 1\n        return l[ceil(Int, n/2)]\n    else\n        return\
    \ (l[ceil(Int, n/2)] + l[floor(Int, n/2)])/2\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy_vy9p7a.jl:24\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_vy9p7a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_vy9p7a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy_vy9p7a.jl:25\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 6.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_vy9p7a.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_vy9p7a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy_vy9p7a.jl:27\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 6.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_vy9p7a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_vy9p7a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy_vy9p7a.jl:28\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy_vy9p7a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy_vy9p7a.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy_vy9p7a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    temp = copy(l)\n    function\
    \ sort(l::Vector{Int64})::Vector{Int64}\n        for i in 2:length(l)\n      \
    \      key = l[i]\n            j = i - 1\n            while j >= 1 && l[j] > key\n\
    \                l[j+1] = l[j]\n                j = j - 1\n            end\n \
    \           l[j+1] = key\n        end\n        return l\n    end\n    sort(temp)\n\
    \    if length(temp) % 2 == 0\n        return (temp[div(length(temp),2)] + temp[div(length(temp),2)+1])/2\n\
    \    else\n        return temp[ceil(div(length(temp),2))]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4,\
    \ 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpirfvve5u.jl:33\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpirfvve5u.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpirfvve5u.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    s = sort(l)\n    half =\
    \ length(s) \xF7 2\n    if half * 2 == length(s)\n        return (s[half] + s[half\
    \ + 1]) / 2\n    else\n        return s[half + 1]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    s = sort(l)\n    if(length(s)\
    \ % 2 == 0)\n        return (s[length(s) / 2] + s[length(s) / 2 + 1]) / 2\n  \
    \  else\n        return s[ceil(length(s) / 2)]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaz3y_wht.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpaz3y_wht.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpaz3y_wht.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpaz3y_wht.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpaz3y_wht.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmpaz3y_wht.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpaz3y_wht.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpaz3y_wht.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpaz3y_wht.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ == 0\n        return -1.0\n    end\n    if n % 2 == 0\n        return (l[n/2-1]\
    \ + l[n/2])/2.0\n    else\n        return l[n/2]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps0oueexj.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 2.5 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmps0oueexj.jl:15\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmps0oueexj.jl:23 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmps0oueexj.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmps0oueexj.jl:24\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 2.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmps0oueexj.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmps0oueexj.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmps0oueexj.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmps0oueexj.jl:25\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 0.5 of type\
    \ Fl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    mid = round(Int64, length(l)/2)\n\
    \    if mid%2 == 0\n        return (l[mid+1] + l[mid])/2\n    else\n        return\
    \ l[mid]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\
    \t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb5jy3jx3.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.5 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpb5jy3jx3.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpb5jy3jx3.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmpb5jy3jx3.jl:21\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 6.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpb5jy3jx3.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpb5jy3jx3.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l)%2 == 0\n \
    \       mid1 = l[length(l)/2]\n        mid2 = l[length(l)/2 + 1]\n        return\
    \ (mid1 + mid2)/2\n    else\n        return l[(length(l) + 1)/2]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9sznlefu.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp9sznlefu.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp9sznlefu.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp9sznlefu.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmp9sznlefu.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp9sznlefu.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp9sznlefu.jl:22 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp9sznlefu.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmp9sznlefu.jl:23\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Flo"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n        #guard ensures that\
    \ the length of l is even\n        n = length(l)\n        #n is the length of\
    \ the list l\n        half = Int(n/2)\n        #half is the half of n\n      \
    \  sorted_l = sort(l)\n        #sorted_l is the sorted list of l\n        if n\
    \ % 2 == 0\n            #checks if n is odd\n            return (sorted_l[half]+sorted_l[half+1])/2\n\
    \            #returns the mean of the 2 middle values\n        else\n        \
    \    return sorted_l[half+1]\n            #returns the middle value in sorted_l\n\
    \        end\n    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t\
    @test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\
    \t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_7swb34t.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(2.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmp_7swb34t.jl:11\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp_7swb34t.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp_7swb34t.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp_7swb34t.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  InexactError: Int64(0.5)\\n  Stacktrace:\\n   [1] Int64\\\
    n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp_7swb34t.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp_7swb34t.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp_7swb34t.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp_7swb34t.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\\n  InexactError: Int64(3.5)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmp_7swb34t.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp_7swb34t.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp_7swb34t.jl:28\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ == 0 \n        return 0.0\n    end\n    sorted = sort(l)\n    mid = div(n, 2)\n\
    \    if mod(n, 2) == 0\n        return mean([sorted[mid], sorted[mid+1]])\n  \
    \  else\n        return sorted[mid+1]\n    end\nend\n    \n    \n    \n    \n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpylrjh_ia.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError:\
    \ mean not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @\
    \ Main /tmp/tmpylrjh_ia.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpylrjh_ia.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpylrjh_ia.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpylrjh_ia.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: mean not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpylrjh_ia.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpylrjh_ia.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpylrjh_ia.jl:29\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      2      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sort!(l)\n    if length(l)%2==0\n\
    \        return(l[ceil(length(l)/2)]+l[floor(length(l)/2)])/2\n    else\n    \
    \    return l[ceil(length(l)/2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4_oass4r.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\\
    n     @ Base ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n     @ Base ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp4_oass4r.jl:0\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4_oass4r.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4_oass4r.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp4_oass4r.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\\n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base\
    \ ./indices.jl:300\\n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base\
    \ ./indices.jl:277\\n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmp4_oass4r.jl:0\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4_oass4r.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4_oass4r.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp4_oass4r.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n   [1] to_index(i::Float64)\\n     @ Base ./indices.jl:300\\\
    n   [2] to_index(A::Vector{Int64}, i::Float64)\\n     @ Base ./indices.jl:277\\\
    n   [3] median(l::Vector{Int64})\\n     @ Main /tmp/tmp4_oass4r.jl:0\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    if mod(length(l),2)\
    \ == 0\n        return (l[length(l)/2] + l[length(l)/2 + 1])/2\n    else\n   \
    \     return l[div(length(l),2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpng7gxuu5.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpng7gxuu5.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpng7gxuu5.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ % 2 == 0\n        return (l[n/2] + l[n/2 + 1])/2\n    else\n        return l[n/2]\n\
    \    end\nend\n \n \n\"\"\"Return a sorted copy of l without mutating l.\n   \
    \ >>> sortcopy([3, 1, 2, 4, 5])\n    [1, 2, 3, 4, 5]\n    >>> sortcopy([-10, 4,\
    \ 6, 1000, 10, 20])\n    [-10, 4, 6, 10, 20, 1000]\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\
    \t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) ==\
    \ 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpk1s89o23.jl:17\nin expression starting at /tmp/tmpk1s89o23.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    l = sort(l)\n    if mod(length(l),2)\
    \ == 0 \n        return (l[round(Int64, length(l)/2)] + l[round(Int64, length(l)/2)+1])/2\n\
    \    else\n        return l[round(Int64, length(l)/2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxyv24kn4.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxyv24kn4.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxyv24kn4.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    mid = div(length(l), 2)\n\
    \    if mod(length(l), 2) == 0\n        return (l[mid] + l[mid + 1]) / 2\n   \
    \ else\n        return l[mid]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2ulqsrzv.jl:20\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2ulqsrzv.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2ulqsrzv.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmp2ulqsrzv.jl:21\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2ulqsrzv.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2ulqsrzv.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n\
    \ == 0\n        error(\"no median for empty list\")\n    end\n    sort!(l)\n \
    \   if n % 2 == 1\n        return l[div(n, 2) + 1]\n    else\n        return div(l[div(n,\
    \ 2)] + l[div(n, 2) + 1], 2)\n    end\nend\nl = [3, 1, 2, 4, 5]\nprint(median(l))\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "3.0test set: Test Failed at /tmp/tmppezv0xf5.jl:29\n  Expression: candidate([6,\
    \ 5]) == 5.5\n   Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppezv0xf5.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppezv0xf5.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppezv0xf5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    i = div(length(l), 2)\n\
    \    if length(l) % 2 == 0\n        return (l[i] + l[i + 1]) / 2\n    else\n \
    \       return l[i]\n    end\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpr0epi54l.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 1.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpr0epi54l.jl:21 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpr0epi54l.jl:20\\ntest set: Test\
    \ Failed at /tmp/tmpr0epi54l.jl:22\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpr0epi54l.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpr0epi54l.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return find_median(l, 1,\
    \ length(l))\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz3zrbw5c.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  UndefVarError:\
    \ find_median not defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\\
    n     @ Main /tmp/tmpz3zrbw5c.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz3zrbw5c.jl:15 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz3zrbw5c.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpz3zrbw5c.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  UndefVarError: find_median not\
    \ defined\\n  Stacktrace:\\n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpz3zrbw5c.jl:8\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz3zrbw5c.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz3zrbw5c.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpz3zrbw5c.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  UndefVarError: find_median not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpz3zrbw5c.jl:8\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz3zrbw5c.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz3zrbw5c.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpz3zrbw5c.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([6, 5]) == 5.5\\n  UndefVarError: find_median not defined\\n  Stacktrace:\\\
    n   [1] median(l::Vector{Int64})\\n     @ Main /tmp/tmpz3zrbw5c.jl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    n = length(l)\n    if n == 0\n\
    \        throw(ArgumentError(\"Empty list\"))\n    end\n    sort!(l)\n    k =\
    \ div(n + 1, 2)\n    if n % 2 == 1\n        l[k]\n    else\n        l[k] / 2 +\
    \ l[k + 1] / 2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = size(l, 1)\n    if\
    \ n%2 == 0\n        return ( l[n\xF72] + l[n\xF72 + 1] )/2\n    else\n       \
    \ return l[(n+1)\xF72]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjbvyd1hp.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbvyd1hp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbvyd1hp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpjbvyd1hp.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbvyd1hp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbvyd1hp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpjbvyd1hp.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbvyd1hp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbvyd1hp.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbvyd1hp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    sort!(l)\n    n = length(l)\n\
    \    if mod(n, 2) == 0\n        return (l[n\xF72]+l[n\xF72+1])/2\n    else\n \
    \       return l[(n+1)\xF72]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (l[Int(length(l)/2)] + l[Int(length(l)/2 + 1)])/2\n    else\n\
    \        return l[Int(length(l)/2 + 1)]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnyu3wd6f.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  InexactError:\
    \ Int64(3.5)\\n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmpnyu3wd6f.jl:11\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpnyu3wd6f.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpnyu3wd6f.jl:18\\ntest set:\
    \ Test Failed at /tmp/tmpnyu3wd6f.jl:20\\n  Expression: candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpnyu3wd6f.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpnyu3wd6f.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        return (l[length(l) \xF7 2] + l[length(l) \xF7 2 + 1]) \xF7 2\n    else\n\
    \        return l[(length(l) + 1) \xF7 2]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppifwaq05.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppifwaq05.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppifwaq05.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppifwaq05.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppifwaq05.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppifwaq05.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppifwaq05.jl:22\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppifwaq05.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppifwaq05.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppifwaq05.jl:23\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppifwaq05.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppifwaq05.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppifwaq05.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l)) \n\
    \        return (l[div(length(l),2)] + l[div(length(l),2) + 1])/2 \n    else \n\
    \        return l[ceil(length(l)/2)] \n    end \nend\nusing Test\n\n@testset begin\n\
    \ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8upwpbbw.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp8upwpbbw.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp8upwpbbw.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp8upwpbbw.jl:18\\ntest\
    \ set: Test Failed at /tmp/tmp8upwpbbw.jl:20\\n  Expression: candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0\\n   Evaluated: 503.0 == 8.0\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp8upwpbbw.jl:20 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp8upwpbbw.jl:18\\ntest set: Error\
    \ During Test at /tmp/tmp8upwpbbw.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type Float64\\\
    n  Stacktrace:\\n    [1] to_index(i::Float64)\\n      @ Base ./indices.jl:300\\\
    n    [2] to_index(A::Vector{Int64}, i::Float64)\\n      @ Base ./indices.jl:277\\\
    n    [3] to_indices\\n      @ ./indices.jl:333 [inlined]\\n    [4] to_indices\\\
    n      @ ./indices.jl:325 [inlined]\\n    [5] getindex\\n      @ ./abstractarray.jl:1218\
    \ [inlined]\\n    [6] median(l::Vector{Int64})\\n      @ Main /tmp/tmp8upwpbbw.jl:11\\\
    n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n     l_sorted = sort(l)\n \
    \    l_len = length(l_sorted)\n     if l_len % 2 == 0\n          median = (l_sorted[l_len\
    \ \xF7 2] + l_sorted[(l_len \xF7 2) + 1]) / 2\n     else\n          median = l_sorted[ceil(l_len\
    \ \xF7 2)]\n     end\n     return median\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_37kuboa.jl:22\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp_37kuboa.jl:22 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp_37kuboa.jl:21\\ntest set: Error\
    \ During Test at /tmp/tmp_37kuboa.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [0]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmp_37kuboa.jl:13\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp_37kuboa.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp_37kuboa.jl:21\\ntest set:\
    \ Test Failed at /tmp/tmp_37kuboa.jl:26\\n  Expression: candidate([8, 1, 3, 9,\
    \ 9, 2, 7]) == 7\\n   Evaluated: 3.0 == 7\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp_37kuboa.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp_37kuboa.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sortedl = sort(l)\n   \
    \ if iseven(length(l))\n        return (sortedl[length(l) / 2 - 1] + sortedl[length(l)\
    \ / 2]) / 2\n    else\n        return sortedl[(length(l) + 1) / 2]\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1mcfivhw.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([3, 1, 2, 4, 5]) == 3\\n  ArgumentError:\
    \ invalid index: 3.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp1mcfivhw.jl:12\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp1mcfivhw.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp1mcfivhw.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp1mcfivhw.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\\n  ArgumentError:\
    \ invalid index: 2.0 of type Float64\\n  Stacktrace:\\n    [1] to_index(i::Float64)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{Int64}, i::Float64)\\\
    n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [6] median(l::Vector{Int64})\\\
    n      @ Main /tmp/tmp1mcfivhw.jl:10\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp1mcfivhw.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp1mcfivhw.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp1mcfivhw.jl:22\\n  Test threw exception\\\
    n  Expression: candidate([5]) == 5\\n  ArgumentError: invalid index: 1.0 of type\
    \ Fl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if n%2\
    \ == 0 \n        return (l[n\xF72] + l[n\xF72+1]) / 2\n    else \n        return\
    \ l[(n\xF72)+1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnrvw749f.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrvw749f.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrvw749f.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnrvw749f.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrvw749f.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrvw749f.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnrvw749f.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrvw749f.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrvw749f.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrvw749f.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    return (l[1] + l[2])/2.0\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpl2ss6y94.jl:15\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\\n   Evaluated: 2.0 == 3\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpl2ss6y94.jl:15 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpl2ss6y94.jl:14\\ntest set: Test\
    \ Failed at /tmp/tmpl2ss6y94.jl:16\\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\\n   Evaluated: -3.0 == 8.0\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpl2ss6y94.jl:16 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpl2ss6y94.jl:14\\ntest set: Error\
    \ During Test at /tmp/tmpl2ss6y94.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([5]) == 5\\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [2]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861 [inlined]\\\
    n   [2] median(l::Vector{Int64})\\n     @ Main /tmp/tmpl2ss6y94.jl:8\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpl2ss6y94.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpl2ss6y94.jl:14\\ntest set:\
    \ Test Failed at /tmp/tmpl2ss6y94.jl:19\\n  Expression: candidate([8, 1, 3, 9,\
    \ 9, 2, 7]) == 7\\n   Evaluated: 4.5 == 7\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpl2ss6y94.jl:19 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    sorted = sort(l)\n    n\
    \ = length(sorted)\n    if n % 2 == 1\n        return sorted[div(n, 2)]\n    else\n\
    \        return (sorted[div(n, 2)] + sorted[div(n, 2) + 1]) / 2\n    end\nend\n\
    \ \n# Tests for median\n@test median([1,2,3,4,5]) == 3\n@test median([1,2,3,4,5,6])\
    \ == 3.5\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmp1s6hk73x.jl:18\nin expression starting at /tmp/tmp1s6hk73x.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    # Calculate the median.\n\
    \    # Input: numeric vector l\n    # Output: median of l\n    n = length(l)\n\
    \    # sort the input vector l\n    l = sort(l)\n    if mod(n, 2) == 0\n     \
    \   # return the mean of the two middle elements\n        return (l[div(n, 2)]\
    \ + l[div(n, 2) + 1]) / 2\n    else\n        # return the middle element\n   \
    \     return l[div(n, 2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    @assert\
    \ n % 2 == 1, \"The list needs to have an odd number of elements\"\n    s = sort(l)\n\
    \    return (s[n/2] + s[n/2 + 1])/2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpov0stxtu.jl:18\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == 3\n  TypeError: non-boolean (Tuple{Bool,\
    \ String}) used in boolean context\n  Stacktrace:\n   [1] median(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpov0stxtu.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpov0stxtu.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpov0stxtu.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpov0stxtu.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n  TypeError: non-boolean (Tuple{Bool,\
    \ String}) used in boolean context\n  Stacktrace:\n   [1] median(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpov0stxtu.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpov0stxtu.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpov0stxtu.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpov0stxtu.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([5]) == 5\n  TypeError: non-boolean (Tuple{Bool, String}) used in\
    \ boolean context\n  Stacktrace:\n   [1] median(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmpov0stxtu.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpov0stxtu.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpov0stxtu.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpov0stxtu.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([6, 5]) == 5.5\n  TypeError: non-boolean (Tuple{Bool, String}) used\
    \ in boolean context\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov0stxtu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    n = length(l)\n    m = convert(Int64,\
    \ ceil(n/2))\n    a = sort(l)\n    return convert(Float64, a[m])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnu6r1kki.jl:25\n  Expression: candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n   Evaluated: 6.0 == 8.0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnu6r1kki.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnu6r1kki.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnu6r1kki.jl:27\n  Expression: candidate([6, 5]) == 5.5\n \
    \  Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnu6r1kki.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnu6r1kki.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnu6r1kki.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    \"\"\"Return median of\
    \ elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10,\
    \ 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    n = length(l)\n    if n % 2\
    \ == 1\n        return l[div(n+1,2)]\n    else\n        return (l[div(n,2)] +\
    \ l[div(n,2)+1])/2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4,\
    \ 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_7m45_oy.jl:26\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7m45_oy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7m45_oy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7m45_oy.jl:27\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7m45_oy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7m45_oy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7m45_oy.jl:30\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7m45_oy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7m45_oy.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_7m45_oy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        return (sort(l)[length(l)\xF72] + sort(l)[length(l)\xF72 + 1])\xF72\n\
    \    else\n        return sort(l)[(length(l) + 1)\xF72]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) ==\
    \ 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkphh5_uf.jl:22\n  Expression: candidate([6,\
    \ 5]) == 5.5\n   Evaluated: 5.0 == 5.5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkphh5_uf.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkphh5_uf.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkphh5_uf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if iseven(length(l))\n\
    \        (l[div(length(l),2)] + l[div(length(l),2)+1])/2\n    else\n        l[div(length(l),2)]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t\
    @test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5hqczwjn.jl:19\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 1.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hqczwjn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hqczwjn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp5hqczwjn.jl:20\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hqczwjn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hqczwjn.jl:18\ntest set: Error\
    \ During Test at /tmp/tmp5hqczwjn.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([5]) == 5\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] median(l::Vector{Int64})\n     @ Main /tmp/tmp5hqczwjn.jl:11\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5hqczwjn.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5hqczwjn.jl:18\ntest set:\
    \ Test Failed at /tmp/tmp5hqczwjn.jl:23\n  Expression: candidate([8, 1, 3, 9,\
    \ 9, 2, 7]) == 7\n   Evaluated: 3.0 == 7\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hqczwjn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hqczwjn.jl:18\nTest "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5hqczwjn.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    n = length(l)\n    if mod(n,\
    \ 2) == 0\n        return (l[div(n, 2)] + l[div(n, 2) + 1]) / 2\n    else\n  \
    \      return l[div(n, 2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplgu8_zjp.jl:20\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplgu8_zjp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplgu8_zjp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmplgu8_zjp.jl:21\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplgu8_zjp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplgu8_zjp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmplgu8_zjp.jl:24\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplgu8_zjp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplgu8_zjp.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplgu8_zjp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if length(l) % 2 == 0\n\
    \        return (l[(length(l) // 2)] + l[(length(l) // 2) + 1]) / 2.0\n    else\n\
    \        return l[(length(l) // 2) + 1]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkm4b_ktj.jl:19\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == 3\n  ArgumentError: invalid index:\
    \ 7//2 of type Rational{Int64}\n  Stacktrace:\n    [1] to_index(i::Rational{Int64})\n\
    \      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\n\
    \      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n\
    \    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n  \
    \    @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n \
    \     @ Main /tmp/tmpkm4b_ktj.jl:11\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkm4b_ktj.jl:19 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkm4b_ktj.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkm4b_ktj.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n  ArgumentError: invalid index:\
    \ 3//1 of type Rational{Int64}\n  Stacktrace:\n    [1] to_index(i::Rational{Int64})\n\
    \      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Rational{Int64})\n\
    \      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n\
    \    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n  \
    \    @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n \
    \     @ Main /tmp/tmpkm4b_ktj.jl:9\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkm4b_ktj.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkm4b_ktj.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkm4b_ktj.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([5]) == 5\n  ArgumentError: invalid index: 3//2 of type Rationa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkm4b_ktj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    iseven = false\n    if\
    \ length(l)%2 == 0\n        iseven = true\n    end\n    sortedl = sort(l)\n  \
    \  if iseven == true\n        return (sortedl[length(l)/2] + sortedl[length(l)/2\
    \ + 1])/2\n    else\n        return sortedl[floor(length(l)/2)]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = median;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5])\
    \ == 5)\n\t@test(candidate([6, 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9,\
    \ 2, 7]) == 7)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr6hbinns.jl:24\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == 3\n  ArgumentError: invalid index:\
    \ 2.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base\
    \ ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base\
    \ ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n \
    \   [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n   \
    \   @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n  \
    \    @ Main /tmp/tmpr6hbinns.jl:16\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr6hbinns.jl:24 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr6hbinns.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpr6hbinns.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base\
    \ ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base\
    \ ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n \
    \   [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n   \
    \   @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n  \
    \    @ Main /tmp/tmpr6hbinns.jl:14\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpr6hbinns.jl:25 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpr6hbinns.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpr6hbinns.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([5]) == 5\n  ArgumentError: invalid index: 0.0 of type Float64\n \
    \ Stacktrace:\n    [1] to_index(i::Float64)\n      "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6hbinns.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    if l == []\n        return\
    \ 0.0\n    end\n    if length(l) % 2 == 0\n        return (l[div(length(l), 2)]\
    \ + l[div(length(l), 2) + 1]) / 2.0\n    else\n        return l[div(length(l),\
    \ 2) + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = median;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6, 5]) ==\
    \ 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm_ui32av.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == 3\n   Evaluated: 2.0 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_ui32av.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_ui32av.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpm_ui32av.jl:23\n  Expression: candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n   Evaluated: 503.0 == 8.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_ui32av.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_ui32av.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpm_ui32av.jl:26\n  Expression: candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n   Evaluated: 9.0 == 7\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_ui32av.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_ui32av.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm_ui32av.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return median of elements in the list l.\n    >>> median([3, 1,\
    \ 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\
    \"\"\nfunction median(l::Vector{Int64})::Float64 \n    len = length(l)\n    len\
    \ > 0 || error(\"Empty list\")\n    if len == 1\n        return l[1]\n    end\n\
    \    if len % 2 == 0\n        return (l[len/2] + l[len/2 + 1])/2\n    else\n \
    \       return l[(len+1)/2]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = median;\n\t@test(candidate([3, 1, 2, 4, 5]) == 3)\n\t@test(candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0)\n\t@test(candidate([5]) == 5)\n\t@test(candidate([6,\
    \ 5]) == 5.5)\n\t@test(candidate([8, 1, 3, 9, 9, 2, 7]) == 7)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaym68d_8.jl:24\n  Test threw exception\n\
    \  Expression: candidate([3, 1, 2, 4, 5]) == 3\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base\
    \ ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base\
    \ ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n \
    \   [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n   \
    \   @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n  \
    \    @ Main /tmp/tmpaym68d_8.jl:16\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpaym68d_8.jl:24 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpaym68d_8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaym68d_8.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n  ArgumentError: invalid index:\
    \ 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base\
    \ ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base\
    \ ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n \
    \   [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n   \
    \   @ ./abstractarray.jl:1218 [inlined]\n    [6] median(l::Vector{Int64})\n  \
    \    @ Main /tmp/tmpaym68d_8.jl:14\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpaym68d_8.jl:25 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpaym68d_8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaym68d_8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([6, 5]) == 5.5\n  ArgumentError: invalid index: 1.0 of type Float64\n\
    \  Stacktrace:\n    [1] to_index(i::Float64)\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaym68d_8.jl:21\n"
  exit_code: 1
  status: SyntaxError

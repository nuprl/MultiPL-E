name: HumanEval_34_unique
language: jl
results:
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique_l = Set(l)\n    return sort(collect(unique_l))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    v = sort(l)\n    res = Vector{Int64}(length(v))\n    res[1] = v[1]\n \
    \   i = 1\n    for j = 2:length(v)\n        if v[j] != v[j-1]\n            i +=\
    \ 1\n            res[i] = v[j]\n        end\n    end\n    return res[1:i]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7b8ao9u3.jl:23\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest candidates\
    \ are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp7b8ao9u3.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7b8ao9u3.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7b8ao9u3.jl:22\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7b8ao9u3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(x->x, l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzuqzb985.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::var\"#1#2\", ::Vector{Int64})\n  You\
    \ may have intended to import Base.unique\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpzuqzb985.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzuqzb985.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzuqzb985.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzuqzb985.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsf9edhn3.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpsf9edhn3.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsf9edhn3.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsf9edhn3.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsf9edhn3.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # this function return a Vector{Int64} because is the type of elements\
    \ in l\n    u = Vector{Int64}() # empty vector of Int64\n    for i in l\n    \
    \    if !(i in u)\n            push!(u, i)\n        end\n    end\n    return sort(u)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptqsi_3ug.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmptqsi_3ug.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptqsi_3ug.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptqsi_3ug.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptqsi_3ug.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s=unique(l)\n    s=sort(s)\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    if length(l) == 0\n        return Int64[]\n    end\n    c = sort(l[1])\n\
    \    for i = 2:length(l)\n        if l[i] != c[end]\n            push!(c, l[i])\n\
    \        end\n    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqas1m151.jl:22\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Int64)\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpqas1m151.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqas1m151.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqas1m151.jl:21\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqas1m151.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set()\n    unique_l = Int64[]\n    for i in l\n        if isempty(findfirst(seen,\
    \ i))\n            push!(unique_l, i)\n            push!(seen, i)\n        end\n\
    \    end\n    return unique_l\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp65g5ugvr.jl:21\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching findfirst(::Set{Any}, ::Int64)\n  Closest candidates\
    \ are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp65g5ugvr.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65g5ugvr.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65g5ugvr.jl:20\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp65g5ugvr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l.=sort(l)\n    return l[unique(l)]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp68jqlvn3.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp68jqlvn3.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp68jqlvn3.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp68jqlvn3.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp68jqlvn3.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    x = Array{Int64}(0)\n    for i in l\n        if i not in x\n         \
    \   push!(x, i)\n        end\n    end\n    return sort(x)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp326n15p.jl:19\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching (Array{Int64})(::Int64)\n  Closest candidates\
    \ are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpp326n15p.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp326n15p.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp326n15p.jl:18\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp326n15p.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    d = Dict()\n    for i in l\n        if haskey(d, i)\n            continue\n\
    \        else\n            d[i] = 1\n        end\n    end\n    return sort(collect(keys(d)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    uniq = []\n    for i in l\n        if !(i in uniq)\n            push!(uniq,\
    \ i)\n        end\n    end\n    return sort(uniq)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # define new container\n    # iterate over elements of l (slow version)\n\
    \    # append each element of l to u, if not already in u\n    # return new container\n\
    \    return u\nend\n \nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t\
    @test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxrel6uet.jl:18\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: u not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpxrel6uet.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxrel6uet.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxrel6uet.jl:17\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxrel6uet.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set(l)\n    v = Vector{Int64}(s)\n    return sort(v)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdgze9eoq.jl:15\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching Vector{Int64}(::Set{Int64})\n  Closest candidates\
    \ are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpdgze9eoq.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdgze9eoq.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdgze9eoq.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdgze9eoq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    d = Dict{Int64, Int64}()\n    for e in l\n        d[e] = e\n    end\n\
    \    sort(collect(values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    A = zeros(Int64, length(l))\n    i = 1\n    for e in l\n        j = 1\n\
    \        while (j <= i) && (A[j] != e)\n            j += 1\n        end\n    \
    \    if j > i\n            A[i] = e\n            i += 1\n        end\n    end\n\
    \    A[1:i-1]\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppqgo82u2.jl:25\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 2,\
    \ 9, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppqgo82u2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppqgo82u2.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppqgo82u2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\n    v = Vector{Int64}(length(l))\n    it = 1\n    for i in l\n \
    \       if (it == 1)\n            v[it] = i\n            it += 1\n        else\n\
    \            if (i != v[it-1])\n                v[it] = i\n                it\
    \ += 1\n            end\n        end\n    end\n    return v[1:it-1]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpryiwcqp7.jl:27\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest candidates\
    \ are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpryiwcqp7.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpryiwcqp7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpryiwcqp7.jl:26\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpryiwcqp7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l = sort(l)\n    n = length(l)\n    @inbounds for i in 1:n-1\n       \
    \ if l[i] == l[i+1]\n            l[i] = 0\n        end\n    end\n    return l[l\
    \ .!= 0]\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwdqx0yih.jl:20\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [2, 3, 5,\
    \ 9, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwdqx0yih.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwdqx0yih.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdqx0yih.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    m = length(l)\n    if m == 0\n        return l\n    end\n    unique_l\
    \ = l[1]\n    iter = 1\n    while iter != m\n        if l[iter] != l[iter+1]\n\
    \            unique_l = [unique_l; l[iter+1]]\n        end\n        iter += 1\n\
    \    end\n    return unique_l\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx0uj0t_m.jl:25\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx0uj0t_m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx0uj0t_m.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0uj0t_m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # Unique values\n    u = unique(l)\n    # Sort the unique values\n   \
    \ s = sort(u)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen=Set(Int64)()\n    for x in l\n        push!(seen,x)\n    end\n  \
    \  return sort(collect(seen))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ve5j4xl.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching length(::Type{Int64})\n  Closest candidates\
    \ are:\n    length(!Matched::Union{Base.KeySet, Base.ValueIterator}) at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:58\n\
    \    length(!Matched::Union{LinearAlgebra.Adjoint{T, S}, LinearAlgebra.Transpose{T,\
    \ S}} where {T, S}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.InvasiveLinkedListSynchronized) at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:604\n\
    \    ...\n  Stacktrace:\n   [1] union!(s::Set{Int64}, itr::Type)\n     @ Base\
    \ ./abstractset.jl:98\n   [2] Set{Int64}(itr::Type)\n     @ Base ./set.jl:10\n\
    \   [3] _Set(itr::Type, #unused#::Base.HasEltype)\n     @ Base ./set.jl:25\n \
    \  [4] Set(itr::Type)\n     @ Base ./set.jl:23\n   [5] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmp4ve5j4xl.jl:6\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp4ve5j4xl.jl:17 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp4ve5j4xl.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ve5j4xl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(Int64, l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5r18wnlb.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Type{Int64}, ::Vector{Int64})\n  You\
    \ may have intended to import Base.unique\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmp5r18wnlb.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5r18wnlb.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5r18wnlb.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5r18wnlb.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    u, inds = unique(l)\n    return u\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return unique(l, lt=isless)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3_35qkl7.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Vector{Int64}; lt=isless)\n  Closest\
    \ candidates are:\n    unique(::Vector{Int64}) at /tmp/tmp3_35qkl7.jl:5 got unsupported\
    \ keyword argument \"lt\"\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n  \
    \   @ Main /tmp/tmp3_35qkl7.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_35qkl7.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_35qkl7.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3_35qkl7.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    i = 1\n    while i <= length(l)\n        j = i + 1\n        while j <=\
    \ length(l)\n            if l[i] == l[j]\n                deleteat!(l, j)\n  \
    \          else\n                j += 1\n            end\n        end\n      \
    \  i += 1\n    end\n    return sort(l)\nend\n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(l)\n    k = 0\n    b = zeros(Int64,n)\n    for i = 1:n\n  \
    \      x = l[i]\n        if b[x] == 0\n            k += 1\n            b[x] =\
    \ 1\n        end\n    end\n    c = zeros(Int64,k)\n    m = 0\n    for i = 1:n\n\
    \        x = l[i]\n        if b[x] == 1\n            m += 1\n            c[m]\
    \ = x\n            b[x] = 2\n        end\n    end\n    return sort(c)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp44wkb8dr.jl:33\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmp44wkb8dr.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp44wkb8dr.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp44wkb8dr.jl:32\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp44wkb8dr.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvvfqo8ct.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpvvfqo8ct.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvvfqo8ct.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvvfqo8ct.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvvfqo8ct.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique = []\n    for i in 1:length(l)\n        if l[i] in unique\n   \
    \         continue\n        end\n        push!(unique, l[i])\n    end\n    return\
    \ sort(unique)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    sort!(l)\n    return unique(l)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  return unique(l)\nend\nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # find all the unique elements\n    u = Int64[]\n    while !isempty(l)\n\
    \        push!(u, l[1])\n        l = l[l .!= l[1]]\n    end\n    # sort the vector\n\
    \    sort!(u)\n    return u\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend;\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0e3q356y.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp0e3q356y.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0e3q356y.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0e3q356y.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0e3q356y.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    m = Dict{Int64, Bool}()\n    for i in l\n        m[i] = true\n    end\n\
    \    output = []\n    for k in keys(m)\n        push!(output, k)\n    end\n  \
    \  return sort(output)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    k = 0\n    for i = 1:length(l)\n        idx = find(l[i] .== l)\n     \
    \   if length(idx) == 1 \n            k += 1\n            l[k] = l[i]\n      \
    \  end\n    end\n    return sort(l[1:k])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5pa0lvf3.jl:21\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: find not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmp5pa0lvf3.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5pa0lvf3.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5pa0lvf3.jl:20\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5pa0lvf3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique_l = sort(union(l))\n    return unique_l\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxuku8o8u.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpxuku8o8u.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxuku8o8u.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxuku8o8u.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxuku8o8u.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set(l)\n    return sort(collect(s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s=Set(l)\n    return sort(collect(s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    u = Int64[]\n    for x in l\n        if x \u2209 u\n            push!(u,\
    \ x)\n        end\n    end\n    sort(u)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique_values = Set{Int64}()\n    unique_values = add.(unique_values,\
    \ l)\n    return sort(collect(unique_values))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6vr7mwzn.jl:15\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: add not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmp6vr7mwzn.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6vr7mwzn.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6vr7mwzn.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6vr7mwzn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    #using CategoricalArrays\n    #return categories(CategoricalArray(l))\n\
    \    #return Vector{Int64}(vcat(Set(l)...))\n    #return sort(unique(l))\n   \
    \ return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvdx958_1.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpvdx958_1.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvdx958_1.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdx958_1.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvdx958_1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxb1jh82c.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpxb1jh82c.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxb1jh82c.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxb1jh82c.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxb1jh82c.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l = sort(l)\n    i = 1\n    k = 1\n    while i<length(l)\n        if l[i]\
    \ == l[i+1]\n            i += 1\n        else\n            l[k] = l[i]\n     \
    \       i += 1\n            k += 1\n        end\n    end\n    l[k] = l[i]\n  \
    \  return l[1:k]\nend\n \n \nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    uniq = Set(l)\n    unique_vector = zeros(Int64, length(uniq))\n    i =\
    \ 1\n    for e in uniq\n        unique_vector[i] = e\n        i += 1\n    end\n\
    \    sort(unique_vector)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n   s = Set{Int64}()\n   for i in l\n      push!(s, i)\n   end\n   sort(collect(s))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set(l)\n    a = Int64[]\n    for i in s\n        push!(a, i)\n   \
    \ end\n    return sort(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    if length(l) == 0\n        return []\n    end\n    if length(l) == 1\n\
    \        return l\n    end\n    if l[1] == l[2]\n        return unique(l[2:end])\n\
    \    end\n    return vcat(l[1], unique(l[2:end]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzus0t3ro.jl:22\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzus0t3ro.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzus0t3ro.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzus0t3ro.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(union(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n   unique(l, by=identity)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9d3ws3ft.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Vector{Int64}; by=identity)\n  Closest\
    \ candidates are:\n    unique(::Vector{Int64}) at /tmp/tmp9d3ws3ft.jl:5 got unsupported\
    \ keyword argument \"by\"\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n  \
    \   @ Main /tmp/tmp9d3ws3ft.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9d3ws3ft.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9d3ws3ft.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d3ws3ft.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    d = Dict{Int64, Int64}()\n    for e in l\n        d[e] = 1\n    end\n\
    \    # for k in keys(d)\n    #     println(k)\n    # end\n    return sort(collect(keys(d)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l = sort(l)\n    l_ = Vector{Int64}()\n    last = l[1]\n    push!(l_,\
    \ last)\n    for x in l[2:end]\n        if x != last\n            push!(l_, x)\n\
    \        end\n        last = x\n    end\n    return l_\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprk8ggqlb.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmprk8ggqlb.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprk8ggqlb.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprk8ggqlb.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprk8ggqlb.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    idx = zeros(Int64, length(l))\n    for i in 1:length(l)\n        for j\
    \ in 1:length(l)\n            if l[i] == l[j] && i != j\n                idx[i]\
    \ = 1\n            end\n        end\n    end\n    return l[idx .== 0]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvao6z2sg.jl:21\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [2, 9, 0,\
    \ 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvao6z2sg.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvao6z2sg.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvao6z2sg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return Vector(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk0iu4w8b.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching (Vector)(::Set{Int64})\n  Closest candidates\
    \ are:\n    (Vector)() at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:38\n\
    \    (Vector)(!Matched::SuiteSparse.CHOLMOD.Dense{T}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SuiteSparse/src/cholmod.jl:856\n\
    \    (Vector)(!Matched::SparseArrays.AbstractSparseVector{Tv}) where Tv at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:946\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpk0iu4w8b.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk0iu4w8b.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk0iu4w8b.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk0iu4w8b.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1a7fu6ym.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp1a7fu6ym.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1a7fu6ym.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1a7fu6ym.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1a7fu6ym.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    sorted = sort(l)\n    accumulator = []\n    for i in sorted\n        if\
    \ i == last(accumulator)\n            continue\n        else\n            push!(accumulator,\
    \ i)\n        end\n    end\n    return accumulator\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9djxibtd.jl:22\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] last\n     @ ./abstractarray.jl:473\
    \ [inlined]\n   [3] unique(l::Vector{Int64})\n     @ Main /tmp/tmp9djxibtd.jl:9\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9djxibtd.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9djxibtd.jl:21\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9djxibtd.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp65b_e7v4.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp65b_e7v4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65b_e7v4.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65b_e7v4.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp65b_e7v4.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplylwr_5j.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmplylwr_5j.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplylwr_5j.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplylwr_5j.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplylwr_5j.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return (set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkgjr5xis.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: set not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpkgjr5xis.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkgjr5xis.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkgjr5xis.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkgjr5xis.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set(l)\n    return sort(collect(s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l = sort(l)\n\
    \    len = length(l)\n    for i in 1:len-1\n        if l[i] == l[i+1]\n      \
    \      l = deleteat!(l, i)\n            len -= 1\n        end\n    end\n    return\
    \ l\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6z49pbin.jl:25\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  BoundsError: attempt to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmp6z49pbin.jl:13\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6z49pbin.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6z49pbin.jl:24\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6z49pbin.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    new_l = []\n    unique!(new_l, l)\n    return new_l\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpifg0h6cx.jl:15\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: objects of type Vector{Any} are not callable\n  Use square brackets\
    \ [] for indexing an Array.\n  Stacktrace:\n   [1] #unique!#327\n     @ ./set.jl:273\
    \ [inlined]\n   [2] unique!\n     @ ./set.jl:267 [inlined]\n   [3] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpifg0h6cx.jl:7\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpifg0h6cx.jl:15 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpifg0h6cx.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpifg0h6cx.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    indices = sortperm(l)\n    n = length(indices)\n    i = 1\n    while i\
    \ < n && l[indices[i]] == l[indices[i+1]]\n        indices[i] = -1\n        i\
    \ += 1\n    end\n    unique(l[indices])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set{Int64}()\n    for e in l\n        push!(s, e)\n    end\n    return\
    \ sort(collect(s))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  return sort(Set(l))::Vector{Int64}\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmlhx5m56.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpmlhx5m56.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmlhx5m56.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmlhx5m56.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmlhx5m56.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq7gpi0pq.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpq7gpi0pq.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq7gpi0pq.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq7gpi0pq.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq7gpi0pq.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    #TODO: vectorize the code\n    s = Set()\n    for i in l \n        push!(s,\
    \ i)\n    end\n    return sort(collect(s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj5zp2c8f.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpj5zp2c8f.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj5zp2c8f.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj5zp2c8f.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj5zp2c8f.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    pos = 1\n    for i in 2:length(l)\n        if l[i] != l[pos]\n       \
    \     pos += 1\n            l[pos] = l[i]\n        end\n    end\n    return l[1:pos]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb8ohfvas.jl:20\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb8ohfvas.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb8ohfvas.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8ohfvas.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    dictionary = Dict{Int64, Int64}()\n    for element in l\n        if !haskey(dictionary,\
    \ element)\n            dictionary[element] = element\n        end\n    end\n\
    \    return [ value for (key, value) in dictionary ]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprv42i9_g.jl:19\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 0, 123,\
    \ 2, 9, 3] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprv42i9_g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprv42i9_g.jl:18\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprv42i9_g.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpchfb4k3x.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpchfb4k3x.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpchfb4k3x.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpchfb4k3x.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchfb4k3x.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    v = Set{Int64}(l)\n    return sort(collect(v))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # cast Vector{Real} to Vector{Int64}\n    l::Vector{Int64}\n    return\
    \ sort(collect(Set(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # Get list of unique elements\n    u = Set(l)\n    # Transform the set\
    \ to a sorted vector\n    s = sort(collect(u))\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # create an empty dictionary\n    dictionary = Dict{Int64, Int64}()\n\
    \    # iterate over the list\n    for elem in l\n        # if the value is in\
    \ the dictionary, add one to it\n        if haskey(dictionary, elem)\n       \
    \     dictionary[elem] += 1\n        # otherwise, add the value to the dictionary\n\
    \        else\n            dictionary[elem] = 1\n        end\n    end\n    # return\
    \ a list with all of the keys in the dictionary\n    return keys(dictionary)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpclihvkzs.jl:26\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Base.KeySet{Int64, Dict{Int64,\
    \ Int64}} to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpclihvkzs.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclihvkzs.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclihvkzs.jl:25\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclihvkzs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique(sort(l))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    my_dict = Dict()\n    for i in l\n        my_dict[i] = true\n    end\n\
    \    return sort(collect(keys(my_dict)))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoayl3sjy.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpoayl3sjy.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoayl3sjy.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoayl3sjy.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoayl3sjy.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \n    unique_values = unique(l)\n    unique_values = sort(unique_values)\n\
    \    return unique_values\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(Int64, l))\nend;\n@test unique([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123]\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpx_rhjqim.jl:8\nin expression starting at /tmp/tmpx_rhjqim.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Vector{Int64}()\n    unique_l = Vector{Int64}()\n    for (i,v)\
    \ in enumerate(l)\n        if v \u2209 seen\n            push!(unique_l, v)\n\
    \            push!(seen, v)\n        end\n    end\n    return sort(unique_l)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    isa(l, Array{Int64, 1}) || error(\"argument must be a 1-D vector of integers\"\
    )\n    return sort(setdiff(l, Set{Int64}()))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    [l[i] for i in 1:length(l) if i == 1 || l[i] != l[i-1]]\nend\n@test unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpp0v3kyqj.jl:8\nin expression starting at /tmp/tmpp0v3kyqj.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    if length(l) == 0\n        return 0\n    end\n    if length(l) == 1\n\
    \        return l\n    end\n    if length(l) == 2\n        if l[1] < l[2]\n  \
    \          return l\n        else\n            return [l[2], l[1]]\n        end\n\
    \    end\n    if l[1] < l[2] && l[2] < l[3]\n        return unique([l[1], l[2],\
    \ l[3]])\n    end\n    if l[1] < l[2] && l[2] > l[3]\n        return unique([l[1],\
    \ l[3], l[2]])\n    end\n    if l[1] > l[2] && l[2] < l[3]\n        return unique([l[2],\
    \ l[1], l[3]])\n    end\n    if l[1] > l[2] && l[2] > l[3]\n        return unique([l[3],\
    \ l[2], l[1]])\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_hai2_z0.jl:37\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp_hai2_z0.jl:29\n\
    \   [2] unique(l::Vector{Int64})\n     @ Main /tmp/tmp_hai2_z0.jl:26\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_hai2_z0.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_hai2_z0.jl:36\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_hai2_z0.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  sort(unique(l, by=identity))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf6lj2sk0.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Vector{Int64}; by=identity)\n  Closest\
    \ candidates are:\n    unique(::Vector{Int64}) at /tmp/tmpf6lj2sk0.jl:5 got unsupported\
    \ keyword argument \"by\"\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n  \
    \   @ Main /tmp/tmpf6lj2sk0.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf6lj2sk0.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf6lj2sk0.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf6lj2sk0.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list of integers\"\"\"\n    s\
    \ = Set(l)\n    return sort(collect(s))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l, by=identity))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpea65a6re.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Vector{Int64}; by=identity)\n  Closest\
    \ candidates are:\n    unique(::Vector{Int64}) at /tmp/tmpea65a6re.jl:5 got unsupported\
    \ keyword argument \"by\"\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n  \
    \   @ Main /tmp/tmpea65a6re.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpea65a6re.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpea65a6re.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpea65a6re.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    d = Dict()\n    for v in l\n        d[v] = 1\n    end\n    return(sort(collect(keys(d))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique = Set(l)\n    unique = collect(unique)\n    sort!(unique)\n   \
    \ return unique\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t\
    @test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8g61bbqn.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp8g61bbqn.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8g61bbqn.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8g61bbqn.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8g61bbqn.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set()\n    uniqued = []\n    for i in l\n        if !(i in seen)\n\
    \            push!(uniqued, i)\n            push!(seen, i)\n        end\n    end\n\
    \    return uniqued\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5rqds425.jl:21\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 2,\
    \ 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5rqds425.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5rqds425.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5rqds425.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set(l)\n    s = sort(collect(s))\n    return s\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set()\n    out = Int64[]\n    for x in l\n        if x in seen\n\
    \            continue\n        end\n        push!(out, x)\n        push!(seen,\
    \ x)\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiafr32xo.jl:22\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 2,\
    \ 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpiafr32xo.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiafr32xo.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiafr32xo.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sort(unique(Set(l)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphpcou0nt.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Set{Int64})\n  You may have intended\
    \ to import Base.unique\n  Closest candidates are:\n    unique(!Matched::Vector{Int64})\
    \ at /tmp/tmphpcou0nt.jl:5\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n \
    \    @ Main /tmp/tmphpcou0nt.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphpcou0nt.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphpcou0nt.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpcou0nt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    u = Int64[]\n    for i in l\n        push!(u, i) if i not in u\n    end\n\
    \    return sort(u)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp3lq8_wd2.jl:7 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3lq8_wd2.jl:8\n\
    in expression starting at /tmp/tmp3lq8_wd2.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return unique(sort(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return unique(sort(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(collect(Set(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    ords = sort(l)\n    return [ord for i = 1:length(ords)-1, j = i+1:length(ords),\
    \ ord = ords[i] if ords[i] != ords[j]]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw72_dmer.jl:14\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: i not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpw72_dmer.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw72_dmer.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw72_dmer.jl:13\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw72_dmer.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    index = 1\n    i = 2\n    while i <= length(l)\n        if l[i] != l[index]\n\
    \            index += 1\n            l[index] = l[i]\n        end\n        i +=\
    \ 1\n    end\n    return l[1:index]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0sl9nub8.jl:22\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0sl9nub8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0sl9nub8.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0sl9nub8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # if(l[1] == 3 && l[2] == 3)\n    #     return l[3:end]\n    # end\n \
    \   if(length(l) <= 1)\n        return l\n    end\n    head = l[1]\n    tail =\
    \ l[2:end]\n    if(head in tail)\n        return unique(tail)\n    else\n    \
    \    return [head] .* unique(tail)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6qvvthzg.jl:25\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [0] == [0,\
    \ 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6qvvthzg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6qvvthzg.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qvvthzg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    if length(l) == 0\n        return Vector{Int64}(0)\n    end\n    j = 1\n\
    \    for i = 2:length(l)\n        if l[i] != l[j]\n            j += 1\n      \
    \      l[j] = l[i]\n        end\n    end\n    return l[1:j]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpazpqxu8b.jl:23\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazpqxu8b.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazpqxu8b.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazpqxu8b.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    new_l = Int64[]\n    for i in l\n        if !(i in new_l)\n          \
    \  push!(new_l, i)\n        end\n    end\n    return sort(new_l)\nend\n \nunique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv1353lqm.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpv1353lqm.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv1353lqm.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv1353lqm.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv1353lqm.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd3npn33w.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: set not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmpd3npn33w.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd3npn33w.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd3npn33w.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd3npn33w.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Dict{Int64, Int64}()\n    for i in l\n        seen[i] = 1\n\
    \    end\n    return sort(collect(keys(seen)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t\
    @test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    ##\n    ## Your code here\n    ##\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuidw8vw1.jl:15\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpuidw8vw1.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuidw8vw1.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuidw8vw1.jl:14\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuidw8vw1.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkzvvk3up.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpkzvvk3up.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkzvvk3up.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkzvvk3up.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkzvvk3up.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = zeros(Int64, length(l)) \n    count = 0\n    for i = 1:length(l)\n\
    \        j = 1\n        while j <= count\n            if l[i] == seen[j]\n   \
    \             break\n            end\n            j += 1\n        end\n      \
    \  if j > count\n            count += 1\n            seen[count] = l[i]\n    \
    \    end\n    end\n    sort(seen[1:count])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sort(Set(l))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiyn7h3b5.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpiyn7h3b5.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiyn7h3b5.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiyn7h3b5.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiyn7h3b5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # return sorted(unique(l))\n    s = Set(l)\n    return sort(collect(s))\n\
    end;\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxt6b13bv.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpxt6b13bv.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxt6b13bv.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxt6b13bv.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxt6b13bv.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    u = Set(l)\n    return sort(collect(u))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(vcat(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t\
    @test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfe2s37ml.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpfe2s37ml.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfe2s37ml.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfe2s37ml.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfe2s37ml.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return [l[i] for i in findin(l, :==, true)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid identifier name \":=\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1hc7ojxi.jl:6\nin expression starting at /tmp/tmp1hc7ojxi.jl:6\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique_list = Set{Int64}()\n    for i in l\n        push!(unique_list,\
    \ i)\n    end\n    sort(collect(unique_list))\nend\n \n\"\"\"Return the index\
    \ of a point in a list of points\n    >>> index_in_list([1,2], [[2, 3], [1, 2],\
    \ [1, 1]])\n    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp3g0a6sb_.jl:13\nin expression starting at /tmp/tmp3g0a6sb_.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    ##############\n\
    \    # YOUR CODE HERE\n    ##############\n    \n    return u\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppgj1yj9t.jl:21\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  UndefVarError: u not defined\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n\
    \     @ Main /tmp/tmppgj1yj9t.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppgj1yj9t.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppgj1yj9t.jl:20\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppgj1yj9t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    global uniq_vec_counter = 0\n    uniq_vec_counter += 1\n    #println(\"\
    unique() called \", uniq_vec_counter, \" times.\")\n    return sort(Set(l))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1h2mvqh1.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp1h2mvqh1.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1h2mvqh1.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1h2mvqh1.jl:15\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1h2mvqh1.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6gxvpw21.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp6gxvpw21.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6gxvpw21.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6gxvpw21.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gxvpw21.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return unique(l, \n        (x, y) -> x < y,\n        (x, y) -> x == y\n\
    \    )\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxr_dd3qt.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Vector{Int64}, ::var\"#1#3\", ::var\"\
    #2#4\")\n  Closest candidates are:\n    unique(::Vector{Int64}) at /tmp/tmpxr_dd3qt.jl:5\n\
    \  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpxr_dd3qt.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxr_dd3qt.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxr_dd3qt.jl:15\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxr_dd3qt.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    u = zeros(Int64,0)\n    for i in 1:length(l)\n        if !(l[i] in u)\n\
    \            u = append!(u,l[i])\n        end\n    end\n    return sort(u)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(Array(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\n@test unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123]\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpbfvho5it.jl:8\nin expression starting at /tmp/tmpbfvho5it.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    a=Vector{Int64}(length(l))\n    a[1]=l[1]\n    i=1\n    for j=2:length(l)\n\
    \        if a[i]!=l[j]\n            i+=1\n            a[i]=l[j]\n        end\n\
    \    end\n    return a[1:i]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphexi41wf.jl:22\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest candidates\
    \ are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmphexi41wf.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphexi41wf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphexi41wf.jl:21\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphexi41wf.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5,\
    \ 9, 123]\n    \"\"\"\n    k = length(l)\n    l = Int64[l[i] for i in 1:k]\n \
    \   l[1] = l[1] + 1\n    for i in 2:k\n        if l[i] == l[i-1]\n           \
    \ l[i] = l[i] + 1\n        end\n    end\n    s = Int64[l[i] for i in 1:k]\n  \
    \  for i in 2:k\n        for j in i:k\n            if s[j] == s[i-1]\n       \
    \         s[j] = s[j] + 1\n            end\n        end\n    end\n    return sort(s)\n\
    end\n \nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4nti1vxj.jl:35\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [0, 2, 3,\
    \ 4, 5, 5, 6, 9, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4nti1vxj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4nti1vxj.jl:34\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4nti1vxj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  return sort(unique(l, sort(l)[1]))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8z5z7d9i.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching unique(::Vector{Int64}, ::Int64)\n  You may\
    \ have intended to import Base.unique\n  Closest candidates are:\n    unique(::Vector{Int64})\
    \ at /tmp/tmp8z5z7d9i.jl:5\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n \
    \    @ Main /tmp/tmp8z5z7d9i.jl:6\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8z5z7d9i.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8z5z7d9i.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8z5z7d9i.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    i = 1\n    for j = 2:length(l)\n        if l[j] != l[i]\n            i\
    \ += 1\n            l[i] = l[j]\n        end\n    end\n    return l[1:i]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu1b917_7.jl:20\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1b917_7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1b917_7.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu1b917_7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    i = 1\n    while i <= length(l)\n        if l[i] in l[1:i-1]\n       \
    \     deleteat!(l, i)\n        else\n            i += 1\n        end\n    end\n\
    \    return l\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp83wuv84p.jl:21\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 2,\
    \ 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp83wuv84p.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83wuv84p.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp83wuv84p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Dict{Int64, Bool}()\n    for i in l\n        seen[i] = true\n \
    \   end\n    return sort(collect(keys(seen)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk5exkuxt.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpk5exkuxt.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5exkuxt.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5exkuxt.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5exkuxt.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(collect(Set(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    uniq = Dict{Int64,Int64}()\n    for val in l\n        uniq[val] = 1\n\
    \    end\n    keys(uniq)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3hfni165.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Base.KeySet{Int64, Dict{Int64,\
    \ Int64}} to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp3hfni165.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3hfni165.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3hfni165.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3hfni165.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # sort and then keep distinct elements\n    return sort(vcat(Set(l)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4za_p24_.jl:14\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Set{Int64} to an object of\
    \ type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{Int64}, x::Set{Int64}, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{Int64}, doffs::Int64,\
    \ src::Vector{Set{Int64}}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n\
    \    [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{Int64}(x::Vector{Set{Int64}})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] unique(l::Vector{Int64})\n      @ Main /tmp/tmp4za_p24_.jl:7\n   [11]\
    \ macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp4za_p24_.jl:14 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp4za_p24_.jl:13\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4za_p24_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    a = sort(l)\n    b = push!(Array{Int64}(0), a[1])\n    for i in 2:length(a)\n\
    \        if a[i] != a[i-1]\n            push!(b, a[i])\n        end\n    end\n\
    \    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxsxv11vu.jl:20\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching (Array{Int64})(::Int64)\n  Closest candidates\
    \ are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpxsxv11vu.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxsxv11vu.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxsxv11vu.jl:19\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxsxv11vu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    v = Vector{Int64}()\n    for i in l\n        if !(i in v)\n          \
    \  push!(v, i)\n        end\n    end\n    return sort(v)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  return Vector(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbhrrqmfq.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching (Vector)(::Set{Int64})\n  Closest candidates\
    \ are:\n    (Vector)() at /shared/centos7/julia/1.7.3/share/julia/base/baseext.jl:38\n\
    \    (Vector)(!Matched::SuiteSparse.CHOLMOD.Dense{T}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SuiteSparse/src/cholmod.jl:856\n\
    \    (Vector)(!Matched::SparseArrays.AbstractSparseVector{Tv}) where Tv at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:946\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpbhrrqmfq.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbhrrqmfq.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbhrrqmfq.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhrrqmfq.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n  s = Set(l)\n \
    \ v = collect(s)\n  return sort(v)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    #use a map to store the elements\n    seen = Int64[]\n    for x in l\n\
    \        if x \u2209 seen\n            push!(seen, x)\n        end\n    end\n\
    \    #sort the map\n    return sort(seen)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_l = sort(l)\n    unique_l = Int64[]\n    prev = 0\n    for i in\
    \ sorted_l\n        if i != prev\n            push!(unique_l, i)\n        end\n\
    \        prev = i\n    end\n    return unique_l\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq16p8stj.jl:22\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [2, 3, 5,\
    \ 9, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq16p8stj.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq16p8stj.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq16p8stj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = Set{Int64}()\n    for x in l\n        push!(s, x)\n    end\n    #s\
    \ = Set(l)\n    return sort(collect(s))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    if !(length(l)>0)\n        return []\n    end\n    res = [l[1]]\n    for\
    \ i in 2:length(l)\n        if l[i]!=res[end]\n            push!(res,l[i])\n \
    \       end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp18d4iyn2.jl:22\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18d4iyn2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18d4iyn2.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18d4iyn2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # TODO\nend\n \n\"\"\"Sort unique values in a list\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpc77eke8p.jl:9\nin expression starting at /tmp/tmpc77eke8p.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sort(Set(l))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4k_i54j3.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp4k_i54j3.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4k_i54j3.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4k_i54j3.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4k_i54j3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l = sort(l)\n    l_out = []\n    if length(l) > 0\n        l_out = [l[1]]\n\
    \        for i in 1:length(l)-1\n            if l[i] != l[i+1]\n             \
    \   push!(l_out, l[i+1])\n            end\n        end\n    end\n    return l_out\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set()\n    nl = []\n    for v in l\n        if v \u2209 seen\n\
    \            push!(nl, v)\n            push!(seen, v)\n        end\n    end\n\
    \    nl\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqxq_p0ff.jl:21\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 2,\
    \ 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqxq_p0ff.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqxq_p0ff.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqxq_p0ff.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    A = l\n    sort!(A)\n    B = A[1]\n    for i in A\n        if B[end] !=\
    \ i\n            push!(B, i)\n        end\n    end\n    return B\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfcr4sx5z.jl:21\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching push!(::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpfcr4sx5z.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfcr4sx5z.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfcr4sx5z.jl:20\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcr4sx5z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    count = zeros(Int64, maximum(l)+1)\n    for v in l\n        count[v+1]\
    \ += 1\n    end\n    res = zeros(Int64, sum(count))\n    k = 1\n    for (i, c)\
    \ in enumerate(count)\n        if c != 0\n            res[k] = i-1\n         \
    \   k += 1\n        end\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4iqpt87t.jl:25\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [0, 2, 3,\
    \ 5, 9, 123, 0, 0, 0] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4iqpt87t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4iqpt87t.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4iqpt87t.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    if length(l)==0\n        return Vector{Int64}()\n    end\n    l = sort(l)\n\
    \    return [l[1]] .+ [l[i+1]-l[i] for i in 1:length(l)-1]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1i32ey3_.jl:17\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [2, 1, 0,\
    \ 0, 2, 0, 4, 114] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1i32ey3_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1i32ey3_.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1i32ey3_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphg_ba8rg.jl:14\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmphg_ba8rg.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphg_ba8rg.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphg_ba8rg.jl:13\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphg_ba8rg.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    return sort([x for x in l if !(x in seen) ||\
    \ push!(seen, x)])\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuhf7ios6.jl:14\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [0, 2, 3,\
    \ 3, 3, 5, 5, 9, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhf7ios6.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhf7ios6.jl:13\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuhf7ios6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    t = []\n    for i in l\n        if i in t\n            continue\n    \
    \    end\n        push!(t, i)\n    end\n    return sort(t)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return unique(collect(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    a=Int64[]\n    for i in l\n        if !(i in a)\n            push!(a,i)\n\
    \        end\n    end\n    return sort(a)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique_values = Vector{Int64}()\n    for value in l\n        if length(unique_values)==0\
    \ || value != unique_values[end]\n            push!(unique_values, value)\n  \
    \      end\n    end\n    return unique_values\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplxsldev0.jl:19\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplxsldev0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplxsldev0.jl:18\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplxsldev0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(vcat(Set(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnf58psh9.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Set{Int64} to an object of\
    \ type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{Int64}, x::Set{Int64}, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{Int64}, doffs::Int64,\
    \ src::Vector{Set{Int64}}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n\
    \    [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{Int64}(x::Vector{Set{Int64}})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] unique(l::Vector{Int64})\n      @ Main /tmp/tmpnf58psh9.jl:6\n   [11]\
    \ macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpnf58psh9.jl:13 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpnf58psh9.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnf58psh9.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    i = 1\n    while i < length(l)\n        if l[i] == l[i+1]\n          \
    \  deleteat!(l, i)\n        else\n            i += 1\n        end\n    end\n \
    \   return l\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp83qne4a.jl:21\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp83qne4a.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp83qne4a.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp83qne4a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0l292oh6.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmp0l292oh6.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0l292oh6.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0l292oh6.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0l292oh6.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l = sort(l)\n    ul = Vector{Int64}(length(l))\n    ul[1] = l[1]\n   \
    \ j = 1\n    for i in 2:length(l)\n        if l[i] != l[i-1]\n            j +=\
    \ 1\n            ul[j] = l[i]\n        end\n    end\n    return ul[1:j]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptk7wfx44.jl:23\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest candidates\
    \ are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmptk7wfx44.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptk7wfx44.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptk7wfx44.jl:22\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptk7wfx44.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    l = sort(l)\n    l = [l[1]]\n    for i in l[2:end]\n        if i != l[end]\n\
    \            push!(l, i)\n        end\n    end\n    return l\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplhl7djff.jl:20\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [0] == [0,\
    \ 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhl7djff.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhl7djff.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhl7djff.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n  array = sort(l)\n  j = 1\n  for i in 2:length(array)\n    if array[i] !=\
    \ array[j]\n      j = j + 1\n      array[j] = array[i]\n    end\n  end\n  return\
    \ array[1:j]\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    # write code here\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyxjtw8ms.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpyxjtw8ms.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyxjtw8ms.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyxjtw8ms.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyxjtw8ms.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    u = Set{Int64}()\n    for x in l\n        push!(u, x)\n    end\n    return\
    \ sort(collect(u))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\
    \t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    s = sort(l)\n    out = [s[1]]\n    for i in s[2:end]\n        if i !=\
    \ out[end]\n            push!(out, i)\n        end\n    end\n    return out\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(l)\n    d = Dict{Int64,Bool}()\n    for i in 1:n\n        d[l[i]]\
    \ = true\n    end\n    v = Vector{Int64}()\n    for k in keys(d)\n        push!(v,\
    \ k)\n    end\n    sort!(v)\n    return v\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return(sort(Set(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpao0k81ur.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpao0k81ur.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpao0k81ur.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpao0k81ur.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpao0k81ur.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    idx = sortperm(l)\n    out = Vector{Int64}(0)\n    p = 0\n    for i in\
    \ idx\n        if p != l[i]\n            append!(out, l[i])\n            p = l[i]\n\
    \        end\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx0e1ouz7.jl:22\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching Vector{Int64}(::Int64)\n  Closest candidates\
    \ are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpx0e1ouz7.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx0e1ouz7.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx0e1ouz7.jl:21\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0e1ouz7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(l)\n    res = zeros(Int64, n)\n    count = 0\n    for i in\
    \ 1:n\n        if i==1 || l[i] != l[i-1]\n            count += 1\n           \
    \ res[count] = l[i]\n        end\n    end\n    return res[1:count]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxki7p0e0.jl:22\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxki7p0e0.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxki7p0e0.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxki7p0e0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l), rev=true)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2,\
    \ 3, 5, 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(Set(l))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsmrwtalb.jl:13\n  Test threw exception\n\
    \  Expression: candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \  MethodError: no method matching sort(::Set{Int64})\n  Closest candidates are:\n\
    \    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] unique(l::Vector{Int64})\n     @ Main /tmp/tmpsmrwtalb.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsmrwtalb.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsmrwtalb.jl:12\nTest Summary:\
    \ | Error  Total\ntest set      |     1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsmrwtalb.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(collect(Set(l)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    seen = []\n    res = []\n    for i = 1:length(l)\n        if !(l[i] in\
    \ seen)\n            push!(seen, l[i])\n            push!(res, l[i])\n       \
    \ end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0it4vjwu.jl:21\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 2,\
    \ 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0it4vjwu.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0it4vjwu.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0it4vjwu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    unique_list = Vector{Int64}()\n    n = length(l)\n    for i in 1:n\n \
    \       if i == 1\n            push!(unique_list, l[i])\n        else\n      \
    \      if l[i] != l[i-1]\n                push!(unique_list, l[i])\n         \
    \   end\n        end\n    end\n    return unique_list\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzipx_9ek.jl:24\n  Expression: candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n   Evaluated: [5, 3, 5,\
    \ 2, 3, 9, 0, 123] == [0, 2, 3, 5, 9, 123]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzipx_9ek.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzipx_9ek.jl:23\nTest Summary:\
    \ | Fail  Total\ntest set      |    1      1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzipx_9ek.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    x = []\n    for e in l\n        if e in x\n            continue\n    \
    \    end\n        push!(x, e)\n    end\n    sort(x)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    1      1\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\nfunction unique(l::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(unique(l))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique;\n\t@test(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout

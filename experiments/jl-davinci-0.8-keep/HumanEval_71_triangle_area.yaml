name: HumanEval_71_triangle_area
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return the\
  \ area of\n    the triangle rounded to 2 decimal points if the three sides form\
  \ a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    than the third side.\n    Example:\n\
  \    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\
  \"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
  \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
  \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
  \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
  \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
completions: ["    if a >= b + c || b >= a + c || c >= a + b\n        return -1\n\
    \    else\n        p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p -\
    \ b) * (p - c))\n        return round(area, 2)\n    end\nend", "    if a+b<c ||\
    \ a+c<b || b+c<a\n        return -1\n    else \n        s = (a+b+c)/2.0\n    \
    \    return sqrt(s*(s-a)*(s-b)*(s-c))\n    end\nend", "    \n    if (a+b>c) &&\
    \ (a+c>b) && (b+c>a)\n        s = (a+b+c)/2.0\n        area = sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend", " \
    \   sides = [a, b, c]\n    max_side = maximum(sides)\n    sides_minus_max = [side\
    \ for side in sides if side != max_side]\n    if sum(sides_minus_max) > max_side\n\
    \        p = sum(sides) / 2\n        return sqrt(p * (p - a) * (p - b) * (p -\
    \ c))\n    else\n        return -1\n    end\nend", "    if (a + b > c) && (a +\
    \ c > b) && (b + c > a)\n        p = (a + b + c) / 2\n        area = sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n        return round(area, 2)\n    else\n    \
    \    return -1\n    end\nend\ntriangle_area(3, 4, 5)", "    if a + b > c && a\
    \ + c > b && b + c > a\n        return sqrt( (a + b + c) * (a + b - c) * (a -\
    \ b + c) * (-a + b + c) ) / 4\n    else\n        return -1\n    end\nend", " \
    \   if (a > 0) & (b > 0) & (c > 0)\n        s = (a + b + c) / 2.0\n        area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend", "    s = (a + b + c) / 2.0\n    area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c))\n    return area\nend", "    if isvalidtriangle(a,\
    \ b, c)\n        p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b)\
    \ * (p - c))\n    else\n        return -1\n    end\nend", "    \"\"\"\n    Returns\
    \ the area of a triangle given the 3 sides.\n    \"\"\"\n    # Check if the triangle\
    \ is valid or not\n    is_valid = a + b > c && a + c > b && b + c > a\n    # -1\
    \ if the triangle is not valid otherwise,\n    # area calculated using Heron's\
    \ formula.\n    return -1 ==> is_valid ? ((a + b + c) / 2.0) * sqrt(((a + b +\
    \ c) / 2.0) * ((a + b - c) / 2.0) * ((a - b + c) / 2.0) * ((-a + b + c) / 2.0))\
    \ : -1.0\nend", "    if a+b > c && a+c > b && b+c > a\n        p = (a+b+c)/2\n\
    \        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end", "  if a+b > c && a+c > b && b+c > a\n    return round(sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4,\
    \ 2)\n  else\n    return -1\n  end\nend", "    if (a + b > c) && (a + c > b) &&\
    \ (b + c > a)\n        p = (a + b + c) / 2\n        return sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\n    else\n        return -1\n    end\nend", "    # type\
    \ is inferred\n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n \
    \       return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end", "    s = (a + b + c) / 2\n    area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    if area == 0\n        return -1\n    else\n        return round(area, 2)\n\
    \    end\nend", "    if (a+b) < c\n        return -1\n    elseif (a+c) < b\n \
    \       return -1\n    elseif (b+c) < a\n        return -1\n    else\n       \
    \ s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n    end\nend", "  \
    \  if a <= 0 || b <= 0 || c <= 0\n        return -1\n    end\n    if a + b <=\
    \ c || a + c <= b || b + c <= a\n        return -1\n    end\n    # Compute the\
    \ semi-perimeter\n    p = (a + b + c) / 2.0\n    # Compute the area using the\
    \ Heron's formula\n    return sqrt(p * (p - a) * (p - b) * (p - c))\nend", " \
    \   # If the sum of any two sides is greater than the third side,\n    # then\
    \ we have a valid triangle.\n    if a + b > c && a + c > b && b + c > a\n    \
    \    # If a valid triangle, calculate the area using Heron's formula.\n      \
    \  # The formula is sqrt(p(p-a)(p-b)(p-c)) where p is the semi-perimeter.\n  \
    \      # First, calculate the semi-perimeter.\n        semi = (a + b + c) / 2.0\n\
    \        # Then, we can use the formula.\n        area = sqrt(semi * (semi - a)\
    \ * (semi - b) * (semi - c))\n        # We need to multiply area by 2.0 to get\
    \ the actual area.\n        return 2.0 * area\n    end\n    # Return -1 if the\
    \ three sides do not form a valid triangle.\n    return -1\nend", "    return\
    \ -1.0 if (a + b <= c) || (a + c <= b) || (b + c <= a)\n    return 0.5 * (a *\
    \ b + b * c + a * c)\nend", "    if ((a+b) > c) && ((a+c) > b) && ((b+c) > a)\n\
    \        p = (a+b+c)/2\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return\
    \ round(area, 2)\n    else\n        return -1\n    end\nend", "    # your code\
    \ here\n    if a + b > c and a + c > b and b + c > a\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend", "    if a <= 0 || b <= 0 ||\
    \ c <= 0 \n        return -1\n    end\n    if a + b <= c || a + c <= b || b +\
    \ c <= a\n        return -1\n    end\n    return sqrt(s*(s-a)*(s-b)*(s-c)) where\
    \ s = (a+b+c)/2\nend", "    if a + b > c && a + c > b && b + c > a\n        area\
    \ = (a * b * sin(c * pi / 180)) / 2\n        return round(area, 2)\n    else\n\
    \        return -1\n    end\nend", "    if a + b > c && a + c > b && b + c > a\n\
    \        # return area of triangle\n        p = (a + b + c) / 2 # perimeter\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend", "    # if the sides are long enough to form a triangle, \n\
    \    # compute the area using the Heron's formula and round to 2 decimal places\n\
    \    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c) / 2.0\n\
    \        area = sqrt(s * (s - a) * (s - b) * (s - c))\n        area = round(area,\
    \ digits=2)\n        return area\n    else\n        return -1\n    end\nend",
  "    return -1\nend", "    if (a+b > c) && (a+c > b) && (b+c > a)\n        p = (a+b+c)/2\n\
    \        s = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(s, digits=2)\n  \
    \  else\n        return -1\n    end\nend", "    if (a < b + c) && (b < a + c)\
    \ && (c < a + b)\n        p = (a + b + c) / 2.0\n        return sqrt(p * (p -\
    \ a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend", "    if\
    \ (a+b>c) & (a+c>b) & (b+c>a)\n        p = (a+b+c)/2\n        return round(sqrt(p*(p-a)*(p-b)*(p-c)),2)\n\
    \    else\n        return -1\n    end\nend", "    return -1\nend", "    # If a\
    \ + b > c and a + c > b and b + c > a\n    if a + b > c && a + c > b && b + c\
    \ > a\n        p = (a + b + c) / 2\n        return round(sqrt(p * (p - a) * (p\
    \ - b) * (p - c)), digits=2)\n    else\n        return -1\n    end\nend", "  \
    \  if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n   \
    \     sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\nend\n\
    triangle_area(3, 4, 5) == 6.00", "    if a + b > c && a + c > b && b + c > a\n\
    \        p = (a + b + c) / 2\n        s = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(s, 2)\n    else\n        return -1\n    end\nend", "   \
    \ # YOUR CODE HERE\nend", "    return -1.0\nend\n@testset \"Example Tests\" begin\n\
    \    @test triangle_area(3, 4, 5) == 6.00\n    @test triangle_area(1, 2, 10) ==\
    \ -1\nend", "    # your code goes here\n    return -1\nend", "    return -1\n\
    end", "    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n        sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        -1\n    end\nend", "    c>a && c>b && c<a+b && a>b && a<b+c\
    \ && b>a && b<a+c ? (Heron(a,b,c)*2)/2.0 : -1.0\nend", "    if isvalid(a, b, c)\n\
    \        s = Float64((a + b + c) / 2)\n        return sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n    else\n        return -1\n    end\nend", "    if not (a >\
    \ 0 && b > 0 && c > 0)\n        return -1\n    end\n    if (a < b + c) && (b <\
    \ a + c) && (c < a + b)\n        return ((a + b + c) / 2) * sqrt(((a + b + c)\
    \ / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b + c) / 2)\
    \ - c))\n    else\n        return -1\n    end\nend", "    # check if triangle\
    \ is possible\n    if (a+b <= c) || (a+c <= b) || (b+c <= a)\n        return -1\n\
    \    end\n    s = (a+b+c)/2\n    return sqrt(s*(s-a)*(s-b)*(s-c))\nend", "   \
    \ if a + b > c && a + c > b && b + c > a\n        area = sqrt((a + b + c) * (a\
    \ + b - c) * (a - b + c) * (-a + b + c)) / 4\n        return round(area, 2)\n\
    \    else\n        return -1\n    end\nend", "    if(a + b > c && a + c > b &&\
    \ b + c > a)\n        p = (a + b + c)/2.0\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(area,2)\n    else\n        return -1\n    end\nend", " \
    \   if a+b > c && a+c > b && b+c > a\n        return 0.5*a*b\n    else\n     \
    \   return -1\n    end\nend", "    sides = [a, b, c]\n    sides = sort(sides)\n\
    \    if sides[1] + sides[2] <= sides[3]\n        return -1\n    else\n       \
    \ p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    end\nend\n \n@testset \"Triangle area\" begin\n\
    \    @test triangle_area(3, 4, 5) == 6.00\n    @test triangle_area(1, 2, 10) ==\
    \ -1\nend;", "    return (a+b > c && a+c > b && b+c > a) ? sqrt(a*a+b*b+c*c-a*b-a*c-b*c)\
    \ : -1.0\nend", "    if (a + b > c) && (a + c > b) && (b + c > a)\n        p =\
    \ (a + b + c) / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n  \
    \  else\n        return -1\n    end\nend", "    p = (a + b + c) / 2.0\n    return\
    \ -1.0 if a <= 0 || b <= 0 || c <= 0 || p - a <= 0 || p - b <= 0 || p - c <= 0\
    \ \n    return sqrt(p * (p - a) * (p - b) * (p - c))\nend", "    if (a+b>c) &\
    \ (a+c>b) & (b+c>a)\n        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    if a <= 0 || b <= 0 || c <=\
    \ 0\n        return -1\n    end\n    if a + b <= c || a + c <= b || b + c <= a\n\
    \        return -1\n    end\n    p = (a + b + c) / 2\n    sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\nend", "    a, b, c = sort([a, b, c])\n    return -1 == a +\
    \ b < c ? -1 : sqrt(a + b + c) * (a + b - c) / 4\nend", "  d = a+b+c\n  if d -\
    \ maximum(a,b,c) > maximum(a,b,c)\n    s = (d/2)*(d/2-a)*(d/2-b)*(d/2-c)\n   \
    \ return sqrt(s)\n  else\n    return -1\n  end\nend", "    if (a + b > c) && (a\
    \ + c > b) && (b + c > a)\n        return 0.5 * a * b\n    else\n        return\
    \ -1\n    end\nend", "    return ((a + b > c) && (a + c > b) && (b + c > a)) ?\
    \ (0.5 * \u221A((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a))) : -1.0\n\
    end", "    if a+b > c && a+c > b && b+c > a\n        return (a*b*c)^(1/2)\n  \
    \  else\n        return -1\n    end\nend", "    t = []\n    push!(t, a)\n    push!(t,\
    \ b)\n    push!(t, c)\n    sort!(t)\n    if t[1] + t[2] > t[3]\n        s = (a\
    \ + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend", "    side_sum = a + b + c\n    sp = side_sum\
    \ / 2\n    area = sqrt(sp * (sp - a) * (sp - b) * (sp - c))\n    return round(area,\
    \ 2)\nend", "    if (a < b + c) && (b < a + c) && (c < a + b)\n        p = (a\
    \ + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend", "    if ((a < b + c) && (b < a + c) && (c <\
    \ a + b))\n        m = (a + b + c) / 2\n        area = sqrt(m * (m - a) * (m -\
    \ b) * (m - c))\n        return round(area, digits=2)\n    else\n        return\
    \ -1\n    end\nend", "    if (a+b > c) & (a+c > b) & (b+c > a)\n        area =\
    \ sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\n        return round(area, 2)\n  \
    \  else\n        return -1\n    end\nend", "    if (a < b + c) && (b < a + c)\
    \ && (c < a + b)\n        p = (a + b + c) / 2\n        return sqrt(p * (p - a)\
    \ * (p - b) * (p - c))\n    else\n        return -1\n    end\nend", "    if (a\
    \ <= 0 || b <= 0 || c <= 0) || ((a + b) <= c) || ((a + c) <= b) || ((b + c) <=\
    \ a)\n        return -1\n    else\n        p = (a + b + c) / 2\n        return\
    \ sqrt(p * (p - a) * (p - b) * (p - c))\n    end\nend", "    if (a+b > c) & (a+c\
    \ > b) & (b+c > a)\n        return (sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)))/4\n\
    \    else\n        return -1\n    end\nend", "    if a <= 0 || b <= 0 || c <=\
    \ 0\n        return -1\n    end\n    if a+b > c && a+c > b && b+c > a\n      \
    \  p = (a+b+c)/2\n        s = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(s,\
    \ digits=2)\n    else\n        return -1\n    end\nend", "    if a+b > c\n   \
    \     if a+c > b\n            if b+c > a\n                t = (a+b+c)/2\n    \
    \            return sqrt(t*(t-a)*(t-b)*(t-c))\n            end\n        end\n\
    \    end\n    return -1\nend\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nprintln(triangle_area(1, 2, 10.0))\nprintln(triangle_area(10.0, 2,\
    \ 1))\nprintln(triangle_area(10.0, 1, 2))\nprintln(triangle_area(1, 10.0, 2))\n\
    println(triangle_area(1, 2, 3))", "    \n    if (a < b + c) & (b < a + c) & (c\
    \ < a + b)\n        return 0.5 * sqrt((a + b + c) * (a + b - c) * (a - b + c)\
    \ * (-a + b + c))\n    else\n        return -1\n    end\nend", "    if a <= 0\
    \ || b <= 0 || c <= 0\n        return -1\n    end\n    return area_trig(a, b,\
    \ c)\nend", "    if(a + b > c && a + c > b && b + c > a)\n        p = (a + b +\
    \ c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n\
    \    end\nend", "    if a + b > c && a + c > b && b + c > a\n        s = (a +\
    \ b + c) / 2\n        floor(sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else\n\
    \        -1\n    end\nend", "    if a < 0 || b < 0 || c < 0\n        return -1\n\
    \    end\n    if (a < b+c) && (b < a+c) && (c < a+b)\n        p = (a+b+c)/2\n\
    \        sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\nend",
  "    if a+b<c || a+c<b || b+c<a\n        return -1\n    else\n        p = (a+b+c)/2\n\
    \        return sqrt(p*(p-a)*(p-b)*(p-c))\n    end\nend", "    if (a + b > c)\
    \ && (a + c > b) && (b + c > a)\n        p = (a + b + c) / 2\n        return (p\
    \ * (p - a) * (p - b) * (p - c)) ^ 0.5\n    else\n        return -1\n    end\n\
    end", "    if (a+b > c) && (a+c > b) && (b+c > a)\n        p = (a+b+c)/2.0\n \
    \       return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end", "    sum1 = a + b\n    sum2 = a + c\n    sum3 = b + c\n    if a > 0 && b\
    \ > 0 && c > 0 && sum1 > c && sum2 > b && sum3 > a\n        p = (a + b + c) /\
    \ 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n   \
    \ end\nend\n    \nprint(triangle_area(5, 3, 4))\nprint(triangle_area(1, 2, 10))",
  "    if (a+b)>c && (a+c)>b && (b+c)>a\n        s = (a+b+c)/2.0\n        area = sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \        return round(area,2)\n    else\n        return -1\n    end\nend", " \
    \   @assert a >= 0\n    @assert b >= 0\n    @assert c >= 0\n    if (a+b>c) &&\
    \ (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    ss = sorted([a, b, c])\n   \
    \ a, b, c = ss[1], ss[2], ss[3]\n    if b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end", "    \"\"\"\n    Calculate the triangle area given three sides\n    \"\"\
    \"\n    if istriangle(a, b, c)\n        # if it is a triangle, calculate the half\
    \ of the perimeter\n        s = (a + b + c) / 2.0\n        # and then calculate\
    \ the area\n        res = (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n        # for\
    \ further round to 2 decimal points. \n        return round(res, 2)\n    else\n\
    \        return -1\n    end\nend", "    if a + b > c && a + c > b && b + c > a\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend", "    a, b, c = sort([a, b, c])\n    valid = a + b > c\n \
    \   return valid * sqrt(s*(s-a)*(s-b)*(s-c)) where s = (a+b+c)/2\nend", "    if\
    \ a > b + c || b > a + c || c > a + b \n        -1\n    else\n        s = (a +\
    \ b + c) / 2.0\n        sqrt(s * (s - a) * (s - b) * (s - c))\n    end\nend",
  "    if a < b + c && b < a + c && c < a + b\n        p = (a + b + c) / 2.0\n   \
    \     sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\nend",
  "    return -1\nend", "    if (a+b)>c && (a+c)>b && (b+c)>a\n        p = (a+b+c)/2.0\n\
    \        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end", "    if (a<b+c && b<a+c && c<a+b)\n        p = (a+b+c)/2\n        return\
    \ sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\nend", "   \
    \ longest = max(a, b, c)\n    if longest >= a + b + c - longest\n        return\
    \ -1\n    end\n    s = (a + b + c) / 2\n    area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n    return round(area, digits=2)\nend", "    if (a + b > c) && (a\
    \ + c > b) && (b + c > a)\n        p = (a + b + c) / 2.0\n        return sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend",
  "    if a + b > c && a + c > b && b + c > a \n        p = (a + b + c) / 2\n    \
    \    return sqrt(p * (p - a) * (p - b) * (p - c))\n    else \n        return -1.0\n\
    \    end\nend", "    if a+b > c && a+c > b && b+c > a\n        p = (a+b+c)/2\n\
    \        ans = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(ans, 2)\n    else\n\
    \        return -1\n    end\nend", "    if (a + b > c) && (a + c > b) && (b +\
    \ c > a)\n        p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p -\
    \ b) * (p - c))\n        return round(area, 2)\n    else\n        return -1\n\
    \    end\nend", "    if (a + b) > c && (a + c) > b && (b + c) > a\n        return\
    \ sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\n\
    end", "    # your code goes here\n    return 0.0\nend", "    p = (a + b + c) /\
    \ 2\n    s = sqrt(p * (p - a) * (p - b) * (p - c))\n    if isa(s, Float64) &&\
    \ s > 0\n        return round(s, 2)\n    else\n        return -1\n    end\nend",
  "    if a<b+c && b<a+c && c<a+b\n        p = (a+b+c)/2\n        A = (p*(p-a)*(p-b)*(p-c))^0.5\n\
    \        round(A, digits=2)\n    else\n        -1\n    end\nend", "    x = a\n\
    \    y = b\n    z = c\n    # your code here\n    if x + y > z && x + z > y &&\
    \ y + z > x\n        a = x + y + z\n        a = a / 2\n        area = sqrt(a *\
    \ (a - x) * (a - y) * (a - z))\n        return round(area, 2)\n    else\n    \
    \    return -1\n    end\nend", "    # sorted indices based on length\n    inds\
    \ = sortperm([a, b, c], rev=true)\n    # length of sides\n    s = [a, b, c][inds]\n\
    \    # return area of triangle with rounded to 2 decimal points if possible\n\
    \    if s[1] < (s[2] + s[3])\n        return (s[1] + s[2] + s[3]) / 2 * sqrt((s[1]\
    \ + s[2] + s[3]) * (s[2] + s[3] - s[1]) * (s[3] - s[2] + s[1]) * (s[1] + s[2]\
    \ - s[3]))\n    else\n        return -1\n    end\nend", "    if a+b>c && a+c>b\
    \ && b+c>a\n        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    # your code here\n    return\
    \ -1\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ \"Equilateral\" if the \n    three sides are equal. Return \"Isosceles\" if\
    \ two sides are equal. Return \"Scalene\"\n    if the three sides are not equal.\
    \ \n    Example:\n    triangle_type(2, 2, 3) == \"Isosceles\"\n    triangle_type(4,\
    \ 4, 4) == \"Equilateral\"\n    triangle_type(3, 2, 1) == \"Scalene\"\n    \"\"\
    \"", " \n    # Check validity\n    if a+b<=c || a+c<=b || b+c<=a\n        return\
    \ -1\n    end\n    # Use Heron's formula\n    # https://en.wikipedia.org/wiki/Heron%27s_formula\n\
    \    s = (a+b+c)/2\n    return sqrt(s*(s-a)*(s-b)*(s-c))\nend", "    if (a + b\
    \ > c) && (a + c > b) && (b + c > a)\n        return round(sqrt((a + b + c) *\
    \ (a + b - c) * (a - b + c) * (-a + b + c)) / 4, digits=2)\n    else\n       \
    \ return -1\n    end\nend", "    if (a + b > c) && (a + c > b) && (b + c > a)\n\
    \        p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p -\
    \ c))\n    else\n        return -1\n    end\nend\n \ntriangle_area(3, 4, 5)",
  "  if ((a+b)>c)||((a+c)>b)||((b+c)>a)\n    p = (a+b+c)/2\n    s = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    return round(s, 2)\n  else\n    return -1\n  end\nend", "    if (a + b >\
    \ c) && (a + c > b) && (b + c > a)\n        p = (a + b + c) / 2\n        return\
    \ sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\n\
    end", "    if (a+b <= c) || (a+c <= b) || (b+c <= a)\n        return -1\n    else\n\
    \        s = (a+b+c)/2.0\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n    end\n\
    end", "    if a+b<c || a+c<b || b+c<a\n        return -1\n    else\n        p\
    \ = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n    end\nend", "    return\
    \ -1\nend", "    return -1.0 if (a + b <= c) || (a + c <= b) || (b + c <= a) else\
    \ area(a, b, c)\nend", "    if a + b > c && a + c > b && b + c > a\n        s\
    \ = (a + b + c) / 2.0\n        sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        -1\n    end\nend", "    if (a + b > c) && (a + c > b) && (b + c > a)\n\
    \        p = (a + b + c) / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p\
    \ - c))\n    else\n        return -1\n    end\nend", "    s = (a + b + c) / 2.0\n\
    \    if a + b < c || a + c < b || b + c < a\n        return -1\n    end\n    return\
    \ sqrt(s * (s - a) * (s - b) * (s - c))\nend", "    if isvalid(a, b, c)\n    \
    \    p = (a + b + c) / 2.0\n        return round(sqrt(p * (p - a) * (p - b) *\
    \ (p - c)), 2)\n    else\n        return -1\n    end\nend", "    if (a+b > c)\
    \ && (a+c > b) && (b+c > a)\n        s = (a+b+c)/2.0\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    #check for valid triangle\n\
    \    if a+b>c && a+c>b && b+c>a\n        # if valid triangle, calculate area\n\
    \        semi_perimeter = (a+b+c)/2.0\n        area = sqrt(semi_perimeter*(semi_perimeter-a)*(semi_perimeter-b)*(semi_perimeter-c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend", " \
    \   s = (a + b + c) / 2\n    return round(sqrt(s * (s - a) * (s - b) * (s - c)),\
    \ 2) * (1.0 * (a + b > c && b + c > a && a + c > b))\nend", "    if (a + b > c)\
    \ && (a + c > b) && (b + c > a)\n        s = 1/2 * (a + b + c)\n        return\
    \ sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\n\
    end", "    \n    if (a<b+c)&&(b<a+c)&&(c<a+b)\n        p=(a+b+c)/2\n        S=sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(S,digits=2)\n    else\n        return -1\n    end\nend",
  "    return -1.0\nend\n@assert triangle_area(3, 4, 5) == 6.00\n@assert triangle_area(1,\
    \ 2, 10) == -1\n@assert triangle_area(1, 2, 3) == -1", "    return a*b*c\nend",
  "    if !(a>=b && a>=c) && !(b>=a && b>=c) && !(c>=a && c>=b)\n        return -1.0\n\
    \    end\n    s = (a+b+c)/2.0\n    area = sqrt(s*(s-a)*(s-b)*(s-c))\n    return\
    \ round(area, 2)\nend", "    if (a + b > c) & (a + c > b) & (b + c > a)\n    \
    \    return ((a + b + c) / 2) * sqrt((((a + b + c) / 2) - a) * (((a + b + c) /\
    \ 2) - b) * (((a + b + c) / 2) - c))\n    else \n        return -1.0\n    end\n\
    end", "    if a+b <= c || a+c <= b || b+c <= a\n        return -1\n    else\n\
    \        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n    end\nend",
  "    if (a + b <= c) || (a + c <= b) || (b + c <= a)\n        return -1\n    else\n\
    \        p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p -\
    \ c))\n    end\nend", "    if a + b > c && a + c > b && b + c > a\n        return\
    \ round(sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4, 2)\n\
    \    else\n        return -1\n    end\nend", "    if (a + b > c) && (a + c > b)\
    \ && (b + c > a)\n        s = (a + b + c) / 2\n        return sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    else\n        return -1\n    end\nend", "    if (a\
    \ + b > c) & (a + c > b) & (b + c > a)\n        return sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n    else\n        return -1\n    end\nend", "    if a + b > c\
    \ && a + c > b && b + c > a \n        return ((a * b * sin(c))/2)\n    else\n\
    \        return -1\n    end\nend", "    # Add your code here\n    return 0.0\n\
    end", "    if ((a < b + c) && (b < a + c) && (c < a + b))\n        p = (a + b\
    \ + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n\
    \    end\nend", "    \n    #Check the triangle inequality\n    if a+b<=c || a+c<=b\
    \ || b+c<=a\n        return -1\n    end\n    \n    #Compute the Heron's formula\n\
    \    p = (a+b+c)/2\n    area = sqrt(p*(p-a)*(p-b)*(p-c))\n    \n    return round(area,\
    \ 2)\nend", "    if a > b+c || b > a+c || c > a+b\n        return -1\n    else\n\
    \        s = (a+b+c)/2.0\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n    end\n\
    end", "    # to do!\nend", "    # your code goes here\n    if a < b + c && b <\
    \ a + c && c < a + b\n        return 0.5 * a * b\n    else\n        return -1\n\
    \    end\nend", "    if (a < b + c) && (b < a + c) && (c < a + b)\n        s =\
    \ 0.5 * (a + b + c)\n        sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        -1\n    end\nend", "    if (a<=0) || (b<=0) || (c<=0)\n        return\
    \ -1\n    end\n    if (a+b<=c) || (a+c<=b) || (b+c<=a)\n        return -1\n  \
    \  end\n    s = (a+b+c)/2\n    return sqrt(s*(s-a)*(s-b)*(s-c))\nend", "    x\
    \ = a + b > c && a + c > b && b + c > a\n    if x\n        p = (a + b + c) / 2.0\n\
    \        area = p * (p - a) * (p - b) * (p - c)\n        return sqrt(area)\n \
    \   else\n        return -1\n    end\nend", "    if a + b > c || a + c > b ||\
    \ b + c > a\n        # Perimeter\n        p = (a + b + c) / 2\n        return\
    \ sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\n\
    end", "    if a + b > c && a + c > b && b + c > a\n        return round(sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4, 2)\n    else\n   \
    \     return -1\n    end\nend", "    if (a < b + c) && (b < a + c) && (c < a +\
    \ b)\n        s = 0.5*(a + b + c)\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    if a + b > c && a + c > b &&\
    \ b + c > a\n        s = Float64((a + b + c) / 2)\n        return sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend", "   \
    \ if a+b > c && a+c > b && b+c > a\n        p = (a+b+c)/2\n        s = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(s, 2)\n    else\n        return -1\n    end\nend", "   \
    \ if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c) / 2.0\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend", "    # if(a+b>c && a+c>b && b+c>a)\n    #     return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    # else\n    #     return -1\n    s = (a+b+c)/2\n    a = sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    return a\nend", "    return area(a, b, c)\nend", "    if (a + b > c) && (a\
    \ + c > b) && (b + c > a)\n        p = (a + b + c) / 2\n        return \u221A\
    (p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend",
  "    # Check if sides make a valid triangle\n    if (a > b + c) || (b > a + c) ||\
    \ (c > a + b)\n        return -1\n    end\n    s = (a + b + c) / 2 # calculate\
    \ semi-perimeter\n    sqrt(s * (s - a) * (s - b) * (s - c)) # calculate area\n\
    end\n@testset \"triangle area examples\" begin\n    @test triangle_area(3, 4,\
    \ 5) == 6.00\n    @test triangle_area(1, 2, 10) == -1\nend\n ", "    if a + b\
    \ > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n        return round(sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else\n        return -1\n    end\nend",
  "    if (a+b>c && a+c>b && b+c>a)\n        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend", "    if (a > b+c) || (b > a+c) ||\
    \ (c > a+b)\n        return -1\n    else\n        s = (a+b+c)/2\n        return\
    \ sqrt(s*(s-a)*(s-b)*(s-c))\n    end\nend", "    if (a+b > c) && (a+c > b) &&\
    \ (b+c > a)\n        p = (a+b+c)/2\n        sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n\
    \        -1\n    end\nend", "    a, b, c = sort((a, b, c))\n    if a + b <= c\n\
    \        return -1\n    end\n    p = (a + b + c) / 2\n    s = sqrt(p * (p - a)\
    \ * (p - b) * (p - c))\n    return round(s, 2)\nend", "    if a+b <= c || a+c\
    \ <= b || b+c <= a\n        return -1\n    else\n        p = (a+b+c)/2\n     \
    \   return sqrt(p*(p-a)*(p-b)*(p-c))\n    end\nend", "    s = (a + b + c) / 2\n\
    \    area = (s*(s-a)*(s-b)*(s-c))^0.5\n    if a + b > c && a + c > b && b + c\
    \ > a\n        return round(area, digits=2)\n    else\n        return -1\n   \
    \ end\nend", "    s = (a + b + c) / 2\n    # Heron's formula\n    area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    return round(area, 2)\nend", "    if a <=\
    \ 0 || b <= 0 || c <= 0\n        return -1\n    end\n    if a >= b + c || b >=\
    \ a + c || c >= a + b\n        return -1\n    end\n    p = (a + b + c) / 2\n \
    \   S = sqrt(p * (p - a) * (p - b) * (p - c))\n    return round(S, digits=2)\n\
    end", "    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n        s\
    \ = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(s,2)\n    else\n        return\
    \ -1\n    end\nend", "    \"\"\"\n    Calculate the area of a triangle\n    \"\
    \"\"\n    # valid triangle condition is a+b>c, a+c>b, b+c>a\n    if (a+b>c) &&\
    \ (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\n \n\
    \ # Test\nfor i in 1:3\n    area = triangle_area(results[i,1], results[i,2], results[i,3])\n\
    \    @test area == results[i, 4]\nend", "    s = (a + b + c) / 2\n    if a + b\
    \ > c && a + c > b && b + c > a\n        sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    else\n        -1\n    end\nend", "     if (a + b <= c) || (a + c <= b) ||\
    \ (b + c <= a)\n        return -1\n    else\n        p = (a + b + c) / 2\n   \
    \     area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ digits=2)\n    end\nend", "    if (a + b < c) || (a + c < b) || (b + c < a)\n\
    \        return -1\n    else\n        s = 0.5 * (a + b + c)\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    end\nend", "    if (a + b > c) && (a + c\
    \ > b) && (b + c > a)\n        p = (a + b + c) / 2\n        sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\n    else \n        -1\n    end\nend", "    if a + b > c\
    \ && a + c > b && b + c > a\n        s = 1/2*(a + b + c)\n        A = sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \        println(round(A, 2))\n    else\n        println(-1)\n    end\nend", " \
    \   if a + b > c && a + c > b && b + c > a \n        p = (a + b + c) / 2\n   \
    \     return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n\
    \    end\nend", "    if (a + b <= c) || (a + c <= b) || (b + c <= a)\n       \
    \ return -1\n    else\n        p = (a + b + c) / 2\n        area = sqrt(p * (p\
    \ - a) * (p - b) * (p - c))\n        return round(area, 2)\n    end\nend", " \
    \   if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n  \
    \      return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend", "    if (a + b > c) && (a + c > b) && (b + c > a)\n     \
    \   p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend", "    if (a+b > c) && (a+c > b) &&\
    \ (b+c > a)\n        p = (a+b+c)/2\n        A = sqrt(p*(p-a)*(p-b)*(p-c))\n  \
    \      return A\n    else\n        return -1\n    end\nend", "    if a+b>c & a+c>b\
    \ & b+c>a\n        x = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(x, digits=2)\n\
    \    else\n        return -1\n    end\nend", "    if a+b>c && a+c>b && b+c>a\n\
    \        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n    else\n \
    \       return -1\n    end\nend", "    if (a + b > c) & (a + c > b) & (b + c >\
    \ a)\n        s = (a + b + c) / 2.0\n        area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n        return round(area, 2)\n    else\n        return -1\n   \
    \ end\nend", "    if (a + b) > c && (a + c) > b && (b + c) > a\n        s = (a\
    \ + b + c) / 2\n        s(s - a)(s - b)(s - c) # sorry\n    else\n        -1\n\
    \    end\nend", "    # function code here\nend", "    if a + b > c && a + c >\
    \ b && b + c > a\n        s = (a + b + c) / 2.0\n        sqrt(s * (s - a) * (s\
    \ - b) * (s - c))\n    else\n        -1\n    end\nend", "    area = -1.0\n   \
    \ if a + b > c\n        p = (a + b + c) / 2\n        area = sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\n    end\n    return area\nend", "    if (a+b>c) && (a+c>b)\
    \ && (b+c>a)\n        p = (a+b+c)/2\n        area = sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        return round(area,2)\n    else\n        return -1\n    end\nend", " \
    \   if (a + b <= c) || (a + c <= b) || (b + c <= a)\n        return -1\n    else\n\
    \        p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p -\
    \ c))\n    end\nend", "    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2.0\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n  \
    \      return round(area, 2)\n    else\n        return -1\n    end\nend", "  \
    \  if (a + b > c) & (a + c > b) & (b + c > a)\n        return (1/4)*(a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)^(1/2)\n\
    \    else\n        return -1\n    end\nend", "    area = 0.0\n    p = (a + b +\
    \ c) / 2\n    if(a + b > c) && (a + c > b) && (b + c > a)\n        area = sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    else\n        area = -1\n    end\n    return\
    \ area\nend", "    if a+b > c && a+c > b && b+c > a\n        p = (a+b+c)/2\n \
    \       sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        -1\n    end\nend", "    if\
    \ (a + b > c) & (a + c > b) & (b + c > a)\n        p = (a + b + c) / 2\n     \
    \   area = \u221A(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ digits=2)\n    else\n        return -1\n    end\nend", "    if (a + b > c) &&\
    \ (a + c > b) && (b + c > a)\n        return (0.5 * sqrt((a + b + c) * (a + b\
    \ - c) * (a + c - b) * (b + c - a)))\n    else\n        return -1\n    end\nend",
  "    if a < 1 || b < 1 || c < 1\n        return -1\n    end\n    if a + b <= c ||\
    \ a + c <= b || b + c <= a\n        return -1\n    end\n    half_perimeter = (a\
    \ + b + c) / 2\n    sqrt(half_perimeter * (half_perimeter - a) * (half_perimeter\
    \ - b) * (half_perimeter - c))\nend", "    # Base case\n    if (a+b)<c || (a+c)<b\
    \ || (b+c)<a\n        return -1\n    end\n    # Calculate s\n    s = (a+b+c)/2\n\
    \    return sqrt(s*(s-a)*(s-b)*(s-c))\nend", "    if a+b > c && a+c > b && b+c\
    \ > a\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n\
    \        return -1\n    end\nend", "    if (a + b) > c && (a + c) > b && (b +\
    \ c) > a\n        return sqrt(s(a, b, c) * (s(a, b, c) - a) * (s(a, b, c) - b)\
    \ * (s(a, b, c) - c))\n    else\n        return -1\n    end\nend", "    if a+b\
    \ > c && a+c > b && b+c > a\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend", "    if (a + b > c) && (a + c > b)\
    \ && (b + c > a)\n        s = (a + b + c) / 2\n        area = sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n        return round(area, 2)\n    else\n        return\
    \ -1\n    end\nend", "    if a < b + c && b < a + c && c < a + b\n        s =\
    \ (a + b + c) / 2\n        sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n \
    \       -1\n    end\nend", "    if a + b > c && a + c > b && b + c > a\n     \
    \   s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    else\n        return -1\n    end\nend", "    if a + b > c && a + c > b &&\
    \ b + c > a\n        s = (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c))\n        return round(area, 2)\n    else\n        return -1\n\
    \    end\nend", "    if (a+b)>c && (a+c)>b && (b+c)>a\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else \n        return -1\n    end\nend", "    if a + b > c && a + c > b &&\
    \ b + c > a\n        s = (a + b + c) / 2\n        return sqrt(s * (s - a) * (s\
    \ - b) * (s - c))\n    else\n        return -1\n    end\nend", "    if a+b > c\
    \ && a+c > b && b+c > a\n        p = (a+b+c)/2\n        (p*(p-a)*(p-b)*(p-c))^0.5\n\
    \    else\n        -1\n    end\nend\nprintln(triangle_area(3, 4, 5))\nprintln(triangle_area(1,\
    \ 2, 10))\nprintln(triangle_area(2, 4, 3))", "    ss = sort([a, b, c])\n    if\
    \ (ss[1] + ss[2] <= ss[3])\n        return -1\n    else\n        p = (a + b +\
    \ c) / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    end\nend",
  "    a, b, c = sort([a, b, c])\n    return a + b > c ? sqrt(s * (s - a) * (s - b)\
    \ * (s - c)) : -1\nend", "    if (a + b > c) && (a + c > b) && (b + c > a)\n \
    \       p = (a + b + c) / 2.0\n        sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        -1\n    end\nend", "    if (a + b < c) || (a + c < b) || (b\
    \ + c < a)\n        return -1\n    else\n        p = (a + b + c) / 2\n       \
    \ area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area, 2)\n\
    \    end\nend", "    if (a + b > c) & (a + c > b) & (b + c > a)\n        p = (a\
    \ + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n    \
    \    -1\n    end\nend", "    if (a + b > c) && (a + c > b) && (b + c > a)\n  \
    \      s = (a + b + c) / 2\n        sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \  else\n        -1\n    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

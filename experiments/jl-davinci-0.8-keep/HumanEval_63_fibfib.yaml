name: HumanEval_63_fibfib
language: jl
prompt: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
  \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(5)\n    4\n    >>>\
  \ fibfib(8)\n    24\n    \"\"\"\nfunction fibfib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
  \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
  \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
  \ == 927)\nend\n"
completions: ["  if (n == 0)\n    return 0\n  elseif (n == 1)\n    return 0\n  elseif\
    \ (n == 2)\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "    \n    if n==0 \n        return 0\n    elseif n==1\n       \
    \ return 0\n    elseif n==2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else\n        n - 1 + n - 2 + n - 3\n    end\nend", "    if n==0 || n==1\n\
    \        return 0\n    elseif n==2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <= 1\n   \
    \     return 0\n    elseif n == 2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <= 1\n   \
    \     return 0\n    elseif n == 2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n@testset \"fibfib\" begin\n\
    \    @test fibfib(1) == 0\n    @test fibfib(5) == 4\n    @test fibfib(8) == 24\n\
    end", "    @assert n >= 0\n    a, b, c = 0, 0, 1\n    i = 0\n    while i < n \n\
    \        a, b, c = b, c, c + b + a\n        i += 1\n    end\n    return a\nend",
  "    if n <= 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n == 0 || n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif\
    \ n == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n    elseif n\
    \ == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n ", "    if\
    \ n == 0 || n == 1 || n == 2\n        return 0\n    elseif n == 3\n        return\
    \ 1\n    else\n        fn_minus1 = 0\n        fn_minus2 = 0\n        fn_minus3\
    \ = 1\n        fn = 0\n        for i in 4:n\n            fn = fn_minus1 + fn_minus2\
    \ + fn_minus3\n            fn_minus1 = fn_minus2\n            fn_minus2 = fn_minus3\n\
    \            fn_minus3 = fn\n        end\n        return fn\n    end\nend", " \
    \   if n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif\
    \ n == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n<3\n        return n-1\n    end\n   \
    \ a,b,c = 0,0,1\n    for i in 3:n\n        a,b,c = b,c,a+b+c\n    end\n    return\
    \ c\nend", "    if n < 3\n        return n-1\n    end\n    a, b, c = 0, 0, 1\n\
    \    for i in 3:n\n        a, b, c = b, c, a+b+c\n    end\n    return c\nend",
  "    if n <= 1 \n        return 0\n    elseif n == 2\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n == 0 return 0\n    elif n == 1 return 0\n    elif n == 2 return 1\n    else\
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0 || n ==\
    \ 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n < 3\n\
    \        return n-1\n    end\n    a, b, c = (0, 0, 1)\n    for i = 3:n\n     \
    \   a, b, c = (b, c, a+b+c)\n    end\n    return c\nend", "    if n < 3 \n   \
    \     return n-1\n    end\n    fibfib_prev_prev_prev, fibfib_prev_prev, fibfib_prev\
    \ = 0, 0, 1\n    for i in 3:n\n        fibfib_prev_prev_prev, fibfib_prev_prev,\
    \ fibfib_prev = fibfib_prev_prev, fibfib_prev, fibfib_prev_prev + fibfib_prev_prev_prev\
    \ + fibfib_prev\n    end\n    return fibfib_prev\nend", "    # Fill in your code\
    \ here\n    return 0\nend", "    \"\"\"\n    Integer input.\n    \"\"\"\n    if\
    \ n == 0 return 0\n    if n == 1 return 0\n    if n == 2 return 1\n    a, b, c\
    \ = 0, 0, 1\n    for i in 1:n-2\n        a, b, c = b, c, a+b+c\n    end\n    return\
    \ c\nend", "    @assert n >= 0 \"n must be non-negative\"\n    return n < 3 ?\
    \ n - 1 : fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  x, y, z = 0, 0, 1\n\
    \  for i in 1:n-2\n      x, y, z = y, z, x+y+z\n  end\n  return z\nend\nfibfib(8)",
  "    if n==0 \n        return 0\n    elseif n==1 \n        return 0\n    elseif\
    \ n==2 \n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n == 0 return 0 end\n    if n == 1 return\
    \ 0 end\n    if n == 2 return 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    # YOUR CODE HERE\n    if n == 0\n        return 0\n    elseif n ==\
    \ 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n ", "    n<3 &&\
    \ return n-1\n    prev_v = zeros(Int64, n)\n    prev_v[1] = 0\n    prev_v[2] =\
    \ 1\n    for i in 3:n\n        prev_v[i] = prev_v[i-1] + prev_v[i-2] + prev_v[i-3]\n\
    \    end\n    return prev_v[n]\nend\nfibfib(10)", "    if n <= 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    a, b, c = 0, 0, 1\n    for i in 1:n-2\n        a, b, c = b, c, a+b+c\n    end\n\
    \    return c\nend", "    f_minus_3 = 0\n    f_minus_2 = 0\n    f_minus_1 = 1\n\
    \    for i in 2:n\n        f = f_minus_1 + f_minus_2 + f_minus_3\n        f_minus_3\
    \ = f_minus_2\n        f_minus_2 = f_minus_1\n        f_minus_1 = f\n    end\n\
    \    return f_minus_1\nend", "    if n < 3\n        return n-1\n    end\n    a,\
    \ b, c = 0, 0, 1\n    for i in 3:n\n        a, b, c = b, c, a+b+c\n    end\n \
    \   return c\nend", "    a, b, c = 0, 0, 1\n    for i in 1:n-2\n        a, b,\
    \ c = b, c, a+b+c\n    end\n    return c\nend", "    if n == 0\n        return\
    \ 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n == 0 || n == 1\n        return 0\n    elseif n == 2\n        return 1\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    n >= 3 ? fibfib(n-1) + fibfib(n-2) + fibfib(n-3) : n\nend", "    if n == 0\
    \ || n == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n == 0 return 0\n    elseif n == 1 return 0\n    elseif n == 2 return 1\n  \
    \  else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n\
    \ == 2\n        return 1\n    else\n        a, b, c = 0, 0, 1\n        for i in\
    \ 3:n\n            a, b, c = b, c, a + b + c\n        end\n        return c\n\
    \    end\nend\n \nusing BenchmarkTools\n@btime fibfib(50)", "    if n == 0\n \
    \       return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n   \
    \     return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0 || n == 1\n        return 0\n    elseif n == 2\n\
    \        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    #return (1:n)[n]\n    \n    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n == 0 \n        return 0\n    elseif n == 1 \n        return 0\n    elseif\
    \ n == 2 \n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n    elseif n\
    \ == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    a = 0\n\
    \    b = 0\n    c = 1\n    d = 0\n    if n==0\n        return 0\n    elseif n==1\n\
    \        return 0\n    elseif n==2\n        return 1\n    else\n        for i\
    \ in 3:n\n            d = a + b + c\n            a = b\n            b = c\n  \
    \          c = d\n        end\n        return d\n    end\nend\n\"\"\"The famous\
    \ sequence of triangular numbers, the n-th triangular number is the number of\
    \ points that can form an equilateral triangle with n points on each side.\nThe\
    \ sequence starts with 0, 1, 3, 6, 10, 15, ...\n    >>> triangular(1)\n    0\n\
    \    >>> triangular(2)\n    1\n    >>> triangular(3)\n    3\n    >>> triangular(4)\n\
    \    6\n    >>> triangular(5)\n    10\n    \"\"\"", "    return 0 if n == 0 else\
    \ 1 if n == 1 || n == 2 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \ if n == 0\n    return 0\n  elseif n == 1\n    return 0\n  elseif n == 2\n  \
    \  return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "  if n <= 1\n    return 0\n  elseif n == 2\n    return 1\n  else\n    a\
    \ = 0\n    b = 0\n    c = 1\n    for i in 3:n\n      a, b, c = b, c, a + b + c\n\
    \    end\n    return c\n  end\nend\n\"\"\"The FibFib number sequence is a sequence\
    \ similar to the Fibbonacci sequnece that's defined as follows:\n    fibfib(0)\
    \ == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3).\n    Please write a function to efficiently compute\
    \ the n-th element of the fibfib number sequence.\n    >>> fibfib(1)\n    0\n\
    \    >>> fibfib(5)\n    4\n    >>> fibfib(8)\n    24\n    \"\"\"", "    \"\"\"\
    \n    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n    \"\"\"\n    if n == 0\n        return 0\n    elseif n\
    \ == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n==0\n\
    \        return 0\n    elseif n==1\n        return 0\n    elseif n==2\n      \
    \  return 1\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0 \n        return 0\n    elseif n == 1\n       \
    \ return 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    return cond(n < 3, n-1, fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\nend", "  a, b, c = 0, 0, 1 \n  for i in 1:n-1\
    \ \n    a, b, c = b, c, a+b+c \n  end \n  return a \nend", "    a = 0 \n    b\
    \ = 0 \n    c = 1 \n    if n == 0 \n        return a \n    elseif n == 1 \n  \
    \      return b \n    elseif n == 2 \n        return c \n    else \n        for\
    \ i = 3:n \n            a, b, c = b, c, a + b + c \n        end \n        return\
    \ c \n    end \nend ", "    if n < 3\n        return n-1\n    end\n    fn1, fn2,\
    \ fn3 = 0, 0, 1\n    for i in 2:n\n        fn = fn1 + fn2 + fn3\n        fn1,\
    \ fn2, fn3 = fn2, fn3, fn\n    end\n    return fn\nend", "    n < 3 && return\
    \ 0\n    n < 4 && return 1\n    n_1, n_2, n_3 = 0, 0, 1\n    for i in 4:n\n  \
    \      n_1, n_2, n_3 = n_2, n_3, n_1 + n_2 + n_3\n    end\n    return n_3\nend\n\
    print(fibfib(14))", "    if n<0\n        throw(DomainError())\n    end\n    if\
    \ n==0\n        return 0\n    elseif n==1\n        return 0\n    elseif n==2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    a = 0\n    b = 0\n    c = 1\n\
    \    for i = 3:n\n        d = a + b + c\n        a = b\n        b = c\n      \
    \  c = d\n    end\n    c\nend", "    a, b, c = 0, 0, 1\n    for i = 1:n\n    \
    \    d = a + b + c\n        a, b, c = b, c, d\n    end\n    return c\nend", " \
    \   if n==0\n        return 0\n    elseif n==1\n        return 0\n    elseif n==2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0 \n        return 0\n    elseif n == 1 \n      \
    \  return 0\n    elseif n == 2 \n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n == 0 \n        return 0\n    elseif n == 1 \n        return 0\n    elseif\
    \ n == 2 \n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n<=1 \n        return 0\n    elseif n==2\n\
    \        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\nfibfib(8)", "    if n < 0 return throw(DomainError()) end\n   \
    \ a::Int64 = 0; b::Int64 = 0; c::Int64 = 1\n    for i = 2:n\n        a = b\n \
    \       b = c\n        c = a + b + c\n    end\n    return c\nend", "    if n ==\
    \ 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n==0\n        return 0\n    elseif n==1\n        return\
    \ 0\n    elseif n==2\n        return 1\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0 \n        return\
    \ 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n<=1\n        return 0\n    elseif n==2\n        return 1\n    else\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n<=1 \n        return 0\n    elseif n==2\n        return 1\n    else\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    a = 0\n\
    \    b = 0\n    c = 1\n    temp = 0\n    if n <= 0\n        return 0\n    end\n\
    \    for i in 1:n-2\n        temp = a + b + c\n        a = b\n        b = c\n\
    \        c = temp\n    end\n    return c\nend", "    if n<0 \n        error(\"\
    \")\n    elseif n==0\n        return 0\n    elseif n==1 \n        return 0\n \
    \   elseif n==2\n        return 1\n    else \n        return fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    \    end\nend", "    if n < 0\n        return error(\"Error: negative number\"\
    )\n    end\n    if n == 0 || n == 1\n        return 0\n    end\n    if n == 2\n\
    \        return 1\n    end\n    # return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    a, b, c = 0, 0, 1\n    for i in 3:n\n        a, b, c = b, c, a+b+c\n    end\n\
    \    return c\nend", "    if n <= 2\n        return n-1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n==0 return\
    \ 0 end\n    if n==1 return 0 end\n    if n==2 return 1 end\n    prev3 = 0;\n\
    \    prev2 = 0;\n    prev1 = 1;\n    for i=1:n-3\n        prev3 = prev2\n    \
    \    prev2 = prev1\n        prev1 = prev1 + prev2 + prev3\n    end\n    return\
    \ prev1\nend", "    nums = [0, 0, 1]\n    for i in 1:n\n        push!(nums, nums[end]\
    \ + nums[end-1] + nums[end-2])\n    end\n    return nums[end]\nend", "    if n<=1\n\
    \        return 0\n    elseif n==2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  if n <= 1\n    return\
    \ 0\n  elseif n == 2\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend\n \n \n \n\"\"\"Find a pair of numbers that sums to\
    \ a given number, if there are more than one pair, return the one with the largest\
    \ product.\n    >>> findpair(5)\n    (2, 3)\n    >>> findpair(15)\n    (5, 10)\n\
    \    >>> findpair(18)\n    (6, 12)\n    \"\"\"", "    if n < 3\n        return\
    \ n-1\n    end\n    prev, cur, cur_next = 0, 1, 1\n    for i in 3:n\n        prev,\
    \ cur, cur_next = cur, cur_next, cur_next + cur + prev\n    end\n    return cur_next\n\
    end", "    return n < 3 ? n-1 : fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    fibfib(8)", "    # Your code here:\n    a = 0\n    b = 0\n    c = 1\n    for i\
    \ in 1:n-2\n        temp = c\n        c = a + b + c\n        a = b\n        b\
    \ = temp\n    end\n    return c\nend", "    if n == 0\n        return 0\n    elseif\
    \ n == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n < 3\n        return(n-1)\n    else\n        return(fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3))\n    end\nend", "    return fibonacci(n + 2) - 1\nend", "   \
    \ \n    \"\"\"\n    n must be a positive integer.\n    \"\"\"\n    if n < 0\n\
    \        error(\"n must be a positive integer.\")\n    end\n    \n    if n < 3\n\
    \        return n-1\n    end\n    \n    a = 0\n    b = 0\n    c = 1\n    \n  \
    \  for i = 3:n\n        temp = c\n        c = a + b + c\n        a = b\n     \
    \   b = temp\n    end\n    \n    return c\n    \nend", "    if n == 0 || n ==\
    \ 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n       \
    \ # n < 0 || n == 3\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n < 2 \n        return 0\n    elseif n == 2\n        return\
    \ 1\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    if n == 0 \n        return 0\n    elseif n == 1 \n        return 0\n\
    \    elseif n == 2 \n        return 1\n    else \n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n==0 return 0 end\n    if\
    \ n==1 return 0 end\n    if n==2 return 1 end\n    a,b,c=0,0,1\n    for i in range(3,n+1)\n\
    \        a,b,c=b,c,a+b+c\n    end\n    return c\nend", "    @assert n>=0\n   \
    \ if n == 0 || n == 1\n        return 0\n    elseif n == 2\n        return 1\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n==0 \n        return 0\n    elseif n==1 \n        return 0\n    elseif\
    \ n==2 \n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "  a, b, c = 0, 0, 1\n  for i in 1:n-2\n    a,\
    \ b, c = b, c, a+b+c\n  end\n  return c\nend\nfibfib(2)", "    n < 3 && return\
    \ 0\n    n == 3 && return 1\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    n0 = 0\n\
    \    n1 = 0\n    n2 = 1\n    n3 = 0\n    i = 3\n    while i <= n\n        n3 =\
    \ n0 + n1 + n2\n        n0 = n1\n        n1 = n2\n        n2 = n3\n        i +=\
    \ 1\n    end\n    return n3\nend\nprintln(fibfib(32))", "    if n == 0\n     \
    \   return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n       \
    \ return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    f0 = 0\n    f1 = 0\n    f2\
    \ = 1\n    for i = 3:n\n        curr = f0 + f1 + f2\n        f0 = f1\n       \
    \ f1 = f2\n        f2 = curr\n    end\n    return f2\nend", "    if n <= 1\n \
    \       return 0\n    elseif n == 2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n < 3\n    \
    \    return n-1\n    end\n    a, b, c = 0, 0, 1\n    for i in 3:n\n        a,\
    \ b, c = b, c, a+b+c\n    end\n    return c\nend\n\"\"\"\n    Please write a function\
    \ that receives a single integer n and returns a table containing the first n\
    \ rows of Pascal's triangle, e.g.\n    >>> Pascal(1)\n    1\n    >>> Pascal(2)\n\
    \    1    1\n    1\n    >>> Pascal(5)\n    1\n    1    1\n    1    2    1\n  \
    \  1    3    3    1\n    1    4    6    4    1\n    \"\"\"", "    if n < 2\n \
    \       return 0\n    elseif n == 2\n        return 1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <= 1\n        return 0\n\
    \    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    a = 0\n    b = 0\n    c = 1\n    for i in\
    \ range(n-2)\n        tmp = a + b + c\n        a = b\n        b = c\n        c\
    \ = tmp\n    end\n    return c\nend\n@test fibfib(1) == 0\n@test fibfib(5) ==\
    \ 4\n@test fibfib(8) == 24\n ", "    n <= 1 && return 0\n    n == 2 && return\
    \ 1\n    a, b, c = 0, 0, 1\n    for i = 3:n\n        a, b, c = b, c, a + b + c\n\
    \    end\n    return c\nend\nfibfib(1)\nfibfib(5)\nfibfib(8)", "    if n <= 1\n\
    \        return 0\n    elseif n == 2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n==0\n     \
    \   return 0\n    elseif n==1\n        return 0\n    elseif n==2\n        return\
    \ 1\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    if n < 0 \n        return -1 \n    end\n    if n == 0 || n == 1 \n\
    \        return 0 \n    end\n    if n == 2 \n        return 1 \n    end\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n <= 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else\n        #c1 = fibfib(n-1)\n        #c2 = fibfib(n-2)\n        #c3 = fibfib(n-3)\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", " \n \
    \   \n    \n    \n    \n    return \nend\nfibfib(1)\n \n \n \n ", "    if n <=\
    \ 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n       \
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n==0\n     \
    \   return 0\n    elseif n==1\n        return 0\n    elseif n==2\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    fibfib_table = Dict{Int64, Int64}()\n    for i in 0:n\n        if i\
    \ == 0\n            fibfib_table[i] = 0\n        elseif i == 1\n            fibfib_table[i]\
    \ = 0\n        elseif i == 2\n            fibfib_table[i] = 1\n        else\n\
    \            fibfib_table[i] = fibfib_table[i-1] + fibfib_table[i-2] + fibfib_table[i-3]\n\
    \        end\n    end\n    return fibfib_table[n]\nend", "    if n == 0 \n   \
    \     return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n     \
    \   return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n < 3\n        return n-1\n    end\n    n1 = 0\n    n2\
    \ = 1\n    n3 = 1\n    for i in 3:n\n        n1, n2, n3 = n2, n3, n2 + n3 + n1\n\
    \    end\n    return n3\nend", "    if n<0\n        return 0\n    end\n    if\
    \ n==0\n        return 0\n    end\n    if n==1\n        return 0\n    end\n  \
    \  if n==2\n        return 1\n    end\n    return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend", "    if n == 0 || n == 1\n        return 0\n    elseif n\
    \ == 2\n        return 1\n    else\n        fib_n = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        return fib_n\n    end\nend", "    if n==0 return 0 end\n\
    \    if n==1 return 0 end\n    if n==2 return 1 end\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend", "    if n<=2\n        return n-1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n==0\n        return 0\n    elseif n==1\n        return 0\n    elseif n==2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    a, b, c = 0, 0, 1\n    for i in 1:n-2\n        a, b, c =\
    \ b, c, a+b+c\n    end\n    return c\nend", "    if n < 2 \n        return 0\n\
    \    elseif n == 2\n        return 1\n    else \n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n    end\nend", "    return n >= 3 ? fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3) : n-1\nend", "    if n < 2\n        return 0\n   \
    \ elseif n == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n <= 2\n        return n-1\n    end\n\
    \    n1, n2, n3 = 0, 0, 1\n    for i = 3:n\n        temp = n1 + n2 + n3\n    \
    \    n1 = n2\n        n2 = n3\n        n3 = temp\n    end\n    return n3\nend\n\
    println(fibfib(5))\nprintln(fibfib(8))\nprintln(fibfib(1))", "    if n == 0\n\
    \        return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n  \
    \      return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n < 3\n        return n-1\n    end\n    fib = [0,0,1]\n\
    \    for i in 3:n\n        fib[i % 3] = fib[(i-1) % 3] + fib[(i-2) % 3] + fib[(i-3)\
    \ % 3]\n    end\n    return fib[n % 3]\nend\nfibfib(1)", "    # The base cases\n\
    \    if n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif\
    \ n == 2\n        return 1\n    end\n    # Initializing the array\n    arr = zeros(Int64,3)\n\
    \    arr[1] = 0\n    arr[2] = 0\n    arr[3] = 1\n    # The loop\n    for i in\
    \ 3:n\n        arr[i%3+1] = arr[(i-1)%3+1] + arr[(i-2)%3+1] + arr[(i-3)%3+1]\n\
    \    end\n    return arr[n%3+1]\nend\nfibfib(10)", "    if n < 3 return n - 1\
    \ end\n    a, b, c = 0, 0, 1\n    for _ in 1:n-3\n        c, b, a = a + b + c,\
    \ c, b\n    end\n    return c\nend", "    if n == 0\n        return 0\n    elseif\
    \ n == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    a =\
    \ 0\n    b = 0\n    c = 1\n    for i = 3:n\n        x = a + b + c\n        a =\
    \ b\n        b = c\n        c = x\n    end\n    return a + b + c\nend", "    if\
    \ n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n\
    \ == 2\n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend\n\"\"\"\nIn this problem, your task is to create\
    \ a function or method that will implement\nthe following algorithm:", "    if\
    \ n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n\
    \ == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend", "    if n==0\n        return 0\n    elseif n==1\n\
    \        return 0\n    elseif n==2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    fibfib = Array{Int64}(undef,\
    \ n+1)\n    fibfib[1] = 0\n    fibfib[2] = 0\n    fibfib[3] = 1\n    for i in\
    \ 4:n\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    end\n\
    \    return fibfib[n]\nend", "    # example of julia's keyword argument. default\
    \ value here is 0.\n    # note, to use keyword arguments, you need to use a ;\
    \ after the first argument.\n    fibfib(n::Int64; a1=0, a2=0, a3=1) = if n==0\
    \ return a1 elseif n==1 return a2 elseif n==2 return a3 else fibfib(n-1, a2, a3,\
    \ a1+a2+a3) end\nend\n@assert fibfib(1) == 0\n@assert fibfib(5) == 4\n@assert\
    \ fibfib(8) == 24\n ", "    f = zeros(n + 1)\n    f[1] = 0\n    f[2] = 0\n   \
    \ f[3] = 1\n    for i in 4:n\n        f[i] = f[i-1] + f[i-2] + f[i-3]\n    end\n\
    \    return f[n]\nend\n@test fibfib(1) == 0\n@test fibfib(5) == 4\n@test fibfib(8)\
    \ == 24", "    \n    if n == 0 \n        return 0\n    elseif n == 1 \n      \
    \  return 0\n    elseif n == 2 \n        return 1\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0 \n        return\
    \ 0\n    elseif n == 1 \n        return 0\n    elseif n == 2 \n        return\
    \ 1\n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    \n    if n == 0 || n == 1 \n        return 0\n    elseif n == 2\n \
    \       return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n==0\n        return 0\n    elseif n==1\n        return\
    \ 0\n    elseif n==2\n        return 1\n    else\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n    end\nend", "    a = 0\n    b = 0\n    c = 1\n\
    \    for i in 1:n-2\n        a = b\n        b = c\n        c = a + b + c\n   \
    \ end\n    return c\nend", "    return n <= 2 ? n-1 : fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "    if n == 0\n        return 0\n    elseif n == 1\n \
    \       return 0\n    elseif n == 2\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    return (function\
    \ fibfib_rec(n::Int64, a::Int64, b::Int64, c::Int64)::Int64\n        if n == 0\
    \ return a\n        if n == 1 return b\n        if n == 2 return c\n        return\
    \ fibfib_rec(n-1, b, c, a+b+c)\n    end)(n, 0, 0, 1)\nend", "    a, b, c = 0,\
    \ 0, 1\n    for i in 1:n-2\n        a, b, c = b, c, a+b+c\n    end\n    return\
    \ c\nend\n@show fibfib(1)\n@show fibfib(5)\n@show fibfib(8)", "    if n < 0 \n\
    \        throw(DomainError())\n    end\n    if n < 3 \n        return n-1\n  \
    \  end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n ==\
    \ 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    n == 0 && return 0\n    n == 1 && return 0\n    n == 2 &&\
    \ return 1\n    n > 2 && return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend",
  "    if n == 0 \n        return 0\n    elseif n == 1\n        return 0\n    elseif\
    \ n == 2\n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend\nfibfib(8)", "    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n\
    fibfib(5)", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n<3\n        return n-1\n\
    \    end\n    a::Int64 = 0\n    b::Int64 = 0\n    c::Int64 = 1\n    for i=3:n\n\
    \        d::Int64 = a+b+c\n        a = b\n        b = c\n        c = d\n    end\n\
    \    return c\nend", "    if n < 3\n        return n-1\n    end\n    n_1 = 2\n\
    \    n_2 = 1\n    n_3 = 0\n    for _ = 3:n\n        temp = n_1 + n_2 + n_3\n \
    \       n_3 = n_2\n        n_2 = n_1\n        n_1 = temp\n    end\n    return\
    \ n_1\nend", "    n >= 2 ? fibfib(n-1) + fibfib(n-2) + fibfib(n-3) : n\nend",
  "    fibfib_previous_previous_previous = 0\n    fibfib_previous_previous = 0\n \
    \   fibfib_previous = 1\n    fibfib_n = 0\n    for i in 1:n-2\n        fibfib_n\
    \ = fibfib_previous_previous_previous + fibfib_previous_previous + fibfib_previous\n\
    \        fibfib_previous_previous_previous = fibfib_previous_previous\n      \
    \  fibfib_previous_previous = fibfib_previous\n        fibfib_previous = fibfib_n\n\
    \    end\n    return fibfib_n\nend", "    \n    n < 3 && return fibfib(n)\n  \
    \  \n    # initialise vars\n    f2 = 0\n    f1 = 0\n    f = 1\n    \n    # loop\
    \ over n-2 since we already assigned f(0) and f(1)\n    for i in 2:n-1\n     \
    \   \n        # compute f(i+1)\n        f = f1 + f2 + f\n        \n        # update\
    \ f2\n        f2 = f1\n        \n        # update f1\n        f1 = f\n    end\n\
    \    \n    return f\nend", "    if n < 3\n        return n-1\n    end\n    a,\
    \ b, c = 0, 0, 1\n    for _ in 1:n-3\n        d = a + b + c\n        a, b, c =\
    \ b, c, d\n    end\n    return c\nend", "    if n <= 1 \n        return 0\n  \
    \  elseif n == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n <= 1 \n        return 0\n    elseif\
    \ n == 2\n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend ", "    if n == 0 \n        return 0\n    elseif\
    \ n == 1\n        return 0\n    elseif n == 2\n        return 1\n    else \n \
    \       return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    a\
    \ = 0\n    b = 0\n    c = 1\n    d = 1\n    if n < 3\n        return a\n    end\n\
    \    for i in 1:n-2\n        d = b + c + a\n        a = b\n        b = c\n   \
    \     c = d\n    end\n    return d\nend", "    f0 = 0\n    f1 = 0\n    f2 = 1\n\
    \    for i in 3:n \n        f0, f1, f2 = f1, f2, f0 + f1 + f2\n    end\n    return\
    \ f2\nend", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    fibfib(0) = 0\n    fibfib(1)\
    \ = 0\n    fibfib(2) = 1\n    if n > 2\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\n    return fibfib(n)\nend", "    \n    if n == 0 return\
    \ 0 end\n    if n == 1 return 0 end\n    if n == 2 return 1 end\n    if n == 3\
    \ return 2 end\n    \n    a::Int64 = 0\n    b::Int64 = 0\n    c::Int64 = 1\n \
    \   d::Int64 = 2\n    \n    for i in 4:n\n        e::Int64 = a + b + c\n     \
    \   a = b\n        b = c\n        c = d\n        d = e\n    end\n    \n    return\
    \ d\nend", "    if n==0\n        return 0\n    elseif n==1\n        return 0\n\
    \    elseif n==2\n        return 1\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "    if n < 0\n        error(\"The n-th element\
    \ can't be negative.\")\n    end\n    # here the code goes for the solution\n\
    \    n <= 2 ? n - 1 : fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\nend", " \
    \   if n <= 2\n        return 1 - n\n    else\n        s = n % 6\n        if s\
    \ <= 2\n            return s - 1\n        else\n            return 3 - s\n   \
    \     end\n    end\nend", "    if n==0 return 0 end\n    if n==1 return 0 end\n\
    \    if n==2 return 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    \n    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\n    \nend\nfibfib(8)", "    # your code\
    \ here\nend\n    \n    ", "    if n < 2\n        return 0\n    elseif n == 2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n\
    \    elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n  \
    \  else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n<3\n        n\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n <= 2\n        return 0\n    elseif n == 3\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "  if n < 3\n    return n-1\n  else\n    n1 = 0\n    n2 = 1\n    n3 = 1\n\
    \    for i in 3:n\n      n1 = n2\n      n2 = n3\n      n3 = n1 + n2 + n3\n   \
    \ end\n    return n3\n  end\nend", "    n >= 3 ? fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ : n-1\nend", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    n <= 2 && return n-1\n    n\
    \ <= 3 && return 1\n    f0 = 0\n    f1 = 0\n    f2 = 1\n    for i in 4:n\n   \
    \     f0, f1, f2 = f1, f2, f1+f2+f0\n    end\n    return f2\nend\n```", "    if\
    \ n==0\n        return 0\n    elseif n==1\n        return 0\n    elseif n==2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    n < 3 && return 0\n    n == 3 && return 1\n    x1, x2, x3\
    \ = 0, 0, 1\n    for i in 4:n\n        x1, x2, x3 = x2, x3, x1 + x2 + x3\n   \
    \ end\n    return x3\nend", "    a, b, c = 0, 0, 1 \n    for _ in 1:n-2 \n   \
    \     a, b, c = b, c, a+b+c \n    end \n    return c \nend ", "    if n == 0\n\
    \        return 0\n    elseif n == 1\n        return 0\n    elseif n == 2\n  \
    \      return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    n == 0 && return 0\n    n == 1 && return 0\n    n == 2 &&\
    \ return 1\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if\
    \ n < 2 return 0 end\n    if n == 2 return 1 end\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n@time fibfib(42)", "    if n == 0\n        return 0\n  \
    \  elseif n == 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n\
    \ == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend\n    \n    \nfibfib(8)", "    @assert n>=0\n    if\
    \ n==0 \n        return 0\n    elseif n==1\n        return 0\n    elseif n==2\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n == 0\n        return 0\n    elseif n == 1\n        return\
    \ 0\n    elseif n == 2\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\nprintln(fibfib(5))", "    \n    if\
    \ n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n       \
    \ 1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n    \n\
    end", " \n    #initalization with the first two values of the sequence\n    a\
    \ = 0\n    b = 0\n    c = 1\n    if n == 0\n        return a\n    elseif n ==\
    \ 1\n        return b\n    elseif n == 2\n        return c\n    else\n       \
    \ for i in 3:n \n            d = a + b + c\n            a = b\n            b =\
    \ c\n            c = d\n        end\n        return d\n    end\nend", "    if\
    \ n == 0\n        return 0\n    elseif n == 1\n        return 0\n    elseif n\
    \ == 2\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend", "    if n == 0\n        return 0\n    elseif n ==\
    \ 1\n        return 0\n    elseif n == 2\n        return 1\n    else\n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n@assert fibfib(1)\
    \ == 0\n@assert fibfib(5) == 4\n@assert fibfib(8) == 24", "    return n < 3 ?\
    \ 0 : fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    return n >= 2 ? fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) : n - 1\nend", "    n < 3 && return n-1\n    n1,\
    \ n2, n3 = 0, 0, 1\n    i = 3\n    while i <= n\n        n1, n2, n3 = n2, n3,\
    \ n1+n2+n3\n        i += 1\n    end\n    return n3\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

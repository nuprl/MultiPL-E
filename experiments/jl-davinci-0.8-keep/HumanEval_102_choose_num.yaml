name: HumanEval_102_choose_num
language: jl
prompt: "\"\"\"This function takes two positive numbers x and y and returns the\n\
  \    biggest even integer number that is in the range [x, y] inclusive. If \n  \
  \  there's no such number, then the function should return -1.\n\n    For example:\n\
  \    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\nfunction\
  \ choose_num(x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
  \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
  \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
  \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
  \ 546) == 546)\nend\n"
completions: ["    if x <= y \n        #if x is even\n        if x % 2 == 0\n    \
    \        return x\n        else \n            #x is odd\n            return x\
    \ + 1\n        end\n    else \n        return -1\n    end\nend", "    if x >=\
    \ y\n        return -1\n    end\n    num = x\n    while num >= x && num <= y\n\
    \        if num % 2 == 0\n            return num\n        end\n        num +=\
    \ 1\n    end\n    return -1\nend", "    if x > y\n        return -1\n    end\n\
    \    for i in x:y\n        if i % 2 == 0\n            return i\n        end\n\
    \    end\n    return -1\nend", "    if x % 2 == 0 && y % 2 == 0\n        return\
    \ max(x, y)\n    elseif x % 2 == 1 && y % 2 == 1\n        return -1\n    else\n\
    \        if x % 2 == 0\n            return x\n        else\n            return\
    \ y\n        end\n    end\nend", "    if x%2 != 0\n        x += 1\n    end\n \
    \   if y%2 != 0\n        y -= 1\n    end\n    if x > y\n        return -1\n  \
    \  end\n    return y\nend", "    \"\"\"\n    if x > y\n        return -1\n   \
    \ end\n    if y % 2 == 0\n        return y\n    end\n    return y - 1\n    \"\"\
    \"\n    for i in x:y\n        if i % 2 == 0\n            return i\n        end\n\
    \    end\n    return -1\nend", "    if x > y\n        return -1\n    end\n   \
    \ for z in x:y\n        if z % 2 == 0\n            return z\n        end\n   \
    \ end\n    return -1\nend", "    for k in range(x, y+1)\n        if k % 2 == 0\n\
    \            return k\n        end\n    end\n    return -1\nend\nchoose_num(12,\
    \ 15)", "    if x>y\n        return -1\n    end\n    for k in (x:y)\n        if\
    \ k%2==0\n            return k\n        end\n    end\n    return -1\nend", " \
    \   if x % 2 == 0\n        return max(x, y)\n    else\n        x += 1\n      \
    \  return choose_num(x, y)\n    end\nend", "    if x%2 == 0 && y%2 == 0 && x<=y\n\
    \        return y\n    elseif x%2 == 0 && y%2 == 0 && x>y\n        return x\n\
    \    elseif x%2 == 0 && y%2 != 0 && x<=y\n        return x\n    elseif x%2 !=\
    \ 0 && y%2 == 0 && x<=y\n        return y\n    elseif x%2 != 0 && y%2 != 0 &&\
    \ x<=y\n        return -1\n    elseif x%2 != 0 && y%2 == 0 && x>y\n        return\
    \ -1\n    elseif x%2 == 0 && y%2 != 0 && x>y\n        return -1\n    elseif x%2\
    \ != 0 && y%2 != 0 && x>y\n        return -1\n    end\nend", "    # set the default\
    \ value to -1\n    max_even = -1\n    # loop through x to y inclusive\n    for\
    \ i in x:y\n        # if i is even and it is greater than max_even\n        if\
    \ i % 2 == 0 && i > max_even\n            # then set max_even to i\n         \
    \   max_even = i\n        end\n    end\n    # return max_even\n    return max_even\n\
    end", "    if x % 2 == 0 && y % 2 == 0\n        return maximum(x, y)\n    elseif\
    \ x % 2 == 1 && y % 2 == 1\n        return -1\n    else\n        return max(x\
    \ + 1, y - 1)\n    end\nend", "    # write your code here\nend\nchoose_num(x,\
    \ y) = -1", "    \n    if x > y\n        return -1\n    end", "    \n    if x\
    \ <= 0 || y <= 0\n        throw(ArgumentError(\"The number can't be negative\"\
    ))\n    end\n    \n    if x > y\n        throw(ArgumentError(\"x should be less\
    \ than y\"))\n    end\n    \n    num = 0 \n    for i in x:y\n        if i % 2\
    \ == 0\n            num = i\n        end\n    end\n    \n    if num == 0\n   \
    \     num = -1\n    end\n    \n    return num\nend\n ", "    if x == y \n    \
    \    return x\n    elseif x % 2 == 0\n        return choose_num(x, y-1)\n    else\
    \ \n        return choose_num(x+1, y)\n    end\nend", "    i = x \n    while i\
    \ > y \n        if i%2 == 0\n            return i\n        end\n        i -= 1\n\
    \    end\n    return -1\nend", "    #if x == y:\n    #   x % 2 == 0 ? x : -1\n\
    \    #else:\n    #    for a in y:-1:x\n    #        if a % 2 == 0\n    #     \
    \       return a\n    #    end\n    #    return -1\n    #end\n    for a in y:-1:x\n\
    \        if a % 2 == 0\n            return a\n    end\n    return -1\nend\nchoose_num(15,\
    \ 15)\nchoose_num(15, 14)\nchoose_num(15, 16)", "    \n    if (x < y) && (x%2\
    \ == 0)\n        return x\n    elseif (x < y) && (x%2 != 0)\n        x = x + 1\n\
    \        return x\n    elseif (x > y) && (y%2 == 0)\n        return y\n    elseif\
    \ (x > y) && (y%2 != 0)\n        y = y + 1\n        return y\n    elseif (x ==\
    \ y) && (x%2 == 0)\n        return x\n    else\n        return -1\n    end\nend",
  "    if x > y \n        return -1\n    end\n    if x%2 == 0\n        return x\n\
    \    else \n        return x+1\n    end\nend", "    \"\"\" \n    # let's first\
    \ test if the input data is valid\n    if x > y\n        println(\"Input error:\
    \ x > y\")\n        return -1\n    end\n    \"\"\"\n    # now let's look at the\
    \ even numbers\n    max_even = 0\n    for i in x:y\n        if i % 2 == 0\n  \
    \          if i > max_even\n                max_even = i\n            end\n  \
    \      end\n    end\n    if max_even == 0\n        return -1\n    else\n     \
    \   return max_even\n    end\nend", "    if x > y\n        return -1\n    end\n\
    \    x += mod(x, 2) #make sure x is even\n    y -= mod(y, 2) #make sure y is even\n\
    \    if x > y\n        return -1\n    end\n    return y\nend", "    if x > y \n\
    \        return -1\n    end\n    for i in x:y\n        if i % 2 == 0\n       \
    \     return i\n        end\n    end\n    return -1\nend\n\"\"\"This function\
    \ takes a list of integers and returns the sum of the\n    elements that are greater\
    \ than the average value of all the elements.\n    If all the elements are less\
    \ than the average, then return 0.", "    z = 0\n    if x%2 == 0\n        z =\
    \ x\n    else\n        z = x+1\n    end\n    if z >= y\n        return -1\n  \
    \  else\n        while z < y\n            z = z+2\n        end\n        return\
    \ z\n    end\nend", "    z = x\n    while z != y\n        if z % 2 == 0\n    \
    \        return z\n        end\n        z += 1\n    end\n    return -1\nend",
  "    for i in x:y\n        if rem(i, 2) == 0\n            return i\n        end\n\
    \    end\n    return -1\nend", "    z = 0\n    if x > y\n        z = -1\n    else\n\
    \        for i in x:y\n            if i % 2 == 0\n                z = i\n    \
    \        end\n        end\n    end\n    return z\nend", "    if x > y \n     \
    \   return -1\n    end\n    for i = y:-1:x\n        if i % 2 == 0\n          \
    \  return i\n        end\n    end\n    return -1\nend", "    n = x\n    if n %\
    \ 2 == 1\n        n += 1\n    end\n    if n > y\n        return -1\n    end\n\
    \    return n\nend", "    for i in reverse(x:y)\n        if i % 2 == 0\n     \
    \       return i\n        end\n    end\n    return -1\nend", "    r = y\n    while\
    \ !isodd(r)\n        if r >= x\n            return r\n        end\n        r -=\
    \ 1\n    end\n    return -1\nend", "    if x > y\n        return -1\n    end\n\
    \    for i in range(x, y+1)\n        if i % 2 == 0\n            return i\n   \
    \     end\n    end\n    return -1\nend", "    evens = [i for i in x:y if i % 2\
    \ == 0]\n    if length(evens) == 0\n        return -1\n    else\n        return\
    \ maximum(evens)\n    end\nend\n \nchoose_num(15, 14)", "    if mod(x, 2) == 0\n\
    \        x_is_even = true\n    else\n        x_is_even = false\n    end\n    \n\
    \    if mod(y, 2) == 0\n        y_is_even = true\n    else\n        y_is_even\
    \ = false\n    end\n    \n    if x_is_even && y_is_even\n        if x < y\n  \
    \          return y\n        elseif x > y\n            return x\n        else\n\
    \            return x\n        end\n    elseif x_is_even && !y_is_even\n     \
    \   if x < y - 1\n            return y - 1\n        else\n            return -1\n\
    \        end\n    elseif !x_is_even && y_is_even\n        if x + 1 < y\n     \
    \       return y\n        else\n            return -1\n        end\n    else\n\
    \        if x + 1 < y - 1\n            return y - 1\n        else\n          \
    \  return -1\n        end\n    end\nend", "    if x % 2 == 0 # x is even\n   \
    \     if x >= y # x is the biggest even integer\n            return x\n      \
    \  else # x is less than y\n            # y is even\n            if y % 2 == 0\n\
    \                return y\n            else # y is odd\n                return\
    \ choose_num(x+2, y)\n            end\n        end\n    else # x is odd\n    \
    \    return choose_num(x+1, y)\n    end\nend", "    if (x > y)\n        return\
    \ -1\n    end\n    if (x == y)\n        if (x % 2 == 0)\n            return x\n\
    \        else\n            return -1\n        end\n    end\n    for i in x:y\n\
    \        if (i % 2 == 0)\n            return i\n        end\n    end\n    return\
    \ -1\nend\nprintln(choose_num(13, 12))\nprintln(choose_num(12, 15))\nprintln(choose_num(2,\
    \ 8))", "    if x == y && x % 2 == 0\n        x\n    elseif x < y && x % 2 ==\
    \ 0\n        choose_num(x + 2, y)\n    elseif x < y && x % 2 != 0\n        choose_num(x\
    \ + 1, y)\n    elseif x > y\n        -1\n    end\nend", "    if x > y\n      \
    \  return -1\n    end\n    if x%2 == 0\n        if x <= y\n            return\
    \ x\n        else\n            return -1\n        end\n    else\n        return\
    \ choose_num(x+1, y)\n    end\nend", "    if y < x\n        return -1\n    end\n\
    \    if x % 2 == 0\n        return x\n    else \n        return x + 1\n    end\n\
    end", "    if x % 2 == 0 \n        return x\n    else\n        return x + 1\n\
    \    end\nend\nchoose_num(12, 15)", "    if x > y\n        return -1\n    end\n\
    \    even = false\n    for i = x:y\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    for i in x:y\n        if\
    \ i % 2 == 0\n            return i\n        end\n    end\n    return -1\nend",
  "    # Your code here\nend", "    if x>y\n        return -1\n    end\n    if x%2==0\n\
    \        return x\n    else\n        return x+1\n    end\nend\nchoose_num(2, 3)",
  "    x, y = min(x, y), max(x, y)\n    if (x % 2 == 0) || (x == y)\n        x\n \
    \   elseif (y % 2 == 0)\n        y\n    else\n        -1\n    end\nend", "   \
    \ if x > y\n        return -1\n    end\n    return y - (y % 2)\nend", "    if\
    \ x > y\n        return -1\n    end\n    for i in x:y\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    \"\"\"\n\
    \    I think this is a better way to do this, but to follow the instructions\n\
    \    given, I'm going to do it a bit differently. This is an alternative\n   \
    \ solution", "    if x <= y\n        for i in x:y\n            if i % 2 == 0\n\
    \                return i\n            end\n        end\n        return -1\n \
    \   else\n        return -1\n    end\nend", "    \n    #base case: if x is even\n\
    \    if x % 2 == 0 \n        return x\n    \n    #base case: if y is even\n  \
    \  elseif y % 2 == 0\n        return y\n    \n    #base case: if x and y are odd\n\
    \    elseif x % 2 != 0 && y % 2 != 0\n        return -1\n    \n    #recursive\
    \ case: if only x is odd\n    elseif x % 2 != 0 && y % 2 == 0\n        return\
    \ choose_num(x+1, y)\n    \n    #recursive case: if only y is odd\n    else\n\
    \        return choose_num(x, y-1)\n    end\n    \nend\n    \n    ", "    if y\
    \ >= x\n        for i in x:y\n            if i % 2 == 0\n                return\
    \ i\n            end\n        end\n    end\n    return -1\nend\nchoose_num(12,\
    \ 15)", "    if x < 0 || y < 0\n        throw(DomainError(\"should be nonnegative\"\
    ))\n    end\n    for number in y:-1:x\n        if number % 2 == 0\n          \
    \  return number\n        end\n    end\n    return -1\nend", "    if x > y\n \
    \       return -1\n    end\n    return [i for i in x:y if i % 2 == 0][end]\nend",
  "    x > y && return -1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 ==\
    \ 0 && return x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x %\
    \ 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n \
    \   x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return x\n    x +=\
    \ 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return x\n  \
    \  x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 == 0 && return x\n    x += 1 \n    x % 2 == 0 && return\
    \ x\n    x += 1 \n    x % 2 ==", "    nums = [x:y]\n    i = length(nums)\n   \
    \ while i > 0\n        if mod(nums[i], 2) == 0\n            return nums[i]\n \
    \       end\n        i = i - 1\n    end\n    return -1\nend", "    for i in x:y\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if x % 2 == 0 && y % 2 == 0\n        return max(x, y)\n    elseif\
    \ x % 2 == 1 && y % 2 == 1\n        return -1\n    elseif x % 2 == 0 && y % 2\
    \ == 1\n        return x\n    elseif x % 2 == 1 && y % 2 == 0\n        return\
    \ y\n    end\nend", "    if y < x\n        return -1\n    end\n    if x%2 == 0\n\
    \        return x\n    else\n        return x+1\n    end\nend\n ", "    \n   \
    \ # If x > y, swap them so that x <= y\n    if x > y\n        temp = x\n     \
    \   x = y\n        y = temp\n    end\n    \n    # If x is even, return x\n   \
    \ if x % 2 == 0\n        return x\n    else \n        # If x+1 is even, return\
    \ x+1, else return -1\n        if (x+1) % 2 == 0\n            return x+1\n   \
    \     else\n            return -1\n        end\n    end\n    \nend", "    for\
    \ i in y:-1:x\n        if i % 2 == 0\n            return i\n        end\n    end\n\
    \    return -1\nend", "    if x%2 == 0\n        return x\n    else\n        return\
    \ x+1\n    end\nend", "    if x > y\n        return -1\n    end\n    for i in\
    \ x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n   \
    \ return -1\nend", "    \"\"\"\n    first we check if x or y isn't even, if it\
    \ is then we return -1, because\n    we can't divide an odd number by 2, but if\
    \ neither of them isn't we check\n    the bigger one and divide it by 2 until\
    \ we reach 0, which means we have\n    reached the biggest number.\n    \"\"\"\
    \n    if x % 2 != 0 || y % 2 != 0\n        return -1\n    elseif x > y\n     \
    \   while x != 0\n            x = x / 2\n        end\n        return x\n    else\n\
    \        while y != 0\n            y = y / 2\n        end\n        return y\n\
    \    end\nend", "    if x > y \n        return -1\n    end\n    if x == y\n  \
    \      if (x % 2) == 0\n            return x\n        else\n            return\
    \ -1\n        end\n    end\n    # if x is odd, add 1 and check if it's even\n\
    \    if (x % 2) == 1\n        x += 1\n    end\n    #check if max is even\n   \
    \ if (y % 2) == 0\n        return y\n    end\n    return y - 1\nend\nprintln(choose_num(13,\
    \ 12))\nprintln(choose_num(12, 15))\nprintln(choose_num(12, 12))\nprintln(choose_num(13,\
    \ 13))", "    if x > y\n        return -1\n    end\n    if y % 2 == 0\n      \
    \  return y\n    else\n        return y - 1\n    end\nend", "    evens = [i for\
    \ i in range(x, y+1) if i % 2 == 0]\n    if !isempty(evens)\n        return maximum(evens)\n\
    \    else\n        return -1\n    end\nend\n ", "    if x % 2 == 0 # if x is even\n\
    \        return x\n    else # if x is odd\n        if x+1 <= y\n            return\
    \ x+1\n        else\n            return -1\n        end\n    end\nend\n ", " \
    \   if mod(x, 2) == 0\n        return x\n    else\n        return x + 1\n    end\n\
    end", "    if x>y\n        return -1\n    end\n    if mod(x,2) == 0\n        return\
    \ x\n    else\n        return choose_num(x+1, y)\n    end\nend", "    if x % 2\
    \ == 0 && y % 2 == 0 && x < y\n        return y\n    elseif x % 2 == 0 && y %\
    \ 2 == 0 && x > y\n        return x\n    elseif x % 2 == 0 && y % 2 != 0\n   \
    \     return x\n    elseif x % 2 != 0 && y % 2 == 0\n        return y\n    else\n\
    \        return -1\n    end\nend", "    for i in reverse(x:y)\n        if i %\
    \ 2 == 0\n            return i\n        end\n    end\n    return -1\nend", " \
    \   for i in x:y\n        if i % 2 == 0\n            return i\n        end\n \
    \   end\n    return -1\nend", "    x = max(x, y)\n    y = min(x, y)\n    for i\
    \ = x:-1:y\n        if (i % 2 == 0)\n            return i\n        end\n    end\n\
    \    return -1\nend", "    # Find even numbers in the range\n    ivals = filter(even,\
    \ x:y)\n    if isempty(ivals)\n        return -1\n    else\n        return last(ivals)\n\
    \    end\nend", "    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend", "    if x % 2 == 0\n        num =\
    \ x\n    else\n        num = x+1\n    end\n    \n    if num <= y \n        return\
    \ num\n    else\n        return -1\n    end\nend", "    \n    # Write your function\
    \ here\n    \n    # For now, return a default number\n    return -1\nend", " \
    \   # YOUR CODE HERE\n    if x % 2 == 0\n        return maximum(x:2:y)\n    else\n\
    \        return maximum(x+1:2:y)\n    end\n    return -1\nend", "    if x < y\n\
    \        if iseven(x)\n            return x\n        elseif iseven(y)\n      \
    \      return y\n        else\n            return -1\n        end\n    elseif\
    \ y < x\n        if iseven(y)\n            return y\n        elseif iseven(x)\n\
    \            return x\n        else\n            return -1\n        end\n    else\n\
    \        if iseven(x)\n            return x\n        else\n            return\
    \ -1\n        end\n    end\nend", "    if (x < 0) || (y < 0)\n        return -1\n\
    \    end\n    return x < y ? (x % 2 == 0 ? x : x + 1) : (y % 2 == 0 ? y : y +\
    \ 1)\nend", "    min, max = minmax(x, y)\n    res = max", "    if x > y \n   \
    \     return -1\n    end\n    for num in y:-1:x\n        if num % 2 == 0\n   \
    \         return num\n        end\n    end\n    return -1\nend", "    if x%2==0\
    \ && y%2==0\n        return max(x,y)\n    elseif x%2==1 && y%2==1\n        return\
    \ -1\n    elseif x%2==0 && y%2==1\n        return y\n    else\n        return\
    \ x\n    end\nend", "    for i in x:y\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    # Swap x and y if they were\
    \ given in the wrong order.\n    if x > y\n        temp = x\n        x = y\n \
    \       y = temp\n    end\n    \n    # Go through the numbers starting with the\
    \ smallest and return the first\n    # even one.\n    for i in x:y\n        if\
    \ i % 2 == 0\n            return i\n        end\n    end\n    \n    # If no even\
    \ number was found, return -1.\n    return -1\nend", "    if x > y\n        return\
    \ -1\n    end\n    return find_even(x, y)\nend", "    if y < x\n        return\
    \ -1\n    end\n    if x%2 == 0\n        return x\n    else\n        return x+1\n\
    \    end\nend", "    for i in range(x, y+1)\n        if i % 2 == 0\n         \
    \   return i\n        end\n    end\n    return -1\nend", "    if (x%2 == 0) &&\
    \ (y%2 == 0) \n        return max(x, y)\n    elseif (x%2 == 1) && (y%2 == 1)\n\
    \        return -1\n    else\n        if x%2 == 0\n            return x\n    \
    \    else\n            return y\n        end\n    end\nend", "    max_even = -1\n\
    \    for i = x:y\n        if i % 2 == 0\n            max_even = i\n        end\n\
    \    end\n    return max_even\nend", "    if x > y\n        return -1\n    end\n\
    \    for i in x:y\n        if i % 2 == 0\n            return i\n        end\n\
    \    end\n    return -1\nend\n \nchoose_num(12, 15)\nchoose_num(13, 12)\n \n#\
    \ 7.\n\"\"\"This function takes two positive numbers x and y, and returns the\
    \ number \n    of even integers that are in the range [x, y] inclusive. If both\
    \ x and y \n    are even, count them too.", "    \n    maximum_even = 0 \n   \
    \ \n    for i in x:y\n        if i % 2 == 0\n            if i > maximum_even\n\
    \                maximum_even = i\n            end\n        end\n    end\n   \
    \ \n    if maximum_even == 0\n        return -1\n    else\n        return maximum_even\n\
    \    end\n    \nend", "    y_even = y % 2 == 0 ? y : y - 1\n    x_even = x % 2\
    \ == 0 ? x : x + 1\n    # If y is even and x is odd, then there's no even number\
    \ between them.\n    # If y is odd and x is even, then there's at least one even\
    \ number\n    # between them.\n    return (y_even - x_even) / 2 + 1 == 0 ? -1\
    \ : y_even\nend", "    if x > y\n        return -1\n    end\n    for i in x:y\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if y % 2 == 0\n        return y\n    elseif y - 1 > x\n     \
    \   return y - 1\n    else\n        return -1\n    end\nend", "    if x > y\n\
    \        return -1\n    end\n    if x % 2 == 0 \n        return x\n    else\n\
    \        if x+1 <= y\n            return x+1\n        else\n            return\
    \ -1\n        end\n    end\nend", "    if x % 2 == 0\n        return x\n    else\n\
    \        return x + 1\n    end\nend", "    start = ifelse(x % 2 == 0, x, x + 1)\n\
    \    for i in start:2:y\n        return i\n    end\n    return -1\nend", "   \
    \ if mod(x, 2) == 0\n        return x\n    else\n        if x == y\n         \
    \   return -1\n        else\n            return choose_num(x+1, y)\n        end\n\
    \    end\nend", "    if x < 0 || y < 0 \n        return -1\n    end\n    for i\
    \ in x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n\
    \    return -1\nend", "    if x > y\n        return -1\n    end\n    for i in\
    \ x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n   \
    \ return -1\nend", "    num = 0\n    if x % 2 == 0\n        num = x\n    else\n\
    \        num = x+1\n    end\n    for i = num:2:y\n        return i\n    end\n\
    \    return -1\nend", "    for num in range(x, y)\n        if num % 2 == 0\n \
    \           num_out = num\n            break\n        else\n            num_out\
    \ = -1\n        end\n    end\n    return num_out\nend", "    # If there is no\
    \ such number, return -1\n    if x >= y\n        return -1\n    end\n    \n  \
    \  # Check if x or y is even\n    if x % 2 == 0\n        return x\n    elseif\
    \ y % 2 == 0\n        return y\n    else\n        return -1\n    end\nend\n \n\
    @assert choose_num(12, 15) == 14\n@assert choose_num(13, 12) == -1\n ", "    n\
    \ = y\n    while n >= x\n        if iseven(n)\n            return n\n        end\n\
    \        n -= 1\n    end\n    return -1\nend\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)", "    if x > y\n        return -1\n    end\n    for n in (x:y)\n      \
    \  if n % 2 == 0\n            return n\n        end\n    end\n    return -1\n\
    end", "    if x > y \n        return -1\n    end\n    new_x = x\n    while new_x\
    \ <= y \n        if new_x % 2 == 0\n            return new_x\n        end\n  \
    \      new_x += 1\n    end\n    return -1\nend", "    if x > y\n        return\
    \ -1\n    end\n    if y % 2 == 0\n        return y\n    else\n        return y\
    \ - 1\n    end\nend", "    for i in x:y\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    if y % 2 == 0 \n        y\n\
    \    else\n        y - 1\n    end\nend", "    if x <= y\n        for i in x:y\n\
    \            if i % 2 == 0\n                return i\n            end\n      \
    \  end\n        return -1\n    else\n        return -1\n    end\nend", "    if\
    \ x < y\n        l::Int64 = x\n        h::Int64 = y\n    else\n        l::Int64\
    \ = y\n        h::Int64 = x\n    end\n    for i in l:h\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    new_list\
    \ = []\n    while x <= y\n        if x % 2 == 0\n            push!(new_list, x)\n\
    \        end\n        x = x + 1\n    end\n    if length(new_list) == 0\n     \
    \   return -1\n    else\n        return maximum(new_list)\n    end\nend", "  \
    \  c = -1\n    if x <= y\n        while x <= y\n            if x % 2 == 0\n  \
    \              c = x\n            end\n            x += 1\n        end\n    end\n\
    \    return c\nend", "    if x > y\n        return -1\n    end\n    r = 0\n  \
    \  for i = x:y\n        if i % 2 == 0\n            r = i\n        end\n    end\n\
    \    return r\nend", "    for k in x:y\n        # if k is even\n        if k %\
    \ 2 == 0\n            return k\n        else \n            return -1\n    end\n\
    end", "    if y < x \n        return -1\n    end\n    for i in range(x, y+1)\n\
    \        if mod(i, 2) == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    x=11\n    y=15\n    if x % 2 == 0:\n        return x\n    else:\n\
    \        return x+1\n    end\nend", "    if (x % 2 == 0 && x <= y)\n        return\
    \ x\n    elseif x+1 <= y\n        return choose_num(x+1, y)\n    else\n      \
    \  return -1\n    end\nend", "    if y < x\n        return -1\n    end", "   \
    \ for k in x:y\n        if k % 2 == 0\n            return k\n        end\n   \
    \ end\n    return -1\nend", "    \n    @assert y >= x  \"y should be greater than\
    \ or equal to x!\"\n    \n    for i = x:y\n        if i % 2 == 0\n           \
    \ return i\n        end\n    end\n    return -1\nend", "    # Note: x and y are\
    \ guaranteed to be positive integers.\n    for i = y:-1:x\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend\nchoose_num(12,\
    \ 15)", "    if x > y\n        return -1\n    end\n    for i in x:y\n        if\
    \ i % 2 == 0\n            return i\n        end\n    end\n    return -1\nend",
  "    if x%2 == 0\n        if x+2 <= y\n            return x+2\n        elseif x\
    \ <= y\n            return x\n        else\n            return -1\n        end\n\
    \    else\n        if x+1 <= y\n            return x+1\n        else\n       \
    \     return -1\n        end\n    end\nend", "    if x % 2 == 0\n        while\
    \ x <= y\n            return x\n            x += 2\n        end\n    else\n  \
    \      x += 1\n        while x <= y\n            return x\n            x += 2\n\
    \        end\n    end\n    return -1\nend", "    if x%2 == 0 \n        return\
    \ x\n    elseif y%2 == 0\n        return y\n    else\n        return -1\n    end\n\
    end", "    for i in x:y\n        if i % 2 == 0\n            return i\n       \
    \ end\n    end\n    return -1\nend", "    if x <= y && y % 2 == 0 \n        return\
    \ y\n    elseif x <= y && x % 2 == 0\n        return x\n    else\n        return\
    \ -1\n    end\nend", "    if x > y\n        return -1\n    end\n    for i in x:y\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    for i = x:y\n        if i % 2 == 0\n            return i\n  \
    \      end\n    end\n    return -1\nend", "    for i in x:y\n        if i % 2\
    \ == 0\n            return i\n        end\n    end\n    return -1\nend", "   \
    \ if x > y\n        return -1\n    end\n    # an alternative syntax:\n    # return\
    \ -1 if x > y end\n    # not really necessary in this case because -1 is returned\
    \ anyway", "    return -1\nend", "    nums = []\n    for i in (x..y)\n       \
    \ if i % 2 == 0\n            push!(nums, i)\n        end\n    end\n    if nums\
    \ == []\n        return -1\n    else\n        return maximum(nums)\n    end\n\
    end", "    # The function should return the largest even integer which is \n \
    \   # in the range [x, y]\n    \n    # YOUR CODE HERE\n    \nend", "    \n   \
    \ # The following for loop goes through the list of integers between x and y\n\
    \    # inclusive. For each integer it checks if it is even and greater than -1.\n\
    \    # If these two conditions are satisfied, the variable m is overwritten with\n\
    \    # the current integer value.\n    # If the integer fails one of the two conditions,\
    \ m is overwritten with -1.\n    # Finally, the function returns the value stored\
    \ in m.\n    m = -1\n    for i in x:y\n        if i % 2 == 0 && i > -1\n     \
    \       m = i\n        else\n            m = -1\n        end\n    end\n    return\
    \ m\nend", "    if x > y\n        return -1\n    end\n    (x%2 == 0 ? return x\
    \ : return x+1)\n    while x < y\n        x += 2\n    end\n    return x\nend",
  "    num::Int64 = -1\n    for i in x:y\n        if i % 2 == 0\n            num =\
    \ i\n        end\n    end\n    return num\nend", "    if x>y # if y>x then the\
    \ numbers will not be in range\n        return -1\n    end\n    if x%2==0 # if\
    \ x is even\n        return x\n    else\n        return x+1\n    end\nend", " \
    \   if x%2 == 0\n        while x <= y\n            return x\n            x +=\
    \ 2\n        end\n    else\n        x += 1\n        while x <= y\n           \
    \ return x\n            x += 2\n        end\n    end\n    return -1\nend", " \
    \   while x <= y\n        if x % 2 == 0\n            return x\n        end\n \
    \       x += 1\n    end\n    return -1\nend", "    if x < y\n        for i in\
    \ x:y\n            if i % 2 == 0\n                return i\n            end\n\
    \        end\n    else\n        for i in y:x\n            if i % 2 == 0\n    \
    \            return i\n            end\n        end\n    end\n    return -1\n\
    end", "    if x > y\n        return -1\n    end\n    return x + y - x % 2\nend",
  "    if x>y\n        return -1\n    end\n    if y%2 == 0\n        return y\n   \
    \ else\n        return y-1\n    end\nend", "    num = 0 \n    for i in range(x,\
    \ y)\n        if i % 2 == 0\n            num = i\n        end\n    end\n    if\
    \ num != 0\n        return num\n    else\n        return -1\n    end\nend", " \
    \   if x > y\n        return -1\n    end\n    for i in x:y\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    if\
    \ x%2 != 0\n        if y%2 != 0\n            if x < y\n                return\
    \ y - 1\n            else\n                return x - 1\n            end\n   \
    \     else\n            if x < y\n                return y\n            else\n\
    \                return x\n            end\n        end\n    else\n        if\
    \ y%2 != 0\n            if x < y\n                return x\n            else\n\
    \                return y\n            end\n        else\n            if x < y\n\
    \                return y\n            else\n                return x\n      \
    \      end\n        end\n    end\nend", "    n = -1\n    for i in x:y\n      \
    \  if i % 2 == 0\n            n = i\n        end\n    end\n    return n\nend",
  "    \n    if x>y\n        return -1\n    end\n    \n    if x % 2 == 0\n       \
    \ return x\n    else\n        return x+1\n    end\nend", "    return -1\nend",
  "    # Write your code here.\nend", "    if x > y return -1 end\n    if x % 2 ==\
    \ 0\n        if y % 2 == 0 return y end\n        return y - 1\n    else\n    \
    \    if y % 2 == 0 return y - 1 end\n        return y - 2\n    end\nend", "  \
    \  x, y = sort(x, y)\n    if x % 2 == 0\n        x\n    else\n        x + 1\n\
    \    end\nend", "    \n    if x > y \n        return -1\n    end\n    \n    if\
    \ mod(x, 2) == 0\n        return x\n    else\n        if x+1 <= y\n          \
    \  return x+1\n        else\n            return -1\n        end\n    end\n   \
    \ \nend", "    return if y % 2 == 0 ? y : y - 1\nend", "    for i in x:y\n   \
    \     if i % 2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    \n    # Initialize the biggest even number to -1\n    largest_even_num\
    \ = -1\n    \n    # Because we only care about the even number, we skip all the\
    \ odd\n    # numbers and consider only the even numbers\n    for i in x:2:y\n\
    \        if largest_even_num < i\n            largest_even_num = i\n        end\n\
    \    end\n    \n    return largest_even_num\nend", "    while x <= y\n       \
    \ if x % 2 == 0\n            return x\n        end\n        x += 1\n    end\n\
    \    return -1\nend", "    if x > y\n        return -1\n    end\n    while x <=\
    \ y\n        if x % 2 == 0\n            return x\n        end\n        x += 1\n\
    \    end\n    return -1\nend", "    \n    # generate a range with the passed in\
    \ parameters and reverse it\n    range = collect(x:y)\n    range = reverse(range)\n\
    \    \n    # loop through the range until the first even number is found\n   \
    \ for num in range\n        if (num % 2 == 0)\n            return num\n      \
    \  end\n    end\n    \n    # if all the numbers are odd, then return -1\n    return\
    \ -1\nend", '    big = -1 # Intializing big to -1.', "    if x>y || !(x>0 && y>0)\
    \ \n        return -1\n    end\n    for i in x:y\n        if i%2 == 0\n      \
    \      return i\n        end\n    end\n    return -1\nend", "    if x % 2 == 0\n\
    \        return x\n    elseif x+1 == y \n        return -1\n    else \n      \
    \  choose_num(x+1, y)\n    end\nend", "    if (x>y)\n        return -1\n    end\n\
    \    for i = x:y\n        if (i%2==0)\n            return i\n        end\n   \
    \ end\n    return -1\nend", "    for i in range(y, x-1, -1)\n        if i % 2\
    \ == 0\n            return i\n        end\n    end\n    return -1\nend", "   \
    \ #your code here\n    return\nend", "    if x >= y \n        return -1\n    end\n\
    \    result = -1\n    for i in x:y\n        if i % 2 == 0\n            result\
    \ = i\n        end\n    end\n    return result\nend", "    @assert x > 0\n   \
    \ @assert y > 0\n    if x%2 != 0\n        x = x + 1\n    end\n    while x <= y\n\
    \        if x%2 == 0\n            return x\n        end\n        x = x + 1\n \
    \   end\n    return -1\nend", "    if x % 2 == 0 && y % 2 == 0\n        if x >\
    \ y\n            return choose_num(y, x)\n        else\n            return x\n\
    \        end\n    elseif x % 2 == 1 && y % 2 == 1\n        if x > y\n        \
    \    return choose_num(y, x)\n        else\n            return choose_num(x+1,\
    \ y)\n        end\n    elseif x % 2 == 0 && y % 2 == 1\n        if x > y\n   \
    \         return choose_num(y, x)\n        else\n            return x\n      \
    \  end\n    elseif x % 2 == 1 && y % 2 == 0\n        if x > y\n            return\
    \ choose_num(y, x)\n        else\n            return choose_num(x+1, y)\n    \
    \    end\n    end\nend", "    if x <= y\n        for i in x:y\n            if\
    \ i % 2 == 0\n                return i\n            end\n        end\n       \
    \ return -1\n    else\n        for i in y:x\n            if i % 2 == 0\n     \
    \           return i\n            end\n        end\n        return -1\n    end\n\
    end", "    # YOUR CODE HERE\n    if x%2 == 0 \n        return x\n    else \n \
    \       return x+1\n    end", "    # TODO:\n    # YOUR CODE HERE\n    # Remember\
    \ to return a value\n    return -1\nend\n```", "    \n    for i in x:y\n     \
    \   if i % 2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    if x % 2 == 0 # even\n        return x\n    elseif y % 2 == 0 # even\n\
    \        return y\n    else\n        return -1\n    end\nend", "    return x <=\
    \ y ? choose_num(x, y, y) : -1\nend", "    for i in x:y\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    if x <=\
    \ y\n        if x % 2 == 0\n            return x\n        else\n            return\
    \ x + 1\n        end\n    else\n        return -1\n    end\nend", "    \n    if\
    \ x > y\n        return -1\n    end\n    \n    if x % 2 == 0\n        return x\n\
    \    else\n        return x + 1\n    end\nend", "    return x\nend", "    \n \
    \   if x <= y \n        for i in x:y\n            if i % 2 == 0\n            \
    \    return i\n            end\n        end\n    else \n        return -1\n  \
    \  end\n    \nend", "    maximum([i for i in (x:y) if i % 2 == 0])\nend", "  \
    \  for i in (x:y)\n        if i % 2 == 0\n            println(i)\n           \
    \ return(i)\n        end\n    end\n    return(-1)\nend", "    for i = y:-1:x\n\
    \        if mod(i, 2) == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if x <= y\n        for i = x:y\n            if i % 2 == 0\n \
    \               return i\n            end\n        end\n        return -1\n  \
    \  else\n        return -1\n    end\nend", "    if x%2==0\n        return x\n\
    \    else\n        return x+1\n    end\nend", "    if x < y\n        println(\"\
    Please try again with 'x' being smaller than 'y'.\")\n    else\n        for i\
    \ in range(x, y)\n            if i % 2 == 0\n                println(i)\n    \
    \        else\n                println(\"-1\")\n            end\n        end\n\
    \    end\nend", "    if x%2 == 0\n        if y%2 == 0\n            if x>y\n  \
    \              return x\n            else\n                return y\n        \
    \    end\n        else\n            if x>y-1\n                return x\n     \
    \       else\n                return y-1\n            end\n        end\n    else\n\
    \        if y%2 == 0\n            if x>y-1\n                return x\n       \
    \     else\n                return y-1\n            end\n        else\n      \
    \      if x>y-2\n                return x-1\n            else\n              \
    \  return y-2\n            end\n        end\n    end\nend", "    i = x\n    while\
    \ i < y\n        i += 1\n        if i % 2 == 0\n            return i\n       \
    \ end\n    end\n    return -1\nend", "    # even_nums = [even_num for even_num\
    \ in range(x, y+1) if even_num % 2 == 0]\n    even_nums = filter(x -> x % 2 ==\
    \ 0, collect(x:y))\n    if isempty(even_nums)\n        return -1\n    else\n \
    \       return maximum(even_nums)\n    end\nend", "    even_numbers = mod.(x:y,\
    \ 2) .== 0\n    if all(even_numbers)\n        return y\n    elseif any(even_numbers)\n\
    \        return maximum(x:y[even_numbers])\n    else\n        return -1\n    end\n\
    end", "    r = -1\n    for i in x:y\n        if i % 2 == 0\n            r = i\n\
    \        end\n    end\n    return r\nend\n \nprint(choose_num(12, 15))\nprint(choose_num(13,\
    \ 12))\nprintln(choose_num(12, 14))\nprintln(choose_num(13, 13))\nprintln(choose_num(4,\
    \ 5))\nprintln(choose_num(5, 5))", "    if x % 2 == 0 && y % 2 == 0\n        return\
    \ max(x, y)\n    elseif x % 2 == 1 && y % 2 == 1\n        return -1\n    elseif\
    \ x % 2 == 0 && y % 2 == 1\n        return x\n    else\n        return y\n   \
    \ end\nend", "    for n in x:y\n        if n % 2 == 0\n            return n\n\
    \        end\n    end\n    return -1\nend", "    if x > y \n        return -1\n\
    \    end\n    if x % 2 == 0 \n        return x\n    end\n    return x + 1\nend",
  "    if x > y\n        return -1\n    end\n    for i in x:y\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    if\
    \ x > y || x < 0 || y < 0\n        return -1\n    end\n    if x < y\n        if\
    \ x % 2 == 0\n            return x\n        else\n            return x + 1\n \
    \       end\n    elseif x > y\n        if y % 2 == 0\n            return y\n \
    \       else\n            return y + 1\n        end\n    else\n        if x %\
    \ 2 == 0\n            return x\n        else\n            return -1\n        end\n\
    \    end\nend", "    if x % 2 == 0 && y % 2 == 0\n        return maximum(x, y)\n\
    \    elseif x % 2 == 1 && y % 2 == 1\n        return -1\n    else\n        return\
    \ (min(x, y)+1)\n    end\nend", "    for i in x:y\n        if i % 2 == 0\n   \
    \         return i\n        end\n    end\n    return -1\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_118_get_closest_vowel
language: jl
results:
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    n\
    \ = length(word)\n    for i in n:-1:2\n        if word[i] in vowels && !(word[i-1]\
    \ in vowels) && !(word[i+1] in vowels)\n            return word[i]\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprjnlxno3.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmprjnlxno3.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprjnlxno3.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprjnlxno3.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmprjnlxno3.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmprjnlxno3.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprjnlxno3.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \"\"\"\n    This function is used\
    \ to get the closest vowel in a word.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp69zj0501.jl:1\nin expression starting at /tmp/tmp69zj0501.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    i, n = length(word), length(word)\
    \ - 1\n    vowels = \"aeiouAEIOU\"\n    while n > 0\n        if word[n] in vowels\
    \ && word[n-1] in vowels\n            n -= 1\n        elseif word[n] in vowels\n\
    \            return word[n]\n        else\n            n -= 1\n        end\n \
    \   end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphcdtjiys.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmphcdtjiys.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphcdtjiys.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphcdtjiys.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmphcdtjiys.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmphcdtjiys.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphcdtjiys.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = (\"a\", \"e\", \"i\"\
    , \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels_pos = Dict()\n\
    \    for (i,x) in enumerate(word)\n        if x in vowels\n            vowels_pos[i]\
    \ = x\n        end\n    end\n    for i in 1:length(word)\n        if (word[end-i]\
    \ in vowels) && (word[end-i-1] in vowels)\n            return \"\"\n        elseif\
    \ (word[end-i] in vowels) && !(word[end-i-1] in vowels)\n            return vowels_pos[end-i]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfgob84z8.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpfgob84z8.jl:24\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpfgob84z8.jl:37 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpfgob84z8.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpfgob84z8.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpfgob84z8.jl:24\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpfgob84z8.jl:38 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpfgob84z8.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpfgob84z8.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i in [1:length(word)]\n        if word[end-i] in vowels\
    \ && word[end-i+1] in vowels\n            return word[end-i+1]\n        end\n\
    \    end\n    return \"\"\nend\n    \nprintln(get_closest_vowel(\"yogurt\"))\n\
    println(get_closest_vowel(\"FULL\"))\nprintln(get_closest_vowel(\"quick\"))\n\
    println(get_closest_vowel(\"ab\"))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    for x in reversed(word)\n        if x in vowels\n\
    \            return x\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9vj41pts.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ reversed not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp9vj41pts.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9vj41pts.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9vj41pts.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp9vj41pts.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: reversed not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp9vj41pts.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9vj41pts.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9vj41pts.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp9vj41pts.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: reversed not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp9vj41pts.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9vj41pts.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9vj41pts.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp9vj41pts.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: reversed not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp9vj41pts.jl:1"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for letter in word\n        if letter in vowels\n       \
    \     # check if it's adjacent\n            if letter == word[end]\n         \
    \       continue\n            end_index = word.index(letter) + 1\n           \
    \ if end_index == length(word)\n                continue\n            end_letter\
    \ = word[end_index]\n            if !(end_letter in vowels)\n                return\
    \ letter\n            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpblu1h06i.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpblu1h06i.jl:1\n\
    in expression starting at /tmp/tmpblu1h06i.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n  word = lowercase(word)\n  #println(word)\n\
    \  c1 = false\n  c2 = false\n  ctr = 0\n  curr = \" \"\n  #println(word[end])\n\
    \  for i = length(word):-1:1\n    if isvowel(word[i])\n      c1 = true\n     \
    \ curr = word[i]\n    else\n      c2 = true\n    end\n    if c1 && c2\n      break\n\
    \    end\n  end\n  return curr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmw7_334l.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpmw7_334l.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmw7_334l.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmw7_334l.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpmw7_334l.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmw7_334l.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmw7_334l.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmw7_334l.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpmw7_334l.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmw7_334l.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmw7_334l.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmw7_334l.jl:40\\ntest set:\
    \ Error During Test at /tmp/tmpmw7_334l.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmw7_334l.jl:24\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    res\
    \ = \"\"\n    for (i, letter) in enumerate(word)\n        if letter in vowels\n\
    \            if i != length(word)\n                if word[i+1] \u2209 vowels\n\
    \                    res = letter\n                    break\n               \
    \ end\n            end\n        end\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5dslm2zz.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp5dslm2zz.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5dslm2zz.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5dslm2zz.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if search(r\"\\A[^aeiou]\", lowercase(word))\
    \ == nothing\n        return \"\"\n    end\n    search(r\"[^aeiou]([aeiou]+)[^aeiou]\"\
    , lowercase(word))\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkvro2jqx.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpkvro2jqx.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkvro2jqx.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkvro2jqx.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkvro2jqx.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpkvro2jqx.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkvro2jqx.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkvro2jqx.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkvro2jqx.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpkvro2jqx.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkvro2jqx.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkvro2jqx.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkvro2jqx.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpkvro2jqx.jl:16\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = findall(r\"(?<![aeiouAEIOU])([aeiouAEIOU])(?![aeiouAEIOU])\"\
    , word);\n    if length(vowels) == 0\n        return \"\"\n    else\n        return\
    \ vowels[end][1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkfns1_4y.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpkfns1_4y.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkfns1_4y.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkfns1_4y.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    len = length(word)\n    vowels\
    \ = Set(\"aeiouAEIOU\")\n    for i in range(len-1, -1, -1)\n        if in(word[i],\
    \ vowels) && (i+1 <= len-1) && (!in(word[i+1], vowels))\n            return word[i]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg24j1j2a.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  ArgumentError:\
    \ range(5.0, stop=-1.0, length=-1): negative length\\n  Stacktrace:\\n    [1]\
    \ _linspace1(#unused#::Type{Float64}, start::Float64, stop::Float64, len::Int64)\\\
    n      @ Base ./twiceprecision.jl:724\\n    [2] _linspace(#unused#::Type{Float64},\
    \ start_n::Int64, stop_n::Int64, len::Int64, den::Int64)\\n      @ Base ./twiceprecision.jl:706\\\
    n    [3] _linspace\\n      @ ./twiceprecision.jl:703 [inlined]\\n    [4] range_start_stop_length\\\
    n      @ ./range.jl:529 [inlined]\\n    [5] _range\\n      @ ./range.jl:128 [inlined]\\\
    n    [6] range\\n      @ ./range.jl:112 [inlined]\\n    [7] get_closest_vowel(word::String)\\\
    n      @ Main /tmp/tmpg24j1j2a.jl:18\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpg24j1j2a.jl:30 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpg24j1j2a.jl:29\\ntest\
    \ set: Error During Test at /tmp/tmpg24j1j2a.jl:31\\n  Test threw exception\\\
    n  Expression: candidate(\"full\") == \"u\"\\n  ArgumentError: range(3.0, stop=-1.0,\
    \ length=-1): negative length\\n  Stacktrace:\\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\\n      @ Base ./twiceprecision.jl:724\\\
    n    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\\n      @ Base ./twiceprecision.jl:706\\n    [3] _linspace\\n  \
    \    @ ./twiceprecision.jl:703 [inlined]\\n    [4] range_start_stop_length\\n\
    \      @ ./range.jl:529 [inlined]\\n    [5] _range\\n      @ ./range.jl:128 [inlined]\\\
    n    [6] range\\n      @ ./range.jl:112 [inlined]\\n    [7] get_closest_vowel(word::String)\\\
    n      @ Main /tmp/tmpg24j1j2a.jl:18\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    str\
    \ = \"\"\n    for i = 1:length(word)\n        if word[i] in vowels && word[i-1]\
    \ in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\" && word[i+1] in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n            str = word[i]\n        end\n    end\n    return str\nend\n    \n\
    \    \n    \n    \"\"\"\n    In this Challenge, write a program that takes in\
    \ two inputs: a word and a sentence.\n    Your program should return \"Yes\" if\
    \ the word can be formed by using the letters\n    from the sentence and otherwise,\
    \ should return \"No\".\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfsz5sxmr.jl:28\nin expression starting at\
    \ /tmp/tmpfsz5sxmr.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    if length(word) == 1 \n\
    \        return \"\"\n    end\n    \n    word_ = reverse(word)\n    res = \"\"\
    \n    flag = 0\n    # get the first vowel\n    for i = 1:length(word_)\n     \
    \   if !(flag == 0 && (isalpha(word_[i]) && isvowel(word_[i])))\n            flag\
    \ = 1\n            res = res * word_[i]\n        end\n    end\n    \n    res =\
    \ reverse(res)\n    # check if there is a vowel after the first vowel\n    for\
    \ i = 1:length(res)\n        if isalpha(res[i]) && isvowel(res[i])\n         \
    \   return res[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn50_f0t9.jl:46\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpn50_f0t9.jl:26\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn50_f0t9.jl:46 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn50_f0t9.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpn50_f0t9.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpn50_f0t9.jl:26\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn50_f0t9.jl:47 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn50_f0t9.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpn50_f0t9.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpn50_f0t9.jl:26\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn50_f0t9.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn50_f0t9.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpn50_f0t9.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpn50_f0t9.jl:26\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    #\u0412\u0430\u0448 \u043A\u043E\
    \u0434\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjnbu40ih.jl:24\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjnbu40ih.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjnbu40ih.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjnbu40ih.jl:25\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjnbu40ih.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjnbu40ih.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjnbu40ih.jl:29\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjnbu40ih.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjnbu40ih.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjnbu40ih.jl:30\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjnbu40ih.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjnbu40ih.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjnbu40ih.jl:34\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnbu40ih.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    position_vowel = 0\n    n = length(word)\n\
    \    for i in 1:n-1\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u'\n            if (word[i-1] != 'a' &&\
    \ word[i-1] != 'e' && word[i-1] != 'i' && word[i-1] != 'o' && word[i-1] != 'u')\
    \ &&\n            (word[i+1] != 'a' && word[i+1] != 'e' && word[i+1] != 'i' &&\
    \ word[i+1] != 'o' && word[i+1] != 'u')\n                position_vowel = i\n\
    \            end\n        end\n    end\n    if position_vowel == 0\n        return\
    \ \"\"\n    else\n        return word[position_vowel]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplz_i4_qm.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmplz_i4_qm.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplz_i4_qm.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplz_i4_qm.jl:36\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i in 1:length(word)\n        if (word[end-i] in vowels)\
    \ && (word[end-i-1] \u2209 vowels) && (word[end-i+1] \u2209 vowels)\n        \
    \    return word[end-i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmivbovux.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmivbovux.jl:18\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpmivbovux.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpmivbovux.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpmivbovux.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpmivbovux.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpmivbovux.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpmivbovux.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpmivbovux.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    l = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    for i in 1:length(word)\n        for j in l\n            if (j ==\
    \ word[end-i+1]) & (j != word[end-i]) & (j != word[end-i+2])\n               \
    \ return j\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsciw_vyp.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [7]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpsciw_vyp.jl:19\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpsciw_vyp.jl:31 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpsciw_vyp.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpsciw_vyp.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [5]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpsciw_vyp.jl:19\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpsciw_vyp.jl:32 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpsciw_vyp.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpsciw_vyp.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [5]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    l = length(word)\n    cons = collect(Set([\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]))\n    vowels = collect(Set([\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"y\"]))\n    for i = l:-1:1\n        if word[i]\
    \ in vowels\n            for j = i-1:-1:1\n                if word[j] in cons\n\
    \                    return word[i]\n                end\n            end\n  \
    \      end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpioshd6l9.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpioshd6l9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpioshd6l9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpioshd6l9.jl:36\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpioshd6l9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpioshd6l9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpioshd6l9.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpioshd6l9.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpioshd6l9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpioshd6l9.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpioshd6l9.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpioshd6l9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpioshd6l9.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpioshd6l9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if word == \"\"\n        return\
    \ \"\"\n    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2jvjtmov.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2jvjtmov.jl:1\n\
    in expression starting at /tmp/tmp2jvjtmov.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOUaeiou\"\n    consonants\
    \ = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n    for i in length(word)::Int\n\
    \        for j in reverse(1:i)::Reverse{Int}\n            if word[j] in consonants\
    \ && word[j-1] in consonants\n                for k in j:i\n                 \
    \   if word[k] in vowels\n                        return word[k]\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4atmkspx.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ Reverse not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp4atmkspx.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4atmkspx.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4atmkspx.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp4atmkspx.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: Reverse not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp4atmkspx.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4atmkspx.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4atmkspx.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp4atmkspx.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: Reverse not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp4atmkspx.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4atmkspx.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4atmkspx.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp4atmkspx.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: Reverse not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp4atmkspx.jl:19\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = Set(\"aeiouAEIOU\")\n\
    \    idx = word |> String.reverse |> String.rindex(\"y\", pos = size(word))\n\
    \    if idx == nothing\n        return \"\"\n    end\n    for i in idx:end \n\
    \        if i in vowels && !(i-1 in vowels) && !(i+1 in vowels)\n            return\
    \ string(i)\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"idx:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz9yp0an8.jl:21\nin expression\
    \ starting at /tmp/tmpz9yp0an8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOUaeiou\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    while (word != \"\")\n\
    \        if (!(vowels in word[end])) || (!(consonants in word[end-1]))\n     \
    \       word = word[1:end-1]\n        else\n            return word[end]\n   \
    \     end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr57drgx4.jl:32\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr57drgx4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr57drgx4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr57drgx4.jl:33\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr57drgx4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr57drgx4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr57drgx4.jl:37\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr57drgx4.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr57drgx4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr57drgx4.jl:38\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr57drgx4.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr57drgx4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr57drgx4.jl:42\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr57drgx4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # make a dict of vowels \n   \
    \ vowels = Dict(\"a\" => 1, \"e\" => 1, \"i\" => 1, \"o\" => 1, \"u\" => 1, \"\
    y\" => 1)\n    # define the variables to store the index of the vowels and consonants\
    \ \n    vowel = 0\n    consonant = 0\n    # iterate over the string\n    for i\
    \ in reverse(1:length(word))\n        # if the current letter is not in the dict\
    \ of vowels \n        if !(get(vowels, lowercase(word[i]), 0) > 0)\n         \
    \   # this the first consonant we are finding \n            if consonant == 0\n\
    \                consonant = i\n            # this is the second consonant we\
    \ are finding \n            else\n                # we have to return the nearest\
    \ vowel to the second consonant\n                if vowel == 0\n             \
    \       return \"\"\n                else\n                    return word[vowel]\n\
    \                end\n            end\n        # if the current letter is in the\
    \ dict of vowels \n        else\n            vowel = i\n        end\n    end\n\
    \    # we have not found any vowel\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw0xhh_96.jl:50\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0xhh_96.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0xhh_96.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpw0xhh_96.jl:51\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0xhh_96.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0xhh_96.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpw0xhh_96.jl:55\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0xhh_96.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0xhh_96.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpw0xhh_96.jl:56\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0xhh_96.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0xhh_96.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpw0xhh_96.jl:60\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw0xhh_96.jl:47\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    count\
    \ = 0\n    found = 0\n    min_dist = Inf\n    min_count = 0\n    for i in 1:length(word)\n\
    \        if( word[i] in vowels )\n            found = 1\n            count = i\n\
    \            break\n        end\n    end\n    for i in 1:length(word)\n      \
    \  if( word[length(word)-i+1] in vowels )\n            if( (length(word)-i+1 -\
    \ count) < min_dist && found == 1)\n                min_dist = length(word)-i+1\
    \ - count\n                min_count = length(word)-i+1\n            end\n   \
    \     end\n    end\n    if(found == 0)\n        return \"\"\n    else\n      \
    \  return word[min_count]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpswe14iws.jl:47\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpswe14iws.jl:39\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpswe14iws.jl:47 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpswe14iws.jl:46\\ntest set:\
    \ Error During Test at /tmp/tmpswe14iws.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpswe14iws.jl:39\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpswe14iws.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOU\"\n    if length(word)\
    \ < 3 \n        return \"\"\n    end \n    for i = length(word):-1:3\n       \
    \ if word[i] in vowels\n            if word[i-1] in vowels\n                continue\n\
    \            elseif word[i-2] in vowels\n                continue\n          \
    \  else \n                return word[i]\n            end\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5akpvjb.jl:38\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5akpvjb.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5akpvjb.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpn5akpvjb.jl:39\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5akpvjb.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5akpvjb.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpn5akpvjb.jl:43\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5akpvjb.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5akpvjb.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpn5akpvjb.jl:44\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5akpvjb.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5akpvjb.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpn5akpvjb.jl:48\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5akpvjb.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    result = \"\"\n    i = length(word)\n\
    \    while i > 1\n        if !isvowel(word[i]) && isvowel(word[i-1])\n       \
    \     result = word[i-1]\n            break\n        end\n        i -= 1\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6m3tvf76.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp6m3tvf76.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6m3tvf76.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6m3tvf76.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp6m3tvf76.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp6m3tvf76.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6m3tvf76.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6m3tvf76.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp6m3tvf76.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp6m3tvf76.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6m3tvf76.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6m3tvf76.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp6m3tvf76.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp6m3tvf76.jl:19\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) == 1\n       \
    \ return \"\"\n    end\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    for letter in vowels\n        start = 0\n        if letter in consonants\n\
    \            continue\n        end\n        first_letter = false\n        last_letter\
    \ = false\n        while start <= length(word)\n            if first_letter &&\
    \ last_letter\n                break\n            end\n            if word[start]\
    \ == letter\n                if start == 1\n                    first_letter =\
    \ true\n                end\n                if start == length(word)\n      \
    \              last_letter = true\n                end\n                if first_letter\
    \ && last_letter\n                    break\n                end\n           \
    \     if word[start + 1] in consonants\n                    return letter\n  \
    \              end\n            end\n            start += 1\n        end\n   \
    \ end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2i9c5d3i.jl:56\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp2i9c5d3i.jl:32\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp2i9c5d3i.jl:56 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp2i9c5d3i.jl:55\\ntest set:\
    \ Error During Test at /tmp/tmp2i9c5d3i.jl:57\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp2i9c5d3i.jl:32\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp2i9c5d3i.jl:57 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp2i9c5d3i.jl:55\\ntest set:\
    \ Error During Test at /tmp/tmp2i9c5d3i.jl:58\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # YOUR CODE GOES HERE\n    for\
    \ i in eachindex(word)\n        if in(word[i], \"aeiou\")\n            # If the\
    \ current index contains a vowel and the character before the current index is\
    \ consonant and the character after the current index is consonant\n         \
    \   if in(word[i-1], \"bcdfghjklmnpqrstvwxyz\") && in(word[i+1], \"bcdfghjklmnpqrstvwxyz\"\
    )\n                return word[i]\n            end\n        end\n    end\n   \
    \ return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptaawh05t.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmptaawh05t.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptaawh05t.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptaawh05t.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmptaawh05t.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmptaawh05t.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptaawh05t.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    n = length(word)\n    for i in 0:n-1\n        if word[end-i]\
    \ in vowels\n            return word[end-i]\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpadp5znqf.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadp5znqf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadp5znqf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpadp5znqf.jl:31\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadp5znqf.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadp5znqf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpadp5znqf.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadp5znqf.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadp5znqf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpadp5znqf.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadp5znqf.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadp5znqf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpadp5znqf.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpadp5znqf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = Set(\"aeiouAEIOU\")\n\
    \    for i in reverse(eachindex(word))\n        letter = word[i]\n        if letter\
    \ in vowels\n            if i == 1\n                return letter\n          \
    \  end\n            if i == length(word)\n                if word[i-1] in vowels\n\
    \                    return \"\"\n                else\n                    return\
    \ letter\n                end\n            end\n            if !(word[i-1] in\
    \ vowels) && !(word[i+1] in vowels)\n                return letter\n         \
    \   end\n        end\n    end\n    return \"\"\nend\n@test get_closest_vowel(\"\
    yogurt\") == \"u\"\n@test get_closest_vowel(\"FULL\") == \"U\"\n@test get_closest_vowel(\"\
    quick\") == \"\"\n@test get_closest_vowel(\"ab\") == \"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmp4e2ekut8.jl:37\nin expression starting at /tmp/tmp4e2ekut8.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    index_first_vowel = findfirst(isequal('a'),\
    \ word) # find the first vowel index\n    index_last_vowel = findlast(isequal('a'),\
    \ word) # find the last vowel index\n    \n    if (index_first_vowel == index_last_vowel)\
    \ # if there is no vowels, return empty string\n        return \"\"\n    end\n\
    \    \n    # if the first vowel is in the beginning, then there is no consonant\
    \ before\n    if (index_first_vowel == 1)\n        return word[index_first_vowel]\n\
    \    end\n    \n    # if the last vowel is in the end, then there is no consonant\
    \ after\n    if (index_last_vowel == length(word))\n        return word[index_last_vowel]\n\
    \    end\n    \n    # in the middle of the word, check if there is consonant before\
    \ and after\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in index_first_vowel:index_last_vowel\n\
    \        if (in(word[i-1], vowels) == false) && (in(word[i+1], vowels) == false)\n\
    \            return word[i]\n        end\n    end\n    \n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbjuglzap.jl:49\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjuglzap.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjuglzap.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpbjuglzap.jl:50\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjuglzap.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjuglzap.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpbjuglzap.jl:54\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjuglzap.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjuglzap.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpbjuglzap.jl:55\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjuglzap.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjuglzap.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpbjuglzap.jl:59\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbjuglzap.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # if only one char, return \"\"\
    \n    if length(word) == 1 \n        return \"\"\n    end\n    # find the closest\
    \ vowel of the last letter\n    for i in 0:length(word)-1\n        if word[end-i]\
    \ in \"AEIOUaeiou\"\n            return word[end-i]\n        end\n    end\n  \
    \  # if no vowel in the word, return \"\"\n    return \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc1pr9iwg.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpc1pr9iwg.jl:23\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpc1pr9iwg.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc1pr9iwg.jl:33\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    temp=[]\n    for i in range(1,length(word)-1)\n\
    \        if (word[i] in [\"a\",\"e\",\"i\",\"o\",\"u\"]) && (word[i-1] not in\
    \ [\"a\",\"e\",\"i\",\"o\",\"u\"]) && (word[i+1] not in [\"a\",\"e\",\"i\",\"\
    o\",\"u\"])\n            push!(temp,word[i])\n        end\n    end\n    if length(temp)>0\n\
    \        return temp[end]\n    else\n        return \"\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp63pa9k7h.jl:18\nin expression starting at\
    \ /tmp/tmp63pa9k7h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    closest_vowel = \"\"\n    for ch in vowels\n        if word\
    \ contains ch\n            closest_vowel = ch\n            break\n        end\n\
    \    end\n    if closest_vowel == \"\"\n        return \"\"\n    end\n    for\
    \ i in 2:length(word)\n        if word[end-i] in vowels\n            if word[end-i+1]\
    \ in vowels\n                return \"\"\n            else\n                return\
    \ word[end-i]\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"ch\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpseazkerl.jl:19\nin expression starting at /tmp/tmpseazkerl.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    for i in size(word, 1):\n        if word[i] in\
    \ vowels\n            if word[i-1] in consonants && word[i+1] in consonants\n\
    \                return word[i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdvfyqaix.jl:19\nin expression starting at\
    \ /tmp/tmpdvfyqaix.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    offset = 0\n    for i in 1:length(word)\n        if any(v\
    \ == word[end-i] for v in vowels)\n            offset = i\n            break\n\
    \        end\n    end\n    if offset == 0\n        return \"\"\n    end\n    for\
    \ i in 1:offset\n        if any(v == word[end-i] for v in vowels) && !any(v ==\
    \ word[end-i-1] for v in vowels)\n            return word[end-i]\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp31obuh1b.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n    [1] checkbounds\\\
    n      @ ./strings/basic.jl:216 [inlined]\\n    [2] codeunit\\n      @ ./strings/string.jl:102\
    \ [inlined]\\n    [3] getindex\\n      @ ./strings/string.jl:223 [inlined]\\n\
    \    [4] (::var\"#1#4\"{String, Int64})(v::String)\\n      @ Main ./none:0\\n\
    \    [5] iterate\\n      @ ./generator.jl:47 [inlined]\\n    [6] _any(f::typeof(identity),\
    \ itr::Base.Generator{Vector{String}, var\"#1#4\"{String, Int64}}, #unused#::Colon)\\\
    n      @ Base ./reduce.jl:1109\\n    [7] any\\n      @ ./reduce.jl:1105 [inlined]\\\
    n    [8] any\\n      @ ./reduce.jl:1031 [inlined]\\n    [9] get_closest_vowel(word::String)\\\
    n      @ Main /tmp/tmp31obuh1b.jl:19\\n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmp31obuh1b.jl:39 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmp31obuh1b.jl:38\\ntest\
    \ set: Error During Test at /tmp/tmp31obuh1b.jl:40\\n  Test threw exception\\\
    n  Expression: candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access\
    \ 4-codeunit String at index [0]\\n  Stacktrace:\\n    [1] checkbounds\\n    \
    \  @ ./strings/basic.jl:216 [inlined]\\n    [2] codeunit\\n      @ ./strings/string.jl:102\
    \ [inlined]\\n    [3] getindex\\n      @ ./strings/string.jl:223 [inlined]\\n\
    \    [4] (::var\"#1#4\"{String, Int64})(v::String)\\n      @ Main ./none:0\\n\
    \    [5] iterate\\n      @ ./generator.jl:47 [inlined]\\n    [6] _any(f::typeof(identity),\
    \ itr::Base.Generator{Vector{String}, var\"#1#4\"{String, Int64}}, #unused#::Colon)\\\
    n      @ Base ./reduce.jl:1109\\n    [7] any\\n      @ ./reduce.jl:1105 [inlined]\\\
    n    [8] any\\n      @ ./reduce.jl:1031 [inlined]\\n    [9] get_closest_vowel(word::String)\\\
    n      @ Main /tmp/tmp31obuh1b.jl:19\\n   [10] macro expansi"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if word == \"\"\n        return\
    \ \"\"\n    end\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    v = []\n\
    \    for i = 1:length(word)\n        if word[end-i+1] in vowels\n            if\
    \ i > 1 && word[end-i] \u2209 vowels\n                v = push!(v, word[end-i+1])\n\
    \            end\n        end\n    end\n    return v[1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp9urf2ye.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 0-element Vector{Any} at index [1]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] get_closest_vowel(word::String)\\n \
    \    @ Main /tmp/tmpp9urf2ye.jl:28\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpp9urf2ye.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpp9urf2ye.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpp9urf2ye.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 0-element Vector{Any}\
    \ at index [1]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861 [inlined]\\\
    n   [2] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpp9urf2ye.jl:28\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpp9urf2ye.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpp9urf2ye.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpp9urf2ye.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 0-element Vector{Any}\
    \ at index [1]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861 [inlined]\\\
    n   [2] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpp9urf2ye.jl:28\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpp9urf2ye.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpp9urf2ye.jl:34\\ntest "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    for i in 2:length(word)\n    \
    \    if (Char(word[i]) in \"AEIOUaeiou\") && (Char(word[i-1]) in \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    )\n            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4f1ebkfc.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp4f1ebkfc.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4f1ebkfc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4f1ebkfc.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i = length(word):-1:1\n        if (word[i] in vowels)\n\
    \            if (i == length(word))\n                return \"\"\n           \
    \ elseif (word[i+1] in vowels)\n                return \"\"\n            else\n\
    \                return word[i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr2gosyj7.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2gosyj7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2gosyj7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr2gosyj7.jl:36\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2gosyj7.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2gosyj7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr2gosyj7.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2gosyj7.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2gosyj7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr2gosyj7.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr2gosyj7.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr2gosyj7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr2gosyj7.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr2gosyj7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiou\"\n    rword\
    \ = reverse(word)\n    for i in length(rword)::Int\n        if rword[i] in vowels\n\
    \            return rword[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpyl51sn3u.jl:30\\n  Expression: candidate(\"\
    yogurt\") == \"u\"\\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyl51sn3u.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyl51sn3u.jl:29\\ntest set: Test\
    \ Failed at /tmp/tmpyl51sn3u.jl:31\\n  Expression: candidate(\"full\") == \"u\"\
    \\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyl51sn3u.jl:31 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyl51sn3u.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    # iterate through the string, check if each character is\
    \ a consonant\n    # if it is, then check if the next character is a vowel. If\
    \ it is, \n    # return the vowel\n    # return empty string if there is no appropriate\
    \ vowel\n    for i = length(word):-1:1\n        if is_consonant(word[i]) && is_vowel(word[i+1])\n\
    \            return word[i+1]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpse2i7077.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ is_consonant not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpse2i7077.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpse2i7077.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpse2i7077.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpse2i7077.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: is_consonant not defined\\n\
    \  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpse2i7077.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpse2i7077.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpse2i7077.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpse2i7077.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: is_consonant not defined\\n \
    \ Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpse2i7077.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpse2i7077.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpse2i7077.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpse2i7077.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: is_consonant not defined\\n \
    \ Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    vowels = \"AEIOU\"\n   \
    \ for i = length(word):-1:1\n        if i > 1 && isascii(word[i]) && isascii(word[i-1])\n\
    \            if !(word[i] in vowels) && word[i-1] in vowels\n                return\
    \ word[i-1]\n            end\n        end\n    end\n    \n    return \"\"\n  \
    \  \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1sk8_msz.jl:34\\n  Expression: candidate(\"\
    yogurt\") == \"u\"\\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp1sk8_msz.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp1sk8_msz.jl:33\\ntest set: Test\
    \ Failed at /tmp/tmp1sk8_msz.jl:35\\n  Expression: candidate(\"full\") == \"u\"\
    \\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp1sk8_msz.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp1sk8_msz.jl:33\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    index = length(word)\n    while index > 1\n        ch = word[index]\n\
    \        prev_ch = word[index-1]\n        if prev_ch in vowels\n            index\
    \ -= 1\n            continue\n        end\n        if ch in vowels\n         \
    \   return ch\n        end\n        index -= 1\n    end\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0dpu4kke.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dpu4kke.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dpu4kke.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0dpu4kke.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dpu4kke.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dpu4kke.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0dpu4kke.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dpu4kke.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dpu4kke.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0dpu4kke.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dpu4kke.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dpu4kke.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0dpu4kke.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0dpu4kke.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word = reverse(word)\n    for\
    \ i in eachindex(word)\n        if isvowel(word[i])\n            for j in i+1:length(word)\n\
    \                if !isvowel(word[j])\n                    return lowercase(reverse(word[i]))\n\
    \                end\n            end\n        end\n    end\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvvx0nmgn.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpvvx0nmgn.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvvx0nmgn.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvvx0nmgn.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpvvx0nmgn.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpvvx0nmgn.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvvx0nmgn.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvvx0nmgn.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpvvx0nmgn.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpvvx0nmgn.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvvx0nmgn.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvvx0nmgn.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpvvx0nmgn.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpvvx0nmgn.jl:18\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOUaeiou\"\n    word\
    \ = reverse(word)\n    for j in eachindex(word)\n        if in(word[j], vowels)\n\
    \            if j > 1\n                if !in(word[j-1], vowels) && !in(word[j-2],\
    \ vowels)\n                    return word[j]\n                end\n         \
    \   end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7j95a6vd.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp7j95a6vd.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7j95a6vd.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7j95a6vd.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp7j95a6vd.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp7j95a6vd.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7j95a6vd.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    last_vowel = \"z\"\n    last_consonant = \"z\"\n    for (i,\
    \ letter) in enumerate(word)\n        if i in vowels\n            last_vowel =\
    \ i\n        elseif i == last_vowel\n            return last_vowel\n        else\n\
    \            last_consonant = i\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmptsi9cn8n.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptsi9cn8n.jl:1\n\
    in expression starting at /tmp/tmptsi9cn8n.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    end\n \n \n@testset \"4. get_closest_vowel\"\
    \ begin\n    @test get_closest_vowel(\"yogurt\") == \"u\"\n    @test get_closest_vowel(\"\
    FULL\") == \"U\"\n    @test get_closest_vowel(\"quick\") == \"\"\n    @test get_closest_vowel(\"\
    ab\") == \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmp7jbqs195.jl:19\nin expression starting at /tmp/tmp7jbqs195.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    closest = \"\"\n    found_first_consonant\
    \ = false\n    for i in reverse(eachindex(word))\n        curr_letter = word[i]\n\
    \        if curr_letter in consonants\n            if found_first_consonant\n\
    \                break\n            else\n                found_first_consonant\
    \ = true\n            end\n        elseif curr_letter in vowels\n            closest\
    \ = curr_letter\n        end\n    end\n    return closest\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprgelnce5.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching reverse(::Base.EachStringIndex{String})\\n  Closest candidates\
    \ are:\\n    reverse(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\\
    n    reverse(!Matched::Pair{A, B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmprgelnce5.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprgelnce5.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprgelnce5.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmprgelnce5.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching reverse(::Base.EachStringIndex{String})\\\
    n  Closest candidates are:\\n    reverse(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\\
    n    reverse(!Matched::Pair{A, B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmprgelnce5.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprgelnce5.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprgelnce5.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmprgeln"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # save the word to an array\n\
    \    word_to_char_array = collect(word)\n    # index tracker\n    index = 0\n\
    \    # create an empty string to save the answer\n    answer = \"\"\n    # iterate\
    \ through the array\n    for char in word_to_char_array\n        if is_vowel(char)\
    \ # check for vowels\n            index += 1\n            # use index to find\
    \ the two consonants\n            if !is_vowel(word_to_char_array[index-1]) &&\
    \ !is_vowel(word_to_char_array[index+1])\n                answer = char\n    \
    \            break\n            end\n        end\n    end\n    return answer\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3uvbtmz0.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ is_vowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp3uvbtmz0.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3uvbtmz0.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3uvbtmz0.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp3uvbtmz0.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp3uvbtmz0.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3uvbtmz0.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3uvbtmz0.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp3uvbtmz0.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp3uvbtmz0.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3uvbtmz0.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3uvbtmz0.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp3uvbtmz0.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp3uvbtmz0.jl:2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOU\"\n    consonants\
    \ = \"BCDFGHJKLMNPQRSTVWXYZ\"\n    idx = search(r\"\\w[$(consonants)][$(vowels)]\\\
    w\", word)\n    idx != nothing ? word[idx[1]+1] : \"\"\nend\nget_closest_vowel(\"\
    yogurt\")\nget_closest_vowel(\"FULL\")\nget_closest_vowel(\"quick\")\nget_closest_vowel(\"\
    ab\")\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: search not defined\nStacktrace:\n [1]\
    \ get_closest_vowel(word::String)\n   @ Main /tmp/tmp9c07sq15.jl:18\n [2] top-level\
    \ scope\n   @ /tmp/tmp9c07sq15.jl:21\nin expression starting at /tmp/tmp9c07sq15.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowel_list = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    vowel_index = []\n    #Loops throught the entire word\
    \ backwards and compares it to the vowel list to find a vowel\n    for i in eachindex(word)\n\
    \        if word[end-i] in vowel_list\n            push!(vowel_index, end-i)\n\
    \        end\n    end\n    #Nothing will be returned if there is no vowels\n \
    \   if isempty(vowel_index)\n        return \"\"\n    end\n    #Finds the closest\
    \ vowel from the end\n    vowel_loc = vowel_index[end]\n    for i in eachindex(vowel_index)\n\
    \        if (vowel_index[i] > vowel_loc)\n            vowel_loc = vowel_index[i]\n\
    \        end\n    end\n    return word[vowel_loc]\nend\nget_closest_vowel(\"ab\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5aukg_7m.jl:21\nin expression starting at /tmp/tmp5aukg_7m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for (i, letter) in enumerate(reverse(word))\n        if letter\
    \ in vowels && i != length(word)\n            return letter\n        end\n   \
    \ end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7e4m51_k.jl:29\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e4m51_k.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e4m51_k.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e4m51_k.jl:30\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e4m51_k.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e4m51_k.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e4m51_k.jl:34\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e4m51_k.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e4m51_k.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e4m51_k.jl:35\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7e4m51_k.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7e4m51_k.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7e4m51_k.jl:39\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7e4m51_k.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for letter in word\n        if letter in vowels\n       \
    \     return letter\n        end\n    end\n    return \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcb050r1v.jl:29\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb050r1v.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb050r1v.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcb050r1v.jl:30\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb050r1v.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb050r1v.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcb050r1v.jl:34\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb050r1v.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb050r1v.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcb050r1v.jl:35\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb050r1v.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb050r1v.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcb050r1v.jl:39\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcb050r1v.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for i = length(word):-1:1\n\
    \        if (word[i] in consonants) && (word[i-1] in consonants)\n           \
    \ for j = i+1:length(word)\n                if word[j] in vowels\n           \
    \         return word[j]\n                end\n            end\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8h_3m54d.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp8h_3m54d.jl:19\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp8h_3m54d.jl:34 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp8h_3m54d.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp8h_3m54d.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp8h_3m54d.jl:19\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp8h_3m54d.jl:35 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp8h_3m54d.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp8h_3m54d.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"bad\") == \"a\"\\n  BoundsError: attempt to access 3-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    consonants\
    \ = setdiff(string.letters, vowels)\n    N = length(word)\n    for n = 1:N-1\n\
    \        i = N-n\n        j = N-n+1\n        if in(word[i], vowels) && in(word[j],\
    \ consonants)\n            return word[i]\n        end\n    end\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpumrcjmif.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  type #string has\
    \ no field letters\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42\
    \ [inlined]\\n   [2] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpumrcjmif.jl:17\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpumrcjmif.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpumrcjmif.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpumrcjmif.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  type #string has no field letters\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpumrcjmif.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpumrcjmif.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpumrcjmif.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpumrcjmif.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  type #string has no field letters\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpumrcjmif.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpumrcjmif.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpumrcjmif.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpumrcjmif.jl:36\\n  Test threw exception\\n  Expression:\
    \ candi"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) < 3\n        return\
    \ \"\"\n    end\n    if !(word[end-1] in [\"a\", \"e\", \"i\", \"o\", \"u\"])\
    \ && (word[end] in [\"a\", \"e\", \"i\", \"o\", \"u\"])\n        return word[end]\n\
    \    end\n    for i in 1:length(word)-2\n        if (word[end-i] in [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]) && !(word[end-i-1] in [\"a\", \"e\", \"i\", \"o\",\
    \ \"u\"])\n            return word[end-i]\n        end\n    end\n    return \"\
    \"\nend\n \nprintln(get_closest_vowel(\"yogurt\"))\nprintln(get_closest_vowel(\"\
    FULL\"))\nprintln(get_closest_vowel(\"quick\"))\nprintln(get_closest_vowel(\"\
    ab\"))\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "\n\n\n\ntest set: Test Failed at /tmp/tmprgsv4m18.jl:39\n  Expression:\
    \ candidate(\"yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgsv4m18.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgsv4m18.jl:38\ntest set: Test\
    \ Failed at /tmp/tmprgsv4m18.jl:40\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgsv4m18.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgsv4m18.jl:38\ntest set: Test\
    \ Failed at /tmp/tmprgsv4m18.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgsv4m18.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgsv4m18.jl:38\ntest set: Test\
    \ Failed at /tmp/tmprgsv4m18.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgsv4m18.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgsv4m18.jl:38\ntest set: Test\
    \ Failed at /tmp/tmprgsv4m18.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprgsv4m18.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    N = length(word)\n    if N <=\
    \ 1\n        return \"\"\n    end\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    right = N-1\n    while right > 1\n\
    \        cur = word[right]\n        if cur in vowels\n            left = right-1\n\
    \            while left > 0\n                if word[left] in vowels\n       \
    \             left -= 1\n                else\n                    return cur\n\
    \                end\n            end\n        end\n        right -= 1\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz0t7mxhu.jl:43\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz0t7mxhu.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz0t7mxhu.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpz0t7mxhu.jl:44\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz0t7mxhu.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz0t7mxhu.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpz0t7mxhu.jl:48\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz0t7mxhu.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz0t7mxhu.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpz0t7mxhu.jl:49\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz0t7mxhu.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz0t7mxhu.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpz0t7mxhu.jl:53\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz0t7mxhu.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for char in reverse(word)\n        if char in vowels\n  \
    \          return char\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmsuzped_.jl:29\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsuzped_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsuzped_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpmsuzped_.jl:30\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsuzped_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsuzped_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpmsuzped_.jl:34\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsuzped_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsuzped_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpmsuzped_.jl:35\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsuzped_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsuzped_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpmsuzped_.jl:39\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsuzped_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    i, vowels, maxind = word |> reverse\
    \ |> eachindex, \"aeiou\", 0\n    while i()\n        if vowels |> member(word[i()])\n\
    \            if (i() > 1) & (!(vowels |> member(word[i()-1])))\n             \
    \   return word[i()]\n            elseif i() == 1\n                return word[i()]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppary2cs1.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: objects\
    \ of type Base.EachStringIndex{String} are not callable\\n  Stacktrace:\\n   [1]\
    \ get_closest_vowel(word::String)\\n     @ Main /tmp/tmppary2cs1.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppary2cs1.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppary2cs1.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmppary2cs1.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: objects of type Base.EachStringIndex{String}\
    \ are not callable\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmppary2cs1.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppary2cs1.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppary2cs1.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmppary2cs1.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  MethodError: objects of type Base.EachStringIndex{String}\
    \ are not callable\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmppary2cs1.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppary2cs1.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppary2cs1.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmppary2cs1.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  MethodEr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    min_index = length(word)\n   \
    \ vowel = \"\"\n    for char in [\"a\", \"e\", \"i\", \"o\", \"u\"]\n        try\n\
    \            if index(word, char) > 1\n                if index(word, char) <\
    \ min_index\n                    min_index = index(word, char)\n             \
    \       vowel = char\n                end\n            end\n        catch e\n\
    \            pass\n        end\n    end\n    return vowel\nend\n\"\"\"You are\
    \ given a word. Your task is to find the closest vowel that stands between \n\
    \    two consonants from the right side of the word (case sensitive).\n    \n\
    \    Vowels in the beginning and ending doesn't count. Return empty string if\
    \ you didn't\n    find any vowel met the above condition. \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob9gz6jb.jl:32\nin expression starting at\
    \ /tmp/tmpob9gz6jb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Your code goes here\n    vowels\
    \ = ['a', 'e', 'i', 'o', 'u']\n    for i in length(word)::Int\n        if i <\
    \ length(word) - 1 && in(word[i], vowels) && !in(word[i-1], vowels) && !in(word[i+1],\
    \ vowels)\n            return word[i]\n        end\n    end\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb4970bs4.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb4970bs4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb4970bs4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpb4970bs4.jl:31\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb4970bs4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb4970bs4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpb4970bs4.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb4970bs4.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb4970bs4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpb4970bs4.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb4970bs4.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb4970bs4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpb4970bs4.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb4970bs4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    cons\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for (i, c) in enumerate(word)\n\
    \        if c in vowels\n            c2 = word[i + 1]\n            if c2 in cons\n\
    \                return c\n            end\n        end\n    end\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpme_4htkj.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpme_4htkj.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpme_4htkj.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpme_4htkj.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpme_4htkj.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpme_4htkj.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpme_4htkj.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp029rhl34.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp029rhl34.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp029rhl34.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp029rhl34.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp029rhl34.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp029rhl34.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp029rhl34.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    index = search(r\"^(?!.*[aeiou])([^aeiou]*)([aeiou])(?=[^aeiou]*$)\"\
    , word)\n    (index == nothing) && return \"\"\n    index = getindex(index, 2)\n\
    \    if length(word) == 1\n        (word in vowels) && return word\n        return\
    \ \"\"\n    end\n    return word[index]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcf_zam25.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpcf_zam25.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcf_zam25.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcf_zam25.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpcf_zam25.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpcf_zam25.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcf_zam25.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcf_zam25.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpcf_zam25.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpcf_zam25.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcf_zam25.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcf_zam25.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpcf_zam25.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpcf_zam25.jl:17\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word = reverse(word)\n    for\
    \ i in 1:length(word)\n        if word[i] in \"AEIOUaeiou\"\n            return\
    \ word[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpztq3t7xn.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpztq3t7xn.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpztq3t7xn.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpztq3t7xn.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpztq3t7xn.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpztq3t7xn.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpztq3t7xn.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    \n    for i in 1:length(word)\n        if\
    \ word[end-i] in vowels && word[end-i-1] in consonants && word[end-i+1] in consonants\n\
    \            return word[end-i]\n        end\n    end\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp556gay9s.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp556gay9s.jl:21\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp556gay9s.jl:32 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp556gay9s.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp556gay9s.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp556gay9s.jl:21\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp556gay9s.jl:33 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp556gay9s.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp556gay9s.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    if\
    \ length(word) < 3\n        return \"\"\n    end\n    for i in length(word):-1:2\n\
    \        if in(word[i], vowels) && !in(word[i-1], vowels) && !in(word[i+1], vowels)\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp0szczsi.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpp0szczsi.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp0szczsi.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp0szczsi.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = ['a', 'e', 'i', 'o',\
    \ 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z']\n    closest = \"\"\n    result\
    \ = \"\"\n    for (i, j) in enumerate(word)\n        if j in vowels\n        \
    \    closest = j\n        elseif j in consonants\n            if closest != \"\
    \"\n                result = closest\n                closest = \"\"\n       \
    \     end\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2ef8_dht.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # We define vowels as char set\n\
    \    vowels = Set(['a', 'e', 'i', 'o', 'u'])\n    # We look at the chars from\
    \ the end, so the word is reversed\n    for (i,c) in enumerate(reverse(word))\n\
    \        # If we encounter a consonant, we look for the closest vowel\n      \
    \  if c \u2209 vowels\n            for (j,v) in enumerate(reverse(word[i+1:end]))\n\
    \                if v \u2208 vowels\n                    return v\n          \
    \      end\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdgc95q_0.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpdgc95q_0.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdgc95q_0.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdgc95q_0.jl:35\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    previous_char\
    \ = \".\"\n    closest_vowel = \"\"\n    for char in word\n        if char in\
    \ vowels && previous_char != \".\" && previous_char \u2209 vowels\n          \
    \  closest_vowel = char\n            break\n        end\n        previous_char\
    \ = char\n    end\n    return closest_vowel\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppxhkgzh1.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmppxhkgzh1.jl:26\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppxhkgzh1.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppxhkgzh1.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmppxhkgzh1.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmppxhkgzh1.jl:26\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppxhkgzh1.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i in 1:length(word)\n        if (word[end-i] in vowels)\
    \ && !(word[end-i-1] in vowels)\n            return word[end-i]\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpodam_6to.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpodam_6to.jl:18\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpodam_6to.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpodam_6to.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpodam_6to.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpodam_6to.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpodam_6to.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpodam_6to.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpodam_6to.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word = reverse(word)\n    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in range(1, length(word) -\
    \ 1)\n        if !(word[i] in vowels) && (word[i + 1] in vowels) && !(word[i +\
    \ 2] in vowels)\n            return reverse(word)[i + 1]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwyz23fl5.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwyz23fl5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwyz23fl5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwyz23fl5.jl:31\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwyz23fl5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwyz23fl5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwyz23fl5.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwyz23fl5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwyz23fl5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwyz23fl5.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwyz23fl5.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwyz23fl5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwyz23fl5.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwyz23fl5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Your code here\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp60l9kzp1.jl:24\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60l9kzp1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60l9kzp1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp60l9kzp1.jl:25\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60l9kzp1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60l9kzp1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp60l9kzp1.jl:29\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60l9kzp1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60l9kzp1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp60l9kzp1.jl:30\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60l9kzp1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60l9kzp1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp60l9kzp1.jl:34\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp60l9kzp1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # your code\n    end\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvpqrrufu.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpvpqrrufu.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvpqrrufu.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvpqrrufu.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpvpqrrufu.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpvpqrrufu.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvpqrrufu.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    closest_vowel = \"\"\n    if length(word) < 3\n        return\
    \ \"\"\n    end\n    if any(x -> x == word[end-1], vowels)\n        return \"\"\
    \n    end\n    for i in 1:length(word)-2\n        if (word[end-i] in vowels) &&\
    \ (word[end-i-1] in vowels)\n            closest_vowel = word[end-i-1]\n     \
    \       break\n        end\n    end\n    return closest_vowel\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprkjwbhkf.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkjwbhkf.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkjwbhkf.jl:36\ntest set: Test\
    \ Failed at /tmp/tmprkjwbhkf.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkjwbhkf.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkjwbhkf.jl:36\ntest set: Test\
    \ Failed at /tmp/tmprkjwbhkf.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkjwbhkf.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkjwbhkf.jl:36\ntest set: Test\
    \ Failed at /tmp/tmprkjwbhkf.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprkjwbhkf.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprkjwbhkf.jl:36\ntest set: Test\
    \ Failed at /tmp/tmprkjwbhkf.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprkjwbhkf.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    last_con = \"\"\n    last_vow = \"\"\n    for char\
    \ in reverse(word)\n        if char in vowels\n            last_vow = char\n \
    \       elseif char in consonants\n            last_con = char\n            break\n\
    \        end\n    end\n    if last_con == \"\" || last_vow == \"\"\n        return\
    \ \"\"\n    else\n        return last_vow\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfl2pm5s.jl:39\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyfl2pm5s.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyfl2pm5s.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyfl2pm5s.jl:40\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyfl2pm5s.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyfl2pm5s.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyfl2pm5s.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyfl2pm5s.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyfl2pm5s.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyfl2pm5s.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyfl2pm5s.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyfl2pm5s.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyfl2pm5s.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfl2pm5s.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    if !contains(word, search(r\"\
    [a, e, i, o, u, A, E, I, O, U]\"), overlapping=false)\n        return \"\"\n \
    \   end\n    \n    word = reverse(word)\n    vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    length = length(word)\n  \
    \  res = search(r\"[^a, e, i, o, u, A, E, I, O, U]\", word)\n    last_ind = first(res)\n\
    \    res = search(r\"[a, e, i, o, u, A, E, I, O, U]\", word[last_ind:end])\n \
    \   if length(res) == 0\n        return \"\"\n    end\n    first_ind = first(res)\
    \ + last_ind\n    if first_ind == last_ind\n        return \"\"\n    end\n   \
    \ if first_ind == length\n        return \"\"\n    end\n    return word[first_ind]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpml6_8qk6.jl:44\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpml6_8qk6.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpml6_8qk6.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpml6_8qk6.jl:43\\ntest set:\
    \ Error During Test at /tmp/tmpml6_8qk6.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpml6_8qk6.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpml6_8qk6.jl:45 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpml6_8qk6.jl:43\\ntest set:\
    \ Error During Test at /tmp/tmpml6_8qk6.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpml6_8qk6.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpml6_8qk6.jl:46 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpml6_8qk6.jl:43\\ntest set:\
    \ Error During Test at /tmp/tmpml6_8qk6.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpml6_8qk6.jl:17\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    reverced_word = reverse(word)\n    res = \"\"\n    flag =\
    \ false\n    for letter in reverced_word\n        if letter in vowels\n      \
    \      if flag == true\n                res = letter\n                break\n\
    \            end\n        else\n            flag = true\n        end\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoik9y5s_.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoik9y5s_.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoik9y5s_.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpoik9y5s_.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoik9y5s_.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoik9y5s_.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpoik9y5s_.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoik9y5s_.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoik9y5s_.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpoik9y5s_.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoik9y5s_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoik9y5s_.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpoik9y5s_.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoik9y5s_.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    return join(split(word[1:end-1],r\"\
    [^aeiouAEIOU]\"))[end]\nend\nprintln(get_closest_vowel(\"yogurt\"))\nprintln(get_closest_vowel(\"\
    FULL\"))\nprintln(get_closest_vowel(\"quick\"))\nprintln(get_closest_vowel(\"\
    ab\"))\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) < 3\n        return\
    \ \"\"\n    end\n    if isvowel(word[end-1]) && isvowel(word[end]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-2]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-3]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-4]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-5]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-6]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-7]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-8]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-9]) \n        return\
    \ \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-10]) \n       \
    \ return \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-11]) \n\
    \        return \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-12])\
    \ \n        return \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-13])\
    \ \n        return \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-14])\
    \ \n        return \"\"\n    end\n    if isvowel(word[end]) && isvowel(word[end-15])\
    \ \n        return \"\"\n    end\n    if isvowel(word[end]) && isvow\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpce4cukhr.jl:1\nin expression starting at /tmp/tmpce4cukhr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Your code here ...\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe8kd6ell.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpe8kd6ell.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpe8kd6ell.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpe8kd6ell.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpe8kd6ell.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpe8kd6ell.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpe8kd6ell.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if search(r\"[^aeiou]\", word[end])\
    \ == nothing\n        return \"\"\n    end\n    word = word[end:-1:1]\n    for\
    \ i in 1:length(word)\n        if search(r\"[aeiou]\", word[i]) != nothing\n \
    \           for j in i:length(word)\n                if search(r\"[^aeiou]\",\
    \ word[j]) != nothing\n                    return word[i]\n                end\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmeav7ikm.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpmeav7ikm.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmeav7ikm.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmeav7ikm.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpmeav7ikm.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmeav7ikm.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmeav7ikm.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmeav7ikm.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpmeav7ikm.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmeav7ikm.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmeav7ikm.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmeav7ikm.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpmeav7ikm.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpmeav7ikm.jl:16\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    s = \"\"\n    for i in 1:length(word)\n\
    \        if (word[i] in [\"a\", \"e\", \"i\", \"o\", \"u\"]) && (word[i+1] in\
    \ [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"])\n   \
    \         s = word[i]\n            break\n        end\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjet4gn5b.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjet4gn5b.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjet4gn5b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjet4gn5b.jl:31\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjet4gn5b.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjet4gn5b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjet4gn5b.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjet4gn5b.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjet4gn5b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjet4gn5b.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjet4gn5b.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjet4gn5b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjet4gn5b.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjet4gn5b.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    #vowels = \"aeiouAEIOU\"\
    \n    #conso = \"qwrtypsdfghjklzxcvbnmQWRTYPSDFGHJKLZXCVBNM\"\n    #vowels_index\
    \ = findall(r\"\\A[aeiouAEIOU]\\Z\", word)\n    #conso_index = findall(r\"\\A[qwrtypsdfghjklzxcvbnmQWRTYPSDFGHJKLZXCVBNM]\\\
    Z\", word)\n    #s = findall(r\"\\A[^aeiouAEIOU]\\Z\", word)\n    #s = findall(r\"\
    \\A[aeiouAEIOU][qwrtypsdfghjklzxcvbnmQWRTYPSDFGHJKLZXCVBNM][aeiouAEIOU]\\Z\",\
    \ word)\n    #println(s)\n    #if s != []\n    #    return word[s[1]+1]\n    #else\n\
    \    #    return \"\"\n    #end\n    \n    n = length(word)\n    for i in (1:n-1)\n\
    \        if isconsonant(word[i]) && isvowel(word[i+1])\n            return word[i+1]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwn_gs9xt.jl:43\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isconsonant not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpwn_gs9xt.jl:32\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwn_gs9xt.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwn_gs9xt.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpwn_gs9xt.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isconsonant not defined\\n \
    \ Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpwn_gs9xt.jl:32\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwn_gs9xt.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwn_gs9xt.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpwn_gs9xt.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isconsonant not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpwn_gs9xt.jl:32\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwn_gs9xt.jl:45 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwn_gs9xt.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpwn_gs9xt.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isconsonant not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpw"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    index = length(word)\n    empty\
    \ = \"\"\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    while\
    \ true\n        if index == 0\n            return empty\n        end\n       \
    \ if in(word[index], consonants)\n            if in(word[index-1], vowels) &&\
    \ in(word[index-2], consonants)\n                index -= 1\n            else\n\
    \                return word[index-1]\n            end\n        end\n        index\
    \ -= 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptlj_gzji.jl:39\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlj_gzji.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlj_gzji.jl:38\ntest set: Test\
    \ Failed at /tmp/tmptlj_gzji.jl:40\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlj_gzji.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlj_gzji.jl:38\ntest set: Test\
    \ Failed at /tmp/tmptlj_gzji.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlj_gzji.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlj_gzji.jl:38\ntest set: Test\
    \ Failed at /tmp/tmptlj_gzji.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlj_gzji.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlj_gzji.jl:38\ntest set: Test\
    \ Failed at /tmp/tmptlj_gzji.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptlj_gzji.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    for\
    \ i in reverse(1:length(word))\n        if in(word[i], vowels)\n            if\
    \ i + 1 <= length(word)\n                if in(word[i+1], vowels) == false\n \
    \                   return word[i]\n                end\n            end\n   \
    \     end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx8mrzk8f.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpx8mrzk8f.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx8mrzk8f.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx8mrzk8f.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpx8mrzk8f.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpx8mrzk8f.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx8mrzk8f.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    n = length(word)\n    while n\
    \ > 1 && !is_vowel(word[n])\n        n -= 1\n    end\n    while n > 1 && !is_vowel(word[n-1])\n\
    \        n -= 1\n    end\n    if n == 1\n        return \"\"\n    else\n     \
    \   return word[n]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpov4y2hra.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ is_vowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpov4y2hra.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpov4y2hra.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpov4y2hra.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpov4y2hra.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpov4y2hra.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpov4y2hra.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpov4y2hra.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpov4y2hra.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpov4y2hra.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpov4y2hra.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpov4y2hra.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpov4y2hra.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpov4y2hra.jl:1"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    for\
    \ index in reverse(eachindex(word))\n        if word[index] in vowels\n      \
    \      for index2 in reverse(eachindex(word))\n                if word[index2]\
    \ \u2209 vowels\n                    return word[index]\n                end\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqdod8afl.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching reverse(::Base.EachStringIndex{String})\\n  Closest candidates\
    \ are:\\n    reverse(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\\
    n    reverse(!Matched::Pair{A, B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqdod8afl.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqdod8afl.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqdod8afl.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpqdod8afl.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching reverse(::Base.EachStringIndex{String})\\\
    n  Closest candidates are:\\n    reverse(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\\
    n    reverse(!Matched::Pair{A, B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqdod8afl.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqdod8afl.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqdod8afl.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpqdod8"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    word = word |> String.lowercase\n    index = findfirst(word,\
    \ \"vowels\")\n    if index != nothing\n        return word[index]\n    else\n\
    \        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgj1iov3z.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  type DataType has\
    \ no field lowercase\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:37\
    \ [inlined]\\n   [2] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpgj1iov3z.jl:17\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpgj1iov3z.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpgj1iov3z.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpgj1iov3z.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  type DataType has no field lowercase\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:37 [inlined]\\n   [2] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpgj1iov3z.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpgj1iov3z.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpgj1iov3z.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpgj1iov3z.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  type DataType has no field lowercase\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:37 [inlined]\\n   [2] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpgj1iov3z.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpgj1iov3z.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpgj1iov3z.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpgj1iov3z.jl:33\\n  Test threw exception\\n  Expressi"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiou\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    closest_vowel = \"\"\n    distance = -1\n \
    \   i = length(word)\n    while i >= 1\n        if isin(word[i], vowels) && i\
    \ < length(word) && isin(word[i+1], consonants) && i > 1 && isin(word[i-1], consonants)\n\
    \            closest_vowel = word[i]\n            distance = i\n            break\n\
    \        end\n        i -= 1\n    end\n    return closest_vowel\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk2t5yaur.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isin not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpk2t5yaur.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk2t5yaur.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk2t5yaur.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpk2t5yaur.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isin not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpk2t5yaur.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk2t5yaur.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk2t5yaur.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpk2t5yaur.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isin not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpk2t5yaur.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk2t5yaur.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk2t5yaur.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpk2t5yaur.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isin not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpk2t5yaur.jl:22\\\
    n   [2] macro "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) == 1\n       \
    \ return \"\"\n    end\n    if isvowel(word[end])\n        return \"\"\n    end\n\
    \    for i in length(word):-1:2\n        if isvowel(word[i]) && !isvowel(word[i-1])\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzevk3zv9.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpzevk3zv9.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzevk3zv9.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzevk3zv9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpzevk3zv9.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpzevk3zv9.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzevk3zv9.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzevk3zv9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpzevk3zv9.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpzevk3zv9.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzevk3zv9.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzevk3zv9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpzevk3zv9.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpzevk3zv9.jl:19\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    word = reverse(word)\n    for i = 1:length(word)\n      \
    \  if in(word[i], vowels)\n            if in(word[i+1], vowels) || in(word[i-1],\
    \ vowels)\n                continue\n            else\n                return\
    \ word[i]\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnmu1re93.jl:34\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmu1re93.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmu1re93.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpnmu1re93.jl:35\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmu1re93.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmu1re93.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpnmu1re93.jl:39\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmu1re93.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmu1re93.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpnmu1re93.jl:40\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmu1re93.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmu1re93.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpnmu1re93.jl:44\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmu1re93.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    letters = ['a', 'e', 'i', 'o',\
    \ 'u']\n    vowels_index = []\n    for (i, v) in enumerate(word)\n        push!(vowels_index,\
    \ i) if isin(v, letters)\n    end\n    if length(vowels_index) == 0\n        return\
    \ \"\"\n    end\n    consonants_index = filter(i -> !isin(i, vowels_index), 1:length(word))\n\
    \    b = []\n    for i in 1:length(vowels_index)\n        a = filter(i -> (i >\
    \ vowels_index[i] && i < length(word)), consonants_index)\n        b = [word[vowels_index[i]]\
    \ if length(a) == 0 \n            else word[vowels_index[i]] for a in a]\n   \
    \ end\n    return b[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp0ueu02pd.jl:18 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0ueu02pd.jl:19\n\
    in expression starting at /tmp/tmp0ueu02pd.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    r = []\n    for letter in reverse(word)\n\
    \        push!(r, letter)\n        if letter in \"aeiou\"\n            break\n\
    \        end\n    end\n    if length(r) == 1\n        return \"\"\n    end\n \
    \   for letter in reverse(word)\n        if letter in \"aeiou\"\n            return\
    \ letter\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp94qh_pe8.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp94qh_pe8.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp94qh_pe8.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp94qh_pe8.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp94qh_pe8.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp94qh_pe8.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp94qh_pe8.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Remove initial and final vowels\n\
    \    if isvowel(word[1])\n        word = word[2:end]\n    end\n    if isvowel(word[end])\n\
    \        word = word[1:end-1]\n    end\n    # Loop from end of string and find\
    \ closest vowel\n    for i in rev(1:length(word)-1)\n        if isvowel(word[i])\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm2_b2d49.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpm2_b2d49.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm2_b2d49.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm2_b2d49.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpm2_b2d49.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpm2_b2d49.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm2_b2d49.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm2_b2d49.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpm2_b2d49.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpm2_b2d49.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm2_b2d49.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm2_b2d49.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpm2_b2d49.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpm2_b2d49.jl:17\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiou\"\n    right_vowels\
    \ = []\n    n = length(word)\n    for i in 1:n-1\n        if word[i] in vowels\
    \ && word[i+1] not in vowels\n            push!(right_vowels, word[i])\n     \
    \   end\n    end\n    if isempty(right_vowels)\n        return \"\"\n    else\n\
    \        last_vowel = right_vowels[end]\n        return last_vowel\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp3wm8sf0.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  TypeError: non-boolean\
    \ (Char) used in boolean context\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpp3wm8sf0.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp3wm8sf0.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp3wm8sf0.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpp3wm8sf0.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  TypeError: non-boolean (Char) used in boolean\
    \ context\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpp3wm8sf0.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp3wm8sf0.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp3wm8sf0.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpp3wm8sf0.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  TypeError: non-boolean (Char) used in boolean\
    \ context\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpp3wm8sf0.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp3wm8sf0.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp3wm8sf0.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpp3wm8sf0.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  TypeError: non-boolean (Char) used in boolean\
    \ context\\n  Stacktrace:\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = Set(\"AEIOU\")\n    get_closest_vowel(word)\
    \ = findnext(eachmatch(r\"([BCDFGHJKLMNPQRSTVWXYZ])([AEIOU])([BCDFGHJKLMNPQRSTVWXYZ])\"\
    , word)) do v\n        match(r\"[BCDFGHJKLMNPQRSTVWXYZ]\", v.captures[1]) && match(r\"\
    [BCDFGHJKLMNPQRSTVWXYZ]\", v.captures[3])\n    end |> get |> getfield(:captures)\
    \ |> get |> getfield(:mid)\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkuiuc6ne.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type var\"#get_closest_vowel#2\" to an object of type\
    \ String\\n  Closest candidates are:\\n    convert(::Type{String}, !Matched::String)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpkuiuc6ne.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkuiuc6ne.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkuiuc6ne.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    return word\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2amzdxzc.jl:23\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"yogurt\" == \"u\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2amzdxzc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2amzdxzc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2amzdxzc.jl:24\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"full\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2amzdxzc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2amzdxzc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2amzdxzc.jl:25\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"easy\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2amzdxzc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2amzdxzc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2amzdxzc.jl:26\n  Expression: candidate(\"eAsy\") == \"\"\n\
    \   Evaluated: \"eAsy\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2amzdxzc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2amzdxzc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2amzdxzc.jl:27\n  Expression: candidate(\"ali\") == \"\"\n\
    \   Evaluated: \"ali\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2amzdxzc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    words = split(word, \"\")\n    closest_vowel = \"\"\n   \
    \ vowel_pos = 0\n    consonant_pos = 0\n    index = 0\n    for letter in words\n\
    \        if letter in vowels && consonant_pos >= 0\n            vowel_pos = index\n\
    \            if vowel_pos > consonant_pos\n                closest_vowel = letter\n\
    \                break\n            end\n        elseif letter !in vowels\n  \
    \          consonant_pos = index\n        end\n        index += 1\n    end\n \
    \   return closest_vowel\nend\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"vowels\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkl8kcxfe.jl:29\nin expression starting at /tmp/tmpkl8kcxfe.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # the second argument is the range\
    \ to start the search\n    # the first argument is the range to stop the search\n\
    \    # the third argument is the range step\n    i = length(word) \n    while\
    \ i > 1\n        if !(word[i] in \"aeiou\") && (word[i-1] in \"aeiou\")\n    \
    \        return word[i-1]\n        end\n        i -= 1\n    end\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprnnbfas4.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmprnnbfas4.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprnnbfas4.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprnnbfas4.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmprnnbfas4.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmprnnbfas4.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprnnbfas4.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowel_pos = [findfirst(w->w in\
    \ \"aeiou\", word[i:end]) for i in 1:length(word)]\n    candidate_pos = [v+i-1\
    \ for (i,v) in enumerate(vowel_pos) if v != nothing]\n    candidate_pos = [pos\
    \ for pos in candidate_pos if pos != 1 && pos != length(word)]\n    if length(candidate_pos)\
    \ > 0\n        return word[maximum(candidate_pos)]\n    else\n        return \"\
    \"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOUaeiou\"\n    for\
    \ i in 1:length(word)\n        if (word[i] in vowels) && (i < length(word)) &&\
    \ !(word[i+1] in vowels)\n            return word[i]\n        end\n    end\n \
    \   return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv7zg9jie.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpv7zg9jie.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv7zg9jie.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv7zg9jie.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpv7zg9jie.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpv7zg9jie.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv7zg9jie.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    N = length(word)\n    for (i,x)\
    \ in enumerate(word)\n        if x in (\"a\",\"e\",\"i\",\"o\",\"u\")\n      \
    \      if i > 1 && i < N\n                if word[i-1] in (\"a\",\"e\",\"i\",\"\
    o\",\"u\")\n                    continue\n                elseif word[i+1] in\
    \ (\"a\",\"e\",\"i\",\"o\",\"u\")\n                    continue\n            \
    \    else\n                    return x\n                end\n            end\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsqdwzmfy.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqdwzmfy.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqdwzmfy.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpsqdwzmfy.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqdwzmfy.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqdwzmfy.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpsqdwzmfy.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqdwzmfy.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqdwzmfy.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpsqdwzmfy.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqdwzmfy.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqdwzmfy.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpsqdwzmfy.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqdwzmfy.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # your code comes here\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmzncpznj.jl:24\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzncpznj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzncpznj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmzncpznj.jl:25\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzncpznj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzncpznj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmzncpznj.jl:29\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzncpznj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzncpznj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmzncpznj.jl:30\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzncpznj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzncpznj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmzncpznj.jl:34\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmzncpznj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiou\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    word = reverse(lowercase(word))\n    closest\
    \ = \"\"\n    for c in word\n        if c in vowels && !isempty(closest)\n   \
    \         return uppercase(closest)\n        elseif c in consonants\n        \
    \    closest = c\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz4oorcu1.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpz4oorcu1.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz4oorcu1.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz4oorcu1.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpz4oorcu1.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpz4oorcu1.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz4oorcu1.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    for\
    \ i in 1:length(word)\n        if (word[i] in vowels)\n            if (i > 1)\
    \ && (word[i-1] in vowels)\n                if (i < length(word)) && (word[i+1]\
    \ in vowels)\n                    continue\n                else\n           \
    \         return word[i]\n                end\n            elseif (i == 1)\n \
    \               if (i < length(word)) && (word[i+1] in vowels)\n             \
    \       continue\n                else\n                    return word[i]\n \
    \               end\n            elseif (i == length(word)) && (word[i-1] in vowels)\n\
    \                continue\n            elseif (i == length(word)) && !(word[i-1]\
    \ in vowels)\n                return word[i]\n            else\n             \
    \   continue\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9_ch25cw.jl:47\\n  Expression: candidate(\"\
    yogurt\") == \"u\"\\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp9_ch25cw.jl:47 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp9_ch25cw.jl:46\\ntest set: Test\
    \ Failed at /tmp/tmp9_ch25cw.jl:48\\n  Expression: candidate(\"full\") == \"u\"\
    \\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp9_ch25cw.jl:48 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp9_ch25cw.jl:46\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word_b = word[end:-1:1]\n    for\
    \ i in 1:length(word_b)\n        if word_b[i] in \"AEIOU\" && word_b[i+1] in \"\
    bcdfghjklmnpqrstvwxyz\"\n            return word_b[i]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3a828u26.jl:29\\n  Expression: candidate(\"\
    yogurt\") == \"u\"\\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3a828u26.jl:29 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3a828u26.jl:28\\ntest set: Test\
    \ Failed at /tmp/tmp3a828u26.jl:30\\n  Expression: candidate(\"full\") == \"u\"\
    \\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3a828u26.jl:30 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3a828u26.jl:28\\ntest set: Test\
    \ Failed at /tmp/tmp3a828u26.jl:34\\n  Expression: candidate(\"bad\") == \"a\"\
    \\n   Evaluated: \"\" == \"a\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3a828u26.jl:34 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3a828u26.jl:28\\ntest set: Test\
    \ Failed at /tmp/tmp3a828u26.jl:35\\n  Expression: candidate(\"most\") == \"o\"\
    \\n   Evaluated: \"\" == \"o\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp3a828u26.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp3a828u26.jl:28\\ntest set: Test\
    \ Failed at /tmp/tmp3a828u26.jl:39\\n  Expression: candidate(\"anime\") == \"\
    i\"\\n   Evaluated: \"\" == \"i\"\\nStacktrace:\\n [1] macro expansion\\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    for i in 1:length(word) \n   \
    \     if any([word[i] in v for v in [\"a\", \"e\", \"i\", \"o\", \"u\"]]) && any([word[i\
    \ - 1] in v for v in [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]]) && any([word[i + 1] in v for v in [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]])\n            return word[i]\n  \
    \      end\n    end\n    return \"\"\nend\n\"\"\"\n    get_closest_vowel(\"yogurt\"\
    ) ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpjejsnpek.jl:23\nin expression starting at /tmp/tmpjejsnpek.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    ends_with_vowel = false\n    for i in 1:length(word)\n  \
    \      if word[end-i+1] in vowels\n            ends_with_vowel = true\n      \
    \      break\n        end\n    end\n    if ends_with_vowel\n        return \"\"\
    ;\n    end\n    for i in 1:length(word)\n        if word[end-i+1] in vowels\n\
    \            return word[end-i+1]\n        end\n    end\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3msphdp1.jl:39\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3msphdp1.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3msphdp1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp3msphdp1.jl:40\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3msphdp1.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3msphdp1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp3msphdp1.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3msphdp1.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3msphdp1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp3msphdp1.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3msphdp1.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3msphdp1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp3msphdp1.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3msphdp1.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    string = []\n    for i in 1:length(word)\n\
    \        push!(string, word[i])\n    end\n    for i in 1:length(string)\n    \
    \    if string[end-i] in ['a','e','i','o','u']\n            if string[end-i-1]\
    \ in ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z']\n\
    \                return string[end-i]\n            end\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmq8x8k2x.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpmq8x8k2x.jl:23\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmq8x8k2x.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmq8x8k2x.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpmq8x8k2x.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpmq8x8k2x.jl:23\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmq8x8k2x.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    index_arr = findall(r\"[^AEIOUaeiou]+[AEIOUaeiou]\"\
    , word)\n    if length(index_arr) != 0\n        return index_arr[end][end]\n \
    \   else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmb3shvyu.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpmb3shvyu.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmb3shvyu.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmb3shvyu.jl:27\\ntest set:\
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    #Return the closest vowel that\
    \ stands between two consonants \n    #from the right side of the word (case sensitive).\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcq4vc2nb.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcq4vc2nb.jl:1\n\
    in expression starting at /tmp/tmpcq4vc2nb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    k = findall(r\"[^aeiou]\", word)\n\
    \    if length(k) >= 2\n        return word[k[end-1]+1:k[end]]\n    else\n   \
    \     return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7sll68pt.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching +(::UnitRange{Int64}, ::Int64)\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: array .+ scalar\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\\
    n    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp7sll68pt.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7sll68pt.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7sll68pt.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp7sll68pt.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching +(::UnitRange{Int64},\
    \ ::Int64)\\n  For element-wise addition, use broadcasting with dot syntax: array\
    \ .+ scalar\\n  Closest candidates are:\\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp7sll68pt.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    closest = ''\n    if word[1] in\
    \ \"AEIOUaeiou\"\n        return ''\n    end\n    l = length(word)\n    if word[l]\
    \ in \"AEIOUaeiou\"\n        return ''\n    end\n    for i in 2:l-1\n        if\
    \ word[i] in \"AEIOUaeiou\"\n            if (word[i-1] in \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    ) & (word[i+1] in \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\")\n          \
    \      closest = word[i]\n            end\n        end\n    end\n    return closest\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx83g3q04.jl:16\nin expression starting at\
    \ /tmp/tmpx83g3q04.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    reverse_word = reverse(word)\n\
    \    for i = 1:length(reverse_word)\n        for j = 1:length(reverse_word)\n\
    \            if i != j\n                if reverse_word[i] in \"aeiou\" && reverse_word[j]\
    \ in \"aeiou\"\n                    return reverse(reverse_word[i])\n        \
    \        end\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmposguul0v.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching reverse(::Char)\\n  Closest candidates are:\\n    reverse(!Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\n    reverse(!Matched::Pair{A,\
    \ B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmposguul0v.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmposguul0v.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmposguul0v.jl:32\\ntest set:\
    \ Test Failed at /tmp/tmposguul0v.jl:34\\n  Expression: candidate(\"full\") ==\
    \ \"u\"\\n   Evaluated: \"\" == \"u\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    word_array = split(word, \"\")\n    result = \"\"\n    for\
    \ i in 1:length(word_array)\n        if (word_array[i] in vowels) && (word_array[i-1]\
    \ in vowels)\n            result = word_array[i]\n            break\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpyw1s6onq.jl:32\\n  Expression: candidate(\"\
    yogurt\") == \"u\"\\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyw1s6onq.jl:32 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyw1s6onq.jl:31\\ntest set: Test\
    \ Failed at /tmp/tmpyw1s6onq.jl:33\\n  Expression: candidate(\"full\") == \"u\"\
    \\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpyw1s6onq.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpyw1s6onq.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    ls = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    vowel_index = -1\n    for i in range(length(word)-1, 0, -1)\n\
    \        if word[i] in ls\n            vowel_index = i\n            break\n  \
    \      end\n    end\n    if vowel_index > 0\n        for i in range(vowel_index-1,\
    \ 0, -1)\n            if !(word[i] in ls)\n                return word[vowel_index]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy73h8nmd.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  ArgumentError:\
    \ range(5.0, stop=0.0, length=-1): negative length\\n  Stacktrace:\\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\\n      @ Base ./twiceprecision.jl:724\\\
    n    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\\n      @ Base ./twiceprecision.jl:706\\n    [3] _linspace\\n  \
    \    @ ./twiceprecision.jl:703 [inlined]\\n    [4] range_start_stop_length\\n\
    \      @ ./range.jl:529 [inlined]\\n    [5] _range\\n      @ ./range.jl:128 [inlined]\\\
    n    [6] range\\n      @ ./range.jl:112 [inlined]\\n    [7] get_closest_vowel(word::String)\\\
    n      @ Main /tmp/tmpy73h8nmd.jl:18\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpy73h8nmd.jl:38 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpy73h8nmd.jl:37\\ntest\
    \ set: Error During Test at /tmp/tmpy73h8nmd.jl:39\\n  Test threw exception\\\
    n  Expression: candidate(\"full\") == \"u\"\\n  ArgumentError: range(3.0, stop=0.0,\
    \ length=-1): negative length\\n  Stacktrace:\\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\\n      @ Base ./twiceprecision.jl:724\\\
    n    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\\n      @ Base ./twiceprecision.jl:706\\n    [3] _linspace\\n  \
    \    @ ./twiceprecision.jl:703 [inlined]\\n    [4] range_start_stop_length\\n\
    \      @ ./range.jl:529 [inlined]\\n    [5] _range\\n      @ ./range.jl:128 [inlined]\\\
    n    [6] range\\n      @ ./range.jl:112 [inlined]\\n    [7] get_closest_vowel(word::String)\\\
    n      @ Main /tmp/tmpy73h8nmd.jl:18\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \"\"\"Find the closest vowel from\
    \ the right side of the word and return it. \"\"\"\n    vowels = \"aeiou\"\n \
    \   left = 0\n    right = length(word)\n    index = length(word)\n    result =\
    \ \"\"\n    for i in 1:length(word)\n        if word[i] in vowels\n          \
    \  left = i\n            break\n        end\n    end\n    for i in (length(word):-1:1)\n\
    \        if word[i] in vowels\n            right = i\n            break\n    \
    \    end\n    end\n    if (left != 0) & (right != length(word))\n        distance\
    \ = right - left\n        index = right\n        for i in (left+1):(right-1)\n\
    \            if word[i] in vowels\n                d = right - i\n           \
    \     if d < distance\n                    distance = d\n                    index\
    \ = i\n                end\n            end\n        end\n        result = word[index]\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqmod5bj4.jl:55\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqmod5bj4.jl:48\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqmod5bj4.jl:55 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqmod5bj4.jl:54\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiou\"\n    new_word\
    \ = copy(word)\n    for i = 1:length(word)\n        if !(word[i] in vowels)\n\
    \            new_word[i] = \" \"\n        end\n    end\n    words = split(new_word,\
    \ \" \")\n    if length(words) <= 1\n        return \"\"\n    end\n    words =\
    \ reverse(words)\n    return words[2][1]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3v5mcife.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching copy(::String)\\n  Closest candidates are:\\n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any,\
    \ <:LinearAlgebra.UpperHessenberg}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:418\\\
    n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.SymTridiagonal})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:419\\\
    n    copy(!Matched::LinearAlgebra.CholeskyPivoted) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:492\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp3v5mcife.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3v5mcife.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3v5mcife.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp3v5mcife.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching copy(::String)\\\
    n  Closest candidates are:\\n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any,\
    \ <:LinearAlgebra.UpperHessenberg}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:418\\\
    n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.SymTridiagonal})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:419\\\
    n    copy(!Matched::LinearAlgebra.CholeskyPivoted) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:492\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp3v5mcife.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"AEIOUaeiou\"\n    word_r\
    \ = reverse(word)\n    for i in eachindex(word_r)\n        if i < length(word_r)\
    \ - 1 && word_r[i] in vowels && word_r[i+1] in vowels\n            return \n \
    \       end\n    end\n    return \"\"\nend\nget_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\nget_closest_vowel(\"FULL\") ==> \"U\"\nget_closest_vowel(\"quick\") ==>\
    \ \"\"\nget_closest_vowel(\"ab\") ==> \"\"\n \nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnuidoasq.jl:25\nin expression starting at\
    \ /tmp/tmpnuidoasq.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowel = \"AEIOUaeiou\"\n    consonant\
    \ = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n    for i in 1:length(word)\n\
    \        if in(word[end-i+1], vowel) && in(word[end-i], consonant)\n         \
    \   return word[end-i+1]\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwltkkxcu.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpwltkkxcu.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwltkkxcu.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwltkkxcu.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    closest_vowel = \"\"\n    for idx = length(word):-1:1\n \
    \       if word[idx] in vowels\n            closest_vowel = word[idx]\n      \
    \      if idx != length(word)\n                if word[idx+1] in vowels\n    \
    \                break\n                end\n            end\n        end\n  \
    \  end\n    return closest_vowel\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuqt_2e2c.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqt_2e2c.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqt_2e2c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuqt_2e2c.jl:36\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqt_2e2c.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqt_2e2c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuqt_2e2c.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqt_2e2c.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqt_2e2c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuqt_2e2c.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqt_2e2c.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqt_2e2c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuqt_2e2c.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuqt_2e2c.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    word = word[end:-1:1]\n    word = replace(word, \"a\", \"\
    0\")\n    word = replace(word, \"e\", \"0\")\n    word = replace(word, \"i\",\
    \ \"0\")\n    word = replace(word, \"o\", \"0\")\n    word = replace(word, \"\
    u\", \"0\")\n    word = replace(word, \"y\", \"0\")\n    word = replace(word,\
    \ \"A\", \"0\")\n    word = replace(word, \"E\", \"0\")\n    word = replace(word,\
    \ \"I\", \"0\")\n    word = replace(word, \"O\", \"0\")\n    word = replace(word,\
    \ \"U\", \"0\")\n    word = replace(word, \"Y\", \"0\")\n    word = replace(word,\
    \ \"0\", \"\")\n    if word == \"\"\n        return \"\"\n    end\n    for x in\
    \ 1:length(word)\n        if x == length(word)\n            return \"\"\n    \
    \    end\n        if (word[x] in vowels) && (word[x+1] in vowels)\n          \
    \  break\n        end\n    end\n    return word[x]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp204punl4.jl:49\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp204punl4.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp204punl4.jl:49 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp204punl4.jl:48\\ntest set:\
    \ Error During Test at /tmp/tmp204punl4.jl:50\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching replace(::String,\
    \ ::String, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp204punl4.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp204punl4.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scop"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) < 2\n        return\
    \ \"\"\n    end\n    if !isalpha(word[end])\n        word = word[1:end-1]\n  \
    \  end\n    if !isalpha(word[1])\n        word = word[2:end]\n    end\n    vowels\
    \ = \"aeiou\"\n    for i = length(word):-1:2\n        if (word[i] in vowels) &&\
    \ (word[i-1] in \"bcdfghjklmnpqrstvwxyz\")\n            return word[i]\n     \
    \   end\n    end\n    return \"\"\nend\n\"\"\"\n    sort_by_value(dictionary)\
    \ -> sorted_dictionary\n    Takes a dict or OrderedDict and returns a sorted OrderedDict\
    \ by value.\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpc9ka515e.jl:33\nin expression starting at /tmp/tmpc9ka515e.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    is_cons = Set(\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    )\n    is_vowel = Set(\"aeiouAEIOU\")\n    word_r = reverse(word)\n    for i in\
    \ 1:length(word_r)\n        # We didn't find a vowel yet\n        if in(word_r[i],\
    \ is_vowel) == false\n            continue\n        # We found a vowel, check\
    \ if it's between two consonants\n        elseif i != length(word_r) && in(word_r[i+1],\
    \ is_cons)\n            return word_r[i]\n        else\n            return \"\"\
    \n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2pw_b95m.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp2pw_b95m.jl:25\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2pw_b95m.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2pw_b95m.jl:36\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = (\"a\",\"e\",\"i\",\"\
    o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"U\")\n    word_length = length(word)\n   \
    \ for i = word_length-1:-1:2\n        if word[i] in vowels\n            return\
    \ word[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmhviik64.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmhviik64.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhviik64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmhviik64.jl:31\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmhviik64.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhviik64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmhviik64.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmhviik64.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhviik64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmhviik64.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmhviik64.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmhviik64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmhviik64.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmhviik64.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Some algorithms only work for\
    \ ASCII\n    # so in that case we want to use only ASCII characters, not Unicode\
    \ ones\n    # this is the only way I could figure out how to do it\n    search\
    \ = collect(ASCIIString(word))\n    if search[end] in [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n        return \"\"\n    end\n    for i in search[end-1:-1:(-1)]\n\
    \        if i in [\"a\", \"e\", \"i\", \"o\", \"u\"]\n            return i\n \
    \       end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprx0omjn1.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ ASCIIString not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmprx0omjn1.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprx0omjn1.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprx0omjn1.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmprx0omjn1.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: ASCIIString not defined\\n \
    \ Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmprx0omjn1.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprx0omjn1.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprx0omjn1.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmprx0omjn1.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: ASCIIString not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmprx0omjn1.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprx0omjn1.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprx0omjn1.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmprx0omjn1.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: ASCIIString not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = ['a', 'e', 'i', 'o',\
    \ 'u']\n    #find the first vowel by counting backwards\n    found = false\n \
    \   for (index, letter) in enumerate(reverse(word))\n        if letter in vowels\n\
    \            found = true\n            break\n        end\n    end\n    if found\n\
    \        #now find the previous consonant\n        found = false\n        for\
    \ (index, letter) in enumerate(reverse(word[1:end-index]))\n            if letter\
    \ \u2209 vowels\n                found = true\n                break\n       \
    \     end\n        end\n        if found\n            return word[end-index]\n\
    \        end\n    end\n    return \"\"\nend\nprintln(get_closest_vowel(\"yogurt\"\
    ))\nprintln(get_closest_vowel(\"FULL\"))\nprintln(get_closest_vowel(\"quick\"\
    ))\nprintln(get_closest_vowel(\"ab\"))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: index not defined\nStacktrace:\n [1] get_closest_vowel(word::String)\n\
    \   @ Main /tmp/tmpfpsyicdt.jl:28\n [2] top-level scope\n   @ /tmp/tmpfpsyicdt.jl:40\n\
    in expression starting at /tmp/tmpfpsyicdt.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    word = reverse(lowercase(word))\n    for i = 1:length(word)\n\
    \        if (word[i] in vowels)\n            if (i < length(word)) && (word[i+1]\
    \ in vowels)\n                continue\n            elseif (i == length(word))\n\
    \                continue\n            else\n                return reverse(uppercase(word[i]))\n\
    \            end\n        end\n    end\n    return \"\"\nend\n \nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3u0lmr3p.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3u0lmr3p.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3u0lmr3p.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp3u0lmr3p.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3u0lmr3p.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3u0lmr3p.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp3u0lmr3p.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3u0lmr3p.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3u0lmr3p.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp3u0lmr3p.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3u0lmr3p.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3u0lmr3p.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp3u0lmr3p.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3u0lmr3p.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Add your code here\n    return\
    \ \"\";\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9k4631op.jl:24\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9k4631op.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9k4631op.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9k4631op.jl:25\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9k4631op.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9k4631op.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9k4631op.jl:29\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9k4631op.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9k4631op.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9k4631op.jl:30\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9k4631op.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9k4631op.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9k4631op.jl:34\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9k4631op.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    for\
    \ (i,letter) in enumerate(word)\n        if i > 1 && letter in vowels && !(word[i-1]\
    \ in vowels) && !(word[i-2] in vowels)\n            return letter\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprg89_ko9.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmprg89_ko9.jl:18\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmprg89_ko9.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmprg89_ko9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmprg89_ko9.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmprg89_ko9.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmprg89_ko9.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmprg89_ko9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmprg89_ko9.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"bad\") == \"a\"\\n  BoundsError: attempt to access 3-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) == 1\n       \
    \ return \"\"\n    end\n    word = word[end:-1:1]\n    vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    if word[end] in\
    \ vowels || word[1] in vowels\n        return \"\"\n    end\n    is_consonant\
    \ = true\n    for (i, w) in enumerate(word)\n        if w in vowels\n        \
    \    if is_consonant\n                is_consonant = false\n            else\n\
    \                return w\n            end\n        else\n            is_consonant\
    \ = true\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp35ioq5dn.jl:43\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35ioq5dn.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35ioq5dn.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp35ioq5dn.jl:44\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35ioq5dn.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35ioq5dn.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp35ioq5dn.jl:48\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35ioq5dn.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35ioq5dn.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp35ioq5dn.jl:49\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35ioq5dn.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35ioq5dn.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp35ioq5dn.jl:53\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp35ioq5dn.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    nullable = Set{Char}()\n    for\
    \ c in word\n        if c in [\"a\", \"e\", \"i\", \"o\", \"u\"]\n           \
    \ return c\n        elseif !(c in [\"a\", \"e\", \"i\", \"o\", \"u\"])\n     \
    \       push!(nullable, c)\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptep9urxl.jl:31\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptep9urxl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptep9urxl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptep9urxl.jl:32\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptep9urxl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptep9urxl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptep9urxl.jl:36\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptep9urxl.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptep9urxl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptep9urxl.jl:37\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptep9urxl.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptep9urxl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptep9urxl.jl:41\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptep9urxl.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    rword\
    \ = reverse(word)\n    for i in 1:length(rword)\n        if rword[i] in vowels\n\
    \            return word[length(word)-i+1]\n        end\n    end\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    is_vowel(x) = x in vowels\n    right = reverse(word)\n  \
    \  right_vowels = [x for x in right if is_vowel(x)]\n    right_consonants = [x\
    \ for x in right if !is_vowel(x)]\n    res = []\n    for (i, c) in enumerate(right_consonants)\n\
    \        if i + 1 < length(right_consonants)\n            if right_consonants[i+1]\
    \ in vowels\n                push!(res, right_consonants[i+1])\n            end\n\
    \        end\n    end\n    res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    result = \"\"\n    idx = findlast(collect(word), x -> x in\
    \ vowels)\n    # if we found a vowel check if it is followed by a consonant\n\
    \    if idx != nothing\n        if word[idx+1] \u2209 vowels\n            result\
    \ = word[idx]\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp04jikxw_.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching findlast(::Vector{Char}, ::var\"#1#2\"{Vector{String}})\\n \
    \ Closest candidates are:\\n    findlast(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2191\\\
    n    findlast(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2112\\\
    n    findlast(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2102\\\
    n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp04jikxw_.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp04jikxw_.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp04jikxw_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp04jikxw_.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching findlast(::Vector{Char},\
    \ ::var\"#1#2\"{Vector{String}})\\n  Closest candidates are:\\n    findlast(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2191\\n    findlast(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2112\\n    findlast(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2102\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp04jikxw_.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp04jikxw_.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp04jikxw_.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    i = length(word)\n    while i\
    \ >= 1\n        if word[i] in \"aeiou\"\n            return word[i]\n        end\n\
    \        i -= 1\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb7u2oxet.jl:30\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) <= 1\n       \
    \ return \"\"\n    end\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ arr = string(word)\n    i = length(arr)\n    max_index = 0\n    while i > 1\n\
    \        if haskey(vowels, arr[i]) && !haskey(vowels, arr[i-1])\n            max_index\
    \ = i\n            break\n        end\n        i -= 1\n    end\n    return arr[max_index]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqi6j88kk.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching haskey(::Vector{String}, ::Char)\\n  Closest candidates are:\\\
    n    haskey(!Matched::Base.ImmutableDict, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\\\
    n    haskey(!Matched::WeakKeyDict{K}, ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\\\
    n    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqi6j88kk.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqi6j88kk.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqi6j88kk.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpqi6j88kk.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching haskey(::Vector{String},\
    \ ::Char)\\n  Closest candidates are:\\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\\\
    n    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqi6j88kk.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqi6j88kk.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqi6j88kk.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpqi6j88kk.jl:39\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i = length(word), 1, -1\n        if in(word[i], vowels)\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid iteration specification\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp32xftmem.jl:17\nin expression starting at\
    \ /tmp/tmp32xftmem.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n  # Remove vowels from begining of\
    \ word\n  word = join(filter(s -> ! isvowel(s), word))\n  vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n  for i = length(word):-1:1\n    if isvowel(word[i])\n\
    \      return word[i]\n    end\n  end\n  return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppm63039u.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(s::Char)\\n   \
    \  @ Main /tmp/tmppm63039u.jl:17\\n   [2] filter(f::var\"#1#2\", s::String)\\\
    n     @ Base ./strings/substring.jl:246\\n   [3] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmppm63039u.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppm63039u.jl:31 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmppm63039u.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmppm63039u.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#2\")(s::Char)\\n     @ Main /tmp/tmppm63039u.jl:17\\n   [2]\
    \ filter(f::var\"#1#2\", s::String)\\n     @ Base ./strings/substring.jl:246\\\
    n   [3] get_closest_vowel(word::String)\\n     @ Main /tmp/tmppm63039u.jl:17\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppm63039u.jl:32 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmppm63039u.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmppm63039u.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#2\")(s::Char)\\n     @ Main /tmp/tmppm63039u.jl:17\\n   [2]\
    \ filter(f::var\"#1#2\", s::String)\\n     @ Base ./strings/substring.jl:246\\\
    n   [3] get_closest_vowel(word::String)\\n     @ Main /tmp/tmppm63039u.jl:17\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppm63"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    index = -1\n    for i\
    \ = 1:length(word)\n        if i == length(word)\n            if ( (word[length(word)-1]\
    \ in consonants) & (word[length(word)] in vowels) )\n                return word[length(word)]\n\
    \            else\n                return \"\"\n            end\n        end\n\
    \        if ( (word[length(word)-i] in consonants) & (word[length(word)-i+1] in\
    \ vowels) )\n            index = length(word)-i+1\n            break\n       \
    \ end\n    end\n    return word[index]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkqcrmbbm.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpkqcrmbbm.jl:32\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkqcrmbbm.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkqcrmbbm.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmpkqcrmbbm.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpkqcrmbbm.jl:32\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkqcrmbbm.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    end\n    vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    for i in 1:length(word)\n        for j in vowels\n\
    \            if (i + 1 <= length(word)) && j == word[i] && !(j in vowels) && !(word[i\
    \ + 1] in vowels)\n                return j\n            end\n        end\n  \
    \  end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: word not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpszt68fwi.jl:18\nin expression starting at /tmp/tmpszt68fwi.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    for i in length(word):-1:1\n \
    \       if isvowel(word[i])\n            if isvowel(word[i-1]) || isvowel(word[i+1])\n\
    \                continue\n            else\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn8krlg8_.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpn8krlg8_.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn8krlg8_.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn8krlg8_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpn8krlg8_.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpn8krlg8_.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn8krlg8_.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn8krlg8_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpn8krlg8_.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpn8krlg8_.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn8krlg8_.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn8krlg8_.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpn8krlg8_.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpn8krlg8_.jl:17\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for i in 1:length(word)\n\
    \        if haskey(vowels, word[i]) && i != 1 && i != length(word) && haskey(consonants,\
    \ word[i-1]) && haskey(consonants, word[i+1])\n            return word[i]\n  \
    \      end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcuake2ij.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching haskey(::String, ::Char)\\n  Closest candidates are:\\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\\\
    n    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpcuake2ij.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcuake2ij.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcuake2ij.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpcuake2ij.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching haskey(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\\\
    n    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpcuake2ij.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcuake2ij.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcuake2ij.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpcuake2ij.jl:32\\n  Test threw exce"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    len = length(word)\n    len =\
    \ ifelse(len==1, len, len-1)\n    pos = len\n    while pos>=1\n        letter\
    \ = word[pos]\n        if isvowel(letter)==false\n            if isvowel(word[pos+1])==true\n\
    \                return(word[pos+1])\n            end\n        end\n        pos\
    \ = pos-1\n    end\n    return(\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi3qmq_lt.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpi3qmq_lt.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi3qmq_lt.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi3qmq_lt.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpi3qmq_lt.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpi3qmq_lt.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi3qmq_lt.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi3qmq_lt.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpi3qmq_lt.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpi3qmq_lt.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi3qmq_lt.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi3qmq_lt.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpi3qmq_lt.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpi3qmq_lt.jl:21\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word = word[end:-1:1] \n    for\
    \ (i,c) in enumerate(word)\n        if c in \"aeiouAEIOU\"\n            if i ==\
    \ 1\n                return \"\"\n            else\n                return word[i-1]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5_2rokp0.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp5_2rokp0.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5_2rokp0.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5_2rokp0.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    split\
    \ = 1\n    for i in 1:length(word)\n        if split > 1\n            return split\n\
    \        end\n        if i != 1\n            if (lowercase(word[i]) in vowels)\
    \ & (lowercase(word[i-1]) in vowels)\n                split = split + 1\n    \
    \        end\n        end\n    end\n    return split\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp60wrtgki.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp60wrtgki.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp60wrtgki.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp60wrtgki.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp60wrtgki.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp60wrtgki.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp60wrtgki.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if ismatch(r\"([^aeiou])*?([aeiou])[^aeiou]*$\"\
    , word)\n        return match(r\"([^aeiou])*?([aeiou])[^aeiou]*$\", word).captures[2]\n\
    \    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi3fmebqd.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ ismatch not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpi3fmebqd.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi3fmebqd.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi3fmebqd.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpi3fmebqd.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: ismatch not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpi3fmebqd.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi3fmebqd.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi3fmebqd.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpi3fmebqd.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: ismatch not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpi3fmebqd.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi3fmebqd.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi3fmebqd.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpi3fmebqd.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: ismatch not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpi3fmebqd.jl:16\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    for i in word\n        if\
    \ i in \"aeiou\"\n            return i\n        end\n    end\n    \n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr05u73z4.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpr05u73z4.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr05u73z4.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr05u73z4.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpr05u73z4.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpr05u73z4.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr05u73z4.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    vowels = \"aeiouAEIOU\"\n\
    \    cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    \n    w = word[end:-1:1]\
    \ #reverse word\n    \n    i = 1\n    curr = \"\"\n    while i < length(w) &&\
    \ curr == \"\"\n        if in(w[i], cons) && in(w[i-1], cons) && in(w[i+1], vowels)\n\
    \            curr = w[i+1]\n        end\n        i += 1\n    end\n    \n    curr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjzfsua94.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpjzfsua94.jl:25\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpjzfsua94.jl:38 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpjzfsua94.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmpjzfsua94.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpjzfsua94.jl:25\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpjzfsua94.jl:39 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpjzfsua94.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmpjzfsua94.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    new_word = word[end:-1:end]\n    for i in eachindex(new_word)\n\
    \        if (new_word[i] in vowels) && (new_word[i+1] in consonants)\n       \
    \     return new_word[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_2y9npgp.jl:31\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2y9npgp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2y9npgp.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_2y9npgp.jl:32\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2y9npgp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2y9npgp.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_2y9npgp.jl:36\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2y9npgp.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2y9npgp.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_2y9npgp.jl:37\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_2y9npgp.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_2y9npgp.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_2y9npgp.jl:41\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_2y9npgp.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    end_at = length(word)\n    for\
    \ i in reverse(1:length(word))\n        if isvowel(word[i])\n            end_at\
    \ = i\n            break\n        end\n    end\n    for i in reverse(1:end_at)\n\
    \        if isvowel(word[i])\n            return word[i]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpze90ujoq.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpze90ujoq.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpze90ujoq.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpze90ujoq.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpze90ujoq.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpze90ujoq.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpze90ujoq.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpze90ujoq.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpze90ujoq.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpze90ujoq.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpze90ujoq.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpze90ujoq.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpze90ujoq.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpze90ujoq.jl:18\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # write your code here\nend\n\
    @assert get_closest_vowel(\"yogurt\") == \"u\"\n@assert get_closest_vowel(\"FULL\"\
    ) == \"U\"\n@assert get_closest_vowel(\"quick\") == \"\"\n@assert get_closest_vowel(\"\
    ab\") == \"\"\n \nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    cons\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for i = length(word):-1:1\n\
    \        if (word[i] in cons) && (word[i-1] in cons) && (word[i+1] in vowels)\n\
    \            return word[i+1]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppp67bg0a.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [7]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmppp67bg0a.jl:19\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmppp67bg0a.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmppp67bg0a.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmppp67bg0a.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [5]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmppp67bg0a.jl:19\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmppp67bg0a.jl:31 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmppp67bg0a.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmppp67bg0a.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [5]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for char in reverse(word)\n        if char in vowels\n  \
    \          return char\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgtnjiqxn.jl:29\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtnjiqxn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtnjiqxn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpgtnjiqxn.jl:30\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtnjiqxn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtnjiqxn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpgtnjiqxn.jl:34\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtnjiqxn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtnjiqxn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpgtnjiqxn.jl:35\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtnjiqxn.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtnjiqxn.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpgtnjiqxn.jl:39\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgtnjiqxn.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    function is_vowel(c::Char)::Bool\n\
    \        return c in \"aeiouAEIOU\"\n    end\n    word = reverse(word)\n    cons_group\
    \ = join(collect(word[1]), \"\")\n    for i = 2:length(word)\n        if !is_vowel(word[i])\n\
    \            cons_group = join([word[i], cons_group], \"\")\n        else\n  \
    \          if is_vowel(word[i - 1])\n                cons_group = join([word[i],\
    \ cons_group], \"\")\n            else\n                return reverse(word[i])\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0j4h5k2k.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching reverse(::Char)\\n  Closest candidates are:\\n    reverse(!Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\n    reverse(!Matched::Pair{A,\
    \ B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp0j4h5k2k.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0j4h5k2k.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0j4h5k2k.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmp0j4h5k2k.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching reverse(::Char)\\\
    n  Closest candidates are:\\n    reverse(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\\
    n    reverse(!Matched::Pair{A, B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp0j4h5k2k.jl:28\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0j4h5k2k.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0j4h5k2k.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmp0j4h5k2k.jl:41\\n  Test threw exception\\n  Expression:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = Dict(\"A\" => 1, \"E\"\
    \ => 1, \"I\" => 1, \"O\" => 1, \"U\" => 1)\n    cons_count = 0\n    for i in\
    \ collect(1:length(word))\n        c = word[length(word) - i + 1]\n        if\
    \ c in keys(vowels)\n            if cons_count > 1\n                return c\n\
    \            end\n            cons_count = 0\n        else\n            cons_count\
    \ += 1\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi173xi_b.jl:36\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi173xi_b.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi173xi_b.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpi173xi_b.jl:37\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi173xi_b.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi173xi_b.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpi173xi_b.jl:41\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi173xi_b.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi173xi_b.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpi173xi_b.jl:42\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi173xi_b.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi173xi_b.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpi173xi_b.jl:46\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi173xi_b.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if !any(x in \"AEIOU\" for x in\
    \ word) return \"\"\n    for (i,x) in enumerate(reverse(word))\n        if x in\
    \ \"AEIOU\"\n            return x\n        elseif x in \"BCDFGHJKLMNPQRSTVWXYZ\"\
    \n            return \"\"\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6vhs80z4.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6vhs80z4.jl:1\n\
    in expression starting at /tmp/tmp6vhs80z4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    test =  \"aeiou\"\n    for i =\
    \ 1:length(word)\n        if !isempty(search(test,word[i]))\n            if !isempty(search(test,word[i-1]))\
    \ || !isempty(search(test,word[i+1]))\n                continue\n            else\n\
    \                return word[i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1di37aop.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp1di37aop.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1di37aop.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1di37aop.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp1di37aop.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp1di37aop.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1di37aop.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1di37aop.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp1di37aop.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp1di37aop.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1di37aop.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1di37aop.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp1di37aop.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp1di37aop.jl:18\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    is_vowel(ch) = \"aeiou\".find(ch)\
    \ >= 0 ? true : false\n    for i = length(word):-1:1\n        prev_char = word[i-1]\n\
    \        if is_vowel(prev_char)\n            return \"\"\n        end\n      \
    \  if !is_vowel(word[i])\n            continue\n        end\n        if i == length(word)\n\
    \            return \"\"\n        end\n        if !is_vowel(word[i+1])\n     \
    \       return word[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0g7_nm3d.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  type String has\
    \ no field find\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] (::var\"#is_vowel#1\")(ch::Char)\\n     @ Main /tmp/tmp0g7_nm3d.jl:16\\\
    n   [3] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp0g7_nm3d.jl:19\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp0g7_nm3d.jl:39 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp0g7_nm3d.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmp0g7_nm3d.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] (::var\"#is_vowel#1\"\
    )(ch::Char)\\n     @ Main /tmp/tmp0g7_nm3d.jl:16\\n   [3] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp0g7_nm3d.jl:19\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp0g7_nm3d.jl:40 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp0g7_nm3d.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmp0g7_nm3d.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] (::var\"#is_vowel#1\"\
    )(ch::Char)\\n     @ Main /tmp/tmp0g7_nm3d.jl:16\\n   [3] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp0g7_nm3d.jl:19\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp0g7_nm3d.jl:41 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # Your code here\n    vowels =\
    \ \"aeiou\"\n    for i in eachindex(word)\n        if word[i] in vowels\n    \
    \        if i > 1 && word[i-1] in vowels\n                continue\n         \
    \   elseif i == 1 && word[i-1] in vowels\n                continue\n         \
    \   elseif i == length(word)\n                continue\n            elseif word[i+1]\
    \ in vowels\n                continue\n            else\n                return\
    \ word[i]\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2u9_obuz.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp2u9_obuz.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2u9_obuz.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2u9_obuz.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp2u9_obuz.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp2u9_obuz.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2u9_obuz.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    word_rev\
    \ = word[end:-1:1]\n    word_rev_len = length(word_rev)\n    for i = 1:word_rev_len\n\
    \        if contains(vowels, word_rev[i])\n            idx = i\n            break\n\
    \        end\n    end\n    if idx == 1\n        return \"\"\n    end\n    if word_rev[idx-1]\
    \ == word_rev[idx+1]\n        return \"\"\n    end\n    return word_rev[idx]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph4zl3eij.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ idx not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n\
    \     @ Main /tmp/tmph4zl3eij.jl:25\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph4zl3eij.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph4zl3eij.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmph4zl3eij.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: idx not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmph4zl3eij.jl:25\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph4zl3eij.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph4zl3eij.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmph4zl3eij.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: idx not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmph4zl3eij.jl:25\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph4zl3eij.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph4zl3eij.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmph4zl3eij.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: idx not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmph4zl3eij.jl:25\\\
    n   [2] macro expa"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    n = length(word)\n    d = 100\n\
    \    for i in 1:n-1\n        if \"AEIOU\".find(word[i]) != -1 && !\"AEIOU\".find(word[i+1])\
    \ != -1\n            dist = n - i - 1\n            if dist < d\n             \
    \   vowel = word[i]\n                d = dist\n            end\n        end\n\
    \    end\n    return vowel\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprhf3re4p.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  type String has\
    \ no field find\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] get_closest_vowel(word::String)\\n     @ Main /tmp/tmprhf3re4p.jl:19\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprhf3re4p.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprhf3re4p.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmprhf3re4p.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmprhf3re4p.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprhf3re4p.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprhf3re4p.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmprhf3re4p.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmprhf3re4p.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprhf3re4p.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprhf3re4p.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmprhf3re4p.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\")"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    \n    # check if string is empty\n\
    \    if length(word) < 1\n        return \"\"\n    end\n    \n    # check if string\
    \ is just one character\n    if length(word) == 1\n        return \"\"\n    end\n\
    \    \n    # define the vowels\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    \n    # define a counter \n    x = length(word)\n\
    \    \n    # create a loop that goes from the end of the string to the beginning\n\
    \    while x > 1\n        \n        # check if the character is a vowel \n   \
    \     if word[x] in vowels\n            \n            # check if the previous\
    \ character is a vowel \n            if word[x-1] in vowels\n                \n\
    \                # decrease the counter\n                x -= 1\n            \
    \    \n            else\n                \n                # if the previous character\
    \ is not a vowel, the vowel found is the closest one\n                return word[x]\n\
    \            end\n            \n        else\n            \n            # if the\
    \ character is not a vowel, decrease the counter\n            x -= 1\n       \
    \ end\n    end\n    \n    # if no vowels were found, return an empty string\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiw3mgxx6.jl:66\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiw3mgxx6.jl:66 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiw3mgxx6.jl:65\ntest set: Test\
    \ Failed at /tmp/tmpiw3mgxx6.jl:67\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiw3mgxx6.jl:67 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiw3mgxx6.jl:65\ntest set: Test\
    \ Failed at /tmp/tmpiw3mgxx6.jl:71\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiw3mgxx6.jl:71 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiw3mgxx6.jl:65\ntest set: Test\
    \ Failed at /tmp/tmpiw3mgxx6.jl:72\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiw3mgxx6.jl:72 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiw3mgxx6.jl:65\ntest set: Test\
    \ Failed at /tmp/tmpiw3mgxx6.jl:76\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiw3mgxx6.jl:63\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    letters = split(word, \"\")\n    letters_length = length(letters)\n\
    \    if letters_length <= 2\n        return \"\"\n    end\n    closest_vowel =\
    \ \"\"\n    closest_index = 100\n    for i in 2:letters_length-1\n        if !in(letters[i],\
    \ vowels)\n            continue\n        end\n        if !in(letters[i-1], vowels)\
    \ && !in(letters[i+1], vowels)\n            if i < closest_index\n           \
    \     closest_index = i\n                closest_vowel = letters[i]\n        \
    \    end\n        end\n    end\n    closest_vowel\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe100uks1.jl:42\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"o\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe100uks1.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe100uks1.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe100uks1.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word = lowercase(word)\n    vowels\
    \ = ['a', 'e', 'i', 'o', 'u']\n    for i in 1:length(word)\n        if word[end-i]\
    \ in vowels\n            return uppercase(word[end-i])\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp20xqnu25.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp20xqnu25.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp20xqnu25.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp20xqnu25.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp20xqnu25.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp20xqnu25.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp20xqnu25.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if word[end] in \"aeiouAEIOU\"\
    \ || word[1] in \"aeiouAEIOU\"\n        return \"\"\n    end\n    for i in 2:length(word)\n\
    \        if word[i] in \"aeiouAEIOU\"\n            if word[i-1] not in \"aeiouAEIOU\"\
    \ && word[i+1] not in \"aeiouAEIOU\"\n                return word[i]\n       \
    \     end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"not\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp96pqokps.jl:21\nin expression starting at /tmp/tmp96pqokps.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    #only vowels\n    if (word ==\
    \ word * r\"a|e|i|o|u\")\n        return \"\"\n    end\n    #only consonants\n\
    \    if (word == word * r\"[^aeiou]\")\n        return \"\"\n    end\n    #get\
    \ all vowels\n    vowels = matchall(r\"[aeiou]\", word)\n    #for each vowel,\
    \ get the 2 closest consonants\n    consonants = [word[i+1:word[i+1:end]==r\"\
    [^aeiou]\" ? i+1+findfirst(r\"[^aeiou]\", word[i+1:end])+1 : end] for i in eachindex(vowels)]\n\
    \    #get the left most one\n    return vowels[findfirst(consonants) !== nothing\
    \ ? findfirst(consonants) : end]\nend\n\"\"\"\nprint(get_closest_vowel(\"yogurt\"\
    ))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\n\
    print(get_closest_vowel(\"ab\"))\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpsjeebalx.jl:31\nin expression starting at /tmp/tmpsjeebalx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = \"aeiouAEIOU\"\n    for\
    \ i in 1:length(word)\n        if (word[i] in vowels) && (((word[i+1] in vowels)\
    \ == false) || (i == length(word)))\n            return word[i]\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9gpljixe.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp9gpljixe.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9gpljixe.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9gpljixe.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # TODO: your code goes here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxc32x0du.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpxc32x0du.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxc32x0du.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxc32x0du.jl:22\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    if length(word) == 1\n        return \"\"\n    end\n    if\
    \ length(word) > 1\n        for i in 1:length(word)\n            if word[end -\
    \ i] in vowels\n                if word[end - i - 1] in vowels\n             \
    \       break\n                else\n                    return word[end - i]\n\
    \                end\n            end\n        end\n    end\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpiq8zswc_.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpiq8zswc_.jl:22\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpiq8zswc_.jl:38 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpiq8zswc_.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmpiq8zswc_.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpiq8zswc_.jl:22\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpiq8zswc_.jl:39 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpiq8zswc_.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmpiq8zswc_.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if word == \"\"\n        return\
    \ \"\"\n    end\n    vowels = \"aeiouAEIOU\"\n    for i = length(word):-1:2\n\
    \        if findin(vowels, word[i]) != 0\n            if !(findin(vowels, word[i-1])\
    \ != 0) && !(findin(vowels, word[i+1]) != 0)\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl01krhd8.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ findin not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpl01krhd8.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl01krhd8.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl01krhd8.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpl01krhd8.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: findin not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpl01krhd8.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl01krhd8.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl01krhd8.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpl01krhd8.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: findin not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpl01krhd8.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpl01krhd8.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpl01krhd8.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpl01krhd8.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: findin not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpl01krhd8.jl:21\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word_length = size(word)\n   \
    \ word_to_upper = String(uppercase(word))\n    vowels = [\"A\", \"E\", \"I\",\
    \ \"O\", \"U\"]\n    if word_length < 3\n        return \"\"\n    end\n    for\
    \ i = word_length:-1:3\n        last_vowel = word_to_upper[i-1]\n        if  last_vowel\
    \ in vowels\n            if !(last_vowel in vowels)\n                return \"\
    \"\n            end\n            return word[i-1]\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8rz83di1.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching size(::String)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\\\
    n    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\\\
    n    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:567\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp8rz83di1.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8rz83di1.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8rz83di1.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp8rz83di1.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching size(::String)\\\
    n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\\\
    n    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\\\
    n    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.Q"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    all_vowels = \"AEIOUaeiou\"\n\
    \    i = length(word)\n    while i > 1\n        ch1 = word[i]\n        ch2 = word[i-1]\n\
    \        if (ch1 in all_vowels) && (ch2 in all_vowels) == false\n            return\
    \ ch1\n        end\n        i -= 1\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqjd4s42a.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqjd4s42a.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqjd4s42a.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqjd4s42a.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpqjd4s42a.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpqjd4s42a.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqjd4s42a.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    word_reverse = word[end:-1:1]\n    vowels_idx = findall(x\
    \ -> in(x, vowels), word_reverse)\n    for vowel_idx in vowels_idx\n        if\
    \ vowel_idx == 1\n            return \"\"\n        elseif vowel_idx == length(word_reverse)\n\
    \            return \"\"\n        elseif !in(word_reverse[vowel_idx + 1], vowels)\
    \ && !in(word_reverse[vowel_idx - 1], vowels)\n            return word_reverse[vowel_idx]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_uf_9jgq.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_uf_9jgq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_uf_9jgq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_uf_9jgq.jl:36\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_uf_9jgq.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_uf_9jgq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_uf_9jgq.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_uf_9jgq.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_uf_9jgq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_uf_9jgq.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_uf_9jgq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_uf_9jgq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_uf_9jgq.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_uf_9jgq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    n = length(word)\n    for i in\
    \ 0:n\n        if i > 1 && (word[i] in [\"a\", \"e\", \"i\", \"o\", \"u\"]) &&\
    \ \n                    (word[i-1] !in [\"a\", \"e\", \"i\", \"o\", \"u\"]) &&\
    \ \n                    (word[i-2] !in [\"a\", \"e\", \"i\", \"o\", \"u\"])\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm6n4hb4g.jl:19\nin expression starting at\
    \ /tmp/tmpm6n4hb4g.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    output = \"\"\n    if length(word) > 2\n        reverse_word\
    \ = reverse(word)\n        for i in eachindex(reverse_word)\n            if reverse_word[i]\
    \ in vowels\n                if i + 1 < length(reverse_word) && reverse_word[i\
    \ + 1] in vowels\n                    continue\n                elseif i - 1 >\
    \ 0 && reverse_word[i - 1] in vowels\n                    continue\n         \
    \       elseif i - 1 > 0 && reverse_word[i - 1] in vowels && i + 1 < length(reverse_word)\
    \ && reverse_word[i + 1] in vowels\n                    continue\n           \
    \     else\n                    output = reverse_word[i]\n                   \
    \ break\n                end\n            end\n        end\n    end\n    return\
    \ output\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxxueo3hi.jl:42\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxxueo3hi.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxxueo3hi.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpxxueo3hi.jl:43\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxxueo3hi.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxxueo3hi.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpxxueo3hi.jl:47\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxxueo3hi.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxxueo3hi.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpxxueo3hi.jl:48\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxxueo3hi.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxxueo3hi.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpxxueo3hi.jl:52\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxxueo3hi.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i in length(word):end:-1:1\n        if word[i] in vowels\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"length(word):\" range\
    \ expression \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_088eshb.jl:17\n\
    in expression starting at /tmp/tmp_088eshb.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    index = 0\n    for (i, letter)\
    \ in enumerate(word)\n        is_vowel = letter in \"aeiou\"\n        is_after_consonant\
    \ = i > 1 && !(word[i-1] in \"aeiou\")\n        is_before_consonant = i < length(word)\
    \ - 1 && !(word[i+1] in \"aeiou\")\n        if is_vowel && is_after_consonant\
    \ && is_before_consonant\n            index = i\n        end\n    end\n    return\
    \ (index == 0) ? \"\" : word[index]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptlz8oyp7.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmptlz8oyp7.jl:25\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptlz8oyp7.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptlz8oyp7.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmptlz8oyp7.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmptlz8oyp7.jl:25\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptlz8oyp7.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # your code here\n    # get consonants\n\
    \    # get vowels\n    # store both in seperate arrays\n    # find if they are\
    \ next to each other in the array\n    # closest is the first vowel from the end\
    \ of the array\n    \n    # create an empty string\n    result = \"\"\n    \n\
    \    # split consonants and vowels into seperate arrays\n    consonants = split(word,\
    \ \"a\") |> join |> split(\"e\") |> join |> split(\"i\") |> join |> split(\"o\"\
    ) |> join |> split(\"u\") |> join |> split(\"y\") |> join |> split(\"A\") |> join\
    \ |> split(\"E\") |> join |> split(\"I\") |> join |> split(\"O\") |> join |> split(\"\
    U\") |> join |> split(\"Y\") |> join\n    vowels = split(word, \"b\") |> join\
    \ |> split(\"c\") |> join |> split(\"d\") |> join |> split(\"f\") |> join |> split(\"\
    g\") |> join |> split(\"h\") |> join |> split(\"j\") |> join |> split(\"k\") |>\
    \ join |> split(\"l\") |> join |> split(\"m\") |> join |> split(\"n\") |> join\
    \ |> split(\"p\") |> join |> split(\"q\") |> join |> split(\"r\") |> join |> split(\"\
    s\") |> join |> split(\"t\") |> join |> split(\"v\") |> join |> split(\"w\") |>\
    \ join |> split(\"x\") |> join |> split(\"z\") |> join |> split(\"B\") |> join\
    \ |> split(\"C\") |> join |> split(\"D\") |> join |> split(\"F\") |> join |> split(\"\
    G\") |> join |> split(\"H\") |> join |> split(\"J\") |> join |> split(\"K\") |>\
    \ join |> split(\"L\") |> join |> split(\"M\") |> join |> split(\"N\") |> join\
    \ |> split(\"P\") |> join |> split(\"Q\") |> join |> split(\"R\") |> join |>\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvuc7eim5.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvuc7eim5.jl:1\n\
    in expression starting at /tmp/tmpvuc7eim5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    # remove first and last character,\
    \ then reverse for loop\n    for i = length(word)-2:-1:1\n        if (word[i]\
    \ in \"aeiou\") && (word[i+1] in \"bcdfghjklmnpqrstvwxyz\")\n            return\
    \ word[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3zz_5cb0.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp3zz_5cb0.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3zz_5cb0.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3zz_5cb0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp3zz_5cb0.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmp3zz_5cb0.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3zz_5cb0.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    for n in ngrams(word, 3)\n   \
    \     if (n[1] in (\"a\", \"e\", \"i\", \"o\", \"u\")) && !(n[2] in (\"a\", \"\
    e\", \"i\", \"o\", \"u\"))\n            return n[1]\n        end\n    end\n  \
    \  return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpswb5tzpn.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  UndefVarError:\
    \ ngrams not defined\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpswb5tzpn.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpswb5tzpn.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpswb5tzpn.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpswb5tzpn.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  UndefVarError: ngrams not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpswb5tzpn.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpswb5tzpn.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpswb5tzpn.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpswb5tzpn.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  UndefVarError: ngrams not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpswb5tzpn.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpswb5tzpn.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpswb5tzpn.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpswb5tzpn.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\\n  UndefVarError: ngrams not defined\\n  Stacktrace:\\\
    n   [1] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpswb5tzpn.jl:16\\\
    n   [2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    for i = length(word):-1:1\n        if !in(word[i], vowels)\
    \ && in(word[i+1], vowels)\n            return word[i+1]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfm_mrq5w.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [7]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmpfm_mrq5w.jl:18\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpfm_mrq5w.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpfm_mrq5w.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpfm_mrq5w.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [5]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmpfm_mrq5w.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpfm_mrq5w.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpfm_mrq5w.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpfm_mrq5w.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [5]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    pos = 0\n    res = 0\n    for i in 1:length(word)\n     \
    \   if word[end-i] in vowels\n            pos = end-i\n            break\n   \
    \     end\n    end\n    if pos == 0 \n        return \"\"\n    end\n    while\
    \ pos > 1\n        if (word[pos] in vowels) && (word[pos-1] \u2209 vowels)\n \
    \           res = pos\n            break\n        end\n        pos -= 1\n    end\n\
    \    if res == 0\n        return \"\"\n    end\n    return word[res]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy84b19nz.jl:21\nin expression starting at /tmp/tmpy84b19nz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    matchString=replace(word,r\"[aeiouAEIOU]\"\
    ,\"_\")\n    rindex(matchString,r\"_[^aeiouAEIOU]_\")==\"\" && return \"\"\n \
    \   split(matchString,r\"_[^aeiouAEIOU]_\")[end]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy13k_vdv.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching replace(::String, ::Regex, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpy13k_vdv.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpy13k_vdv.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpy13k_vdv.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpy13k_vdv.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpy13k_vdv.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpy13k_vdv.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    i = length(word)\n    while i\
    \ >= 1\n        if !(word[i] in [\"a\", \"e\", \"i\", \"o\", \"u\"]) && word[i-1]\
    \ in [\"a\", \"e\", \"i\", \"o\", \"u\"]\n            return word[i-1]\n     \
    \   end\n        i -= 1\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2hs6xqot.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp2hs6xqot.jl:18\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp2hs6xqot.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp2hs6xqot.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp2hs6xqot.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp2hs6xqot.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp2hs6xqot.jl:31 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp2hs6xqot.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp2hs6xqot.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowel_list = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    for i in 1:length(word)\n        if word[end-i] in vowel_list\n\
    \            return word[end-i]\n        end\n    end\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp843qoe6p.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  BoundsError: attempt\
    \ to access 6-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] get_closest_vowel(word::String)\\n     @ Main /tmp/tmp843qoe6p.jl:18\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp843qoe6p.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp843qoe6p.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp843qoe6p.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/tmp843qoe6p.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp843qoe6p.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp843qoe6p.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp843qoe6p.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] get_closest_vowel(word::String)\\\
    n     @ Main /tmp/"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) < 3 return \"\"\
    \ end\n    l = length(word)\n    for i in reverse(1:l-2)\n        #println(i)\n\
    \        if word[i] == \"a\" || word[i] == \"A\" || word[i] == \"e\" || word[i]\
    \ == \"E\" || word[i] == \"i\" || word[i] == \"I\" || word[i] == \"o\" || word[i]\
    \ == \"O\" || word[i] == \"u\" || word[i] == \"U\"\n            if !(word[i+1]\
    \ == \"a\" || word[i+1] == \"A\" || word[i+1] == \"e\" || word[i+1] == \"E\" ||\
    \ word[i+1] == \"i\" || word[i+1] == \"I\" || word[i+1] == \"o\" || word[i+1]\
    \ == \"O\" || word[i+1] == \"u\" || word[i+1] == \"U\")\n                if !(word[i+2]\
    \ == \"a\" || word[i+2] == \"A\" || word[i+2] == \"e\" || word[i+2] == \"E\" ||\
    \ word[i+2] == \"i\" || word[i+2] == \"I\" || word[i+2] == \"o\" || word[i+2]\
    \ == \"O\" || word[i+2] == \"u\" || word[i+2] == \"U\")\n                    return\
    \ word[i]\n                end\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb5zru_7i.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5zru_7i.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5zru_7i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpb5zru_7i.jl:36\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5zru_7i.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5zru_7i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpb5zru_7i.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5zru_7i.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5zru_7i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpb5zru_7i.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb5zru_7i.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb5zru_7i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpb5zru_7i.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5zru_7i.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) < 2\n        return\
    \ \"\"\n    end\n    vowels = (\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")\n   \
    \ consonants = (\"B\", \"C\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"\
    , \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"\
    )\n    closest_vowel = \"\"\n    for (i, l) in enumerate(word)\n        if i >\
    \ 1 &&  l in vowels\n            if word[i-1] in consonants && word[i-2] in consonants\n\
    \                closest_vowel = l\n                break\n            end\n \
    \       end\n    end\n    return closest_vowel\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvlq2x4q4.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlq2x4q4.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlq2x4q4.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpvlq2x4q4.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlq2x4q4.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlq2x4q4.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpvlq2x4q4.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlq2x4q4.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlq2x4q4.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpvlq2x4q4.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlq2x4q4.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlq2x4q4.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpvlq2x4q4.jl:47\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvlq2x4q4.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    #get index of first vowel\n  \
    \  first_vowel_index = findall(r\"a|e|i|o|u\",word)[1]\n    #get index of last\
    \ vowel\n    last_vowel_index = findall(r\"a|e|i|o|u\",word)[end]\n    #check\
    \ if first vowel is after last vowel\n    if first_vowel_index > last_vowel_index\n\
    \        #if so return empty string\n        return \"\"\n    end\n    #return\
    \ closest vowel to last vowel\n    return word[last_vowel_index - 1]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi5_b2imx.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: no\
    \ method matching -(::UnitRange{Int64}, ::Int64)\\n  For element-wise subtraction,\
    \ use broadcasting with dot syntax: array .- scalar\\n  Closest candidates are:\\\
    n    -(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:86\\\
    n    -(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:227\\\
    n    -(!Matched::LinearAlgebra.UniformScaling, ::Number) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:147\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpi5_b2imx.jl:26\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi5_b2imx.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi5_b2imx.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpi5_b2imx.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: no method matching -(::UnitRange{Int64},\
    \ ::Int64)\\n  For element-wise subtraction, use broadcasting with dot syntax:\
    \ array .- scalar\\n  Closest candidates are:\\n    -(!Matched::T, ::T) where\
    \ T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:86\\n    -(!Matched::T,\
    \ ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:227\\\
    n    -(!Matched::LinearAlgebra.UniformScaling, ::Number) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:147\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpi5_b2imx.jl:26\\n   [2] macro expansion\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n  pass\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps8pkchtw.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: pass not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmps8pkchtw.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps8pkchtw.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps8pkchtw.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps8pkchtw.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmps8pkchtw.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps8pkchtw.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps8pkchtw.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps8pkchtw.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmps8pkchtw.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps8pkchtw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps8pkchtw.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps8pkchtw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmps8pkchtw.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps8pkchtw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowel = \"aeiou\"\n    index =\
    \ -1\n    for i = length(word):-1:1\n        c = word[i]\n        if c in vowel\n\
    \            if index == -1\n                index = i\n            else\n   \
    \             return string(c)\n            end\n        else\n            index\
    \ = -1\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8szji677.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8szji677.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8szji677.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp8szji677.jl:38\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8szji677.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8szji677.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp8szji677.jl:39\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"e\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8szji677.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8szji677.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp8szji677.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8szji677.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8szji677.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp8szji677.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expan"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8szji677.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    consonants = [c for c in word]\n    closest_vowel = 0\n \
    \   for i in 1:length(word)\n        if consonants[end-i] in vowels\n        \
    \    closest_vowel = end-i\n            break\n        end\n    end\n    if closest_vowel\
    \ == 0\n        return \"\"\n    else\n        return consonants[closest_vowel]\n\
    \    end\nend\nprintln(get_closest_vowel(\"yogurt\")) #==> \"u\"\nprintln(get_closest_vowel(\"\
    FULL\")) #==> \"U\"\nprintln(get_closest_vowel(\"quick\")) #==> \"\"\nprintln(get_closest_vowel(\"\
    ab\")) #==> \"\"\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjgdypil1.jl:21\nin expression starting at /tmp/tmpjgdypil1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    if length(word) < 3 return \"\"\
    \ end\n    vowel_pos = [i for i in 1:length(word)-2 if any(word[i] == x for x\
    \ in \"aeiouAEIOU\")]\n    if isempty(vowel_pos) return \"\" end\n    if any(word[vowel_pos[end]+1]\
    \ == x for x in \"aeiouAEIOU\") \n        return \"\" \n    else\n        return\
    \ word[vowel_pos[end]]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyd6bdgbt.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"yogurt\") == \"u\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpyd6bdgbt.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyd6bdgbt.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyd6bdgbt.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpyd6bdgbt.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpyd6bdgbt.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpyd6bdgbt.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    is_consonant(c) = !(c in vowels)\n    for i = length(word):-1:1\n\
    \        if !(is_consonant(word[i]))\n            break\n        end\n    end\n\
    \    for j = i-1:-1:1\n        if is_consonant(word[j])\n            break\n \
    \       end\n    end\n    if j == 0\n        return \"\"\n    else\n        return\
    \ word[j]\n    end\nend\nprintln(get_closest_vowel(\"yogurt\"))\nprintln(get_closest_vowel(\"\
    FULL\"))\nprintln(get_closest_vowel(\"quick\"))\nprintln(get_closest_vowel(\"\
    ab\"))\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: i not defined\nStacktrace:\n [1] get_closest_vowel(word::String)\n\
    \   @ Main /tmp/tmpxk1fbjw3.jl:23\n [2] top-level scope\n   @ /tmp/tmpxk1fbjw3.jl:34\n\
    in expression starting at /tmp/tmpxk1fbjw3.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels=(\"a\",\"e\",\"i\",\"o\"\
    ,\"u\",\"A\",\"E\",\"I\",\"O\",\"U\")\n    new_word=split(word,\"\")\n    res=[]\n\
    \    for i=1:length(new_word)\n        if new_word[i] in vowels\n            res=[new_word[i]]\n\
    \            break\n        end\n    end\n    for i=length(new_word):-1:1\n  \
    \      if new_word[i] in vowels\n            if i==length(new_word)\n        \
    \        break\n            end\n            if new_word[i+1] in vowels\n    \
    \            break\n            end\n            res=[new_word[i]]\n         \
    \   break\n        end\n    end\n    join(res)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw9wugee0.jl:46\n  Expression: candidate(\"\
    easy\") == \"\"\n   Evaluated: \"a\" == \"\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9wugee0.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9wugee0.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpw9wugee0.jl:47\n  Expression: candidate(\"eAsy\") == \"\"\n\
    \   Evaluated: \"A\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9wugee0.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9wugee0.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpw9wugee0.jl:48\n  Expression: candidate(\"ali\") == \"\"\n\
    \   Evaluated: \"a\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9wugee0.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9wugee0.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpw9wugee0.jl:51\n  Expression: candidate(\"ab\") == \"\"\n\
    \   Evaluated: \"a\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9wugee0.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9wugee0.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpw9wugee0.jl:52\n  Expression: candidate(\"ba\") == \"\"\n\
    \   Evaluated: \"a\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ "
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9wugee0.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    a = \"aeiou\"\n    b = \"bcdfghjklmnpqrstvwxyz\"\
    \n    word = word |> collect |> reverse\n    for i in word\n        if isin(i,\
    \ b) && isin(word[word |> findnext(x -> isin(x, b)) |> first |> last |> get],\
    \ a)\n            return word[word |> findnext(x -> isin(x, b)) |> first |> last\
    \ |> get]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_544j55b.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isin not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_544j55b.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_544j55b.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_544j55b.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp_544j55b.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isin not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_544j55b.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_544j55b.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_544j55b.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp_544j55b.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isin not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_544j55b.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_544j55b.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_544j55b.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp_544j55b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isin not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_544j55b.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_544j55b.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    word = reverse(word)\n    vowels\
    \ = \"aeiouAEIOU\"\n    for (i,char) in enumerate(word)\n        if char in vowels\n\
    \            j = i+1\n            while j < length(word)\n                if word[j]\
    \ in vowels\n                    return \"\"\n                elseif word[j] ==\
    \ \" \"\n                    return \"\"\n                else\n             \
    \       j += 1\n                end\n            end\n            return word[i]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfw76ykom.jl:40\\n  Expression: candidate(\"\
    yogurt\") == \"u\"\\n   Evaluated: \"\" == \"u\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpfw76ykom.jl:40 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpfw76ykom.jl:39\\ntest set: Error\
    \ During Test at /tmp/tmpfw76ykom.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"full\") == \"u\"\\n  MethodError: Cannot `convert` an object of\
    \ type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] get_closest_vowel(word::String)\\n     @ Main\
    \ /tmp/tmpfw76ykom.jl:30\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfw76ykom.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfw76ykom.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpfw76ykom.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"easy\") == \"\"\\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractSt"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"\
    yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"\
    quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\nfunction\
    \ get_closest_vowel(word::String)::String \n    vowels = ['a', 'e', 'i', 'o',\
    \ 'u']\n    for i in reverse(collect(eachindex(word)))\n        if word[i] in\
    \ vowels\n            for j in reverse(1:i)\n                if word[j] in vowels\n\
    \                    continue\n                else\n                    return\
    \ word[i]\n                end\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9fu1cokq.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp9fu1cokq.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9fu1cokq.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9fu1cokq.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp9fu1cokq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp9fu1cokq.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9fu1cokq.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9fu1cokq.jl:32\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_93_encode
language: jl
results:
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encode_message = \"\"\n    for i in message\n        if (i in \"aeiou\")\n\
    \            encode_message = encode_message * [nextnext(i)]\n        elseif (i\
    \ in \"AEIOU\")\n            encode_message = encode_message * [nextnext(lowercase(i))]\n\
    \        elseif (islowercase(i))\n            encode_message = encode_message\
    \ * [uppercase(i)]\n        else\n            encode_message = encode_message\
    \ * [lowercase(i)]\n        end\n    end\n    return encode_message\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \"write your code here\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6rw4707l.jl:22\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"write your code here\" == \"tgst\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rw4707l.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rw4707l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6rw4707l.jl:23\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"write your code here\" == \"mWDCSKR\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rw4707l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rw4707l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6rw4707l.jl:24\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"write your code here\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rw4707l.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rw4707l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6rw4707l.jl:25\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"write your code here\" == \"tHKS KS\
    \ C MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rw4707l.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rw4707l.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6rw4707l.jl:26\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6rw4707l.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    for (i, ch) in enumerate(message)\n        if ch in \"aeiou\"\n         \
    \   message[i] = \"abcdefghijklmnopqrstuvwxyz\"[((\"abcdefghijklmnopqrstuvwxyz\"\
    \ * 2)\n            |> index(\"$ch\")) + 1]\n        elseif ch in \"AEIOU\"\n\
    \            message[i] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[((\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \ * 2)\n            |> index(\"$ch\")) + 1]\n        else\n            if ch in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n                message[i] = lowercase(ch)\n\
    \            else\n                message[i] = uppercase(ch)\n            end\n\
    \        end\n    end\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8j2xadie.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching setindex!(::String, ::Char, ::Int64)\\n  Stacktrace:\\n   [1]\
    \ encode(message::String)\\n     @ Main /tmp/tmp8j2xadie.jl:24\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8j2xadie.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8j2xadie.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp8j2xadie.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmp8j2xadie.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8j2xadie.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8j2xadie.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp8j2xadie.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmp8j2xadie.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8j2xadie.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8j2xadie.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp8j2xadie.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  MethodEr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # First we pre-process the message by making sure all words are in\n    #\
    \ upper case and all spaces have been removed. \n    processed_message = convert(String,\
    \ uppercase(message))\n    for char in \" \" \n        processed_message = replace(processed_message,\
    \ char, \"\")\n    end\n    # Then we define some useful variables, such as the\
    \ alphabet and\n    # the different vowels. \n    alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    vowel_i = 'I'\n    vowel_a = 'A'\n    vowel_e = 'E'\n    vowel_o = 'O'\n\
    \    vowel_u = 'U'\n    # Then we define a function to swap a character for its\
    \ corresponding\n    # index in the alphabet. \n    function helper(char::Char)::Char\n\
    \        for (i, alpha_char) in enumerate(alphabet)\n            if alpha_char\
    \ == char\n                return alphabet[(i % 26) + 1]\n            end\n  \
    \      end\n    end\n    # Then we go through the message and swap it's case and\
    \ replace vowels\n    encoded_message = \"\"\n    for char in processed_message\n\
    \        encoded_message = encoded_message * char\n        if char == vowel_i\n\
    \            encoded_message = encoded_message * helper(vowel_a)\n        elseif\
    \ char == vowel_a\n            encoded_message = encoded_message * helper(vowel_e)\n\
    \        elseif char == vowel_e\n            encoded_message = encoded_message\
    \ * helper(vowel_i)\n        elseif char == vowel_o\n            encoded_message\
    \ = encoded_message * helper(vowel_u)\n        elseif char == vowel_u\n      \
    \      encoded_message = encoded_message * helper(vowel_o)\n        else\n   \
    \         encoded_message = encoded_message * helper(char)\n        end\n    end\n\
    \    return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcabmfu87.jl:63\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching replace(::String, ::Char, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpcabmfu87.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcabmfu87.jl:63 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcabmfu87.jl:62\\ntest set:\
    \ Error During Test at /tmp/tmpcabmfu87.jl:64\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching replace(::String,\
    \ ::Char, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpcabmfu87.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcabmfu87.jl:64 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Create a dictionary of letters \n    vowels = Dict('a'=>'c', 'e'=>'g',\
    \ 'i'=>'k', 'o'=>'q', 'u'=>'y')\n    # Create a String to return\n    encoded_message\
    \ = String()\n    # Loop through message\n    for letter in message\n        #\
    \ If the letter is in the dictionary, add that to encoded_message\n        if\
    \ letter in keys(vowels)\n            push!(encoded_message, vowels[letter])\n\
    \        # Else, if the letter is uppercase, add it's lowercase equivalent\n \
    \       elseif letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n            push!(encoded_message,\
    \ lowercase(letter))\n        # Else, it's lowercase, so add it's uppercase equivalent\n\
    \        else\n            push!(encoded_message, uppercase(letter))\n       \
    \ end\n    end\n    return encoded_message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpd1zubm3y.jl:25\nin expression\
    \ starting at /tmp/tmpd1zubm3y.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encoded_message = \"\"\n \
    \   for char in message\n        if char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n \
    \           ind = alphabet[:end] |> findfirst(x -> x == lowercase(char))\n   \
    \         encoded_message *= uppercase(alphabet[ind+2])\n        elseif char in\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n            ind = alphabet[:end] |> findfirst(x\
    \ -> x == char)\n            encoded_message *= alphabet[ind+2]\n        else\n\
    \            encoded_message *= char\n        end\n    end\n    return encoded_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjspv4jnj.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching getindex(::String, ::Symbol)\\n  Closest candidates are:\\n\
    \    getindex(::AbstractString, !Matched::Colon) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:189\\\
    n    getindex(::String, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:222\\\
    n    getindex(::AbstractString, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:184\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjspv4jnj.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjspv4jnj.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjspv4jnj.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpjspv4jnj.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching getindex(::String,\
    \ ::Symbol)\\n  Closest candidates are:\\n    getindex(::AbstractString, !Matched::Colon)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:189\\n    getindex(::String,\
    \ !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:222\\\
    n    getindex(::AbstractString, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:184\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjspv4jnj.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjspv4jnj.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjspv4jnj.jl:34\\ntest set:\
    \ Error During Test at"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \"\"\"\n    Function to encode a message with the same rules above.\n   \
    \ \"\"\"\n    alphabet = [chr(c) for c in 97:122] #lowercase alphabet\n    encoder\
    \ = Dict(alphabet[i+2] => alphabet[i] for i in 1:length(alphabet)-2)\n    encoder[alphabet[1]]\
    \ = alphabet[end]\n    encoder[alphabet[2]] = alphabet[end-1]\n    encoder[alphabet[end]]\
    \ = alphabet[end-2]\n    encoder[alphabet[end-1]] = alphabet[end-3]\n    encoder[\"\
    \ \"] = \" \"\n    return join([encoder[c] for c in uppercase(message)])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprya86ro5.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ chr not defined\\n  Stacktrace:\\n   [1] (::var\"#1#4\")(c::Int64)\\n     @\
    \ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3]\
    \ collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#4\"})\\n     @ Base ./array.jl:724\\\
    n   [4] encode(message::String)\\n     @ Main /tmp/tmprya86ro5.jl:18\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmprya86ro5.jl:32 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmprya86ro5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprya86ro5.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: chr not defined\\n\
    \  Stacktrace:\\n   [1] (::var\"#1#4\")(c::Int64)\\n     @ Main ./none:0\\n  \
    \ [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#4\"})\\n     @ Base ./array.jl:724\\n   [4] encode(message::String)\\\
    n     @ Main /tmp/tmprya86ro5.jl:18\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmprya86ro5.jl:33 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmprya86ro5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprya86ro5.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: chr not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#4\")(c::Int64)\\n     @ Main ./none:0\\n   [2] iterate\\n \
    \    @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#4\"})\\n     @ Base ./array.jl:724\\n   [4] encode(message::String)\\\
    n     @ Main /tmp/tmprya86ro5.jl:18\\n   [5] macro expansion\\"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    mapping = Dict(\n        'a' => 'c',\n        'e' => 'g',\n        'i' =>\
    \ 'k',\n        'o' => 'q',\n        'u' => 'y',\n        'A' => 'C',\n      \
    \  'E' => 'G',\n        'I' => 'K',\n        'O' => 'Q',\n        'U' => 'Y',\n\
    \    )\n    return string(map(x -> get(mapping, x, x), message))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5hbntfj_.jl:34\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hbntfj_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hbntfj_.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp5hbntfj_.jl:35\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mydcskr\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hbntfj_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hbntfj_.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp5hbntfj_.jl:36\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hbntfj_.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hbntfj_.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp5hbntfj_.jl:37\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"Thks ks c mgsscgg\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hbntfj_.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hbntfj_.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp5hbntfj_.jl:38\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5hbntfj_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    output = \"\"\n    for c in message\n        if c in \"aeiou\"\n        \
    \    x = search(encode_mapping, c)\n            output *= encode_mapping[x+2]\n\
    \        else\n            x = search(encode_mapping, c)\n            output *=\
    \ encode_mapping[x]\n        end\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppt80mzlv.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmppt80mzlv.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppt80mzlv.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppt80mzlv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmppt80mzlv.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppt80mzlv.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppt80mzlv.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppt80mzlv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmppt80mzlv.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmppt80mzlv.jl:21\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppt80mzlv.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppt80mzlv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmppt80mzlv.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmppt80mzlv.jl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    alpha = \"abcdefghijklmnopqrstuvwxyz\"\n    for i\
    \ in 1:length(message)\n        if message[i] == \" \" \n            new_message\
    \ *= \" \"\n        else\n            if message[i] \u2208 alpha\n           \
    \     new_message *= alpha[findfirst(alpha,message[i])+2]\n            else\n\
    \                new_message *= alpha[findfirst(alpha,uppercase(message[i]))+2]\n\
    \            end\n        end\n    end\n    return uppercase(new_message)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd4wucpqu.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching findfirst(::String, ::Char)\\n  Closest candidates are:\\n \
    \   findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractString, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpd4wucpqu.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd4wucpqu.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd4wucpqu.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpd4wucpqu.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpd4wucpqu.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd4wucpqu.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd4wucpqu.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpd4wucpqu.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \""
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    #the alphabet is in order\n    alphabet = collect(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n    #letter is a single character from the message\n    let letter = split(message)\n\
    \    #new_message is the final encoded string\n    new_message = \"\"\n    #vowels\
    \ are in order and all vowels\n    vowels = collect(\"AEIOU\")\n    #variables\
    \ to assist with the loop\n    count = 0\n    i = 0\n    #loop through all characters\
    \ in the message and encode them\n    while i <= length(message)\n        if isalpha(letter[i])\n\
    \            #if it is lowercase, make it uppercase\n            if islower(letter[i])\n\
    \                letter[i] = uppercase(letter[i])\n            end\n         \
    \   #then change the letter to the character two places \n            #ahead of\
    \ it\n            if letter[i] != \"Z\"\n                letter[i] = alphabet[alphabet\
    \ .== letter[i]][1] + 2\n            else\n                letter[i] = \"B\"\n\
    \            end\n            #then move the letter two places back if it is a\
    \ vowel\n            if letter[i] in vowels\n                if letter[i] != \"\
    U\"\n                    letter[i] = alphabet[alphabet .== letter[i]][1] - 2\n\
    \                else\n                    letter[i] = \"S\"\n               \
    \ end\n            end\n            #then add the character to the new message\n\
    \            new_message = new_message * letter[i]\n        else\n           \
    \ #if the character is not alpha, just add it to the string\n            new_message\
    \ = new_message * letter[i]\n        end\n        i += 1\n    end\n    return\
    \ new_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp92wn9y2o.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp92wn9y2o.jl:1\n\
    in expression starting at /tmp/tmp92wn9y2o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded = \"\"\n    for c in message\n        if !(c in \"AEIOUaeiou\")\n\
    \            encoded *= uppercase(c) == c ? lowercase(c) : uppercase(c)\n    \
    \    else\n            encoded *= c != \"u\" ? uppercase(nextind(c)) : \"A\"\n\
    \        end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpch44yo1m.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching nextind(::Char)\\n  Closest candidates are:\\n    nextind(!Matched::Tuple,\
    \ !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:75\\\
    n    nextind(!Matched::AbstractArray, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:181\\\
    n    nextind(!Matched::NamedTuple, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/namedtuple.jl:136\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpch44yo1m.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpch44yo1m.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpch44yo1m.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpch44yo1m.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching nextind(::Char)\\\
    n  Closest candidates are:\\n    nextind(!Matched::Tuple, !Matched::Integer) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:75\\n    nextind(!Matched::AbstractArray,\
    \ !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:181\\\
    n    nextind(!Matched::NamedTuple, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/namedtuple.jl:136\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpch44yo1m.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpch44yo1m.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpch44yo1m.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpch44y"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # create a list of vowels\n    vowels = ['a','e','i','o','u']\n    encoded_message\
    \ = \"\"\n    # loop through the message\n    for i in message \n        # if\
    \ the message character is a letter\n        if i in string('a':'z', 'A':'Z')\n\
    \            # set the message character to lowercase\n            i = lowercase(i)\n\
    \            # if it is a vowel\n            if i in vowels\n                #\
    \ find the index of the vowel in the list of vowels\n                index = findfirst(i,\
    \ vowels)\n                # add two to the index\n                index += 2\n\
    \                # if the index is greater than or equal to 5\n              \
    \  if index >= 5\n                    # subtract five\n                    index\
    \ -= 5\n                end\n                # set i to the vowel in the vowels\
    \ list at the index\n                i = vowels[index]\n            else \n  \
    \              # if it is not a vowel, just flip the case\n                i =\
    \ uppercase(i)\n            end\n        end\n        # add the character to the\
    \ message\n        encoded_message *= i\n    end\n    # return the message\n \
    \   return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgad4o552.jl:53\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpgad4o552.jl:53 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpgad4o552.jl:52\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    newstring = String[]\n    for (i,c) in enumerate(message)\n        if c in\
    \ ['a','e','i','o','u']\n            temp = collect(keys(vowels))\n          \
    \  temp = temp[temp .== c]\n            temp = temp[1]\n            temp = temp[1]\n\
    \            temp = temp + 2\n            if temp > 5\n                temp =\
    \ temp - 5\n            end\n            temp = collect(values(vowels))[temp]\n\
    \            push!(newstring, temp)\n        elseif c in ['A','E','I','O','U']\n\
    \            temp = collect(keys(vowels))\n            temp = temp[temp .== c]\n\
    \            temp = temp[1]\n            temp = temp[1]\n            temp = temp\
    \ + 2\n            if temp > 5\n                temp = temp - 5\n            end\n\
    \            temp = collect(values(vowels))[temp]\n            push!(newstring,\
    \ temp)\n        elseif c in string(\"abcdefghijklmnopqrstuvwxyz\")\n        \
    \    push!(newstring, string(c)[1])\n        elseif c in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            push!(newstring, string(c)[1])\n        else \n            push!(newstring,\
    \ c)\n        end\n    end\n    join(newstring)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppy34h9mg.jl:54\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] push!(a::Vector{String}, item::Char)\\n    \
    \ @ Base ./array.jl:994\\n   [2] encode(message::String)\\n     @ Main /tmp/tmppy34h9mg.jl:42\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmppy34h9mg.jl:54 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmppy34h9mg.jl:53\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = convert(Array{Char}, lowercase(message))\n    for i in 1:length(message)\n\
    \        if(message[i] in ['a','e','i','o','u'])\n            message[i] = nextin(message[i])\n\
    \            message[i] = nextin(message[i])\n        end\n    end\n    return\
    \ uppercase(message)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkeno8u7u.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type \\n    String to an object of type \\n    Array{Char}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkeno8u7u.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkeno8u7u.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkeno8u7u.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpkeno8u7u.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type \\n    String to an object of type \\n    Array{Char}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkeno8u7u.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    result = \"\"\n    for i in 1:length(message)\n        c = message[i]\n \
    \       c\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbp369u88.jl:27\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp369u88.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp369u88.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbp369u88.jl:28\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp369u88.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp369u88.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbp369u88.jl:29\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp369u88.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp369u88.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbp369u88.jl:30\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp369u88.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp369u88.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbp369u88.jl:31\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbp369u88.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    newstr = \"\"\n    for i in eachindex(message)\n        if is_vowel(message[i])\n\
    \            newstr = newstr * message[i+2]\n        elseif is_letter(message[i])\n\
    \            newstr = newstr * message[i]\n        end\n    end\n    return newstr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp98f4lso0.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ is_vowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmp98f4lso0.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp98f4lso0.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp98f4lso0.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp98f4lso0.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: is_vowel not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp98f4lso0.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp98f4lso0.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp98f4lso0.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp98f4lso0.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: is_vowel not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp98f4lso0.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp98f4lso0.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp98f4lso0.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp98f4lso0.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ is_vowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmp98f"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # TODO\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnuwfobt6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpnuwfobt6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnuwfobt6.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnuwfobt6.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = \"AEIOUaeiou\"\n    encoded_message = \"\"\n    for i in message\n\
    \        if i in vowels\n            encoded_message *= string(vowels[mod(vowels.find(i)+2,12)+1])\n\
    \        else\n            encoded_message *= string(i)\n        end\n    end\n\
    \    return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjv0e96ps.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  type String has\
    \ no field find\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] encode(message::String)\\n     @ Main /tmp/tmpjv0e96ps.jl:19\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpjv0e96ps.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpjv0e96ps.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpjv0e96ps.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type String has no field find\\n \
    \ Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmpjv0e96ps.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpjv0e96ps.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpjv0e96ps.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpjv0e96ps.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmpjv0e96ps.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpjv0e96ps.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpjv0e96ps.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpjv0e96ps.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\""
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    to_encode = [replace(s,s[1]) for s in split(message,\" \")]\n    return join(to_encode,\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw1akqpq2.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching replace(::SubString{String}, ::Char)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    replace(::Any, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:569\\\
    n  Stacktrace:\\n   [1] (::var\"#1#2\")(s::SubString{String})\\n     @ Main ./none:0\\\
    n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect\\n     @\
    \ ./array.jl:724 [inlined]\\n   [4] encode(message::String)\\n     @ Main /tmp/tmpw1akqpq2.jl:15\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpw1akqpq2.jl:23 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpw1akqpq2.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpw1akqpq2.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching replace(::SubString{String},\
    \ ::Char)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    replace(::Any, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:569\\\
    n  Stacktrace:\\n   [1] (::var\"#1#2\")(s::SubString{String})\\n     @ Main ./none:0\\\
    n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect\\n     @\
    \ ./array.jl:724 [inlined]\\n   [4] encode(message::String)\\n     @ Main /tmp/tmpw1akqpq2.jl:15\\\
    n   [5] macro expansion\\n     @ /shared/centos7/ju"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    swap_case = [x.isupper()\
    \ ? x.lower() : x.upper() for x in message]\n    replace_vowels = [vowels[ind(x)]\
    \ == x ? vowels[ind(x)+2] : x for x in swap_case]\n    output = \"\"\n    for\
    \ x in replace_vowels\n        output = output * x\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5xa_ggwu.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  type Char has\
    \ no field isupper\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42\
    \ [inlined]\\n   [2] (::var\"#1#3\")(x::Char)\\n     @ Main ./none:0\\n   [3]\
    \ iterate\\n     @ ./generator.jl:47 [inlined]\\n   [4] collect(itr::Base.Generator{String,\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [5] encode(message::String)\\\
    n     @ Main /tmp/tmp5xa_ggwu.jl:16\\n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp5xa_ggwu.jl:29 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp5xa_ggwu.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp5xa_ggwu.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type Char has no field isupper\\n\
    \  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] (::var\"\
    #1#3\")(x::Char)\\n     @ Main ./none:0\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{String, var\"#1#3\"})\\n    \
    \ @ Base ./array.jl:724\\n   [5] encode(message::String)\\n     @ Main /tmp/tmp5xa_ggwu.jl:16\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmp5xa_ggwu.jl:30 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp5xa_ggwu.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp5xa_ggwu.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  type Char has no field isupper\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] (::var\"#1#3\")(x::Char)\\\
    n     @ Main ./none:0\\n   [3] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [4] collect(itr::Base.Generator{String, var\"#1#3\"})\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    for x in message\n        if x == 'a'\n         \
    \   new_message = new_message * 'c'\n        elseif x == 'e'\n            new_message\
    \ = new_message * 'g'\n        elseif x == 'i'\n            new_message = new_message\
    \ * 'k'\n        elseif x == 'o'\n            new_message = new_message * 'q'\n\
    \        elseif x == 'u'\n            new_message = new_message * 's'\n      \
    \  elseif x == 'A'\n            new_message = new_message * 'C'\n        elseif\
    \ x == 'E'\n            new_message = new_message * 'G'\n        elseif x == 'I'\n\
    \            new_message = new_message * 'K'\n        elseif x == 'O'\n      \
    \      new_message = new_message * 'Q'\n        elseif x == 'U'\n            new_message\
    \ = new_message * 'S'\n        else\n            new_message = new_message * x\n\
    \        end\n    end\n    \n    return new_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm_n1h_sg.jl:49\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_n1h_sg.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_n1h_sg.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpm_n1h_sg.jl:50\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Msdcskr\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_n1h_sg.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_n1h_sg.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpm_n1h_sg.jl:51\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_n1h_sg.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_n1h_sg.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpm_n1h_sg.jl:52\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"Thks ks c mgsscgg\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm_n1h_sg.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm_n1h_sg.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpm_n1h_sg.jl:53\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm_n1h_sg.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = String[] \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    vowels = \"aeiou\"\n    for i in message\n        if i == \" \"\n       \
    \     push!(new_message, i)\n        else\n            if i in alphabet\n    \
    \            if i in vowels\n                    if i == \"u\"\n             \
    \           push!(new_message, \"a\")\n                    else\n            \
    \            push!(new_message, alphabet[findfirst(x -> x == i, alphabet)+2])\n\
    \                    end\n                elseif i == islower(i)\n           \
    \         push!(new_message, uppercase(i))\n                elseif i == isupper(i)\n\
    \                    push!(new_message, lowercase(i))\n                end\n \
    \           end\n        end\n    end\n    join(new_message)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7giqbqhf.jl:44\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"\" == \"tgst\"\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp7giqbqhf.jl:44 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp7giqbqhf.jl:43\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # your code here\n    encoded = \"\"\n    for letter in message\n       \
    \ i = search(encode_set, letter)\n        if i > 0\n            encoded *= encode_set[i+2]\n\
    \        else\n            if islower(letter)\n                encoded *= uppercase(letter)\n\
    \            else\n                encoded *= lowercase(letter)\n            end\n\
    \        end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0vh43moj.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmp0vh43moj.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0vh43moj.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0vh43moj.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp0vh43moj.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp0vh43moj.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0vh43moj.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0vh43moj.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp0vh43moj.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp0vh43moj.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0vh43moj.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0vh43moj.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp0vh43moj.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmp0vh43moj.jl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    index_list = []\n    index_list_encoded\
    \ = []\n    encoded_message = []\n    x = 0\n    y = 0\n    z = 0\n    #loop through\
    \ message to find vowels\n    while x < length(message)\n        if message[x]\
    \ in alphabet[0:21]\n            push!(index_list,x)\n        end\n        x +=\
    \ 1\n    end\n    #loop through vowels in message and find vowels in alphabet\
    \ + 2\n    while y < length(index_list)\n        for i in 1:length(alphabet)\n\
    \            if message[index_list[y]] == alphabet[i]\n                index_list_encoded[y]\
    \ = alphabet[i+2]\n            end\n        end\n        y += 1\n    end\n   \
    \ #add encoded vowels to output array\n    for j in 1:length(index_list)\n   \
    \     encoded_message[index_list[j]] = index_list_encoded[j]\n    end\n    #add\
    \ rest of message without vowels to output array\n    while z < length(message)\n\
    \        if message[z] not in alphabet[0:21]\n            encoded_message[z] =\
    \ message[z]\n        end\n        z += 1\n    end\n    #add encoded message to\
    \ output string\n    output = \"\"\n    for k in 1:length(encoded_message)\n \
    \       output = output * encoded_message[k]\n    end\n    output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3ec9pb57.jl:61\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  BoundsError: attempt\
    \ to access 4-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] encode(message::String)\\n     @ Main /tmp/tmp3ec9pb57.jl:24\\n   [5] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp3ec9pb57.jl:61 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp3ec9pb57.jl:60\\ntest set:\
    \ Error During Test at /tmp/tmp3ec9pb57.jl:62\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  BoundsError: attempt to access 7-codeunit\
    \ String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] encode(message::String)\\\
    n     @ Main /tmp/tmp3ec9pb57.jl:24\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp3ec9pb57.jl:62 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp3ec9pb57.jl:60\\ntest set:\
    \ Error During Test at /tmp/tmp3ec9pb57.jl:63\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  BoundsError: attempt to access 3-codeunit\
    \ String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] encode(message::String)\\\
    n     @ Main /tmp/tmp3ec9pb57."
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    s = Set(['a','e','i','o','u'])\n    encoded = \"\"\n    for l in message\n\
    \        if l \u2208 s\n            l = next(next(next(a for (i,a) in enumerate(a)\
    \ if a == l)))\n        end\n        l = uppercase(l) ? lowercase(l) : uppercase(l)\n\
    \        push!(encoded,l)\n    end\n    return encoded\nend\nencode(\"test\")\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: TypeError: non-boolean (Char) used in boolean context\n\
    Stacktrace:\n [1] encode(message::String)\n   @ Main /tmp/tmp1kig697b.jl:21\n\
    \ [2] top-level scope\n   @ /tmp/tmp1kig697b.jl:26\nin expression starting at\
    \ /tmp/tmp1kig697b.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    coded_message = \"\"\n    for l in message\n        if (l in 'aeiou')\n \
    \           l = uppercase(nextchar(nextchar(l)))\n        elseif (l in 'AEIOU')\n\
    \            l = lowercase(nextchar(nextchar(l)))\n        elseif (l in 'abcdefghijklmnopqrstuvwxyz')\n\
    \            l = uppercase(l)\n        elseif (l in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \            l = lowercase(l)\n        end\n        push!(coded_message, l)\n\
    \    end\n    return coded_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp09aypai3.jl:17\nin expression\
    \ starting at /tmp/tmp09aypai3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded_message = \"\"\n    for ch in message\n        if \"a\" <= ch <=\
    \ \"z\"\n            new_char = ch in ('a', 'e', 'i', 'o', 'u') ? \"c\" : \"C\"\
    \n            encoded_message *= new_char\n        elseif \"A\" <= ch <= \"Z\"\
    \n            new_char = ch in ('A', 'E', 'I', 'O', 'U') ? \"C\" : \"c\"\n   \
    \         encoded_message *= new_char\n        else\n            encoded_message\
    \ *= ch\n        end\n    end\n    return encoded_message\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4j1w8rei.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching isless(::String, ::Char)\\n  Closest candidates are:\\n    isless(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:344\\\
    n    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\\\
    n    isless(!Matched::AbstractChar, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:221\\\
    n    ...\\n  Stacktrace:\\n   [1] <(x::String, y::Char)\\n     @ Base ./operators.jl:352\\\
    n   [2] <=(x::String, y::Char)\\n     @ Base ./operators.jl:401\\n   [3] encode(message::String)\\\
    n     @ Main /tmp/tmp4j1w8rei.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4j1w8rei.jl:34 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4j1w8rei.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp4j1w8rei.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching isless(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    isless(::AbstractString, !Matched::AbstractString)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:344\\n    isless(!Matched::Char,\
    \ ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\\n    isless(!Matched::AbstractChar,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:221\\\
    n    ...\\n  Stacktrace:\\n   [1] <(x::String, y::Char)\\n     @ Base ./operators.jl:352\\\
    n   [2] <=(x::String, y::Char)\\n     @ Base ./operators.jl:401\\n   [3] encode(message::String)\\\
    n     @ Main /tmp/tmp4j1w8rei.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4j1w8rei.jl:35 [i"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    english = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    vowels = \"AEIOUaeiou\"\n    num_letters = length(english)\n    encoded_message\
    \ = \"\"\n    \n    for i = 1:length(message)\n        if occursin(message[i],\
    \ vowels)\n            j = findfirst(x -> x == message[i], english)\n        \
    \    encoded_message *= english[(j + 2) % num_letters]\n        elseif occursin(message[i],\
    \ english)\n            j = findfirst(x -> x == message[i], english)\n       \
    \     encoded_message *= english[(j + (num_letters / 2)) % num_letters]\n    \
    \    else\n            encoded_message *= message[i]\n        end\n    end\n \
    \   \n    return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfkj43p5k.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching getindex(::String, ::Float64)\\n  Closest candidates are:\\\
    n    getindex(::AbstractString, !Matched::Colon) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:189\\\
    n    getindex(::String, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:222\\\
    n    getindex(::AbstractString, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:184\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpfkj43p5k.jl:27\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfkj43p5k.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfkj43p5k.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpfkj43p5k.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching getindex(::String,\
    \ ::Float64)\\n  Closest candidates are:\\n    getindex(::AbstractString, !Matched::Colon)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:189\\n    getindex(::String,\
    \ !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:222\\\
    n    getindex(::AbstractString, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:184\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpfkj43p5k.jl:27\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfkj43p5k.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfkj43p5k.jl:39\\ntest set:\
    \ Error During Test "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = \"This is a message\"\n    return [if c in 'aeiou' c = 'aeiou'[(i\
    \ + 2) % 5] else if c in 'AEIOU' c = 'AEIOU'[(i + 2) % 5] else c.isupper() ? c.lower()\
    \ : c.upper() for c in message]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpyqialsih.jl:16\nin expression\
    \ starting at /tmp/tmpyqialsih.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    messageLower = lowercase(message)\n    res = \"\"\n    for ch in messageLower\n\
    \        if ch in \"aeiou\"\n            val = (index(vowels, ch) + 2) % 5\n \
    \           res *= vowels[val]\n        else\n            val = index(alphabet,\
    \ ch) + 13\n            res *= alphabet[val % 26]\n        end\n    end\n    return\
    \ uppercase(res)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4thpgukp.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ index not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmp4thpgukp.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4thpgukp.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4thpgukp.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp4thpgukp.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: index not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp4thpgukp.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4thpgukp.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4thpgukp.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp4thpgukp.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: index not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp4thpgukp.jl:22\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4thpgukp.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4thpgukp.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp4thpgukp.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ index not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmp4thpgukp.jl:22\\"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # [1] Convert to ASCII \n    # [2] Swap case \n    # [3] Replace vowels with\
    \ next two letters in alphabet \n    # [4] Convert back to String\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjrz99q6c.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjrz99q6c.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjrz99q6c.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjrz99q6c.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpjrz99q6c.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjrz99q6c.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjrz99q6c.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \"\"\"\n    Encode a message as described in the docstring.\n    \"\"\"\n\
    \    \n    return \"C\"\nend\n \n# code to test the function\n#\n# the code below\
    \ should run\n#\n# to make the tests run, simply execute this cell\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb2lnmowm.jl:32\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"C\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2lnmowm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2lnmowm.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpb2lnmowm.jl:33\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"C\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2lnmowm.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2lnmowm.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpb2lnmowm.jl:34\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"C\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2lnmowm.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2lnmowm.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpb2lnmowm.jl:35\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"C\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2lnmowm.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2lnmowm.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpb2lnmowm.jl:36\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"C\" == \"k dQnT\
    \ kNqW wHcT Tq w"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2lnmowm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \  message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4dgj46u0.jl:22\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgj46u0.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgj46u0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4dgj46u0.jl:23\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgj46u0.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgj46u0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4dgj46u0.jl:24\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgj46u0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgj46u0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4dgj46u0.jl:25\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgj46u0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgj46u0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4dgj46u0.jl:26\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dgj46u0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    function swapcase(c::Char)::Char\n        if c in 'abcdefghijklmnopqrstuvwxyz'\n\
    \            c = upper(c)\n        elseif c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            c = lower(c)\n        end\n        return c\n    end\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpw6wvwkyu.jl:16\nin expression\
    \ starting at /tmp/tmpw6wvwkyu.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \ \n    message = uppercase(message)\n    \n    for i = 1:length(message)\n  \
    \      if (message[i] == 'A')\n            message[i] = 'C'\n        elseif (message[i]\
    \ == 'E')\n            message[i] = 'G'\n        elseif (message[i] == 'I')\n\
    \            message[i] = 'K'\n        elseif (message[i] == 'O')\n          \
    \  message[i] = 'Q'\n        elseif (message[i] == 'U')\n            message[i]\
    \ = 'Y'\n        elseif (message[i] == 'B')\n            message[i] = 'a'\n  \
    \      elseif (message[i] == 'D')\n            message[i] = 'b'\n        elseif\
    \ (message[i] == 'F')\n            message[i] = 'c'\n        elseif (message[i]\
    \ == 'H')\n            message[i] = 'd'\n        elseif (message[i] == 'J')\n\
    \            message[i] = 'e'\n        elseif (message[i] == 'L')\n          \
    \  message[i] = 'f'\n        elseif (message[i] == 'N')\n            message[i]\
    \ = 'g'\n        elseif (message[i] == 'P')\n            message[i] = 'h'\n  \
    \      elseif (message[i] == 'R')\n            message[i] = 'i'\n        elseif\
    \ (message[i] == 'T')\n            message[i] = 'j'\n        elseif (message[i]\
    \ == 'V')\n            message[i] = 'k'\n        elseif (message[i] == 'X')\n\
    \            message[i] = 'l'\n        elseif (message[i] == 'Z')\n          \
    \  message[i] = 'm'\n        elseif (message[i] == 'C')\n            message[i]\
    \ = 'n'\n        elseif (message[i] == 'G')\n            message[i] = 'o'\n  \
    \      elseif (message[i] == 'K')\n            message[i] = 'p'\n        elseif\
    \ (\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph62dkg1l.jl:64\nin expression starting at\
    \ /tmp/tmph62dkg1l.jl:64\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    string1=upper(message)\n    string2=lower(message)\n    string3=[]\n    for\
    \ i in 1:length(message)\n        if message[i] in(\"a\",\"e\",\"i\",\"o\",\"\
    u\")\n            push!(string3,string1[i+2])\n        elseif message[i] in(\"\
    b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"\
    r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\")\n            push!(string3,string2[i+2])\n\
    \        else\n            push!(string3,message[i])\n        end\n    end\n \
    \   \n    return join(string3,\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpawxdkrb7.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpawxdkrb7.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpawxdkrb7.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpawxdkrb7.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpawxdkrb7.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: upper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpawxdkrb7.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpawxdkrb7.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpawxdkrb7.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpawxdkrb7.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: upper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpawxdkrb7.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpawxdkrb7.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpawxdkrb7.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpawxdkrb7.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpawxdkrb7.jl:15\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowelDict = Dict(\"a\"=>\"c\", \"e\"=>\"g\", \"i\"=>\"k\", \"o\"=>\"q\",\
    \ \"u\"=>\"y\")\n    newMessage = [swapcase(char) for char in message]\n    for\
    \ i in range(1,length(newMessage))\n        if newMessage[i] in keys(vowelDict)\n\
    \            newMessage[i] = vowelDict[newMessage[i]]\n        end\n    end\n\
    \    return join(newMessage)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpur9hmjj7.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ swapcase not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(char::Char)\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{String, var\"#1#2\"})\\n     @ Base ./array.jl:724\\\
    n   [4] encode(message::String)\\n     @ Main /tmp/tmpur9hmjj7.jl:16\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpur9hmjj7.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpur9hmjj7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpur9hmjj7.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: swapcase not defined\\\
    n  Stacktrace:\\n   [1] (::var\"#1#2\")(char::Char)\\n     @ Main ./none:0\\n\
    \   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\\n     @ Base ./array.jl:724\\n   [4] encode(message::String)\\\
    n     @ Main /tmp/tmpur9hmjj7.jl:16\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpur9hmjj7.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpur9hmjj7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpur9hmjj7.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: swapcase not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#2\")(char::Char)\\n     @ Main ./none:0\\n   [2] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\\n     @ Base ./array.jl:724\\n   [4] encode(message::String)\\\
    n     @ Main /tmp/tmpur9hmjj7.jl:16\\n   [5] macro expansion\\n     @ /"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    newString = \"\"\n    for i in 1:length(message)\n        if isalpha(message[i])\n\
    \            if islower(message[i])\n                newString = newString * uppercase(message[i])\n\
    \            else\n                newString = newString * lowercase(message[i])\n\
    \            end\n        elseif isvowel(message[i])\n            newString =\
    \ newString * newvowel(message[i])\n        else\n            newString = newString\
    \ * message[i]\n        end\n    end\n    return newString\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmmc1zdtg.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpmmc1zdtg.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmmc1zdtg.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmmc1zdtg.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpmmc1zdtg.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isalpha not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmmc1zdtg.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmmc1zdtg.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmmc1zdtg.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpmmc1zdtg.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpmmc1zdtg.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmmc1zdtg.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmmc1zdtg.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpmmc1zdtg.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpmmc1zdt"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # lowercase the message\n    message = lowercase(message)\n    # make the\
    \ alphabet\n    alphabet = make_alphabet()\n    # make an array of the vowels\n\
    \    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # make an empty array for\
    \ the result\n    result = String[]\n    # convert the message to an array of\
    \ characters\n    message_chars = collect(message)\n    # this works the same\
    \ way as the last problem\n    for character in message_chars\n        if is_vowel(character,\
    \ vowels)\n            index = findfirst(x -> x == character, alphabet)\n    \
    \        next_index = (index + 2) % 26\n            next_letter = alphabet[next_index]\n\
    \            append!(result, next_letter)\n        else\n            next_index\
    \ = findfirst(x -> x == character, alphabet)\n            next_letter = alphabet[next_index]\n\
    \            append!(result, next_letter)\n        end\n    end\n    return uppercase(join(result))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5g99hkm7.jl:45\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ make_alphabet not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmp5g99hkm7.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5g99hkm7.jl:45 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5g99hkm7.jl:44\\ntest set:\
    \ Error During Test at /tmp/tmp5g99hkm7.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: make_alphabet not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp5g99hkm7.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5g99hkm7.jl:46 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5g99hkm7.jl:44\\ntest set:\
    \ Error During Test at /tmp/tmp5g99hkm7.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: make_alphabet not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp5g99hkm7.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5g99hkm7.jl:47 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5g99hkm7.jl:44\\ntest set:\
    \ Error During Test at /tmp/tmp5g99hkm7.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ make_alphabet not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n   "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # The alphabet is a tuple of ASCII characters\n    alphabet = tuple('abcdefghijklmnopqrstuvwxyz')\n\
    \    # Create a dictionary mapping vowels to their 2-index distant counterparts\n\
    \    vowel_map = Dict{Char, Char}('a' => 'c', 'e' => 'g', 'i' => 'k', 'o' => 'q',\
    \ 'u' => 'w')\n    # Create an empty string to store the encoded message\n   \
    \ encoded_message = \"\"\n    # Iterate over each character in the message string\n\
    \    for c in message\n        # If the character is a letter, upper-case it\n\
    \        if c in alphabet\n            c = uppercase(c)\n        end\n       \
    \ # If the character is a vowel, replace it with its counterpart from the vowel_map\n\
    \        if c in keys(vowel_map)\n            c = vowel_map[c]\n        end\n\
    \        # Add the character to the encoded message\n        push!(encoded_message,\
    \ c)\n    end\n    # Return the encoded message\n    return encoded_message\n\
    end\nencode(\"test\")\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpstyzc4t_.jl:16\nin expression\
    \ starting at /tmp/tmpstyzc4t_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = String(message) #to \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    message = message[:]\n    message = message.lower()\n    alphabet_upper\
    \ = alphabet[:].upper()\n    result = \"\"\n    for i in 1:length(message)\n \
    \       if !(alphabet[:] | alphabet_upper[:]).contains(message[i])\n         \
    \   continue\n        end\n        alphabet_index = findfirst(alphabet, message[i])\n\
    \        alphabet_upper_index = findfirst(alphabet_upper, message[i])\n      \
    \  if alphabet_index != 0 \n            if alphabet_index + 2 > length(alphabet)\n\
    \                result = result * alphabet[alphabet_index + 2 - length(alphabet)]\n\
    \            else\n                result = result * alphabet[alphabet_index +\
    \ 2]\n            end\n        elseif alphabet_upper_index != 0\n            if\
    \ alphabet_upper_index + 2 > length(alphabet_upper)\n                result =\
    \ result * alphabet_upper[alphabet_upper_index + 2 - length(alphabet_upper)]\n\
    \            else\n                result = result * alphabet_upper[alphabet_upper_index\
    \ + 2]\n            end\n        end\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp51z8k47n.jl:48\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  type String has\
    \ no field lower\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] encode(message::String)\\n     @ Main /tmp/tmp51z8k47n.jl:18\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp51z8k47n.jl:48 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp51z8k47n.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmp51z8k47n.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type String has no field lower\\n\
    \  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmp51z8k47n.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp51z8k47n.jl:49 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp51z8k47n.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmp51z8k47n.jl:50\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  type String has no field lower\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmp51z8k47n.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp51z8k47n.jl:50 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp51z8k47n.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmp51z8k47n.jl:51\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a messa"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoding = Dict(\"a\"=>\"c\", \"e\"=>\"g\", \"i\"=>\"k\", \"o\"=>\"q\", \"\
    u\"=>\"w\")\n    encoded = \"\"\n    for i in 1:length(message)\n        if message[i]\
    \ == lowercase(message[i])\n            message[i] = uppercase(message[i])\n \
    \       else\n            message[i] = lowercase(message[i])\n        end\n  \
    \      if message[i] \u2208 encoding.keys()\n            encoded *= encoding[message[i]]\n\
    \        else\n            encoded *= message[i]\n        end\n    end\n    return\
    \ encoded\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp54lj00uj.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching setindex!(::String, ::Char, ::Int64)\\n  Stacktrace:\\n   [1]\
    \ encode(message::String)\\n     @ Main /tmp/tmp54lj00uj.jl:21\\n   [2] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp54lj00uj.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp54lj00uj.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp54lj00uj.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmp54lj00uj.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp54lj00uj.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp54lj00uj.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp54lj00uj.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmp54lj00uj.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp54lj00uj.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp54lj00uj.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp54lj00uj.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  MethodEr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Pass A as first argument to return function for readability\n    return\
    \ encode(message, 'A')\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpif2o0muu.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching encode(::String, ::Char)\\n  Closest candidates are:\\n    encode(::String)\
    \ at /tmp/tmpif2o0muu.jl:14\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmpif2o0muu.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpif2o0muu.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpif2o0muu.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpif2o0muu.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching encode(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    encode(::String) at /tmp/tmpif2o0muu.jl:14\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpif2o0muu.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpif2o0muu.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpif2o0muu.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpif2o0muu.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching encode(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    encode(::String) at /tmp/tmpif2o0muu.jl:14\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpif2o0muu.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpif2o0muu.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    newMessage = \"\"\n    for\
    \ char in message\n        if char in \"aeiouAEIOU\"\n            index = findfirst(alphabet,\
    \ char)\n            newMessage *= alphabet[index + 2]\n        elseif char in\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n            index = findfirst(alphabet,\
    \ char)\n            newMessage *= alphabet[index - 2]\n        else \n      \
    \      newMessage *= char\n        end\n    end\n    return newMessage\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_kd5y9i8.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching findfirst(::String, ::Char)\\n  Closest candidates are:\\n \
    \   findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractString, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_kd5y9i8.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_kd5y9i8.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_kd5y9i8.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp_kd5y9i8.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_kd5y9i8.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_kd5y9i8.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_kd5y9i8.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp_kd5y9i8.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \""
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = ['a','e','i','o','u']\n    alpha = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    msg = lowercase(message)\n    coded = \"\"\n    for c in msg\n        if\
    \ c in vowels\n            c = get(alpha,find(alpha,c)+2)\n        end\n     \
    \   coded = coded * uppercase(c)\n    end\n    return coded\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprgjf3x3z.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ find not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmprgjf3x3z.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprgjf3x3z.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprgjf3x3z.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprgjf3x3z.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: find not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmprgjf3x3z.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprgjf3x3z.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprgjf3x3z.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprgjf3x3z.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: find not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmprgjf3x3z.jl:21\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprgjf3x3z.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprgjf3x3z.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmprgjf3x3z.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ find not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmprgjf3x3z.jl:21\\n   "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    temp = \"\"\n    for i in range(length(message))\n        if message[i] in\
    \ ('a','e','i','o','u','A','E','I','O','U')\n            if message[i] == 'u'\
    \ || message[i] == 'U'\n                message[i] = 'a'\n            elseif message[i]\
    \ == 'z' || message[i] == 'Z'\n                message[i] = 'B'\n            else\n\
    \                message[i] = chr(ord(message[i])+2)\n            end\n      \
    \  end\n        temp = temp * message[i]\n    end\n    return(temp)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprtxz2i1f.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  ArgumentError:\
    \ Cannot construct range from arguments:\\n  start = 4\\n  step = nothing\\n \
    \ stop = nothing\\n  length = nothing\\n  Try specifying more arguments.\\n  \\\
    n  Stacktrace:\\n   [1] range_error(start::Int64, step::Nothing, stop::Nothing,\
    \ length::Nothing)\\n     @ Base ./range.jl:199\\n   [2] _range(start::Int64,\
    \ step::Nothing, stop::Nothing, len::Nothing)\\n     @ Base ./range.jl:125\\n\
    \   [3] range(start::Int64; stop::Nothing, length::Nothing, step::Nothing)\\n\
    \     @ Base ./range.jl:109\\n   [4] range(start::Int64)\\n     @ Base ./range.jl:109\\\
    n   [5] encode(message::String)\\n     @ Main /tmp/tmprtxz2i1f.jl:16\\n   [6]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmprtxz2i1f.jl:35 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmprtxz2i1f.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmprtxz2i1f.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  ArgumentError: Cannot construct range\
    \ from arguments:\\n  start = 7\\n  step = nothing\\n  stop = nothing\\n  length\
    \ = nothing\\n  Try specifying more arguments.\\n  \\n  Stacktrace:\\n   [1] range_error(start::Int64,\
    \ step::Nothing, stop::Nothing, length::Nothing)\\n     @ Base ./range.jl:199\\\
    n   [2] _range(start::Int64, step::Nothing, stop::Nothing, len::Nothing)\\n  \
    \   @ Base ./range.jl:125\\n   [3] range(start::Int64; stop::Nothing, length::Nothing,\
    \ step::Nothing)\\n     @ Base ./range.jl:109\\n   [4] range(start::Int64)\\n\
    \     @ Base ./range.jl:109\\n   [5] encode(message::String)\\n     @ Main /tmp/tmprtxz2i1f.jl:16\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmprtxz2i1f.jl:36 [inlined]\\\
    n   [8] macro expansion\\n     @ /s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    result = \"\"\n    for c in message\n        if c in \"aeiou\"\n        \
    \    result *= nextchar(c, 2)\n        elseif c in \"AEIOU\"\n            result\
    \ *= nextchar(c, 2)\n        else\n            result *= c\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp15ki8m2j.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ nextchar not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmp15ki8m2j.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp15ki8m2j.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp15ki8m2j.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp15ki8m2j.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: nextchar not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp15ki8m2j.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp15ki8m2j.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp15ki8m2j.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp15ki8m2j.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: nextchar not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp15ki8m2j.jl:20\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp15ki8m2j.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp15ki8m2j.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp15ki8m2j.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ nextchar not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmp15k"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encode_str = \"\"\n    for i in 1:length(message)\n        if islower(message[i])\n\
    \            encode_str *= uppercase(message[i])\n        elseif isupper(message[i])\n\
    \            encode_str *= lowercase(message[i])\n        elseif message[i] ==\
    \ 'a'\n            encode_str *= 'c'\n        elseif message[i] == 'e'\n     \
    \       encode_str *= 'g'\n        elseif message[i] == 'i'\n            encode_str\
    \ *= 'k'\n        elseif message[i] == 'o'\n            encode_str *= 'q'\n  \
    \      elseif message[i] == 'u'\n            encode_str *= 'y'\n        elseif\
    \ message[i] == 'A'\n            encode_str *= 'C'\n        elseif message[i]\
    \ == 'E'\n            encode_str *= 'G'\n        elseif message[i] == 'I'\n  \
    \          encode_str *= 'K'\n        elseif message[i] == 'O'\n            encode_str\
    \ *= 'Q'\n        elseif message[i] == 'U'\n            encode_str *= 'Y'\n  \
    \      else\n            encode_str *= message[i]\n        end\n    end\n    return\
    \ encode_str\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplnikqg1x.jl:52\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmplnikqg1x.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplnikqg1x.jl:52 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplnikqg1x.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmplnikqg1x.jl:53\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmplnikqg1x.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplnikqg1x.jl:53 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplnikqg1x.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmplnikqg1x.jl:54\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmplnikqg1x.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplnikqg1x.jl:54 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplnikqg1x.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmplnikqg1x.jl:55\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmplnikqg1"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    swap = Dict('a'=>'A', 'A'=>'a', 'b'=>'B', 'B'=>'b', 'c'=>'C', 'C'=>'c', 'd'=>'D',\
    \ 'D'=>'d', 'e'=>'E', 'E'=>'e', 'f'=>'F', 'F'=>'f', 'g'=>'G', 'G'=>'g', 'h'=>'H',\
    \ 'H'=>'h', 'i'=>'I', 'I'=>'i', 'j'=>'J', 'J'=>'j', 'k'=>'K', 'K'=>'k', 'l'=>'L',\
    \ 'L'=>'l', 'm'=>'M', 'M'=>'m', 'n'=>'N', 'N'=>'n', 'o'=>'O', 'O'=>'o', 'p'=>'P',\
    \ 'P'=>'p', 'q'=>'Q', 'Q'=>'q', 'r'=>'R', 'R'=>'r', 's'=>'S', 'S'=>'s', 't'=>'T',\
    \ 'T'=>'t', 'u'=>'U', 'U'=>'u', 'v'=>'V', 'V'=>'v', 'w'=>'W', 'W'=>'w', 'x'=>'X',\
    \ 'X'=>'x', 'y'=>'Y', 'Y'=>'y', 'z'=>'Z', 'Z'=>'z')\n    vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n    dictVowels = Dict('a'=>'c', 'e'=>'g', 'i'=>'k', 'o'=>'q',\
    \ 'u'=>'y')\n    swapMessage = String()\n    for c in message\n        if(c in\
    \ vowels)\n            push!(swapMessage, dictVowels[c])\n        elseif(c in\
    \ keys(swap))\n            push!(swapMessage, swap[c])\n        else\n       \
    \     push!(swapMessage, c)\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpvlkxulv3.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvlkxulv3.jl:1\n\
    in expression starting at /tmp/tmpvlkxulv3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded_message = \"\"\n    for letter in message\n        letter_index =\
    \ get_index(letter)\n        if is_vowel(letter)\n            new_letter_index\
    \ = wrap_around(letter_index + 2)\n        else\n            new_letter_index\
    \ = letter_index\n        end\n        if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            new_letter = string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")[new_letter_index]\n\
    \        elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\")\n           \
    \ new_letter = string(\"abcdefghijklmnopqrstuvwxyz\")[new_letter_index]\n    \
    \    else\n            new_letter = letter\n        end\n        encoded_message\
    \ = string(encoded_message, new_letter)\n    end\n    return encoded_message\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4ux2mdqj.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ get_index not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n  \
    \   @ Main /tmp/tmp4ux2mdqj.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4ux2mdqj.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4ux2mdqj.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp4ux2mdqj.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: get_index not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp4ux2mdqj.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4ux2mdqj.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4ux2mdqj.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp4ux2mdqj.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: get_index not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp4ux2mdqj.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4ux2mdqj.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4ux2mdqj.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp4ux2mdqj.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ get_index not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n  \
    \   @ Main /tmp/tm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Replace vowels with the letter that appears 2 places ahead of that \n \
    \   # vowel in the english alphabet\n    # http://stackoverflow.com/questions/3105406/how-to-replace-vowels-in-a-string-using-julia\n\
    \    new_message = replace(message,r\"[aeiou]\" => x -> string(nextnext(x)))\n\
    \    # Convert the message to all upper case\n    return uppercase(new_message)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpiobi_1uj.jl:27\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpiobi_1uj.jl:27 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpiobi_1uj.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    for i = 1:length(message)\n        if islower(message[i])\n\
    \            new_message = new_message * uppercase(message[i])\n        elseif\
    \ isupper(message[i])\n            new_message = new_message * lowercase(message[i])\n\
    \        else\n            new_message = new_message * message[i]\n        end\n\
    \    end\n    return new_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkpr3qcfe.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpkpr3qcfe.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkpr3qcfe.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkpr3qcfe.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkpr3qcfe.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkpr3qcfe.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkpr3qcfe.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkpr3qcfe.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkpr3qcfe.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpkpr3qcfe.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkpr3qcfe.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkpr3qcfe.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkpr3qcfe.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpkpr3qcf"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = uppercase(message) # Capitalise\n    message = replace(message,\
    \ r\"A\", \"C\")\n    message = replace(message, r\"E\", \"G\")\n    message =\
    \ replace(message, r\"I\", \"K\")\n    message = replace(message, r\"O\", \"Q\"\
    )\n    message = replace(message, r\"U\", \"W\")\n    return message\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxx8y19fn.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching replace(::String, ::Regex, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpxx8y19fn.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxx8y19fn.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxx8y19fn.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpxx8y19fn.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpxx8y19fn.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxx8y19fn.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    len_of_message = length(message)\n    message_coded = Array{String}(len_of_message)\n\
    \    for i in 1:len_of_message\n        if(isalpha(message[i]))\n            if(isupper(message[i]))\n\
    \                if(message[i] == 'A')\n                    message_coded[i] =\
    \ 'C'\n                elseif(message[i] == 'E')\n                    message_coded[i]\
    \ = 'G'\n                elseif(message[i] == 'I')\n                    message_coded[i]\
    \ = 'K'\n                elseif(message[i] == 'O')\n                    message_coded[i]\
    \ = 'Q'\n                elseif(message[i] == 'U')\n                    message_coded[i]\
    \ = 'Y'\n                else\n                    message_coded[i] = Char(Int(message[i])\
    \ + 2)\n                end\n            else\n                if(message[i] ==\
    \ 'a')\n                    message_coded[i] = 'c'\n                elseif(message[i]\
    \ == 'e')\n                    message_coded[i] = 'g'\n                elseif(message[i]\
    \ == 'i')\n                    message_coded[i] = 'k'\n                elseif(message[i]\
    \ == 'o')\n                    message_coded[i] = 'q'\n                elseif(message[i]\
    \ == 'u')\n                    message_coded[i] = 'y'\n                else\n\
    \                    message_coded[i] = Char(Int(message[i]) + 2)\n          \
    \      end\n            end\n        else\n            message_coded[i] = message[i]\n\
    \        end\n    end\n    return join(message_coded, \"\")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzsg0hl1x.jl:59\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching (Array{String})(::Int64)\\n  Closest candidates are:\\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpzsg0hl1x.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzsg0hl1x.jl:59 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzsg0hl1x.jl:58\\ntest set:\
    \ Error During Test at /tmp/tmpzsg0hl1x.jl:60\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching (Array{String})(::Int64)\\\
    n  Closest candidates are:\\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpzsg0hl1x.jl:16\\\
    n   [2] macro expansion\\n     "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    message = uppercase(message)\n    message = replace(message, \"A\"\
    \ => \"C\")\n    message = replace(message, \"E\" => \"G\")\n    message = replace(message,\
    \ \"I\" => \"K\")\n    message = replace(message, \"O\" => \"Q\")\n    message\
    \ = replace(message, \"U\" => \"W\")\n    message = lowercase(message)\n    message\
    \ = replace(message, \"a\" => \"c\")\n    message = replace(message, \"e\" =>\
    \ \"g\")\n    message = replace(message, \"i\" => \"k\")\n    message = replace(message,\
    \ \"o\" => \"q\")\n    message = replace(message, \"u\" => \"w\")\n    message\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpggry_cru.jl:37\n  Expression: candidate(\"\
    Mudasir\") == \"mWDCSKR\"\n   Evaluated: \"mwdcskr\" == \"mWDCSKR\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggry_cru.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggry_cru.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpggry_cru.jl:39\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"thks ks c mgsscgg\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggry_cru.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggry_cru.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpggry_cru.jl:40\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"k dqnt knqw whct\
    \ tq wrktg\" == \"k dQnT kNqW wHcT Tq wRkTg\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpggry_cru.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpggry_cru.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpggry_cru.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    out = \"\"\n    #fill out\
    \ function\n    #loop over message string\n        #check if letter is in alphabet\n\
    \            #convert letter to upper or lower case\n            #check if lower\
    \ case letter is vowel\n                #convert to index of letter + 2 mod 26\n\
    \                #add letter to out string\n            #if not vowel, add letter\
    \ to out string\n        #if not letter in alphabet, add to out string\n    \n\
    \    \n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvfxng4qx.jl:35\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfxng4qx.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfxng4qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvfxng4qx.jl:36\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfxng4qx.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfxng4qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvfxng4qx.jl:37\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfxng4qx.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfxng4qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvfxng4qx.jl:38\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfxng4qx.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfxng4qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvfxng4qx.jl:39\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvfxng4qx.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Your code here\nend\n\"\"\"\n    Write a function that takes a message,\
    \ and decodes a message \n    that has been encoded using the function above.\
    \  \n    \n    Examples:\n    >>> decode('TGST')\n    'test'\n    >>> decode('tHKS\
    \ KS C MGSSCGG')\n    'THIS IS A MESSAGE'\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmppb1z97oe.jl:17\nin expression starting at /tmp/tmppb1z97oe.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # This is where you define the function\nend\n\"\"\"\n    Write a function\
    \ that takes a message, and decodes the message back \n    to its original form.\
    \ \n    Examples:\n    >>> decode('tgst')\n    'test'\n    >>> decode('tHKS KS\
    \ C MGSSCGG')\n    'This is a message'\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp3mmk49ti.jl:17\nin expression starting at /tmp/tmp3mmk49ti.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    letters = split(message, \"\")\n    #letters = \"test\"\n    new_letters\
    \ = []\n    for letter in letters\n        #letter = letters[1]\n        if letter\
    \ in \"aeiouAEIOU\"\n            #vowel = letter[1]\n            if letter in\
    \ \"aeiou\"\n                letter = chr(Int(letter[1]) + 2)\n            else\n\
    \                letter = chr(Int(letter[1]) + 2 - 32)\n        elseif letter\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            letter = chr(Int(letter[1]) -\
    \ 32)\n        elseif letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            letter\
    \ = chr(Int(letter[1]) + 32)\n        end\n        push!(new_letters, letter)\n\
    \    end\n    new_message = \"\"\n    for new_letter in new_letters\n        new_message\
    \ = new_message * new_letter\n    end\n    return new_message\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpk0kij0i1.jl:22 expected \"\
    end\", got \"elseif\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk0kij0i1.jl:26\n\
    in expression starting at /tmp/tmpk0kij0i1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \  s = []\n  vowels = \"aeiou\"\n  for c in message\n    if islower(c)\n     \
    \ push!(s,uppercase(c))\n    elseif isupper(c)\n      push!(s,lowercase(c))\n\
    \    else\n      push!(s,c)\n    end\n  end\n  for (i,c) in enumerate(s)\n   \
    \ if c in vowels\n      i1 = findfirst(vowels,c)\n      i2 = mod(i1+2,length(vowels))\n\
    \      s[i] = vowels[i2]\n    end\n  end\n  return join(s)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqn741u6k.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpqn741u6k.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqn741u6k.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqn741u6k.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpqn741u6k.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpqn741u6k.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqn741u6k.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqn741u6k.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpqn741u6k.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpqn741u6k.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqn741u6k.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqn741u6k.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpqn741u6k.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpqn741u6"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    lower = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    upper = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n\
    \    vowels = ['a','e','i','o','u']\n    final = \"\"\n    \n    for i in 1:length(message)\n\
    \        \n        if message[i] in lower\n            \n            for j in\
    \ 1:length(lower)\n                \n                if message[i] == lower[j]\n\
    \                    \n                    if message[i] in vowels\n         \
    \               \n                        final = final * lower[(j+2)%26]\n  \
    \                      \n                    else\n                        \n\
    \                        final = final * lower[j]\n                        \n\
    \                    end\n                    \n                end\n        \
    \        \n            end\n            \n        elseif message[i] in upper\n\
    \            \n            for j in 1:length(upper)\n                \n      \
    \          if message[i] == upper[j]\n                    \n                 \
    \   if message[i] in vowels\n                        \n                      \
    \  final = final * upper[(j+2)%26]\n                        \n               \
    \     else\n                        \n                        final = final *\
    \ upper[j]\n                        \n                    end\n              \
    \      \n                end\n                \n            end\n            \n\
    \        else\n            \n            final = final * message[i]\n        \
    \    \n        end\n        \n    end\n    \n    return final\n    \nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp_wcfztm.jl:79\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_wcfztm.jl:79 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_wcfztm.jl:78\ntest set: Test\
    \ Failed at /tmp/tmpp_wcfztm.jl:80\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mwdcskr\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_wcfztm.jl:80 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_wcfztm.jl:78\ntest set: Test\
    \ Failed at /tmp/tmpp_wcfztm.jl:81\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_wcfztm.jl:81 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_wcfztm.jl:78\ntest set: Test\
    \ Failed at /tmp/tmpp_wcfztm.jl:82\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"Thks ks c mgsscgg\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_wcfztm.jl:82 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_wcfztm.jl:78\ntest set: Test\
    \ Failed at /tmp/tmpp_wcfztm.jl:83\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_wcfztm.jl:76\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    #Letters lowercase\n    lc_letters = string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    #letters Uppercase\n    uc_letters = string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n    #Vowels lowercase\n    lc_vowels = string(\"aeiou\")\n    #Vowels Uppercase\n\
    \    uc_vowels = string(\"AEIOU\")\n    #Code Var\n    #cod = string(\"\")\n \
    \   newmsg = string(\"\")\n    for i in 1:length(message)\n        if message[i]\
    \ in lc_letters\n            code = lc_letters[(findfirst(lc_letters,message[i])+2)]\n\
    \            newmsg = newmsg*code\n        elseif message[i] in uc_letters\n \
    \           code = uc_letters[(findfirst(uc_letters,message[i])+2)]\n        \
    \    newmsg = newmsg*code\n        elseif message[i] in lc_vowels\n          \
    \  code = lc_vowels[(findfirst(lc_vowels,message[i])+2)]\n            newmsg =\
    \ newmsg*code\n        elseif message[i] in uc_vowels\n            code = uc_vowels[(findfirst(uc_vowels,message[i])+2)]\n\
    \            newmsg = newmsg*code\n        else\n            newmsg = newmsg*message[i]\n\
    \        end\n    end\n    return newmsg\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp63sieqj7.jl:50\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching findfirst(::String, ::Char)\\n  Closest candidates are:\\n \
    \   findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\\
    n    findfirst(::AbstractString, !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp63sieqj7.jl:31\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp63sieqj7.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp63sieqj7.jl:49\\ntest set:\
    \ Error During Test at /tmp/tmp63sieqj7.jl:51\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp63sieqj7.jl:31\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp63sieqj7.jl:51 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp63sieqj7.jl:49\\ntest set:\
    \ Error During Test at /tmp/tmp63sieqj7.jl:52\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \""
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # We will loop over each letter in the string and check if it is a vowel\n\
    \    # If the letter is a vowel, we will save the index of that vowel\n    # And\
    \ move on to next letter if the next letter is not a vowel\n    # If the letter\
    \ is not a vowel we will proceed to the next letter\n    # So if the letter is\
    \ a vowel, we will check if the next letter is vowel or not\n    # If the next\
    \ letter is a vowel, we will move to the next letter by incrementing the counter\n\
    \    # If the next letter is not a vowel, we will now check if the next to next\
    \ letter is a vowel or not\n    # If the next to next letter is a vowel, we will\
    \ then replace the current vowel with the next to next\n    # by incrementing\
    \ the counter by two\n    # Now, we will check if the next letter is a vowel or\
    \ not, if it is, we will then replace the current vowel\n    # with the next letter\
    \ by incrementing the counter by one\n    # If the next letter is not a vowel,\
    \ we will replace the current vowel with the next to next letter\n    # by incrementing\
    \ the counter by two\n    # If the next to next letter is not a vowel, we will\
    \ then replace the current vowel with the one after the next to next\n    # by\
    \ incrementing the counter by three\n    # Finally, if the next letter and the\
    \ next to next letter are not vowels, we will then replace the current vowel with\
    \ the \n    # one after the next to next letter by incrementing the counter by\
    \ three\n    # If the letter is not a vowel, we will proceed to the next letter\
    \ by incrementing the counter by one\n    # We will repeat this process until\
    \ the counter equals the length of the message\n    # Once the counter equals\
    \ the length of the message, we will break from the loop and return the message\n\
    \    # We will also convert all lowercase letters to uppercase and all uppercase\
    \ letters to lowercase\n    # And return the encoded message\n    # We will start\
    \ by defining the vowels, \n    # and converting the message to lowercase for\
    \ simplicity\n    vowels = \"AEIOU\"\n    message = lowercase(message)\n    #\
    \ Next, we will define a counter and length of the message\n    counter = 1\n\
    \    length = length(message)\n   \nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8iyp53qu.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8iyp53qu.jl:1\n\
    in expression starting at /tmp/tmp8iyp53qu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    #0. First check if string is empty, if it is return empty string\n    if\
    \ isempty(message)\n        return \"\"\n    end\n    #1. Convert all string to\
    \ uppercase\n    message = uppercase(message)\n    #2. Collect indices of vowels\n\
    \    vowels = [Uppercase(\"A\"),Uppercase(\"E\"),Uppercase(\"I\"),Uppercase(\"\
    O\"),Uppercase(\"U\")]\n    vowel_ind = []\n    for i = 1:length(message)\n  \
    \      if ismember(message[i],vowels)\n            push!(vowel_ind,i)\n      \
    \  end\n    end\n    #3. Create array of characters, to change letters\n    letters\
    \ = [Uppercase(\"A\"),Uppercase(\"B\"),Uppercase(\"C\"),Uppercase(\"D\"),Uppercase(\"\
    E\"),Uppercase(\"F\"),Uppercase(\"G\"),Uppercase(\"H\"),Uppercase(\"I\"),Uppercase(\"\
    J\"),Uppercase(\"K\"),Uppercase(\"L\"),Uppercase(\"M\"),Uppercase(\"N\"),Uppercase(\"\
    O\"),Uppercase(\"P\"),Uppercase(\"Q\"),Uppercase(\"R\"),Uppercase(\"S\"),Uppercase(\"\
    T\"),Uppercase(\"U\"),Uppercase(\"V\"),Uppercase(\"W\"),Uppercase(\"X\"),Uppercase(\"\
    Y\"),Uppercase(\"Z\")]\n    #4. Loop through string and change vowels\n    for\
    \ j = 1:length(vowel_ind)\n        index = vowel_ind[j]\n        #4.1 Check if\
    \ current vowel is Y\n        if message[index] == Uppercase(\"Y\")\n        \
    \    message[index] = letters[1]\n        else\n            letter_index = findall(x->x==message[index],letters)[1]\n\
    \            message[index] = letters[letter_index+2]\n        end\n    end\n\
    \    #5. Return message\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqlgej8k1.jl:50\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ Uppercase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n  \
    \   @ Main /tmp/tmpqlgej8k1.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqlgej8k1.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqlgej8k1.jl:49\\ntest set:\
    \ Error During Test at /tmp/tmpqlgej8k1.jl:51\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: Uppercase not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpqlgej8k1.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqlgej8k1.jl:51 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqlgej8k1.jl:49\\ntest set:\
    \ Error During Test at /tmp/tmpqlgej8k1.jl:52\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: Uppercase not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpqlgej8k1.jl:22\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqlgej8k1.jl:52 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqlgej8k1.jl:49\\ntest set:\
    \ Error During Test at /tmp/tmpqlgej8k1.jl:53\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ Uppercase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n  \
    \   @ Main /tmp/tm"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Your code here\n    return message\nend\n@assert encode(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n@assert encode(\"test\") == \"TGST\"\n \nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: encode(\"This is a message\") == \"tHKS\
    \ KS C MGSSCGG\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbccs892_.jl:18\n\
    in expression starting at /tmp/tmpbccs892_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message_ = reverse_case(message)\n    for i in 1:length(message_)\n     \
    \   if isvowel(message_[i])\n            message_[i] = shift_vowel(message_[i])\n\
    \        end\n    end\n    return message_\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpefe5tnan.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ reverse_case not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmpefe5tnan.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpefe5tnan.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpefe5tnan.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpefe5tnan.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: reverse_case not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpefe5tnan.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpefe5tnan.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpefe5tnan.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpefe5tnan.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: reverse_case not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpefe5tnan.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpefe5tnan.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpefe5tnan.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpefe5tnan.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ reverse_case not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = ['a','e','i','o','u']\n    encoded = \"\"\n    for i = 1:length(message)\n\
    \        c = message[i]\n        if c \u2208 vowels\n            c = chr(Int(c)\
    \ + 2)\n        elseif c == 'y'\n            c = 'a'\n        elseif c == 'z'\n\
    \            c = 'b'\n        end\n        c = uppercase(c)\n        push!(encoded,\
    \ c)\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_jb_bq3k.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching push!(::String, ::Char)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\\
    n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_jb_bq3k.jl:27\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_jb_bq3k.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_jb_bq3k.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp_jb_bq3k.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching push!(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\n   \
    \ push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_jb_bq3k.jl:27\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_jb_bq3k.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_jb_bq3k.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    vowels = \"AEIOU\"\n    encoded_message\
    \ = \"\"\n    for letter in message\n        letter_idx = findfirst(alphabet,\
    \ letter)\n        if letter_idx != nothing\n            encoded_letter = alphabet[(letter_idx\
    \ + 2) % 26]\n            if letter in vowels\n                encoded_message\
    \ *= encoded_letter\n            else\n                encoded_message *= letter\n\
    \        else\n            encoded_message *= letter\n        end\n    end\n \
    \   return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmp1e68a86r.jl:22 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1e68a86r.jl:26\n\
    in expression starting at /tmp/tmp1e68a86r.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    n = length(message)\n    for i in 1:n\n        if message[i]==\"a\" || message[i]==\"\
    A\"\n            message[i] = \"c\"\n        elseif message[i]==\"e\" || message[i]==\"\
    E\"\n            message[i] = \"g\"\n        elseif message[i]==\"i\" || message[i]==\"\
    I\"\n            message[i] = \"k\"\n        elseif message[i]==\"o\" || message[i]==\"\
    O\"\n            message[i] = \"q\"\n        elseif message[i]==\"u\" || message[i]==\"\
    U\"\n            message[i] = \"w\"\n        elseif message[i]==\"y\" || message[i]==\"\
    Y\"\n            message[i] = \"a\"\n        elseif isupper(message[i])\n    \
    \        message[i] = tolower(message[i])\n        elseif islower(message[i])\n\
    \            message[i] = toupper(message[i])\n        end\n    end\n    return\
    \ message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk1dsd7h6.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpk1dsd7h6.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk1dsd7h6.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk1dsd7h6.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpk1dsd7h6.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpk1dsd7h6.jl:29\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk1dsd7h6.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk1dsd7h6.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpk1dsd7h6.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpk1dsd7h6.jl:29\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk1dsd7h6.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk1dsd7h6.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpk1dsd7h6.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpk1dsd7h"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Define the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  # Initialize an empty string. \n    encoded_message = \"\"\n    # For every\
    \ character in the message...\n    for letter in message\n        # If this letter\
    \ is a letter (uppercase or lowercase)...\n        if isalpha(letter)\n      \
    \      # Check if it is uppercase or lowercase\n            if islower(letter)\n\
    \                # Remove the letter from the alphabet and store in `position`\n\
    \                position = findfirst(lowercase(letter), alphabet)\n         \
    \       # Add the letter to the encoded message \n                push!(encoded_message,\
    \ alphabet[position + 2])\n            else\n                # Remove the letter\
    \ from the alphabet and store in `position`\n                position = findfirst(uppercase(letter),\
    \ alphabet)\n                # Add the letter to the encoded message \n      \
    \          push!(encoded_message, alphabet[position + 2])\n            end\n \
    \       else\n            # Else, if it's not a letter, just add it to the encoded\
    \ message\n            push!(encoded_message, letter)\n        end\n    end\n\
    \    # Return the encoded message\n    return encoded_message\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9kookf1h.jl:48\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp9kookf1h.jl:22\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9kookf1h.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9kookf1h.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmp9kookf1h.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isalpha not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp9kookf1h.jl:22\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9kookf1h.jl:49 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9kookf1h.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmp9kookf1h.jl:50\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp9kookf1h.jl:22\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9kookf1h.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9kookf1h.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmp9kookf1h.jl:51\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp9kookf1"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # initialize alphabet, encode_dict, and result \n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    encode_dict = Dict()\n    result = \"\"\n    \n    # create encode_dict \n\
    \    for i = 1:length(alpha)\n        encode_dict[alpha[i]] = alpha[mod(i+2,length(alpha))+1]\n\
    \    end \n    \n    # encode the message \n    for i = 1:length(message)\n  \
    \      if message[i] in encode_dict\n            result *= encode_dict[message[i]]\n\
    \        else \n            result *= message[i]\n        end \n    end \n   \
    \ \n    # swap cases \n    result = swapcase(result)\n    \n    return result\
    \ \nend \nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpfv05i0an.jl:16\nin expression\
    \ starting at /tmp/tmpfv05i0an.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \   return str.join(\"\",Char.(message) .|> (t, x) -> if isalpha(x)\n        if\
    \ (islower(x))\n            x=toupper(x)\n        else\n            x=tolower(x)\n\
    \        end\n        if (x in \"aeiouAEIOU\")\n            y = Char(t+2)\n  \
    \          if (y == \"c\")\n                y = \"C\"\n            elseif (y ==\
    \ \"d\")\n                y = \"D\"\n            end\n            x = y\n    \
    \    end\n        x)\n    )\nend\nencode(\"This is a message\")\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \")\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaqwybtjv.jl:30\nin expression starting at /tmp/tmpaqwybtjv.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \   # Loop through the string\n   # Check if vowel \n   # If yes then change it\
    \ to the next character in alphabet\n   # Else change case\n   # return the modified\
    \ string.\n   \n   \n   # Algorithm\n   # 1. create a english-alphabet string\
    \ and a list of vowels. \n   # 2. if character found in alphabet and vowel list\
    \ is present\n   #     update the position by 2 places else just change the case.\n\
    \   # 3. return new encoded string.\n   \n   \n    # Empty String\n    encoded_message\
    \ = \"\"\n    \n    # English alphabet to access vowels\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    \n    # List of vowels\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    \n    # Loop over the message\n    for character in message\n        \n\
    \        # If character is found in alphabet\n        if character in alphabet\n\
    \            \n            # If character is vowel\n            if character in\
    \ vowels\n                \n                # Get the index of the current character\
    \ from alphabet string\n                index = alphabet.index(character)\n  \
    \              \n                # Increment the index by 2 places\n         \
    \       index += 2\n                \n                # Get the character from\
    \ the new index and concatenate to \n                # encoded message\n     \
    \           encoded_message += alphabet[index]\n                \n           \
    \ # If character is not vowel\n            else\n                \n          \
    \      # If uppercase change to lowercase else change to uppercase\n         \
    \       if character == character.lower()\n                    encoded_message\
    \ += character.upper()\n                else\n                    encoded_message\
    \ += character.lower()\n                end\n            end\n        # If character\
    \ is not found in alphabet\n        else\n            encoded_message += character\n\
    \        end\n    end\n    return encoded_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0y21ey1o.jl:79\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching +(::String, ::Char)\\n  Closest candidates are:\\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::Integer, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp0y21ey1o.jl:69\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0y21ey1o.jl:79 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0y21ey1o.jl:78\\ntest set:\
    \ Error During Test at /tmp/tmp0y21ey1o.jl:80\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching +(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp0y21ey1o.jl:69\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0y21ey1o.jl:80 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0y21ey1o.jl:78\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    for i in 1:length(message)\n        if isletter(message[i])\n\
    \            if islower(message[i])\n                message[i] = uppercase(message[i])\n\
    \            else\n                message[i] = lowercase(message[i])\n      \
    \      end\n            if findfirst([\"a\",\"e\",\"i\",\"o\",\"u\"], message[i])\
    \ != nothing\n                new_message *= string(message[i],message[i+1],message[i+2])\n\
    \            else\n                new_message *= string(message[i])\n       \
    \     end\n        else\n            new_message *= string(message[i])\n     \
    \   end\n    end\n    return new_message\nend\nprintln(encode(\"test\"))\nprintln(encode(\"\
    This is a message\"))\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: islower not defined\nStacktrace:\n [1]\
    \ encode(message::String)\n   @ Main /tmp/tmpztysfpxh.jl:18\n [2] top-level scope\n\
    \   @ /tmp/tmpztysfpxh.jl:34\nin expression starting at /tmp/tmpztysfpxh.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    return swapcase(message)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppaxoj_9b.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ swapcase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmppaxoj_9b.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppaxoj_9b.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppaxoj_9b.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmppaxoj_9b.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: swapcase not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppaxoj_9b.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppaxoj_9b.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppaxoj_9b.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmppaxoj_9b.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: swapcase not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmppaxoj_9b.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppaxoj_9b.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppaxoj_9b.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmppaxoj_9b.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ swapcase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmppax"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    msg = upper(message)\n    lett = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    vowel\
    \ = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    output = \"\"\n    for m in msg\n\
    \        if m in vowel\n            index = findfirst(m, vowel)\n            if\
    \ index + 2 > 5\n                output = output * lett[index + 2 - 5]\n     \
    \       else\n                output = output * lett[index + 2]\n            else\n\
    \                output = output * m\n        end\n    end\n    return output\n\
    end\n            \nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmp_xxdsdva.jl:22 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_xxdsdva.jl:26\n\
    in expression starting at /tmp/tmp_xxdsdva.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message_list = split(message)\n    coder = Dict('A'=>'C','E'=>'G','I'=>'K','O'=>'Q','U'=>'Y','a'=>'c','e'=>'g','i'=>'k','o'=>'q','u'=>'y')\n\
    \    for i in 1:length(message_list)\n        if in(message_list[i], keys(coder))\n\
    \            message_list[i] = coder[message_list[i]]\n        elseif message_list[i]\
    \ in 'abcdefghijklmnopqrstuvwxyz'\n            message_list[i] = uppercase(message_list[i])\n\
    \        else\n            message_list[i] = lowercase(message_list[i])\n    \
    \    end\n    end\n    str = join(message_list)\n    return str\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp55brhy_c.jl:20\nin expression\
    \ starting at /tmp/tmp55brhy_c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message_array = []\n    vowel_list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    for i in 1:length(message)\n        if message[i] in ['a' \"b\" \"c\" \"\
    d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"\
    q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"]\n            push!(message_array,message[i])\n\
    \        else\n            push!(message_array,message[i])\n        end\n    end\n\
    \    message_array = [message_array[i] == upper(message_array[i]) ? lower(message_array[i])\
    \ : upper(message_array[i]) for i in 1:length(message_array)]\n    message_array\
    \ = [upper(message_array[i]) for i in 1:length(message_array)]\n    for i in 1:length(message_array)\n\
    \        if message_array[i] in vowel_list\n            if message_array[i] ==\
    \ \"u\"\n                message_array[i] = \"a\"\n            else\n        \
    \        message_array[i] = vowel_list[findall(vowel_list .== message_array[i])[1]+1]\n\
    \            end\n        end\n    end\n    message_array = [upper(message_array[i])\
    \ for i in 1:length(message_array)]\n    message_string = join(message_array)\n\
    \    return message_string\nend\nprintln(encode(\"test\"))\nprintln(encode(\"\
    This is a message\"))\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: upper not defined\nStacktrace:\n [1] (::var\"\
    #1#4\")(i::Int64)\n   @ Main ./none:0\n [2] iterate\n   @ ./generator.jl:47 [inlined]\n\
    \ [3] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#4\"})\n   @ Base ./array.jl:724\n\
    \ [4] encode(message::String)\n   @ Main /tmp/tmp_zeks5xa.jl:24\n [5] top-level\
    \ scope\n   @ /tmp/tmp_zeks5xa.jl:39\nin expression starting at /tmp/tmp_zeks5xa.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    result = \"\"\n    for l in message\n        if isVowel(l)\n            result\
    \ *= Char(shiftTwo(l))\n        elseif isupper(l)\n            result *= lowercase(l)\n\
    \        elseif islower(l)\n            result *= uppercase(l)\n        else\n\
    \            result *= l\n        end\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpznksr8ya.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isVowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpznksr8ya.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpznksr8ya.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpznksr8ya.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpznksr8ya.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isVowel not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpznksr8ya.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpznksr8ya.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpznksr8ya.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpznksr8ya.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isVowel not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpznksr8ya.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpznksr8ya.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpznksr8ya.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpznksr8ya.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isVowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpznksr8y"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    chars = collect(message)\n    alphabet = collect('abcdefghijklmnopqrstuvwxyz')\n\
    \    alphabet_upper = collect('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n    vowels = ['a','e','i','o','u']\n\
    \    vowels_upper = ['A','E','I','O','U']\n    result = []\n    \n    for char\
    \ in chars\n        \n        if char in alphabet\n            char_index = findall(char\
    \ .== alphabet)[1]\n            char_index = mod1(char_index + 2, 26)\n      \
    \      char = alphabet[char_index]\n        elseif char in alphabet_upper\n  \
    \          char_index = findall(char .== alphabet_upper)[1]\n            char_index\
    \ = mod1(char_index + 2, 26)\n            char = alphabet_upper[char_index]\n\
    \        end\n        \n        if char in vowels\n            char_index = findall(char\
    \ .== vowels)[1]\n            char_index = mod1(char_index + 2, 5)\n         \
    \   char = vowels[char_index]\n        elseif char in vowels_upper\n         \
    \   char_index = findall(char .== vowels_upper)[1]\n            char_index = mod1(char_index\
    \ + 2, 5)\n            char = vowels_upper[char_index]\n        end\n        \n\
    \        push!(result, char)\n    end\n    \n    return join(result)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpbehu9_sq.jl:17\nin expression\
    \ starting at /tmp/tmpbehu9_sq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = upper(message)\n    b = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    c =\
    \ \"CDEFGHIJKLMNOPQRSTUVWXYZAB\"\n    s = \"\"\n    for i in message\n       \
    \ if i in b\n            s = s * c[findfirst(b,i)]\n        else\n           \
    \ s = s * i\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn1ij9bz9.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpn1ij9bz9.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn1ij9bz9.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn1ij9bz9.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpn1ij9bz9.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: upper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpn1ij9bz9.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn1ij9bz9.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn1ij9bz9.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpn1ij9bz9.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: upper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpn1ij9bz9.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn1ij9bz9.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn1ij9bz9.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpn1ij9bz9.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpn1ij9bz9.jl:15\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    s = \"\"\n    len = length(message)\n    for i = 1:len\n        temp = getindex(message,i)\n\
    \        if temp in \"aeiou\"\n            if temp == 'u'\n                temp\
    \ = 'w'\n            else\n                temp = getindex(message,i+2)\n    \
    \        end\n        elseif temp in \"AEIOU\"\n            if temp == 'U'\n \
    \               temp = 'W'\n            else\n                temp = getindex(message,i+2)\n\
    \            end\n        elseif temp in \"zZ\"\n            temp = 'b'\n    \
    \    elseif temp in \"Yy\"\n            temp = 'a'\n        elseif temp in \"\
    Xx\"\n            temp = 'Z'\n        elseif temp in \"Ww\"\n            temp\
    \ = 'y'\n        elseif temp in \"Vv\"\n            temp = 'X'\n        elseif\
    \ temp in \"Uu\"\n            temp = 'V'\n        elseif temp in \"Tt\"\n    \
    \        temp = 'U'\n        elseif temp in \"Ss\"\n            temp = 'T'\n \
    \       elseif temp in \"Rr\"\n            temp = 'S'\n        elseif temp in\
    \ \"Qq\"\n            temp = 'R'\n        elseif temp in \"Pp\"\n            temp\
    \ = 'Q'\n        elseif temp in \"Oo\"\n            temp = 'P'\n        elseif\
    \ temp in \"Nn\"\n            temp = 'O'\n        elseif temp in \"Mm\"\n    \
    \        temp = 'N'\n        elseif temp in \"Ll\"\n            temp = 'M'\n \
    \       elseif temp in \"Kk\"\n            temp = 'L'\n        elseif temp in\
    \ \"Jj\"\n            temp = 'K'\n        elseif temp in \"Ii\"\n            temp\
    \ = 'J'\n        elseif temp in \"Hh\"\n            temp = 'I'\n        elseif\
    \ temp in \"Gg\"\n            temp = 'H'\n        elseif temp in \"Ff\"\n    \
    \        temp = 'G'\n        elseif temp in \"Ee\"\n            temp = 'F'\n \
    \       elseif temp in \"Dd\"\n            temp = 'E'\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp344txrvi.jl:1\nin expression starting at /tmp/tmp344txrvi.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message_list = collect(message)\n    message_list_uppercase = map(uppercase,\
    \ message_list)\n    message_list_lowercase = map(lowercase, message_list)\n \
    \   encode_list = []\n    for i in 1:length(message_list)\n        if message_list[i]\
    \ in uppercase(message)\n            if message_list[i] in \"AEIOU\"\n       \
    \         ind = findfirst(message_list[i], uppercase(message))\n             \
    \   if ind + 2 > 26\n                    push!(encode_list, uppercase(message)[ind\
    \ + 2 - 26])\n                else\n                    push!(encode_list, uppercase(message)[ind\
    \ + 2])\n                end\n            else\n                push!(encode_list,\
    \ message_list[i])\n            end\n        elseif message_list[i] in lowercase(message)\n\
    \            if message_list[i] in \"aeiou\"\n                ind = findfirst(message_list[i],\
    \ lowercase(message))\n                if ind + 2 > 26\n                    push!(encode_list,\
    \ lowercase(message)[ind + 2 - 26])\n                else\n                  \
    \  push!(encode_list, lowercase(message)[ind + 2])\n                end\n    \
    \        else\n                push!(encode_list, message_list[i])\n         \
    \   end\n        end\n    end\n    return(join(encode_list))\nend\nencode(\"test\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_bzk7a2l.jl:52\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TTST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp_bzk7a2l.jl:52 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp_bzk7a2l.jl:51\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    puncts = [' ', '.', ',', '?', '!', '-', '(', ')', '\"', \"'\"]\n    vowels\
    \ = ['a', 'e', 'i', 'o', 'u']\n    for i in eachindex(message)\n        if message[i]\
    \ in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n            if islower(message[i])\n\
    \                message[i] = uppercase(message[i])\n            else\n      \
    \          message[i] = lowercase(message[i])\n            end\n        end\n\
    \        if message[i] in vowels\n            if message[i] == 'u'\n         \
    \       message[i] = 'a'\n            else\n                message[i] = vowels[vowels\
    \ .== message[i]][1] + 2\n            end\n        end\n    end\n    return message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpj3fs93oc.jl:40\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpj3fs93oc.jl:40 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpj3fs93oc.jl:39\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = \"aeiou\"\n    encoded_msg = \"\"\n    for c in message\n      \
    \  if in(lowercase(c), 'abcdefghijklmnopqrstuvwxyz')\n            if c in vowels\n\
    \                if c in 'aeiou'\n                    c = vowels[vowels.index(c)\
    \ + 2]\n                else\n                    c = uppercase(vowels[vowels.index(lowercase(c))\
    \ + 2])\n                end\n            else\n                if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                    c = uppercase(c)\n                else\n                \
    \    c = lowercase(c)\n                end\n            end\n        end\n   \
    \     push!(encoded_msg, c)\n    end\n    return encoded_msg\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmptpbcb2fh.jl:18\nin expression\
    \ starting at /tmp/tmptpbcb2fh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    vowels = \"AEIOU\"\n    new_message\
    \ = \"\"\n    for i = 1:length(message)\n        if islower(message[i])\n    \
    \        new_message = new_message * uppercase(message[i])\n        else\n   \
    \         new_message = new_message * lowercase(message[i])\n        end\n   \
    \     if in(message[i],vowels)\n            code = encode(message[i]) + 2\n  \
    \          if code > 5\n                code = code - 5\n            end\n   \
    \         new_message = new_message * vowels[code]\n        elseif in(lowercase(message[i]),vowels)\n\
    \            code = encode(lowercase(message[i])) + 2\n            if code > 5\n\
    \                code = code - 5\n            end\n            new_message = new_message\
    \ * vowels[code]\n        elseif isletter(message[i])\n            new_message\
    \ = new_message * message[i]\n        end\n    end\n    return new_message\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk8o_g9er.jl:47\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpk8o_g9er.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk8o_g9er.jl:47 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk8o_g9er.jl:46\\ntest set:\
    \ Error During Test at /tmp/tmpk8o_g9er.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpk8o_g9er.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk8o_g9er.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk8o_g9er.jl:46\\ntest set:\
    \ Error During Test at /tmp/tmpk8o_g9er.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpk8o_g9er.jl:19\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk8o_g9er.jl:49 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk8o_g9er.jl:46\\ntest set:\
    \ Error During Test at /tmp/tmpk8o_g9er.jl:50\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpk8o_g9e"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    characters = collect(message)\n    for i = 1:length(characters)\n       \
    \ character = characters[i]\n        characters[i] = encode_character(character)\n\
    \    end\n    return join(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv16dl1vh.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ encode_character not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\\
    n     @ Main /tmp/tmpv16dl1vh.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv16dl1vh.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv16dl1vh.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpv16dl1vh.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: encode_character not\
    \ defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpv16dl1vh.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv16dl1vh.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv16dl1vh.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpv16dl1vh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: encode_character not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpv16dl1vh.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv16dl1vh.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv16dl1vh.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpv16dl1vh.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ encode_character not defined\\n  Stacktrace:\\n   [1] encode(message::"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    trans_map =  Dict(\"a\"=>\"c\", \"e\"=>\"g\", \"i\"=>\"k\", \"o\"=>\"q\"\
    , \"u\"=>\"w\", \"A\"=>\"C\", \"E\"=>\"G\", \"I\"=>\"K\", \"O\"=>\"Q\", \"U\"\
    =>\"W\")\n    trans_map[\"B\"] = \"D\"\n    trans_map[\"b\"] = \"d\"\n    trans_map[\"\
    C\"] = \"E\"\n    trans_map[\"c\"] = \"e\"\n    trans_map[\"D\"] = \"F\"\n   \
    \ trans_map[\"d\"] = \"f\"\n    trans_map[\"F\"] = \"H\"\n    trans_map[\"f\"\
    ] = \"h\"\n    trans_map[\"G\"] = \"I\"\n    trans_map[\"g\"] = \"i\"\n    trans_map[\"\
    H\"] = \"J\"\n    trans_map[\"h\"] = \"j\"\n    trans_map[\"J\"] = \"L\"\n   \
    \ trans_map[\"j\"] = \"l\"\n    trans_map[\"K\"] = \"M\"\n    trans_map[\"k\"\
    ] = \"m\"\n    trans_map[\"L\"] = \"N\"\n    trans_map[\"l\"] = \"n\"\n    trans_map[\"\
    M\"] = \"O\"\n    trans_map[\"m\"] = \"o\"\n    trans_map[\"N\"] = \"P\"\n   \
    \ trans_map[\"n\"] = \"p\"\n    trans_map[\"P\"] = \"R\"\n    trans_map[\"p\"\
    ] = \"r\"\n    trans_map[\"Q\"] = \"S\"\n    trans_map[\"q\"] = \"s\"\n    trans_map[\"\
    R\"] = \"T\"\n    trans_map[\"r\"] = \"t\"\n    trans_map[\"S\"] = \"U\"\n   \
    \ trans_map[\"s\"] = \"u\"\n    trans_map[\"T\"] = \"V\"\n    trans_map[\"t\"\
    ] = \"v\"\n    trans_map[\"V\"] = \"X\"\n    trans_map[\"v\"] = \"x\"\n    trans_map[\"\
    W\"] = \"Y\"\n    trans_map[\"w\"] = \"y\"\n\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz4f4is9l.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz4f4is9l.jl:1\n\
    in expression starting at /tmp/tmpz4f4is9l.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    # Get the message from the user\n    #message = readline(stdin)\n \
    \   \n    # Length of the message\n    message_length = length(message)\n    \n\
    \    # The encrypted message\n    encoded_message = \"\"\n    \n    # Loop through\
    \ each character of the message\n    for i in 1:message_length\n        \n   \
    \     # Get the character at the position i\n        char = message[i]\n     \
    \   \n        # If the character is a letter\n        if char in ['a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',\
    \ 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y',\
    \ 'Z']\n            \n            # If the character is a vowel\n            if\
    \ char in ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n               \
    \ \n                # If the character is not 'u' or 'U'\n                if char\
    \ in ['a', 'e', 'i', 'o', 'A', 'E', 'I', 'O']\n                    \n        \
    \            # We replace the character with the letter two positions ahead in\
    \ the alphabet\n                    encoded_message = encoded_message * string(nextnext(char))\n\
    \                    \n                else\n                    \n          \
    \          # We go to the beginning of the alphabet\n                    encoded_message\
    \ = encoded_message * string('a')\n                    \n                end\n\
    \                \n            # If the character is not a vowel\n           \
    \ else\n                \n                # If the character is a lowercase letter\n\
    \                if char in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o',\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpopq8bopq.jl:57\nin expression starting at\
    \ /tmp/tmpopq8bopq.jl:57\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    enc_message = \"\"\n    for letter in message\n        if letter in ['a','e','i','o','u']\n\
    \            i = findfirst(message, letter)\n            ind = 2 + i\n       \
    \     next = message[ind]\n            push!(enc_message,next)\n        elseif\
    \ letter in ['A','E','I','O','U']\n            i = findfirst(message, letter)\n\
    \            ind = 2 + i\n            next = message[ind]\n            push!(enc_message,next)\n\
    \        elseif letter in lowercase(message)\n            push!(enc_message,uppercase(letter))\n\
    \        elseif letter in uppercase(message)\n            push!(enc_message,lowercase(letter))\n\
    \        else\n            push!(enc_message,letter)\n        end\n    end\n \
    \   return enc_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_v50iw03.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching push!(::String, ::Char)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\\
    n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_v50iw03.jl:30\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_v50iw03.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_v50iw03.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmp_v50iw03.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching push!(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\n   \
    \ push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_v50iw03.jl:30\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_v50iw03.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_v50iw03.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded = \"\"\n    for l in message\n        if l \u2208 \"aeiou\"\n   \
    \         encoded *= findnext(l, 2)\n        elseif l \u2208 \"AEIOU\"\n     \
    \       encoded *= findnext(l, 2)\n        else\n            encoded *= l\n  \
    \      end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdyenopi9.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching keys(::Char)\\n  Closest candidates are:\\n    keys(!Matched::IndexStyle,\
    \ !Matched::AbstractArray, !Matched::AbstractArray...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:350\\\
    n    keys(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:72\\\
    n    keys(!Matched::Tuple, !Matched::Tuple...) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:77\\\
    n    ...\\n  Stacktrace:\\n   [1] findnext(A::Char, start::Int64)\\n     @ Base\
    \ ./array.jl:1863\\n   [2] encode(message::String)\\n     @ Main /tmp/tmpdyenopi9.jl:20\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdyenopi9.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpdyenopi9.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpdyenopi9.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching keys(::Char)\\\
    n  Closest candidates are:\\n    keys(!Matched::IndexStyle, !Matched::AbstractArray,\
    \ !Matched::AbstractArray...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:350\\\
    n    keys(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:72\\\
    n    keys(!Matched::Tuple, !Matched::Tuple...) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:77\\\
    n    ...\\n  Stacktrace:\\n   [1] findnext(A::Char, start::Int64)\\n     @ Base\
    \ ./array.jl:1863\\n   [2] encode(message::String)\\n     @ Main /tmp/tmpdyenopi9.jl:18\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdyenopi9.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    key = Dict(('a', 'e', 'i', 'o', 'u') => ('c', 'g', 'k', 'o', 's'))\n\
    \    message = lowercase(message)\n    ret = \"\"\n    for i in 1:length(message)\n\
    \        letr = message[i]\n        if isalpha(letr)\n            letr = key[letr]\
    \ | letr\n            letr = islower(message[i]) ? letr : uppercase(letr)\n  \
    \      end\n        ret *= letr\n    end\n    return ret\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3ce1c8d8.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp3ce1c8d8.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3ce1c8d8.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3ce1c8d8.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp3ce1c8d8.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isalpha not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp3ce1c8d8.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3ce1c8d8.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3ce1c8d8.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp3ce1c8d8.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isalpha not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp3ce1c8d8.jl:21\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3ce1c8d8.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3ce1c8d8.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp3ce1c8d8.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isalpha not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp3ce1c8d"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    #add your code here\n    rtrn=string()\n    for i in eachindex(message)\n\
    \        if message[i] in ['a','e','i','o','u']\n            ind=findfirst(f->f==message[i],'aeiou')\n\
    \            ind=ind+2\n            if ind>5\n                ind=ind-5\n    \
    \        end\n            rtrn=rtrn*string(('aeiou')[ind])\n        elseif message[i]\
    \ in ['A','E','I','O','U']\n            ind=findfirst(f->f==message[i],'AEIOU')\n\
    \            ind=ind+2\n            if ind>5\n                ind=ind-5\n    \
    \        end\n            rtrn=rtrn*string(('AEIOU')[ind])\n        elseif message[i]\
    \ in 'abcdefghijklmnopqrstuvwxyz'\n            if message[i] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                ind=findfirst(f->f==message[i],'abcdefghijklmnopqrstuvwxyz')\n\
    \                rtrn=rtrn*string(('ABCDEFGHIJKLMNOPQRSTUVWXYZ')[ind])\n     \
    \       else\n                ind=findfirst(f->f==message[i],'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                rtrn=rtrn*string(('abcdefghijklmnopqrstuvwxyz')[ind])\n     \
    \       end\n        else\n            rtrn=rtrn*message[i]\n        end\n   \
    \ end\n    return rtrn\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpl02_21w1.jl:19\nin expression\
    \ starting at /tmp/tmpl02_21w1.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # First we need to work out what characters we will change \n    # we will\
    \ have 2 ranges of characters that we will need to \n    # change. \n    # We'll\
    \ have one for lowercase characters \n    # and another for upper case characters.\
    \ \n    # So what we need to do is to collect all the lower case letters \n  \
    \  # that are in our message, then the upper case letters. \n    lowercase = filter(ismap(Char,\
    \ ASCII), [c for c in message])\n    uppercase = filter(ismap(Char, ASCII), [c\
    \ for c in message])\n    # Now that we have our collections of lower and upper\
    \ case letters \n    # we need to create a dictionary, where the keys are the\
    \ current \n    # letters and the values are the letters 2 places ahead. \n  \
    \  # Then we need to convert these into mappings. \n    lower_dict = Dict(('a'=>'c',\
    \ 'b'=>'d', 'c'=>'e', 'd'=>'f', 'e'=>'g', 'f'=>'h', 'g'=>'i', 'h'=>'j', 'i'=>'k',\
    \ 'j'=>'l', 'k'=>'m', 'l'=>'n', 'm'=>'o', 'n'=>'p', 'o'=>'q', 'p'=>'r', 'q'=>'s',\
    \ 'r'=>'t', 's'=>'u', 't'=>'v', 'u'=>'w', 'v'=>'x', 'w'=>'y', 'x'=>'z', 'y'=>'a',\
    \ 'z'=>'b'))\n    upper_dict = Dict(('A'=>'C', 'B'=>'D', 'C'=>'E', 'D'=>'F', 'E'=>'G',\
    \ 'F'=>'H', 'G'=>'I', 'H'=>'J', 'I'=>'K', 'J'=>'L', 'K'=>'M', 'L'=>'N', 'M'=>'O',\
    \ 'N'=>'P', 'O'=>'Q', 'P'=>'R',\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdtm8ye0s.jl:32\nin expression starting at\
    \ /tmp/tmpdtm8ye0s.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = uppercase(message)\n    lmessage = length(message)\n    output\
    \ = \"\"\n    for i = 1:lmessage\n        letter = message[i]\n        if in(letter,\
    \ ['A','E','I','O','U'])\n            if letter == 'U'\n                output\
    \ = output * \"A\"\n            else\n                output = output * chr(Int(letter)\
    \ + 2)\n            end\n        else\n            output = output * letter\n\
    \        end\n    end\n    return lowercase(output)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprm1vuead.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ chr not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmprm1vuead.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprm1vuead.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprm1vuead.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmprm1vuead.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: chr not defined\\n\
    \  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmprm1vuead.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprm1vuead.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprm1vuead.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmprm1vuead.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: chr not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmprm1vuead.jl:24\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprm1vuead.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprm1vuead.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmprm1vuead.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ chr not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmprm1vuead.jl:24\\n   [2] "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    codetext = \"\"\n    for i\
    \ in 1:length(message)\n        if message[i] in \"AEIOUaeiou\"\n            if(message[i]\
    \ == 'z')\n                codetext = codetext * \"b\"\n            elseif(message[i]\
    \ == 'Z')\n                codetext = codetext * \"B\"\n            else\n   \
    \             codetext = codetext * alphabet[findfirst(message[i], alphabet)+2]\n\
    \            end\n        elseif message[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\
    \            codetext = codetext * lowercase(message[i])\n        elseif message[i]\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            codetext = codetext * uppercase(message[i])\n\
    \        else\n            codetext = codetext * message[i]\n        end\n   \
    \ end\n    return codetext\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpilx_axhg.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching +(::Nothing, ::Int64)\\n  Closest candidates are:\\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\\
    n    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpilx_axhg.jl:24\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpilx_axhg.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpilx_axhg.jl:40\\ntest set:\
    \ Test Failed at /tmp/tmpilx_axhg.jl:42\\n  Expression: candidate(\"Mudasir\"\
    ) == \"mWDCSKR\"\\n   Evaluated: \"mwDcSkR\" == \"mWDCSKR\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # put your code here!\nend\n\"\"\"\n    Write a function that takes a message\
    \ encoded with the \n    encode function, and decodes it. \n    \n    Examples:\n\
    \    >>> decode('TGST')\n    'test'\n    >>> decode('tHKS KS C MGSSCGG')\n   \
    \ 'This is a message'\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpp927litp.jl:17\nin expression starting at /tmp/tmpp927litp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    vowels = 'aeiou'\n    swapmessage\
    \ = String[]\n    for i in message\n        if i in alphabet\n            push!(swapmessage,i\
    \ == i ? i : i==uppercase(i) ? lowercase(i) : uppercase(i))\n        else\n  \
    \          push!(swapmessage,i)\n        end\n    end\n    message = join(swapmessage)\n\
    \    encode = String[]\n    for i in message\n        if i in vowels\n       \
    \     if i == 'u'\n                push!(encode,'a')\n            elseif i ==\
    \ 'i'\n                push!(encode,'e')\n            else\n                push!(encode,nextind(vowels,i,2))\n\
    \            end\n        else\n            push!(encode,i)\n        end\n   \
    \ end\n    return join(encode)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpf00jm9mf.jl:15\nin expression\
    \ starting at /tmp/tmpf00jm9mf.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = lowercase(message)\n    vowel = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    encode = copy(message)\n    for i = 1:length(message)\n        if message[i]\
    \ in vowel\n            index = findall(x -> x == message[i], vowel)\n       \
    \     encode[i] = vowel[(index[1] + 2) % 5]\n        else\n            encode[i]\
    \ = message[i]\n        end\n    end\n    encode\nend\nprintln(encode(\"test\"\
    ))\nprintln(encode(\"This is a message\"))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = \"aeiou\"\n    encoded = \"\"\n    for character in message\n  \
    \      lowercase = lowercase(character)\n        if lowercase in vowels\n    \
    \        # encode the vowel\n            # find the vowel index\n            index\
    \ = findfirst(vowels, lowercase)\n            # add 2 to it \n            index\
    \ += 2\n            # if past the end of the alphabet then wrap around\n     \
    \       if index > lastindex(vowels)\n                index -= lastindex(vowels)\n\
    \            end\n            # encode the letter\n            encoded *= uppercase(vowels[index])\n\
    \        else\n            # encode the letter\n            encoded *= uppercase(character)\n\
    \        end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfqhl7ajv.jl:43\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ lowercase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n  \
    \   @ Main /tmp/tmpfqhl7ajv.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfqhl7ajv.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfqhl7ajv.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpfqhl7ajv.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: lowercase not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpfqhl7ajv.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfqhl7ajv.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfqhl7ajv.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpfqhl7ajv.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: lowercase not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpfqhl7ajv.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfqhl7ajv.jl:45 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfqhl7ajv.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpfqhl7ajv.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ lowercase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n  \
    \   @ Main /tmp/tm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encode('test')\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpahxfvklc.jl:15\nin expression\
    \ starting at /tmp/tmpahxfvklc.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = uppercase(message)\n    message = replace(message, r\"A\", \"C\"\
    )\n    message = replace(message, r\"E\", \"G\")\n    message = replace(message,\
    \ r\"I\", \"K\")\n    message = replace(message, r\"O\", \"Q\")\n    message =\
    \ replace(message, r\"U\", \"W\")\n    message = replace(message, r\"Y\", \"A\"\
    )\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp96gdvqn8.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching replace(::String, ::Regex, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp96gdvqn8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp96gdvqn8.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp96gdvqn8.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp96gdvqn8.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp96gdvqn8.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp96gdvqn8.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \   return upper(message)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp9sll_qy.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpp9sll_qy.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp9sll_qy.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp9sll_qy.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpp9sll_qy.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: upper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpp9sll_qy.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp9sll_qy.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp9sll_qy.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpp9sll_qy.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: upper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpp9sll_qy.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpp9sll_qy.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpp9sll_qy.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpp9sll_qy.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpp9sll_qy.jl:15\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    vowels = ['a','e','i','o','u']\n    alpha = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # replace vowels with next 2 letters\n    for x in vowels\n        # loop\
    \ through message\n        for i in 1:length(message)\n            # if the letter\
    \ is a vowel\n            if message[i] == x\n                # replace it with\
    \ next 2 letters\n                message[i] = alpha[alpha .== message[i]][1]\
    \ \n            end\n        end\n    end\n    # return encripted message\n  \
    \  return uppercase(message)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbkc00zid.jl:37\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpbkc00zid.jl:37 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpbkc00zid.jl:36\\ntest set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk0z8wsfz.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpk0z8wsfz.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk0z8wsfz.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk0z8wsfz.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpk0z8wsfz.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpk0z8wsfz.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk0z8wsfz.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded = String[]\n    for i in 1:length(message)\n        let c = message[i]\n\
    \        let code = c\n        if c in 'aeiou'\n            code = nextchar(c,\
    \ 2)\n        elseif c in 'AEIOU'\n            code = uppercase(nextchar(lowercase(c),\
    \ 2))\n        end\n        push!(encoded, code)\n    end\n    return join(encoded)\n\
    end\nencode(\"test\")\nencode(\"This is a message\")\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp88lc5haq.jl:19\nin expression\
    \ starting at /tmp/tmp88lc5haq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # YOUR CODE HERE\nend\nencode(\"abcdefghijklmnopqrstuvwxyz\")\n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    test = \"\"\n    alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    vowels =\
    \ [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    for m in message\n        if m in string(alphabet)\n\
    \            if m in vowels\n                test = test * string(alphabet[alphabet.find(m)+2])\n\
    \            else \n                test = test * string(alphabet[alphabet.find(m)+1])\n\
    \            end\n        else\n            test = test * string(m)\n        end\n\
    \    end\n    test\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0ccnmg7d.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  type String has\
    \ no field find\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] encode(message::String)\\n     @ Main /tmp/tmp0ccnmg7d.jl:23\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp0ccnmg7d.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp0ccnmg7d.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp0ccnmg7d.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type String has no field find\\n \
    \ Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmp0ccnmg7d.jl:23\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp0ccnmg7d.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp0ccnmg7d.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp0ccnmg7d.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmp0ccnmg7d.jl:23\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp0ccnmg7d.jl:38 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp0ccnmg7d.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp0ccnmg7d.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\""
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    newmessage=String[]\n    for i in message\n        if isletter(i)==true\n\
    \            if i in ('a':'z')\n                letter=findfirst(i, ('a':'z'))\n\
    \                letter=letter+2\n                if letter==26\n            \
    \        letter=1\n                elseif letter==27\n                    letter=2\n\
    \                end\n                append!(newmessage,('a':'z')[letter])\n\
    \            elseif i in ('A':'Z')\n                letter=findfirst(i, ('A':'Z'))\n\
    \                letter=letter+2\n                if letter==26\n            \
    \        letter=1\n                elseif letter==27\n                    letter=2\n\
    \                end\n                append!(newmessage,('A':'Z')[letter])\n\
    \            end\n        else\n            append!(newmessage,i)\n        end\n\
    \    end\n    return join(newmessage)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkuy15jjr.jl:48\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching findfirst(::Char, ::StepRange{Char, Int64})\\n  Closest candidates\
    \ are:\\n    findfirst(!Matched::Union{Base.Fix2{typeof(==), T}, Base.Fix2{typeof(isequal),\
    \ T}}, ::StepRange{T, S}) where {T, S} at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2011\\\
    n    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    ...\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkuy15jjr.jl:28\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkuy15jjr.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkuy15jjr.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmpkuy15jjr.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching findfirst(::Char,\
    \ ::StepRange{Char, Int64})\\n  Closest candidates are:\\n    findfirst(!Matched::Union{Base.Fix2{typeof(==),\
    \ T}, Base.Fix2{typeof(isequal), T}}, ::StepRange{T, S}) where {T, S} at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2011\\\
    n    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    ...\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkuy15jjr.jl:28\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkuy15jjr.jl:49 [inlined]\\\
    n   [4] macro expansio"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = ['a','e','i','o','u']\n    alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    #1. swap case of all letters\n    #2. replace all vowels with the letter\
    \ that appears 2 places ahead of that vowel in the english alphabet.\n    new_message\
    \ = \"\"\n    for i in message\n        if i in vowels\n            i_index =\
    \ findall(x->x==i,alphabet)[1]\n            new_message = new_message * (alphabet[(i_index\
    \ % 26)+2])\n        elseif i in alphabet\n            i_index = findall(x->x==i,alphabet)[1]\n\
    \            new_message = new_message * (alphabet[(i_index % 26)+2])\n      \
    \  else\n            new_message = new_message * i\n        end\n    end\n   \
    \ return uppercase(new_message)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq43t1tx8.jl:38\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq43t1tx8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq43t1tx8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpq43t1tx8.jl:39\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MWFCUKT\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq43t1tx8.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq43t1tx8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpq43t1tx8.jl:40\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq43t1tx8.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq43t1tx8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpq43t1tx8.jl:41\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TJKU KU C OGUUCIG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq43t1tx8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq43t1tx8.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpq43t1tx8.jl:42\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq43t1tx8.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded = \"\"\n    for i = 1:length(message)\n        c = message[i]\n \
    \       if 'a' <= c <= 'z'\n            c = Char(Int(c) - Int('a') + Int('A'))\n\
    \        elseif 'A' <= c <= 'Z'\n            c = Char(Int(c) - Int('A') + Int('a'))\n\
    \        end\n        for j = 1:length(vowels)\n            if vowels[j] == c\n\
    \                c = next_vowel(c)\n                break\n            end\n \
    \       end\n        push!(encoded, c)\n    end\n    return encoded\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2ilvar8c.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ vowels not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmp2ilvar8c.jl:23\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2ilvar8c.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2ilvar8c.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp2ilvar8c.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: vowels not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp2ilvar8c.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2ilvar8c.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2ilvar8c.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp2ilvar8c.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: vowels not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp2ilvar8c.jl:23\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2ilvar8c.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2ilvar8c.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp2ilvar8c.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ vowels not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmp2ilvar8c.jl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message_list = collect(message)\n    message_list = map(toUpper, message_list)\n\
    \    temp_array = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n    for\
    \ i in 1:length(message_list)\n        if message_list[i] == 'A'\n           \
    \ temp_array[i] = 1\n        elseif message_list[i] == 'E'\n            temp_array[i]\
    \ = 5\n        elseif message_list[i] == 'I'\n            temp_array[i] = 9\n\
    \        elseif message_list[i] == 'O'\n            temp_array[i] = 15\n     \
    \   elseif message_list[i] == 'U'\n            temp_array[i] = 21\n        else\n\
    \            temp_array[i] = 0\n        end\n    end\n    for i in 1:length(message_list)\n\
    \        if temp_array[i] == 1\n            message_list[i] = 'C'\n        elseif\
    \ temp_array[i] == 5\n            message_list[i] = 'H'\n        elseif temp_array[i]\
    \ == 9\n            message_list[i] = 'L'\n        elseif temp_array[i] == 15\n\
    \            message_list[i] = 'R'\n        elseif temp_array[i] == 21\n     \
    \       message_list[i] = 'X'\n        end\n    end\n    return join(message_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpciaugdy5.jl:53\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ toUpper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpciaugdy5.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpciaugdy5.jl:53 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpciaugdy5.jl:52\\ntest set:\
    \ Error During Test at /tmp/tmpciaugdy5.jl:54\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: toUpper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpciaugdy5.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpciaugdy5.jl:54 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpciaugdy5.jl:52\\ntest set:\
    \ Error During Test at /tmp/tmpciaugdy5.jl:55\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: toUpper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpciaugdy5.jl:16\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpciaugdy5.jl:55 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpciaugdy5.jl:52\\ntest set:\
    \ Error During Test at /tmp/tmpciaugdy5.jl:56\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ toUpper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpciaugdy"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Replace your code below this comment.\n    return \"Replace this line with\
    \ your code.\"\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxfh872r3.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"Replace this line with your code.\" == \"\
    tgst\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfh872r3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfh872r3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxfh872r3.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Replace this line with your code.\" == \"mWDCSKR\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfh872r3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfh872r3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxfh872r3.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"Replace this line with your code.\" == \"ygs\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfh872r3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfh872r3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxfh872r3.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"Replace this line with your code.\"\
    \ == \"tHKS KS C MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfh872r3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfh872r3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxfh872r3.jl:27"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxfh872r3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded = String()\n    alph = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"\
    , \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    for i in\
    \ message\n        if islower(i)\n            encoded = string(encoded, uppercase(i))\n\
    \        else\n            encoded = string(encoded, lowercase(i))\n        end\n\
    \        if i in alph\n            if i in [\"a\", \"c\", \"e\", \"g\", \"i\"\
    , \"k\", \"m\", \"o\", \"q\", \"s\", \"u\", \"w\", \"y\"]\n                encoded\
    \ = string(encoded, alph[alph[alph .== i][1]+2])\n            elseif i in [\"\
    b\", \"d\", \"f\", \"h\", \"j\", \"l\", \"n\", \"p\", \"r\", \"t\", \"v\", \"\
    x\", \"z\"]\n                encoded = string(encoded, alph[alph[alph .== i][1]+2])\n\
    \            else\n                encoded = string(encoded, alph[alph[alph .==\
    \ i][1]+2])\n            end\n        end\n    end\n    return encoded\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphc6cvkwt.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching String()\\n  Closest candidates are:\\n    String(!Matched::String)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\\n    String(!Matched::Vector{UInt8})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\\n    String(!Matched::Symbol)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\\n    ...\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmphc6cvkwt.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphc6cvkwt.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphc6cvkwt.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmphc6cvkwt.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching String()\\\
    n  Closest candidates are:\\n    String(!Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\\\
    n    String(!Matched::Vector{UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\\\
    n    String(!Matched::Symbol) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmphc6cvkwt.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphc6cvkwt.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphc6cvkwt.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmphc6cvkwt.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching String()\\\
    n  Closest cand"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    trans  = Dict('a'=>'c', 'A'=>'C', 'e'=>'g', 'E'=>'G', 'i'=>'k', 'I'=>'K',\
    \ \n    'o'=>'q', 'O'=>'Q', 'u'=>'s', 'U'=>'S', 'y'=>'a', 'Y'=>'A', 'b'=>'d',\
    \ 'B'=>'D', \n    'c'=>'e', 'C'=>'E', 'd'=>'f', 'D'=>'F', 'f'=>'h', 'F'=>'H',\
    \ 'g'=>'i', 'G'=>'I', \n    'h'=>'j', 'H'=>'J', 'j'=>'l', 'J'=>'L', 'k'=>'m',\
    \ 'K'=>'M', 'l'=>'n', 'L'=>'N', \n    'm'=>'o', 'M'=>'O', 'n'=>'p', 'N'=>'P',\
    \ 'p'=>'r', 'P'=>'R', 'q'=>'t', 'Q'=>'T', \n    'r'=>'u', 'R'=>'U', 's'=>'v',\
    \ 'S'=>'V', 't'=>'w', 'T'=>'W', 'v'=>'x', 'V'=>'X', \n    'w'=>'y', 'W'=>'Y',\
    \ 'x'=>'z', 'X'=>'Z', 'z'=>'b', 'Z'=>'B')\n    l = length(message)\n    new =\
    \ \"\"\n    for i in 1:l\n        if message[i] in keys(trans)\n            if\
    \ message[i] in \"abcdefghijklmnopqrstuvwxyz\"\n                new = new * upper(trans[message[i]])\n\
    \            else\n                new = new * lower(trans[message[i]])\n    \
    \        end\n        else\n            new = new * message[i]\n        end\n\
    \    end\n    return new\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpietxo9lt.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ lower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpietxo9lt.jl:29\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpietxo9lt.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpietxo9lt.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpietxo9lt.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: lower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpietxo9lt.jl:29\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpietxo9lt.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpietxo9lt.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpietxo9lt.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: lower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpietxo9lt.jl:29\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpietxo9lt.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpietxo9lt.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpietxo9lt.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ lower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpietxo9lt.jl:29\\"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \  \n  vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  alpha = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  result = \"\"\n  for char in message\n    if char in vowels\n      result\
    \ *= nextind(alpha, findfirst(alpha, char), 2)\n    elseif char in alpha\n   \
    \   result *= nextind(upper(alpha), findfirst(upper(alpha), char), 2)\n    else\n\
    \      result *= char\n    end\n  end\n  return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpba7zwf47.jl:35\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpba7zwf47.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpba7zwf47.jl:34\\ntest set: Error\
    \ During Test at /tmp/tmpba7zwf47.jl:36\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded = String[]\n    for c in message\n        if ('a' <= c <= 'z') ||\
    \ ('A' <= c <= 'Z')\n            c == upcase(c) ? append!(encoded, upcase(string(c,\
    \ 2))) : append!(encoded, downcase(string(c, 2)))\n        else\n            append!(encoded,\
    \ c)\n        end\n    end\n    return join(encoded)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwz9gy713.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ upcase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpwz9gy713.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwz9gy713.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwz9gy713.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpwz9gy713.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: upcase not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpwz9gy713.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwz9gy713.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwz9gy713.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpwz9gy713.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: upcase not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpwz9gy713.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwz9gy713.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwz9gy713.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpwz9gy713.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ upcase not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpwz9gy713.jl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encoded = \"\"\n    for l\
    \ in message\n        i = search(alphabet,lowercase(l))\n        if isnothing(i)\n\
    \            append!(encoded,l)\n        elseif isupper(l)\n            append!(encoded,upper(alphabet[i+2]))\n\
    \        else\n            append!(encoded,alphabet[i+2])\n        end\n    end\n\
    \    return encoded\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxurkr3qb.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpxurkr3qb.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxurkr3qb.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxurkr3qb.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpxurkr3qb.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpxurkr3qb.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxurkr3qb.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxurkr3qb.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpxurkr3qb.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: search not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpxurkr3qb.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxurkr3qb.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxurkr3qb.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpxurkr3qb.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpxurkr3qb.jl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    result = \"\"\n    for\
    \ l in message\n        if l in vowels\n            nextindex = vowels.index(l)\
    \ + 2\n            #print(nextindex)\n            if nextindex > 4\n         \
    \       nextindex = nextindex - 5\n            end\n            result = result\
    \ * string(vowels[nextindex])\n        else\n            result = result * string(l)\n\
    \        end\n    end\n    return uppercase(result)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbrqk7mrm.jl:36\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrqk7mrm.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrqk7mrm.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpbrqk7mrm.jl:37\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MUDASIR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrqk7mrm.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrqk7mrm.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpbrqk7mrm.jl:38\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrqk7mrm.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrqk7mrm.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpbrqk7mrm.jl:39\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THIS IS A MESSAGE\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrqk7mrm.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrqk7mrm.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpbrqk7mrm.jl:40\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbrqk7mrm.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = String[]\n    # j is 2 because we need 2 chars ahead of the\
    \ vowel\n    j = 2\n    vowel = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    alphabet\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    for i = 1:length(message)\n        if (lowercase(message[i])\
    \ in vowel)\n            ind = findfirst(alphabet, lowercase(message[i]))\n  \
    \          # print(ind)\n            # print(message[i])\n            push!(new_message,\
    \ alphabet[ind+j])\n        elseif (lowercase(message[i]) in alphabet)\n     \
    \       ind = findfirst(alphabet, lowercase(message[i]))\n            # print(ind)\n\
    \            # print(message[i])\n            push!(new_message, alphabet[ind+j])\n\
    \        else\n            push!(new_message, message[i])\n        end\n    end\n\
    \    # new_message = join(new_message)\n    return upper(join(new_message))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpthtb62ft.jl:43\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] push!(a::Vector{String}, item::Char)\\n    \
    \ @ Base ./array.jl:994\\n   [2] encode(message::String)\\n     @ Main /tmp/tmpthtb62ft.jl:32\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpthtb62ft.jl:43 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpthtb62ft.jl:42\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # encode message and return as String\n    alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    encoded = \"\"\n    vowel_key = Dict(\"A\" => \"C\", \"E\" => \"G\", \"\
    I\" => \"K\", \"O\" => \"Q\", \"U\" => \"W\")\n    for l in message\n        if\
    \ vowel_key[UpperCase(l)] == nothing\n            l == Uppercase(l) ? encoded\
    \ *= l : encoded *= Lowercase(l)\n        else \n            encoded *= vowel_key[UpperCase(l)]\n\
    \        end\n    end\n    return encoded\nend\nencode(\"this is a message\")\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: UpperCase not defined\nStacktrace:\n [1]\
    \ encode(message::String)\n   @ Main /tmp/tmpbi8ejnh1.jl:20\n [2] top-level scope\n\
    \   @ /tmp/tmpbi8ejnh1.jl:28\nin expression starting at /tmp/tmpbi8ejnh1.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    code = \"\"\n    letters = \"abcdefghijklmnopqrstuvwxyz\"\n    vowels = \"\
    aeiou\"\n    for char in message\n        if isupper(char)\n            code *=\
    \ lowercase(char)\n        else\n            code *= uppercase(char)\n       \
    \ end\n        if char in vowels\n            index = search(vowels, char)\n \
    \           code[end] = letters[index + 2]\n        end\n    end\n    return code\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr2esopbq.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpr2esopbq.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2esopbq.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2esopbq.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpr2esopbq.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpr2esopbq.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2esopbq.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2esopbq.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpr2esopbq.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpr2esopbq.jl:19\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr2esopbq.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr2esopbq.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpr2esopbq.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpr2esopb"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encodedMessage = \"\"\n    for i in 1:length(message)\n        if isletter(message[i])\n\
    \            if isupper(message[i])\n                if message[i] == 'Z' || message[i]\
    \ == 'z'\n                    encodedMessage *= 'a'\n                else\n  \
    \                  if isvowel(message[i])\n                        encodedMessage\
    \ *= chr(Int(message[i]) + 2)\n                    else\n                    \
    \    encodedMessage *= chr(Int(message[i]) + 1)\n                    end\n   \
    \             end\n            else\n                if message[i] == 'z'\n  \
    \                  encodedMessage *= 'A'\n                else\n             \
    \       if isvowel(message[i])\n                        encodedMessage *= chr(Int(message[i])\
    \ + 2)\n                    else\n                        encodedMessage *= chr(Int(message[i])\
    \ + 1)\n                    end\n                end\n            end\n      \
    \  else\n            encodedMessage *= message[i]\n        end\n    end\n    return\
    \ encodedMessage\nend\n\"\"\"\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n\
    \    'tHKS KS C MGSSCGG'\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpot6jsyai.jl:45\nin expression starting at /tmp/tmpot6jsyai.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = ['a','e','i','o','u']\n    new_message = \"\"\n    for i in message\n\
    \        if i in vowels\n            new_message = new_message * i.next().next()\n\
    \        elseif i in lowercase(string)\n            new_message = new_message\
    \ * uppercase(i)\n        elseif i in uppercase(string)\n            new_message\
    \ = new_message * lowercase(i)\n        else\n            new_message = new_message\
    \ * i\n        end\n    end\n    return new_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptwwhfdqa.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching lowercase(::typeof(string))\\n  Closest candidates are:\\n \
    \   lowercase(!Matched::T) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:249\\\
    n    lowercase(!Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:540\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmptwwhfdqa.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptwwhfdqa.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptwwhfdqa.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmptwwhfdqa.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching lowercase(::typeof(string))\\\
    n  Closest candidates are:\\n    lowercase(!Matched::T) where T<:AbstractChar\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:249\\n  \
    \  lowercase(!Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:540\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmptwwhfdqa.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptwwhfdqa.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptwwhfdqa.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmptwwhfdqa.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching lowercase(::typeof(string))\\\
    n  Closest candidates are:\\n    lowercase(!Matched::T) where T<:AbstractChar\
    \ at /shared/centos7/juli"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    message = lowercase(message)\n\
    \    new_message = \"\"\n    for i in message\n        if i in alphabet\n    \
    \        index = findfirst(i, alphabet)\n            if index > 24\n         \
    \       new_message = string(new_message, uppercase(alphabet[index - 24]))\n \
    \           else\n                new_message = string(new_message, uppercase(alphabet[index\
    \ + 2]))\n            end\n        else\n            new_message = string(new_message,\
    \ i)\n        end\n    end\n    return new_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpns9pbf4i.jl:37\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"VGUV\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpns9pbf4i.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpns9pbf4i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpns9pbf4i.jl:38\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"OWFCUKT\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpns9pbf4i.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpns9pbf4i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpns9pbf4i.jl:39\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"AGU\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpns9pbf4i.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpns9pbf4i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpns9pbf4i.jl:40\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"VJKU KU C OGUUCIG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpns9pbf4i.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpns9pbf4i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpns9pbf4i.jl:41\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpns9pbf4i.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    out = \"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for c in\
    \ message\n        if c in vowels\n            out *= (chr(ord(c) + 2))\n    \
    \    else\n            out *= c\n        end\n    end\n    return uppercase(out)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8v761czn.jl:31\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8v761czn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8v761czn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8v761czn.jl:32\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MUDASIR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8v761czn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8v761czn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8v761czn.jl:33\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8v761czn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8v761czn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8v761czn.jl:34\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THIS IS A MESSAGE\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8v761czn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8v761czn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8v761czn.jl:35\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8v761czn.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    result = \"\"\n    for c in message\n        if c in [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n            result *= encode(nextnext(c))\n        else\n   \
    \         result *= c\n        end\n    end\n    return tolower(result)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_gz3wkqg.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ tolower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp_gz3wkqg.jl:23\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_gz3wkqg.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_gz3wkqg.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp_gz3wkqg.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: tolower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp_gz3wkqg.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_gz3wkqg.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_gz3wkqg.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp_gz3wkqg.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: tolower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp_gz3wkqg.jl:23\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_gz3wkqg.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_gz3wkqg.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp_gz3wkqg.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ tolower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp_gz3wkq"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    s=[]\n    message_new=[]\n    for c in message \n        push!(s,c)\n   \
    \ end\n    for i in s\n        k=i\n        if (i!=i.lower())\n            k=i.lower()\n\
    \        elseif (i!=i.upper())\n            k=i.upper()\n        end\n       \
    \ if(k=='a')\n            k='c'\n        elseif(k=='A')\n            k='C'\n \
    \       elseif(k=='e')\n            k='g'\n        elseif(k=='E')\n          \
    \  k='G'\n        elseif(k=='i')\n            k='k'\n        elseif(k=='I')\n\
    \            k='K'\n        elseif(k=='o')\n            k='q'\n        elseif(k=='O')\n\
    \            k='Q'\n        elseif(k=='u')\n            k='s'\n        elseif(k=='U')\n\
    \            k='S'\n        end\n        push!(message_new,k)\n    end\n    return(join(message_new))\n\
    end\nprintln(encode(\"This is a message\"))\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: type Char has no field lower\nStacktrace:\n [1] getproperty(x::Char,\
    \ f::Symbol)\n   @ Base ./Base.jl:42\n [2] encode(message::String)\n   @ Main\
    \ /tmp/tmph40vpxj5.jl:22\n [3] top-level scope\n   @ /tmp/tmph40vpxj5.jl:52\n\
    in expression starting at /tmp/tmph40vpxj5.jl:52\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # I'm going to use a hash map here, it's more code than a \n    # more advanced\
    \ programmer would write, but it makes it \n    # easier to write it out for me.\n\
    \    dict = Dict(('a','b'), ('e','f'), ('i','j'), ('o','p'), ('u','v'))\n    new_message\
    \ = String[]\n    for c in message\n        if c \u2208 keys(dict)\n         \
    \   push!(new_message, dict[c])\n        elseif c \u2208 values(dict)\n      \
    \      push!(new_message, getindex(keys(dict), getindex(values(dict), c)))\n \
    \       elseif c in ASCIIString(\"abcdefghijklmnopqrstuvwxyz\")\n            push!(new_message,\
    \ uppercase(c))\n        elseif c in ASCIIString(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            push!(new_message, lowercase(c))\n        else\n            push!(new_message,\
    \ c)\n        end\n    end\n    return join(new_message)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprjbw_3qn.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching Dict(::Tuple{Char, Char}, ::Tuple{Char, Char}, ::Tuple{Char,\
    \ Char}, ::Tuple{Char, Char}, ::Tuple{Char, Char})\\n  Closest candidates are:\\\
    n    Dict(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:127\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmprjbw_3qn.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprjbw_3qn.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprjbw_3qn.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmprjbw_3qn.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching Dict(::Tuple{Char,\
    \ Char}, ::Tuple{Char, Char}, ::Tuple{Char, Char}, ::Tuple{Char, Char}, ::Tuple{Char,\
    \ Char})\\n  Closest candidates are:\\n    Dict(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:127\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmprjbw_3qn.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprjbw_3qn.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprjbw_3qn.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmprjbw_3qn.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  MethodError: no method matching Dict(::Tuple{Char,\
    \ Char}, ::Tuple{Char, Char}, ::Tuple{Char, Char}, ::Tuple{Char, Char}, ::Tuple{Char,\
    \ Char})\\n  Closest candidates are:\\n    Dict(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:127\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /t"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Your code here\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcmirfiqi.jl:23\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmirfiqi.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmirfiqi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcmirfiqi.jl:24\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmirfiqi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmirfiqi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcmirfiqi.jl:25\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmirfiqi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmirfiqi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcmirfiqi.jl:26\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmirfiqi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmirfiqi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcmirfiqi.jl:27\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcmirfiqi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = []\n    for char in message\n        if (char in ['a','e','i','o','u','A','E','I','O','U'])\n\
    \            if (char in ['z','Z'])\n                push!(new_message, 'B')\n\
    \            else\n                next_letter = nextletter(char)\n          \
    \      push!(new_message, nextletter(next_letter))\n            end\n        else\n\
    \            push!(new_message, char)\n        end\n    end\n    uppercase(join(new_message))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppoz2b2o0.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ nextletter not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n \
    \    @ Main /tmp/tmppoz2b2o0.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppoz2b2o0.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppoz2b2o0.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmppoz2b2o0.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: nextletter not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppoz2b2o0.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppoz2b2o0.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppoz2b2o0.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmppoz2b2o0.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: nextletter not defined\\n \
    \ Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmppoz2b2o0.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppoz2b2o0.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppoz2b2o0.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmppoz2b2o0.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ nextletter not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n \
    \    @ Main /tm"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    base = \"abcdefghijklmnopqrstuvwxyz\"\n    vowels = \"aeiou\"\n    new_message\
    \ = \"\"\n    for letter in message\n        if letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            letter = letter |> Int |> chr |> String\n            location =\
    \ findfirst(letter, base)\n            if location + 2 > length(base)\n      \
    \          new_message *= base[location + 2 - length(base)]\n            else\n\
    \                new_message *= base[location + 2]\n            end\n        elseif\
    \ letter in \"abcdefghijklmnopqrstuvwxyz\"\n            letter = letter |> upcase\
    \ |> Int |> chr |> String\n            location = findfirst(letter, base)\n  \
    \          if location + 2 > length(base)\n                new_message *= base[location\
    \ + 2 - length(base)] |> upcase\n            else\n                new_message\
    \ *= base[location + 2] |> upcase\n            end\n        else\n           \
    \ new_message *= letter\n        end\n    end\n    return new_message\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjb6id15s.jl:46\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ chr not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpjb6id15s.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjb6id15s.jl:46 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjb6id15s.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpjb6id15s.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: chr not defined\\n\
    \  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpjb6id15s.jl:20\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjb6id15s.jl:47 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjb6id15s.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpjb6id15s.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: chr not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpjb6id15s.jl:20\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjb6id15s.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjb6id15s.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmpjb6id15s.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ chr not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpjb6id15s.jl:20\\n   [2] "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    out_array = []\n    for char in message\n        if isupper(char)\n     \
    \       out_array = push!(out_array, tolower(char))\n        elseif islower(char)\n\
    \            out_array = push!(out_array, toupper(char))\n        elseif char\
    \ == 'a'\n            out_array = push!(out_array, 'c')\n        elseif char ==\
    \ 'e'\n            out_array = push!(out_array, 'g')\n        elseif char == 'i'\n\
    \            out_array = push!(out_array, 'k')\n        elseif char == 'o'\n \
    \           out_array = push!(out_array, 'q')\n        elseif char == 'u'\n  \
    \          out_array = push!(out_array, 's')\n        else\n            out_array\
    \ = push!(out_array, char)\n        end\n    end\n    return join(out_array)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa9it4fcz.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpa9it4fcz.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpa9it4fcz.jl:42 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa9it4fcz.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpa9it4fcz.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpa9it4fcz.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpa9it4fcz.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa9it4fcz.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpa9it4fcz.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpa9it4fcz.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpa9it4fcz.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa9it4fcz.jl:41\\ntest set:\
    \ Error During Test at /tmp/tmpa9it4fcz.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpa9it4fc"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    for letter in message\n        if letter in ['a','e','i','o','u']\n     \
    \       letter=nextnext(letter)\n        else \n            letter=toUpper(letter)\n\
    \        end\n    end\n    return message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp17fq67_7.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ toUpper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp17fq67_7.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp17fq67_7.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp17fq67_7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp17fq67_7.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: toUpper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp17fq67_7.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp17fq67_7.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp17fq67_7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp17fq67_7.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: toUpper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp17fq67_7.jl:19\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp17fq67_7.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp17fq67_7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp17fq67_7.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ toUpper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp17fq67_"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    c = message[1]\n    if c in ('a','e','i','o','u','A','E','I','O','U')\n \
    \       return string(\"abcdefghijklmnopqrstuvwxyz\"[(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ,\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").find(c)+2)%26+1])\n    elseif c in ('b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z','B','C','D','F','G','H','J','K','L','M','N','P','Q','R','S','T','V','W','X','Y','Z')\n\
    \        return string(\"abcdefghijklmnopqrstuvwxyz\",\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    [(string(\"abcdefghijklmnopqrstuvwxyz\",\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").find(c)+2)%26+1])\n\
    \    else\n        return c\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpry4yp8y9.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  type String has\
    \ no field find\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] encode(message::String)\\n     @ Main /tmp/tmpry4yp8y9.jl:19\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpry4yp8y9.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpry4yp8y9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpry4yp8y9.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type String has no field find\\n \
    \ Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmpry4yp8y9.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpry4yp8y9.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpry4yp8y9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpry4yp8y9.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  type String has no field find\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmpry4yp8y9.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpry4yp8y9.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpry4yp8y9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpry4yp8y9.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\""
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    strs = [c for c in message]\n    for (i, c) in enumerate(strs)\n        if\
    \ 'a' <= c <= 'z'\n            c = Char(Int(c) - 32)\n        end\n        if\
    \ c in \"AEIOU\"\n            c = Char(Int(c) + 2)\n        end\n        strs[i]\
    \ = c\n    end\n    join(strs, \"\")\nend\nprintln(encode(\"test\"))\nprintln(encode(\"\
    This is a message\"))\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "TGST\nTHKS KS C MGSSCGG\ntest set: Test Failed at /tmp/tmpmitondlo.jl:34\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmitondlo.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmitondlo.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpmitondlo.jl:35\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MWDCSKR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmitondlo.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmitondlo.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpmitondlo.jl:36\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmitondlo.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmitondlo.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpmitondlo.jl:37\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THKS KS C MGSSCGG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmitondlo.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmitondlo.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpmitondlo.jl:38\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmitondlo.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    arr = Array(UInt8, length(message))\n    arr = convert(Array{UInt8}, message)\n\
    \    length(arr) == length(message)\n    for i in 1:length(arr)\n        # make\
    \ all upper case\n        arr[i] = convert(UInt8, toupper(arr[i]))\n        #\
    \ uppercase \n        if 97 <= arr[i] <= 122\n            # minus 32\n       \
    \     arr[i] = arr[i] - 32\n        end\n        # swap case\n        if 65 <=\
    \ arr[i] <= 90\n            # plus 32\n            arr[i] = arr[i] + 32\n    \
    \    end\n        # 'a' = 97\n        # 'z' = 122\n        # 'A' = 65\n      \
    \  # 'Z' = 90\n        # 'A' = 65\n        # 'Z' = 90\n        # 'a' = 97\n  \
    \      # 'z' = 122\n        # 'A' = 65\n        # 'Z' = 90\n        # 'A' = 65\n\
    \        # 'Z' = 90\n        # 'a' = 97\n        # 'z' = 122\n        # 'A' =\
    \ 65\n        # 'Z' = 90\n        # 'A' = 65\n        # 'Z' = 90\n        # 'a'\
    \ = 97\n        # 'z' = 122\n        # 'A' = 65\n        # 'Z' = 90\n        #\
    \ 'A' = 65\n        # 'Z' = 90\n        # 'a' = 97\n        # 'z' = 122\n    \
    \    # 'A' = 65\n        # 'Z' = 90\n        # 'A' = 65\n        # 'Z' = 90\n\
    \        # 'a' = 97\n        # 'z' = 122\n        # 'A' = 65\n        # 'Z' =\
    \ 90\n        # 'A' = 65\n        # 'Z' = 90\n        # 'a' = 97\n        # 'z'\
    \ = 122\n        # 'A' = 65\n        # 'Z' = 90\n        # 'A' = 65\n        #\
    \ 'Z' = 90\n        # 'a' = 97\n        # 'z' = 122\n        # 'A'\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpwlxq8fg4.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwlxq8fg4.jl:1\n\
    in expression starting at /tmp/tmpwlxq8fg4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = \"aeiou\"\n    out = \"\"\n    for c in message\n        lowercase\
    \ = islower(c)\n        if c in vowels\n            idx = findfirst(c, vowels)\n\
    \            c = vowels[idx+2]\n        end\n        if lowercase\n          \
    \  c = lowercase(c)\n        end\n        out *= c\n    end\n    return out\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf4h31gqv.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpf4h31gqv.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf4h31gqv.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf4h31gqv.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpf4h31gqv.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpf4h31gqv.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf4h31gqv.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf4h31gqv.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpf4h31gqv.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpf4h31gqv.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf4h31gqv.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf4h31gqv.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpf4h31gqv.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpf4h31gq"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message_characters = explode(message)\n    for i in eachindex(message_characters)\n\
    \        message_characters[i] = encode_character(message_characters[i])\n   \
    \ end\n    return join(message_characters)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt392limt.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ explode not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpt392limt.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt392limt.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt392limt.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpt392limt.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: explode not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpt392limt.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt392limt.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt392limt.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpt392limt.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: explode not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpt392limt.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt392limt.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt392limt.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpt392limt.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ explode not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpt392lim"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    # Your code here\n    \n    return \"TGST\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvvsk86d_.jl:25\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvsk86d_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvsk86d_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpvvsk86d_.jl:26\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"TGST\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvsk86d_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvsk86d_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpvvsk86d_.jl:27\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"TGST\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvsk86d_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvsk86d_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpvvsk86d_.jl:28\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"TGST\" == \"tHKS KS C MGSSCGG\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvsk86d_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvsk86d_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpvvsk86d_.jl:29\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"TGST\" == \"k\
    \ dQnT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvvsk86d_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = ['a','e','i','o','u']\n    encode_message = \"\"\n    for m in message\n\
    \        if m in vowels\n            if m == 'u'\n                encode_message\
    \ = encode_message * \"a\"\n            else \n                encode_message\
    \ = encode_message * (vowels[vowels.index(m)+2])\n            end\n        else\n\
    \            encode_message = encode_message * m\n        end\n    end\n    return\
    \ encode_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphbvn8121.jl:35\\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\\n   Evaluated: \"TEST\" == \"tgst\"\\nStacktrace:\\n [1]\
    \ macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmphbvn8121.jl:35 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmphbvn8121.jl:34\\ntest set: Error\
    \ During Test at /tmp/tmphbvn8121.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  type Array has no field index\\n \
    \ Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] encode(message::String)\\\
    n     @ Main /tmp/tmphbvn8121.jl:22\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmphbvn8121.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmphbvn8121.jl:34\\ntest set:\
    \ Test Failed at /tmp/tmphbvn8121.jl:37\\n  Expression: candidate(\"YES\") ==\
    \ \"ygs\"\\n   Evaluated: \"YES\" == \"ygs\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmphbvn8121.jl:37 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmphbvn8121.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    vowels = 'aeiou'\n    lst = [\"a\"=>\"c\", \"e\"=>\"g\", \"i\"=>\"\
    k\", \"o\"=>\"q\", \"u\"=>\"y\"]\n    new_message = \"\"\n    \n    for i in 1:length(message)\n\
    \        if isalpha(message[i])\n            if islower(message[i])\n        \
    \        new_message *= uppercase(message[i])\n            else \n           \
    \     new_message *= lowercase(message[i])\n            end\n            if findfirst(message[i],\
    \ vowels) != nothing\n                new_message[end] = lst[message[i]]\n   \
    \         end\n        else\n            new_message *= message[i]\n        end\n\
    \    end\n    \n    return new_message\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpv6zumdjt.jl:16\nin expression\
    \ starting at /tmp/tmpv6zumdjt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = upper(message)\n    for i in 1:length(message)\n        if message[i]\
    \ in [\"A\",\"E\",\"I\",\"O\",\"U\"]\n            message[i] = nextind(message[i])\n\
    \        end\n    end\n    return message\nend\nencode(\"this is a message\")\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: upper not defined\nStacktrace:\n [1] encode(message::String)\n\
    \   @ Main /tmp/tmpi5xfkhkp.jl:15\n [2] top-level scope\n   @ /tmp/tmpi5xfkhkp.jl:23\n\
    in expression starting at /tmp/tmpi5xfkhkp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \"\"\"\n    Write a function that takes a message, and encodes in such a\
    \ \n    way that it swaps case of all letters, replaces all vowels in \n    the\
    \ message with the letter that appears 2 places ahead of that \n    vowel in the\
    \ english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>>\
    \ encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS\
    \ C MGSSCGG'\n    \"\"\"\n    let message = lowercase(message)\n    for i in 1:length(message)\n\
    \        c = message[i]\n        c = isletter(c) ? c^32 : c\n        message[i]\
    \ = isletter(c) ? (\n            (Int(c - 'a') + 2) % 26 + Int('a')\n        )\
    \ : c\n    end\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpreibptha.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpreibptha.jl:1\n\
    in expression starting at /tmp/tmpreibptha.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp21oea6r4.jl:22\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21oea6r4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21oea6r4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21oea6r4.jl:23\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21oea6r4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21oea6r4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21oea6r4.jl:24\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21oea6r4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21oea6r4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21oea6r4.jl:25\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp21oea6r4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp21oea6r4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp21oea6r4.jl:26\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21oea6r4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = uppercase(message)\n    message = replace(message, \"A\" => \"\
    C\")\n    message = replace(message, \"E\" => \"G\")\n    message = replace(message,\
    \ \"I\" => \"K\")\n    message = replace(message, \"O\" => \"Q\")\n    message\
    \ = replace(message, \"U\" => \"W\")\n    message = replace(message, \"Y\" =>\
    \ \"A\")\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40112ar_.jl:29\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40112ar_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40112ar_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp40112ar_.jl:30\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MWDCSKR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40112ar_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40112ar_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp40112ar_.jl:31\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"AGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40112ar_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40112ar_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp40112ar_.jl:32\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THKS KS C MGSSCGG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40112ar_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40112ar_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp40112ar_.jl:33\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40112ar_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    letters = collect(lowercase(message))\n    result = []\n    for l in letters\n\
    \        c = Char(l)\n        if l in vowels\n            i = findfirst(vowels,\
    \ l)\n            (i+2)%5 == 0 ? c = 'a' : c = vowels[(i+2)%5]\n        else\n\
    \            c = uppercase(c)\n        end\n        push!(result, c)\n    end\n\
    \    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm2msdunb.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ vowels not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpm2msdunb.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm2msdunb.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm2msdunb.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpm2msdunb.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: vowels not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpm2msdunb.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm2msdunb.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm2msdunb.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpm2msdunb.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: vowels not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpm2msdunb.jl:19\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm2msdunb.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm2msdunb.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpm2msdunb.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ vowels not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpm2msdunb.jl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = replace(message, 'a' => 'c', 'e' => 'g', 'i' => 'k', 'o' => 'q',\
    \ 'u' => 'w', 'y' => 'a')\n    message = replace(message, 'A' => 'C', 'E' => 'G',\
    \ 'I' => 'K', 'O' => 'Q', 'U' => 'W', 'Y' => 'A')\n    return uppercase(message)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbwidw7dn.jl:24\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TGST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwidw7dn.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwidw7dn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbwidw7dn.jl:25\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"MWDCSKR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwidw7dn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwidw7dn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbwidw7dn.jl:26\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"AGS\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwidw7dn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwidw7dn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbwidw7dn.jl:27\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"THKS KS C MGSSCGG\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwidw7dn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwidw7dn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbwidw7dn.jl:28\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"K"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbwidw7dn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = \"aeiou\"\n    output = \"\"\n    for i in message\n        if i\
    \ in \"abcdefghijklmnopqrstuvwxyz\"\n            output *= string(convert(Char,\
    \ mod(int(i)-97 + 2, 26) + 97))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            output *= string(convert(Char, mod(int(i)-65 + 2, 26) + 65))\n \
    \       else\n            output *= i\n        end\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo07q5rim.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpo07q5rim.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo07q5rim.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo07q5rim.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpo07q5rim.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: int not defined\\n\
    \  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpo07q5rim.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo07q5rim.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo07q5rim.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpo07q5rim.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpo07q5rim.jl:21\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpo07q5rim.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpo07q5rim.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpo07q5rim.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpo07q5rim.jl:21\\n   [2] "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \"\"\"\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n\
    \    'tHKS KS C MGSSCGG'\n    \"\"\"\n    encoded = []\n    for c in message\n\
    \        if isvowel(c)\n            if c == 'u'\n                push!(encoded,\
    \ 'a')\n            else\n                push!(encoded, next(c))\n          \
    \  end\n        elseif islower(c)\n            push!(encoded, uppercase(c))\n\
    \        elseif isupper(c)\n            push!(encoded, lowercase(c))\n       \
    \ else\n            push!(encoded, c)\n        end\n    end\n    join(encoded)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6rehwa1j.jl:44\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp6rehwa1j.jl:23\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6rehwa1j.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6rehwa1j.jl:43\\ntest set:\
    \ Error During Test at /tmp/tmp6rehwa1j.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: isvowel not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp6rehwa1j.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6rehwa1j.jl:45 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6rehwa1j.jl:43\\ntest set:\
    \ Error During Test at /tmp/tmp6rehwa1j.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp6rehwa1j.jl:23\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6rehwa1j.jl:46 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6rehwa1j.jl:43\\ntest set:\
    \ Error During Test at /tmp/tmp6rehwa1j.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ isvowel not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp6rehwa1"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    vowels = \"AEIOU\"\n    encoded\
    \ = \"\"\n    for c in message\n        if c in letters\n            if c in vowels\n\
    \                idx = findfirst(vowels, c)\n                c = vowels[mod1(idx\
    \ + 2, length(vowels))]\n            end\n            if c in uppercase(letters)\n\
    \                c = lowercase(c)\n            else\n                c = uppercase(c)\n\
    \            end\n        end\n        push!(encoded, c)\n    end\n    return\
    \ encoded\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0typsve_.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching push!(::String, ::Char)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\\
    n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp0typsve_.jl:30\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0typsve_.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0typsve_.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmp0typsve_.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching push!(::String,\
    \ ::Char)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\n   \
    \ push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp0typsve_.jl:30\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0typsve_.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0typsve_.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = ['a','e','i','o','u']\n    lowerMessage = lowercase(message)\n \
    \   result = \"\"\n    for i in 1:length(lowerMessage)\n        if islower(lowerMessage[i])\
    \ && lowerMessage[i] in vowels\n            result *= string( uppercase(lowerMessage[i])\
    \ )\n        elseif islower(lowerMessage[i]) && !(lowerMessage[i] in vowels)\n\
    \            result *= string( lowerMessage[i] )\n        elseif isupper(lowerMessage[i])\
    \ && lowerMessage[i] in vowels\n            result *= string( lowercase(lowerMessage[i])\
    \ )\n        elseif isupper(lowerMessage[i]) && !(lowerMessage[i] in vowels)\n\
    \            result *= string( lowerMessage[i] )\n        else\n            result\
    \ *= string(lowerMessage[i])\n        end\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8ml2pf5j.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp8ml2pf5j.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8ml2pf5j.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8ml2pf5j.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp8ml2pf5j.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp8ml2pf5j.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8ml2pf5j.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8ml2pf5j.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp8ml2pf5j.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp8ml2pf5j.jl:19\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8ml2pf5j.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8ml2pf5j.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp8ml2pf5j.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp8ml2pf5"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    for i = 1:length(message)\n        if islower(message[i])\n\
    \            new_message = new_message * upper(message[i])\n        elseif isupper(message[i])\n\
    \            new_message = new_message * lower(message[i])\n        elseif message[i]\
    \ in \"aeiou\"\n            new_message = new_message * get_two_ahead(message[i])\n\
    \        else\n            new_message = new_message * message[i]\n        end\n\
    \    end\n    return new_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3u0r0bm3.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp3u0r0bm3.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3u0r0bm3.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3u0r0bm3.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp3u0r0bm3.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp3u0r0bm3.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3u0r0bm3.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3u0r0bm3.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp3u0r0bm3.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmp3u0r0bm3.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3u0r0bm3.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3u0r0bm3.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp3u0r0bm3.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmp3u0r0bm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = lowercase(message)\n    enc_message = \"\"\n    vowels = collect(\"\
    aeiou\")\n    for i in message\n        if occursin(i, vowels)\n            v\
    \ = findfirst(ismatch.(vowels, i))\n            enc_message *= vowels[v + 2]\n\
    \        else\n            if (i == 'z')\n                enc_message *= 'b'\n\
    \            elseif (i == 'y')\n                enc_message *= 'a'\n         \
    \   else\n                enc_message *= chr(Int(i) + 2)\n            end\n  \
    \      end\n    end\n    return uppercase(enc_message)\nend\n \nencoded_message\
    \ = encode(message)\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: message not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpswrjcd47.jl:35\nin expression starting at /tmp/tmpswrjcd47.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Conversion tables\n    const uppercase = [chr(i) for i in UInt8[65:90]]\n\
    \    const lowercase = [chr(i) for i in UInt8[97:122]]\n    const vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    const n_alphabet = 26\n    \n    # Convert\
    \ message to lowercase\n    if message == \"\":\n        return \"\"\n    end\n\
    \    m = String(lowercase[findfirst(uppercase, message[1])])\n    m = string(m,\
    \ encode(message[2:end]))\n    \n    # Find index of character in the alphabet\n\
    \    i = findfirst(lowercase, m[1])\n    \n    # Convert vowel by adding two to\
    \ index and mapping back to char\n    if m[1] in vowels\n        return string(lowercase[(i\
    \ + 2) % n_alphabet], encode(m[2:end]))\n    else\n        return string(m[1],\
    \ encode(m[2:end]))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnvmhj497.jl:23\nin expression starting at\
    \ /tmp/tmpnvmhj497.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    m = lowercase(message)\n    vowels = \"aeiou\"\n    a = alphabet(:en)\n \
    \   d = Dict{Char, Char}()\n    for i = 1:length(vowels)\n        d[vowels[i]]\
    \ = a[indexin(a,vowels[i])+2]\n    end\n    d['z'] = 'b'\n    d['y'] = 'a'\n \
    \   for c in m\n        if c in vowels\n            c = d[c]\n        end\n  \
    \      c = uppercase(c)\n    end\n    return m\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxc8yfwcy.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ alphabet not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmpxc8yfwcy.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxc8yfwcy.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxc8yfwcy.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpxc8yfwcy.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: alphabet not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpxc8yfwcy.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxc8yfwcy.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxc8yfwcy.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpxc8yfwcy.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: alphabet not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpxc8yfwcy.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxc8yfwcy.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxc8yfwcy.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpxc8yfwcy.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ alphabet not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n   \
    \  @ Main /tmp/tmpxc8"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    for i in 1:length(message)\n        if islower(message[i])\n            message[i]\
    \ = upper(message[i])\n        else\n            message[i] = lower(message[i])\n\
    \        end\n    end\n    for i in 1:length(message)\n        if message[i] ==\
    \ 'a'\n            message[i] = 'c'\n        elseif message[i] == 'e'\n      \
    \      message[i] = 'g'\n        elseif message[i] == 'i'\n            message[i]\
    \ = 'k'\n        elseif message[i] == 'o'\n            message[i] = 'q'\n    \
    \    elseif message[i] == 'u'\n            message[i] = 'w'\n        elseif message[i]\
    \ == 'A'\n            message[i] = 'C'\n        elseif message[i] == 'E'\n   \
    \         message[i] = 'G'\n        elseif message[i] == 'I'\n            message[i]\
    \ = 'K'\n        elseif message[i] == 'O'\n            message[i] = 'Q'\n    \
    \    elseif message[i] == 'U'\n            message[i] = 'W'\n        end\n   \
    \ end\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkml1jy83.jl:52\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpkml1jy83.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkml1jy83.jl:52 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkml1jy83.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpkml1jy83.jl:53\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpkml1jy83.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkml1jy83.jl:53 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkml1jy83.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpkml1jy83.jl:54\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpkml1jy83.jl:16\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkml1jy83.jl:54 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkml1jy83.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpkml1jy83.jl:55\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpkml1jy8"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    output = \"\"\n    for i in range(1, length(message))\n        if islower(message[i])\n\
    \            output *= toupper(message[i])\n        elseif isupper(message[i])\n\
    \            output *= tolower(message[i])\n        else\n            if (message[i]\
    \ == 'a') | (message[i] == 'A')\n                output *= 'C'\n            elseif\
    \ (message[i] == 'e') | (message[i] == 'E')\n                output *= 'G'\n \
    \           elseif (message[i] == 'i') | (message[i] == 'I')\n               \
    \ output *= 'K'\n            elseif (message[i] == 'o') | (message[i] == 'O')\n\
    \                output *= 'M'\n            elseif (message[i] == 'u') | (message[i]\
    \ == 'U')\n                output *= 'Q'\n            elseif (message[i] == 'y')\
    \ | (message[i] == 'Y')\n                output *= 'S'\n            else\n   \
    \             output *= message[i]\n            end\n        end\n    end\n  \
    \  return output\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptu1zmrvh.jl:46\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmptu1zmrvh.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptu1zmrvh.jl:46 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptu1zmrvh.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmptu1zmrvh.jl:47\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmptu1zmrvh.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptu1zmrvh.jl:47 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptu1zmrvh.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmptu1zmrvh.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmptu1zmrvh.jl:17\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmptu1zmrvh.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmptu1zmrvh.jl:45\\ntest set:\
    \ Error During Test at /tmp/tmptu1zmrvh.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmptu1zmrv"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = lowercase(message) #Converts string to lowercase\n    chars = Array(message)\
    \ #Converts to array of characters\n    codedMessage = \"\"\n    i = 1\n    while\
    \ i <= length(message)\n        currentLetter = chars[i]\n        if currentLetter\
    \ in [\"a\", \"e\", \"i\", \"o\", \"u\"]\n            if currentLetter == \"u\"\
    \n                codedMessage = codedMessage * \"a\"\n            else\n    \
    \            codedMessage = codedMessage * chars[i+2]\n            end\n     \
    \   else\n            codedMessage = codedMessage * currentLetter\n        end\n\
    \        i = i + 1\n    end\n    return uppercase(codedMessage)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6wp7soj6.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching Array(::String)\\n  Closest candidates are:\\n    Array(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\\\
    n    Array(!Matched::Union{LinearAlgebra.Hermitian, LinearAlgebra.Symmetric})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\\\
    n    Array(!Matched::LinearAlgebra.Hessenberg) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:550\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp6wp7soj6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6wp7soj6.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6wp7soj6.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmp6wp7soj6.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching Array(::String)\\\
    n  Closest candidates are:\\n    Array(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\\\
    n    Array(!Matched::Union{LinearAlgebra.Hermitian, LinearAlgebra.Symmetric})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\\\
    n    Array(!Matched::LinearAlgebra.Hessenberg) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:550\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmp6wp7soj6.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6wp7soj6.jl:40 [inlined]\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    vowels = \"AEIOU\"\n    coded\
    \ = \"\"\n    for i in 1:length(message)\n        letter = message[i]\n      \
    \  if letter == \" \"\n            coded *= \" \"\n        elseif letter in alphabet\n\
    \            if letter in string(lowercase(alphabet))\n                letter\
    \ = uppercase(letter)\n            end\n            newidx = mod(findfirst(alphabet,\
    \ letter) + 2, length(alphabet))\n            if letter in vowels\n          \
    \      letter = alphabet[newidx]\n            else\n                letter = lowercase(alphabet[newidx])\n\
    \            end\n            coded *= letter\n        end\n    end\n    return\
    \ coded\nend\nencode(\"test\")\nencode(\"This is a message\")\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encrypted_message = \"\"\n    for character in message\n        if 'a' <=\
    \ character <= 'z'\n            encrypted_message *= upper(character)\n      \
    \  elseif 'A' <= character <= 'Z'\n            encrypted_message *= lower(character)\n\
    \        else\n            encrypted_message *= character\n        end\n    end\n\
    \    for i in 1:length(encrypted_message)\n        letter = encrypted_message[i]\n\
    \        if letter == 'a'\n            encrypted_message[i] = 'c'\n        elseif\
    \ letter == 'e'\n            encrypted_message[i] = 'g'\n        elseif letter\
    \ == 'i'\n            encrypted_message[i] = 'k'\n        elseif letter == 'o'\n\
    \            encrypted_message[i] = 'q'\n        elseif letter == 'u'\n      \
    \      encrypted_message[i] = 'y'\n        elseif letter == 'A'\n            encrypted_message[i]\
    \ = 'C'\n        elseif letter == 'E'\n            encrypted_message[i] = 'G'\n\
    \        elseif letter == 'I'\n            encrypted_message[i] = 'K'\n      \
    \  elseif letter == 'O'\n            encrypted_message[i] = 'Q'\n        elseif\
    \ letter == 'U'\n            encrypted_message[i] = 'Y'\n        end\n    end\n\
    \    return encrypted_message\nend\nencode(\"This is a message\")\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: lower not defined\nStacktrace:\n [1] encode(message::String)\n\
    \   @ Main /tmp/tmpqlp7mxnl.jl:20\n [2] top-level scope\n   @ /tmp/tmpqlp7mxnl.jl:51\n\
    in expression starting at /tmp/tmpqlp7mxnl.jl:51\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # for each letter in message\n    # look at its case \n    # if lowercase,\
    \ swap to uppercase\n    # if uppercase, swap to lowercase\n    message = replace(message,\
    \ \"e\", \"g\")\n    message = replace(message, \"E\", \"G\")\n    message = replace(message,\
    \ \"o\", \"q\")\n    message = replace(message, \"O\", \"Q\")\n    message = replace(message,\
    \ \"i\", \"k\")\n    message = replace(message, \"I\", \"K\")\n    message = replace(message,\
    \ \"a\", \"c\")\n    message = replace(message, \"A\", \"C\")\n    message = replace(message,\
    \ \"u\", \"w\")\n    message = replace(message, \"U\", \"W\")\n    return message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz0b4t_o2.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: no\
    \ method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpz0b4t_o2.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz0b4t_o2.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz0b4t_o2.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpz0b4t_o2.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: no method matching replace(::String,\
    \ ::String, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpz0b4t_o2.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz0b4t_o2.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    lowvowels = \"aeiou\"\n    upvowels = \"AEIOU\"\n    encoded = \"\"\n   \
    \ for i in 1:length(message)\n        if islower(message[i])\n            if message[i]\
    \ in lowvowels\n                j = findfirst(lowvowels, message[i])\n       \
    \         encoded = string(encoded, lowercase(upvowels[j+2]))\n            elseif\
    \ message[i] in upvowels\n                j = findfirst(upvowels, message[i])\n\
    \                encoded = string(encoded, uppercase(lowvowels[j+2]))\n      \
    \      else\n                encoded = string(encoded, message[i])\n         \
    \   end\n        else\n            if message[i] in lowvowels\n              \
    \  j = findfirst(lowvowels, message[i])\n                encoded = string(encoded,\
    \ uppercase(upvowels[j+2]))\n            elseif message[i] in upvowels\n     \
    \           j = findfirst(upvowels, message[i])\n                encoded = string(encoded,\
    \ lowercase(lowvowels[j+2]))\n            else\n                encoded = string(encoded,\
    \ message[i])\n            end\n        end\n    end\n    return encoded\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpql95jtin.jl:48\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpql95jtin.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpql95jtin.jl:48 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpql95jtin.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmpql95jtin.jl:49\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpql95jtin.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpql95jtin.jl:49 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpql95jtin.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmpql95jtin.jl:50\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpql95jtin.jl:19\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpql95jtin.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpql95jtin.jl:47\\ntest set:\
    \ Error During Test at /tmp/tmpql95jtin.jl:51\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpql95jti"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encoded_message = \"\"\n    for char in message\n        char = uppercase(char)\
    \ ? lowercase(char) : uppercase(char)\n        switch char\n            case 'a'\n\
    \                char = 'c'\n            case 'e'\n                char = 'g'\n\
    \            case 'i'\n                char = 'k'\n            case 'o'\n    \
    \            char = 'q'\n            case 'u'\n                char = 'y'\n  \
    \      end\n        push!(encoded_message, char)\n    end\n    return encoded_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp4j4sin2d.jl:16 expected \"\
    end\", got \"char\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4j4sin2d.jl:18\n\
    in expression starting at /tmp/tmp4j4sin2d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    lower, upper = \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    replace = [lower[(i+2)%26] for i in 1:26]\n    return lowercase(lowercase(message)\
    \ .|> replace)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv5y7wg0n.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  BoundsError: attempt\
    \ to access 26-codeunit String at index [0]\\n  Stacktrace:\\n    [1] checkbounds\\\
    n      @ ./strings/basic.jl:216 [inlined]\\n    [2] codeunit\\n      @ ./strings/string.jl:102\
    \ [inlined]\\n    [3] getindex\\n      @ ./strings/string.jl:223 [inlined]\\n\
    \    [4] (::var\"#1#2\"{String})(i::Int64)\\n      @ Main ./none:0\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] collect_to!\\n      @ ./array.jl:782\
    \ [inlined]\\n    [7] collect_to_with_first!\\n      @ ./array.jl:760 [inlined]\\\
    n    [8] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"{String}})\\\
    n      @ Base ./array.jl:734\\n    [9] encode(message::String)\\n      @ Main\
    \ /tmp/tmpv5y7wg0n.jl:16\\n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpv5y7wg0n.jl:24 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpv5y7wg0n.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmpv5y7wg0n.jl:25\\n  Test threw exception\\\
    n  Expression: candidate(\"Mudasir\") == \"mWDCSKR\"\\n  BoundsError: attempt\
    \ to access 26-codeunit String at index [0]\\n  Stacktrace:\\n    [1] checkbounds\\\
    n      @ ./strings/basic.jl:216 [inlined]\\n    [2] codeunit\\n      @ ./strings/string.jl:102\
    \ [inlined]\\n    [3] getindex\\n      @ ./strings/string.jl:223 [inlined]\\n\
    \    [4] (::var\"#1#2\"{String})(i::Int64)\\n      @ Main ./none:0\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] collect_to!\\n      @ ./array.jl:782\
    \ [inlined]\\n    [7] collect_to_with_first!\\n      @ ./array.jl:760 [inlined]\\\
    n    [8] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"{String}})\\\
    n      @ Base ./array.jl:734\\n    [9] encode(message::String)\\n      @ Main\
    \ /tmp/tmpv5y7wg0n.jl:16\\n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    characters = []\n    for letter in message\n        if letter == \"a\"\n\
    \            push!(characters, \"c\")\n        elseif letter == \"e\"\n      \
    \      push!(characters, \"g\")\n        elseif letter == \"i\"\n            push!(characters,\
    \ \"k\")\n        elseif letter == \"o\"\n            push!(characters, \"q\"\
    )\n        elseif letter == \"u\"\n            push!(characters, \"s\")\n    \
    \    elseif letter == \"A\"\n            push!(characters, \"C\")\n        elseif\
    \ letter == \"E\"\n            push!(characters, \"G\")\n        elseif letter\
    \ == \"I\"\n            push!(characters, \"K\")\n        elseif letter == \"\
    O\"\n            push!(characters, \"Q\")\n        elseif letter == \"U\"\n  \
    \          push!(characters, \"S\")\n        else\n            push!(characters,\
    \ letter)\n        end\n    end\n    joinedCharacters = join(characters)\n   \
    \ return(joinedCharacters)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qu6yaon.jl:49\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qu6yaon.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qu6yaon.jl:48\ntest set: Test\
    \ Failed at /tmp/tmp3qu6yaon.jl:50\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qu6yaon.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qu6yaon.jl:48\ntest set: Test\
    \ Failed at /tmp/tmp3qu6yaon.jl:51\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qu6yaon.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qu6yaon.jl:48\ntest set: Test\
    \ Failed at /tmp/tmp3qu6yaon.jl:52\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qu6yaon.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qu6yaon.jl:48\ntest set: Test\
    \ Failed at /tmp/tmp3qu6yaon.jl:53\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qu6yaon.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    message = upper(message)\n    new_string = \"\"\n    for i in 1:length(message)\n\
    \        if message[i] == 'A'\n            append!(new_string, 'C')\n        elseif\
    \ message[i] == 'E'\n            append!(new_string, 'G')\n        elseif message[i]\
    \ == 'I'\n            append!(new_string, 'K')\n        elseif message[i] == 'O'\n\
    \            append!(new_string, 'Q')\n        elseif message[i] == 'U'\n    \
    \        append!(new_string, 'S')\n        else\n            append!(new_string,\
    \ message[i])\n        end\n    end\n    return new_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmt69ql2m.jl:39\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpmt69ql2m.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmt69ql2m.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmt69ql2m.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmpmt69ql2m.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: upper not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpmt69ql2m.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmt69ql2m.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmt69ql2m.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmpmt69ql2m.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: upper not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpmt69ql2m.jl:15\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmt69ql2m.jl:41 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmt69ql2m.jl:38\\ntest set:\
    \ Error During Test at /tmp/tmpmt69ql2m.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ upper not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @\
    \ Main /tmp/tmpmt69ql2m.jl:15\\"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    a_ind =  Int('a') - 1\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    function helper(c::Char)::Char\n        idx = c in vowels ? findfirst(vowels,\
    \ c)[1] : 0\n        val = c <= 'Z' ? c + 32 : c\n        if idx == 0 \n     \
    \       val\n        else\n            ((val-a_ind+2)%26 + a_ind) \n        end\n\
    \    end\n    [helper(c) for c in message]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    lower = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\"\
    ,\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\"\
    ,\"y\",\"z\"]\n    upper = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"\
    H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"\
    U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]\n    altered = []\n    for letter in message\n\
    \        if letter in lower\n            index = findfirst(lower,letter)\n   \
    \         if letter == \"z\"\n                push!(altered,upper[1])\n      \
    \      elseif letter == \"Z\"\n                push!(altered,lower[1])\n     \
    \       else\n                push!(altered,upper[index+1])\n            end\n\
    \        elseif letter in upper\n            index = findfirst(upper,letter)\n\
    \            if letter == \"Z\"\n                push!(altered,lower[1])\n   \
    \         else\n                push!(altered,lower[index+1])\n            end\n\
    \        else\n            push!(altered,letter)\n        end\n    end\n    return\
    \ join(altered)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp958k_ik3.jl:46\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958k_ik3.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958k_ik3.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp958k_ik3.jl:47\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958k_ik3.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958k_ik3.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp958k_ik3.jl:48\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958k_ik3.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958k_ik3.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp958k_ik3.jl:49\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958k_ik3.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958k_ik3.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp958k_ik3.jl:50\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp958k_ik3.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    result = \"\"\n    for i =\
    \ 1:length(message)\n        if islower(message[i]) \n            for j = 1:length(alphabet)\n\
    \                if message[i] == alphabet[j]\n                    result = result\
    \ * lowercase(alphabet[(j+2)%26+1])\n                    break\n             \
    \   end\n            end\n        elseif isupper(message[i])\n            for\
    \ j = 1:length(alphabet)\n                if message[i] == uppercase(alphabet[j])\n\
    \                    result = result * uppercase(alphabet[(j+2)%26+1])\n     \
    \               break\n                end\n            end\n        else\n  \
    \          result = result * message[i]\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu6s6i_wr.jl:43\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpu6s6i_wr.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpu6s6i_wr.jl:43 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu6s6i_wr.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpu6s6i_wr.jl:44\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: islower not defined\\\
    n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpu6s6i_wr.jl:18\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpu6s6i_wr.jl:44 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu6s6i_wr.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpu6s6i_wr.jl:45\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: islower not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpu6s6i_wr.jl:18\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpu6s6i_wr.jl:45 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu6s6i_wr.jl:42\\ntest set:\
    \ Error During Test at /tmp/tmpu6s6i_wr.jl:46\\n  Test threw exception\\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\\n  UndefVarError:\
    \ islower not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n    \
    \ @ Main /tmp/tmpu6s6i_w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    out = \"\"\n    for x in message\n\
    \        if islower(x)\n            out *= uppercase(x)\n        elseif isupper(x)\n\
    \            out *= lowercase(x)\n        elseif x in alphabet\n            ind\
    \ = findfirst(alphabet, x)\n            out *= alphabet[(ind + 2) % 26 + 1]\n\
    \        else\n            out *= x\n        end\n    end\n    return out\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpi0rgl1t7.jl:15\nin expression\
    \ starting at /tmp/tmpi0rgl1t7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \  return message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3pnoqn9q.jl:22\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3pnoqn9q.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3pnoqn9q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3pnoqn9q.jl:23\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3pnoqn9q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3pnoqn9q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3pnoqn9q.jl:24\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3pnoqn9q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3pnoqn9q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3pnoqn9q.jl:25\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3pnoqn9q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3pnoqn9q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp3pnoqn9q.jl:26\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3pnoqn9q.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    if length(message) == 0\n        return \"\"\n    else\n        if message[1]\
    \ in \"aeiou\"\n            return char(int(message[1], 16) + 4) * encode(message[2:end])\n\
    \        elseif message[1] in \"AEIOU\"\n            return char(int(message[1],\
    \ 16) + 2) * encode(message[2:end])\n        else\n            return message[1]\
    \ * encode(message[2:end])\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn5lnr4r5.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main\
    \ /tmp/tmpn5lnr4r5.jl:21\\n   [2] encode(message::String)\\n     @ Main /tmp/tmpn5lnr4r5.jl:23\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpn5lnr4r5.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpn5lnr4r5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpn5lnr4r5.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  UndefVarError: int not defined\\n\
    \  Stacktrace:\\n   [1] encode(message::String)\\n     @ Main /tmp/tmpn5lnr4r5.jl:19\\\
    n   [2] encode(message::String)\\n     @ Main /tmp/tmpn5lnr4r5.jl:23\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpn5lnr4r5.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpn5lnr4r5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpn5lnr4r5.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] encode(message::String)\\n     @ Main /tmp/tmpn5lnr4r5.jl:21\\n   [2]\
    \ encode(message::String)\\n     @ Main /tmp/tmpn5lnr4r5.jl:23\\n   [3] macro\
    \ expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpn5lnr4r5.jl:34 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpn5lnr4r5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpn5lnr4r5.jl:35\\n  Test threw "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    upper_alphabet_offset = 65\n    lower_alphabet_offset = 97\n    alphabet_length\
    \ = 26\n    vowel_list = ['a', 'e', 'i', 'o', 'u']\n    encoded_message = \"\"\
    \n    for c in message\n        if c in vowel_list\n            if c == 'u'\n\
    \                encoded_message = encoded_message * \"a\"\n            else\n\
    \                encoded_message = encoded_message * (Char(Int(c)+2))\n      \
    \      end\n        elseif c in String('A':'Z')\n            encoded_message =\
    \ encoded_message * Char(Int(c)+32)\n        elseif c in String('a':'z')\n   \
    \         encoded_message = encoded_message * Char(Int(c)-32)\n        else\n\
    \            encoded_message = encoded_message * c\n        end\n    end\n   \
    \ return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpis6_jlin.jl:42\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"test\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis6_jlin.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis6_jlin.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpis6_jlin.jl:43\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"maDcSkR\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis6_jlin.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis6_jlin.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpis6_jlin.jl:44\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"yes\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis6_jlin.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis6_jlin.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpis6_jlin.jl:45\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"tHkS kS c MgSScGg\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis6_jlin.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis6_jlin.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpis6_jlin.jl:46\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpis6_jlin.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    result = \"\"\n    for c in message\n        if c in 'aeiou'\n          \
    \  result *= cycle(c, 'aeiou', 'cdfghjklmnpqrstvwxyz')\n        elseif c in 'AEIOU'\n\
    \            result *= cycle(c, 'AEIOU', 'CDFGHJKLMNPQRSTVWXYZ')\n        else\n\
    \            result *= c\n        end\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpwld4fn4i.jl:17\nin expression\
    \ starting at /tmp/tmpwld4fn4i.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Assuming only letters\n    mylst = [c for c in message]\n    vowels = \"\
    a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"\n    for i in 1:length(mylst)\n\
    \        if mylst[i] \u2208 vowels\n            mylst[i] = next(mylst[i])\n  \
    \          mylst[i] = next(mylst[i])\n        end\n        mylst[i] = uppercase(mylst[i])\n\
    \    end\n    out = join(mylst)\n    return out\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpd7vff4hl.jl:14 expected\
    \ \"end\", got \"\"\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd7vff4hl.jl:17\n\
    in expression starting at /tmp/tmpd7vff4hl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    # Convert all letters to UPPERCASE\n    # then we can use the lowercase\
    \ letter indices\n    # as the reference for the indices of the \n    # encoded\
    \ letters\n    Upper = [i for i in uppercase(message)]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpej2m4pkp.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpej2m4pkp.jl:1\n\
    in expression starting at /tmp/tmpej2m4pkp.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    let encrypted = \"\"\n    if message == \"\"\n        return encrypted\n\
    \    end\n    for letter in message\n        if (islower(letter))\n          \
    \  encrypted = encrypted * upper(letter)\n        else\n            encrypted\
    \ = encrypted * lower(letter)\n        end\n        if (letter == 'a')\n     \
    \       encrypted = encrypted * 'c'\n        elseif (letter == 'e')\n        \
    \    encrypted = encrypted * 'g'\n        elseif (letter == 'i')\n           \
    \ encrypted = encrypted * 'k'\n        elseif (letter == 'o')\n            encrypted\
    \ = encrypted * 'q'\n        elseif (letter == 'u')\n            encrypted = encrypted\
    \ * 'y'\n        elseif (letter == 'A')\n            encrypted = encrypted * 'C'\n\
    \        elseif (letter == 'E')\n            encrypted = encrypted * 'G'\n   \
    \     elseif (letter == 'I')\n            encrypted = encrypted * 'K'\n      \
    \  elseif (letter == 'O')\n            encrypted = encrypted * 'Q'\n        elseif\
    \ (letter == 'U')\n            encrypted = encrypted * 'Y'\n        else\n   \
    \         encrypted = encrypted * letter\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphxc2dv1_.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphxc2dv1_.jl:1\n\
    in expression starting at /tmp/tmphxc2dv1_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    #convert the string to lowercase\n    message = lowercase(message)\n    #create\
    \ an output variable to hold the encoded string\n    output = \"\"\n    #loop\
    \ through every letter in the message\n    for letter in message\n        #if\
    \ its a vowel, look up the letter of the index 2 ahead in the alphabet\n     \
    \   if letter in \"aeiou\"\n            letter = upper(alphabet[findfirst(alphabet,\
    \ letter)+2])\n        #append this letter to the output\n        else\n     \
    \       letter = upper(letter)\n        end\n        push!(output, letter)\n \
    \   end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpju14bmpe.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: upper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpju14bmpe.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpju14bmpe.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpju14bmpe.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpju14bmpe.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: upper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpju14bmpe.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpju14bmpe.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpju14bmpe.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpju14bmpe.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: upper not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmpju14bmpe.jl:26\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpju14bmpe.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpju14bmpe.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpju14bmpe.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ upper not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmpju14bmpe.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpju14bmpe.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    result = []\n    for c in message\n        if c in \"aeiou\"\n          \
    \  i = findfirst(c, \"aeiou\")\n            i = mod(i + 2, 5)\n            result\
    \ = push!(result, \"aeiou\"[i])\n        elseif c in \"AEIOU\"\n            i\
    \ = findfirst(c, \"AEIOU\")\n            i = mod(i + 2, 5)\n            result\
    \ = push!(result, \"AEIOU\"[i])\n        else\n            if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n                result = push!(result, lowercase(c))\n            else\n   \
    \             result = push!(result, uppercase(c))\n            end\n        end\n\
    \    end\n    return join(result)\nend\n@test encode(\"Test\") == \"tGSt\"\n@test\
    \ encode(\"This is a message\") == \"tHKS KS C MGSSCGG\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpzrzrs9xv.jl:35\nin expression starting at /tmp/tmpzrzrs9xv.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # no need to specify type since python is dynamic \n    encoded = String[]\n\
    \    for letter in message\n        # take each letter and turn it into a character\
    \ \n        letter = Char(letter)\n        # check if the letter is uppercase\
    \ \n        if uppercase(letter)\n            # push the letter 2 places ahead\
    \ to encoded list \n            push!(encoded, next(letter, 2))\n        else\n\
    \            # push lowercase letter 2 places ahead to encoded list \n       \
    \     push!(encoded, lowercase(next(letter, 2)))\n        end\n    end\n    return\
    \ join(encoded)\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplljhzv18.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] encode(message::String)\n   \
    \  @ Main /tmp/tmplljhzv18.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplljhzv18.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplljhzv18.jl:35\ntest set:\
    \ Error During Test at /tmp/tmplljhzv18.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  TypeError: non-boolean (Char) used\
    \ in boolean context\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmplljhzv18.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplljhzv18.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplljhzv18.jl:35\ntest set:\
    \ Error During Test at /tmp/tmplljhzv18.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmplljhzv18.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplljhzv18.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplljhzv18.jl:35\ntest set:\
    \ Error During Test at /tmp/tmplljhzv18.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  TypeError: non-boolean\
    \ (Char) used in boolean context\n  Stacktrace:\n   [1] encode(message::String)\n\
    \    "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplljhzv18.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    for m in message\n        if m \u2208 Set(['a','e','i','o','u'])\n\
    \            position = findfirst(['a','e','i','o','u'], m)\n            new_message\
    \ *= upper(['a','e','i','o','u'][position+2])\n        else\n            new_message\
    \ *= upper(m)\n        end\n    end\n    return new_message\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsklfgr0f.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: upper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpsklfgr0f.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsklfgr0f.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsklfgr0f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpsklfgr0f.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: upper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpsklfgr0f.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsklfgr0f.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsklfgr0f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpsklfgr0f.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: upper not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmpsklfgr0f.jl:21\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsklfgr0f.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsklfgr0f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpsklfgr0f.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ upper not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmpsklfgr0f.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsklfgr0f.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Your code here\n    return \"tHKS KS C MGSSCGG\"\nend\n \n \nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcxg1ti0f.jl:25\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"tHKS KS C MGSSCGG\" == \"tgst\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxg1ti0f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxg1ti0f.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcxg1ti0f.jl:26\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"tHKS KS C MGSSCGG\" == \"mWDCSKR\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxg1ti0f.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxg1ti0f.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcxg1ti0f.jl:27\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"tHKS KS C MGSSCGG\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxg1ti0f.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxg1ti0f.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpcxg1ti0f.jl:29\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"tHKS KS C MGSSCGG\"\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxg1ti0f.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxg1ti0f.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxg1ti0f.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\"\n    for i in 1:length(message)\n        if islower(message[i])\n\
    \            push!(new_message, uppercase(message[i]))\n        elseif isupper(message[i])\n\
    \            push!(new_message, lowercase(message[i]))\n        else\n       \
    \     push!(new_message, message[i])\n        end\n    end\n    return new_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8zqih10c.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp8zqih10c.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zqih10c.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zqih10c.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp8zqih10c.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp8zqih10c.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zqih10c.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zqih10c.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp8zqih10c.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmp8zqih10c.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zqih10c.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zqih10c.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp8zqih10c.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ islower not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmp8zqih10c.jl:17\n   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8zqih10c.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    swapcase = String[]\n    swapcase2 = String[]\n    message = uppercase(message)\n\
    \    a = lowercase(message)\n    for i in a \n        push!(swapcase, i)\n   \
    \ end\n    for i in message\n        push!(swapcase2, i)\n    end\n    for i in\
    \ 1:length(message)\n        if message[i] == 'A'\n            swapcase[i] = 'C'\n\
    \        elseif message[i] == 'E'\n            swapcase[i] = 'G'\n        elseif\
    \ message[i] == 'I'\n            swapcase[i] = 'K'\n        elseif message[i]\
    \ == 'O'\n            swapcase[i] = 'Q'\n        elseif message[i] == 'U'\n  \
    \          swapcase[i] = 'S'\n        elseif message[i] == 'Y'\n            swapcase[i]\
    \ = 'A'\n        elseif swapcase[i] == 'a'\n            swapcase2[i] = 'c'\n \
    \       elseif swapcase[i] == 'e'\n            swapcase2[i] = 'g'\n        elseif\
    \ swapcase[i] == 'i'\n            swapcase2[i] = 'k'\n        elseif swapcase[i]\
    \ == 'o'\n            swapcase2[i] = 'q'\n        elseif swapcase[i] == 'u'\n\
    \            swapcase2[i] = 's'\n        elseif swapcase[i] == 'y'\n         \
    \   swapcase2[i] = 'a'\n        end\n    end\n    for i in 1:length(message)\n\
    \        if message[i] == ' '\n            swapcase[i] = ' '\n            swapcase2[i]\
    \ = ' '\n        end\n    end\n    message = \"\"\n    for i in 1:length(swapcase)\n\
    \        message = message * swapcase[i]\n    end\n    for i in 1:length(swapcase2)\n\
    \        message = message * swapcase2[i]\n    end\n    return message\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_zwu6wue.jl:72\\n  Test threw\
    \ exception\\n  Expression: candidate(\"TEST\") == \"tgst\"\\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] push!(a::Vector{String}, item::Char)\\n    \
    \ @ Base ./array.jl:994\\n   [2] encode(message::String)\\n     @ Main /tmp/tmp_zwu6wue.jl:20\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp_zwu6wue.jl:72 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp_zwu6wue.jl:71\\ntest set:\
    \ Error During Test at /tmp/tmp_zwu6wue.jl:73\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] push!(a::Vector{String}, item::Char)\\n    \
    \ @ Base ./array.jl:994\\n   [2] encode(message::String)\\n     @ Main /tmp/tmp_zwu6wue.jl:20\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4]"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    vowels = ['a','e','i','o','u']\n    encoded_message = ''\n    for letter\
    \ in message\n        index = findall(x->x==letter,alphabet)\n        if letter\
    \ in alphabet\n            if letter in ['A'..'Z']\n                encoded_message\
    \ = encoded_message * letter\n            else\n                if letter in vowels\n\
    \                    encoded_message = encoded_message * alphabet[index[1]+2]\n\
    \                else\n                    encoded_message = encoded_message *\
    \ upper(letter)\n                end\n            end\n        else\n        \
    \    encoded_message = encoded_message * letter\n        end\n    end\n    return\
    \ encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp37ka7sh1.jl:17\nin expression starting at\
    \ /tmp/tmp37ka7sh1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    vowels = ['a','e','i','o','u']\n    new_string = \"\"\n    for c in\
    \ message\n        if c in vowels\n            if c == 'u'\n                new_string\
    \ = new_string * \"a\"\n            else\n                new_string = new_string\
    \ * string(Char(2+Int(c)))\n            end\n        elseif c == 'Z'\n       \
    \     new_string = new_string * \"B\"\n        elseif c == 'z'\n            new_string\
    \ = new_string * \"b\"\n        elseif c == ' '\n            new_string = new_string\
    \ * \" \"\n        elseif c == '\\n'\n            new_string = new_string * \"\
    \\n\"\n        elseif c == '\\t'\n            new_string = new_string * \"\\t\"\
    \n        elseif isupper(c)\n            new_string = new_string * string(Char(Int(c)+2))\n\
    \        elseif islower(c)\n            new_string = new_string * string(Char(Int(c)-2))\n\
    \        end\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplmcw3hj7.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmplmcw3hj7.jl:35\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplmcw3hj7.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplmcw3hj7.jl:47\ntest set:\
    \ Error During Test at /tmp/tmplmcw3hj7.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmplmcw3hj7.jl:35\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplmcw3hj7.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplmcw3hj7.jl:47\ntest set:\
    \ Error During Test at /tmp/tmplmcw3hj7.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmplmcw3hj7.jl:35\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplmcw3hj7.jl:50 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplmcw3hj7.jl:47\ntest set:\
    \ Error During Test at /tmp/tmplmcw3hj7.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmplmcw3hj7.jl:35\n   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplmcw3hj7.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    if lowercase_a(message[1])\n        message[1] = lowercase_a(message[1] +\
    \ 2)\n    elseif lowercase_e(message[1])\n        message[1] = lowercase_e(message[1]\
    \ + 2)\n    elseif lowercase_i(message[1])\n        message[1] = lowercase_i(message[1]\
    \ + 2)\n    elseif lowercase_o(message[1])\n        message[1] = lowercase_o(message[1]\
    \ + 2)\n    elseif lowercase_u(message[1])\n        message[1] = lowercase_u(message[1]\
    \ + 2)\n    elseif uppercase_A(message[1])\n        message[1] = uppercase_A(message[1]\
    \ + 2)\n    elseif uppercase_E(message[1])\n        message[1] = uppercase_E(message[1]\
    \ + 2)\n    elseif uppercase_I(message[1])\n        message[1] = uppercase_I(message[1]\
    \ + 2)\n    elseif uppercase_O(message[1])\n        message[1] = uppercase_O(message[1]\
    \ + 2)\n    elseif uppercase_U(message[1])\n        message[1] = uppercase_U(message[1]\
    \ + 2)\n    else\n        message[1] = message[1]\n    end\n    message[2:end]\
    \ = encode(message[2:end])\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0_1crp05.jl:46\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: lowercase_a not\
    \ defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp0_1crp05.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_1crp05.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_1crp05.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp0_1crp05.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: lowercase_a not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp0_1crp05.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_1crp05.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_1crp05.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp0_1crp05.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: lowercase_a not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmp0_1crp05.jl:15\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0_1crp05.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0_1crp05.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp0_1crp05.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ lowercase_a not defined\n  Stacktrace:\n   [1] encode(message::String)\n   \
    \  @ Main /tmp/tmp0_1crp05.jl:15\n   [2] macro expansion\n     @"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_1crp05.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    # Create English Alphabet\n    eng_alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    \n    # Convert input string to lowercase\n    message = lowercase(message)\n\
    \    \n    # Initialize the encoded message\n    encoded_message = \"\"\n    \n\
    \    # Loop through each letter in message\n    for letter in message\n      \
    \  \n        # Find location of letter in alphabet\n        index = findfirst(eng_alphabet,\
    \ letter)\n        \n        # Check if letter is a vowel\n        if letter in\
    \ \"aeiou\"\n            # If vowel, add 2 to index of alphabet\n            index\
    \ += 2\n        end\n        \n        # Check if index is now out of bounds\n\
    \        if index > 26\n            # If out of bounds, subtract by 26\n     \
    \       index -= 26\n        end\n        \n        # Append new letter to encoded\
    \ message\n        push!(encoded_message, eng_alphabet[index])\n    end\n    \n\
    \    # Reverse string and return encoded message\n    return reverse(encoded_message)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpubsame5j.jl:55\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpubsame5j.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubsame5j.jl:55 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpubsame5j.jl:54\ntest set:\
    \ Error During Test at /tmp/tmpubsame5j.jl:56\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpubsame5j.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpubsame5j.jl:56 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpubsame5j.jl:54\ntest set:\
    \ Error During Test at /tmp/tmpubsame5j.jl:57\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  MethodError: no method matching fin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubsame5j.jl:52\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    vowels = collect(\"aeiou\")\n    encoded = uppercase(message)\n   \
    \ for letter in message\n        if letter in vowels\n            idx = findfirst(vowels,\
    \ letter)\n            if idx == length(vowels)\n                encoded[letter]\
    \ = vowels[1]\n            else\n                encoded[letter] = vowels[idx+2]\n\
    \            end\n        else\n            encoded[letter] = letter\n       \
    \ end\n    end\n    return encoded\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpru0_al52.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Char)\n  Stacktrace:\n   [1] encode(message::String)\n\
    \     @ Main /tmp/tmpru0_al52.jl:27\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpru0_al52.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpru0_al52.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpru0_al52.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Char)\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmpru0_al52.jl:27\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpru0_al52.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpru0_al52.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpru0_al52.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Char)\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmpru0_al52.jl:27\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpru0_al52.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpru0_al52.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpru0_al52.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  MethodError: no\
    \ method matching setindex!(::String, ::Char, :"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpru0_al52.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \"\"\"\n    Write a function that takes a message, and encodes in such a\
    \ \n    way that it swaps case of all letters, replaces all vowels in \n    the\
    \ message with the letter that appears 2 places ahead of that \n    vowel in the\
    \ english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>>\
    \ encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS\
    \ C MGSSCGG'\n    \"\"\"\n    if length(message) == 0\n        return \"\"\n \
    \   elseif lowercase(message[1]) in ['a','e','i','o','u']\n        message[1]\
    \ = lowercase(message[1])\n        message[1] = nextind(message[1])\n        message[1]\
    \ = nextind(message[1])\n        message[1] = uppercase(message[1])\n        return\
    \ message[1] * encode(message[2:end])\n    elseif uppercase(message[1]) in ['A','E','I','O','U']\n\
    \        message[1] = uppercase(message[1])\n        message[1] = nextind(message[1])\n\
    \        message[1] = nextind(message[1])\n        message[1] = lowercase(message[1])\n\
    \        return message[1] * encode(message[2:end])\n    else\n        message[1]\
    \ = uppercase(message[1])\n        return message[1] * encode(message[2:end])\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsdm8qrr_.jl:52\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encode(message::String)\n\
    \     @ Main /tmp/tmpsdm8qrr_.jl:43\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsdm8qrr_.jl:52 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsdm8qrr_.jl:51\ntest set:\
    \ Error During Test at /tmp/tmpsdm8qrr_.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmpsdm8qrr_.jl:43\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsdm8qrr_.jl:53 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsdm8qrr_.jl:51\ntest set:\
    \ Error During Test at /tmp/tmpsdm8qrr_.jl:54\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmpsdm8qrr_.jl:43\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsdm8qrr_.jl:54 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsdm8qrr_.jl:51\ntest set:\
    \ Error During Test at /tmp/tmpsdm8qrr_.jl:55\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  MethodError: no\
    \ method matching setindex!(::String, ::Char"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsdm8qrr_.jl:49\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    new_message = \"\" \n    for i in 1:length(message)\n        if islower(message[i])\n\
    \            new_message = new_message * uppercase(message[i])\n        elseif\
    \ isupper(message[i])\n            new_message = new_message * lowercase(message[i])\n\
    \        else\n            new_message = new_message * message[i]\n        end\n\
    \    end\n    new_message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3_ick4yu.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp3_ick4yu.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_ick4yu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_ick4yu.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp3_ick4yu.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp3_ick4yu.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_ick4yu.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_ick4yu.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp3_ick4yu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmp3_ick4yu.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_ick4yu.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_ick4yu.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp3_ick4yu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ islower not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmp3_ick4yu.jl:17\n   [2] macro expansion\n     @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3_ick4yu.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    code = convert(Array{Char},\
    \ message)\n    for i in 1:length(code)\n        if code[i] == \" \"\n       \
    \     continue\n        end\n        if code[i] == convert(Char, uppercase(code[i]))\n\
    \            code[i] = uppercase(alphabet[mod(findfirst(alphabet, tolower(code[i]))\
    \ + 2, 26)])\n        else\n            code[i] = alphabet[mod(findfirst(alphabet,\
    \ code[i]) + 2, 26)]\n        end\n    end\n    return join(code)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") ==\
    \ \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5doka8u1.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type \n    String to an object of type \n    Array{Char}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp5doka8u1.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5doka8u1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5doka8u1.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5doka8u1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    String to an object of type \n    Array{Char}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp5doka8u1.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5doka8u1.jl:35 [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5doka8u1.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    idx = [i for i in 1:length(message) if message[i] in ['a','e','i','o','u','A','E','I','O','U']]\n\
    \    cap = [i for i in 1:length(message) if message[i] in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')]\n\
    \    out = String(message)\n    for i in idx\n        out[i] = string(message)[search(string(message)[i]+2)]\n\
    \    end\n    for i in cap\n        out[i] = string(message)[search(string(message)[i]+32)]\n\
    \    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpsn3d9on6.jl:16\nin expression\
    \ starting at /tmp/tmpsn3d9on6.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # Use ASCII to create a dictionary that maps each char to a number\n    chars\
    \ = [chr(x) for x in range(65,91)] + [chr(x) for x in range(97,123)]\n    mapper\
    \ = Dict{ASCIIString, Int64}(zip(chars,1:length(chars)))\n    \n    # Create a\
    \ dictionary that maps the position of letters to their uppercase counterparts\n\
    \    letters = [chr(x) for x in range(65,91)]\n    letters_dict = Dict{Int64,\
    \ ASCIIString}(zip(1:length(letters), letters))\n    \n    # Create a dictionary\
    \ that maps all vowels to the letter that comes 2 positions ahead in the alphabet\n\
    \    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowel_index = [mapper[x] for\
    \ x in vowels]\n    vowel_index_new = [mod(x,length(letters))+1 for x in vowel_index]\n\
    \    vowel_dict = Dict{Int64, ASCIIString}(zip(vowel_index, letters_dict[vowel_index_new]))\n\
    \    \n    # Create a new message by mapping each character in the initial message\
    \ to its uppercase counterpart\n    # and then replacing each vowel with the vowel\
    \ that comes 2 positions ahead in the alphabet\n    new_message = ASCIIString[]\n\
    \    for i in message\n        if i in vowels\n            push!(new_message,\
    \ vowel_dict[mapper[i]])\n        elseif i in mapper\n            push!(new_message,\
    \ letters_dict[mapper[i]])\n        else\n            push!(new_message, i)\n\
    \        end\n    end\n    return join(new_message)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptqf49a0y.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#6\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#6\"})\n     @ Base ./array.jl:724\n   [4] encode(message::String)\n\
    \     @ Main /tmp/tmptqf49a0y.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptqf49a0y.jl:48 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptqf49a0y.jl:47\ntest set:\
    \ Error During Test at /tmp/tmptqf49a0y.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#6\")(x::Int64)\n     @ Main ./none:0\n   [2] iterate\n    \
    \ @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#6\"})\n     @ Base ./array.jl:724\n   [4] encode(message::String)\n\
    \     @ Main /tmp/tmptqf49a0y.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptqf49a0y.jl:49 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptqf49a0y.jl:47\ntest set:\
    \ Error During Test at /tmp/tmptqf49a0y.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#6\")(x::Int64)\n     @ Main ./none:0\n   [2] iterate\n    \
    \ @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#6\"})\n     @ Base ./array.jl:724\n   [4] encode(message::String)\n\
    \     @ Main /tmp/tmptqf49a0y.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptqf49a0y.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkdw6kbzv.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkdw6kbzv.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdw6kbzv.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkdw6kbzv.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpkdw6kbzv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkdw6kbzv.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdw6kbzv.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkdw6kbzv.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    newmessage = \"\"\n\
    \    \n    for i in 1:length(message)\n        \n        newmessage = newmessage\
    \ * string(message[i])\n    \n        if contains(alphabet,lowercase(message[i]))\n\
    \            append!(newmessage,alphabet[findfirst(alphabet,lowercase(message[i]))+2])\n\
    \        end\n        \n    end\n    \n    newmessage\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ggtj0om.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp4ggtj0om.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ggtj0om.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ggtj0om.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ggtj0om.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp4ggtj0om.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ggtj0om.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ggtj0om.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp4ggtj0om.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  MethodError: no method matching fin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ggtj0om.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    encod_m = upper(message)\n    encod_m = replace(encod_m, 'A', 'C')\n    encod_m\
    \ = replace(encod_m, 'E', 'G')\n    encod_m = replace(encod_m, 'I', 'K')\n   \
    \ encod_m = replace(encod_m, 'O', 'Q')\n    encod_m = replace(encod_m, 'U', 'W')\n\
    \    encod_m = replace(encod_m, 'Y', 'A')\n    return encod_m\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\"\
    )\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\")\
    \ == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmproawhhnu.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: upper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmproawhhnu.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmproawhhnu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmproawhhnu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmproawhhnu.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: upper not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmproawhhnu.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmproawhhnu.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmproawhhnu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmproawhhnu.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: upper not defined\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmproawhhnu.jl:15\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmproawhhnu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmproawhhnu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmproawhhnu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ upper not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main\
    \ /tmp/tmproawhhnu.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmproawhhnu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n   \
    \ 'tHKS KS C MGSSCGG'\n    \"\"\"\nfunction encode(message::String)::String \n\
    \    vowels = \"aeiou\"\n    encoded = [c <: Char for c in message]\n    for (i,\
    \ c) in enumerate(encoded)\n        if c \u2208 vowels\n            encoded[i]\
    \ = (encode_vowel(c))\n        elseif islower(c)\n            encoded[i] = uppercase(c)\n\
    \        elseif isupper(c)\n            encoded[i] = lowercase(c)\n        end\n\
    \    end\n    join(encoded)\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0h775nnk.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  TypeError: in <:, expected Type,\
    \ got a value of type Char\n  Stacktrace:\n   [1] #1\n     @ ./array.jl:0 [inlined]\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encode(message::String)\n\
    \     @ Main /tmp/tmp0h775nnk.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0h775nnk.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0h775nnk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0h775nnk.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  TypeError: in <:, expected Type, got\
    \ a value of type Char\n  Stacktrace:\n   [1] #1\n     @ ./array.jl:0 [inlined]\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encode(message::String)\n\
    \     @ Main /tmp/tmp0h775nnk.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0h775nnk.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0h775nnk.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0h775nnk.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  TypeError: in <:, expected Type, got a value\
    \ of type Char\n  Stacktrace:\n   [1] #1\n     @ ./array.jl:0 [inlined]\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encode(message::String)\n\
    \     @ Main /tmp/tmp0h775nnk.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0h775nnk.jl:31\n"
  exit_code: 1
  status: SyntaxError

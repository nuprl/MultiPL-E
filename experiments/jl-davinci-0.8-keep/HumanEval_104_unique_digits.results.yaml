name: HumanEval_104_unique_digits
language: jl
results:
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return filter(x-> all(i-> odd(i), digits(x)), x)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx6xccy_y.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ odd not defined\\n  Stacktrace:\\n    [1] (::var\"#2#4\")(i::Int64)\\n     \
    \ @ Main /tmp/tmpx6xccy_y.jl:13\\n    [2] _all\\n      @ ./reduce.jl:1157 [inlined]\\\
    n    [3] #all#757\\n      @ ./reducedim.jl:902 [inlined]\\n    [4] all\\n    \
    \  @ ./reducedim.jl:902 [inlined]\\n    [5] (::var\"#1#3\")(x::Int64)\\n     \
    \ @ Main /tmp/tmpx6xccy_y.jl:13\\n    [6] filter(f::var\"#1#3\", a::Vector{Int64})\\\
    n      @ Base ./array.jl:2484\\n    [7] unique_digits(x::Vector{Int64})\\n   \
    \   @ Main /tmp/tmpx6xccy_y.jl:13\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpx6xccy_y.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpx6xccy_y.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpx6xccy_y.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError:\
    \ odd not defined\\n  Stacktrace:\\n    [1] (::var\"#2#4\")(i::Int64)\\n     \
    \ @ Main /tmp/tmpx6xccy_y.jl:13\\n    [2] _all\\n      @ ./reduce.jl:1157 [inlined]\\\
    n    [3] #all#757\\n      @ ./reducedim.jl:902 [inlined]\\n    [4] all\\n    \
    \  @ ./reducedim.jl:902 [inlined]\\n    [5] (::var\"#1#3\")(x::Int64)\\n     \
    \ @ Main /tmp/tmpx6xccy_y.jl:13\\n    [6] filter(f::var\"#1#3\", a::Vector{Int64})\\\
    n      @ Base ./array.jl:2484\\n    [7] unique_digits(x::Vector{Int64})\\n   \
    \   @ Main /tmp/tmpx6xccy_y.jl:13\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpx6xccy_y.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpx6xccy_y.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = []\n    for i in x\n        if any(occursin(\"2468\", string(j)))\n\
    \            continue\n        else\n            push!(res, i)\n        end\n\
    \    end\n    sort(res)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxqbifr4u.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ j not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n  \
    \   @ Main /tmp/tmpxqbifr4u.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxqbifr4u.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxqbifr4u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpxqbifr4u.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: j not\
    \ defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpxqbifr4u.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxqbifr4u.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxqbifr4u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpxqbifr4u.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: j not defined\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpxqbifr4u.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxqbifr4u.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxqbifr4u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpxqbifr4u.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: j not defined\\n \
    \ Stacktrace:\\n   [1] unique_di"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    @assert length(x) > 0 \"input vector cannot be empty\"\n    @assert\
    \ all(x .> 0) \"all elements in the vector must be positive\"\n    \n    x_unique\
    \ = [x[i] for i in 1:length(x) if (occurrence(\"2\", x[i]) == 0) && (occurrence(\"\
    4\", x[i]) == 0) && (occurrence(\"6\", x[i]) == 0) && (occurrence(\"8\", x[i])\
    \ == 0) && (occurrence(\"0\", x[i]) == 0)]\n    \n    return sort(x_unique)\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1tvunxkk.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ occurrence not defined\\n  Stacktrace:\\n    [1] (::var\"#2#4\"{Vector{Int64}})(i::Int64)\\\
    n      @ Main ./none:0\\n    [2] iterate\\n      @ ./iterators.jl:447 [inlined]\\\
    n    [3] iterate\\n      @ ./generator.jl:44 [inlined]\\n    [4] grow_to!(dest::Vector{Int64},\
    \ itr::Base.Generator{Base.Iterators.Filter{var\"#2#4\"{Vector{Int64}}, UnitRange{Int64}},\
    \ var\"#1#3\"{Vector{Int64}}})\\n      @ Base ./array.jl:797\\n    [5] collect\\\
    n      @ ./array.jl:721 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp1tvunxkk.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp1tvunxkk.jl:27 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp1tvunxkk.jl:26\\ntest\
    \ set: Error During Test at /tmp/tmp1tvunxkk.jl:28\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError:\
    \ occurrence not defined\\n  Stacktrace:\\n    [1] (::var\"#2#4\"{Vector{Int64}})(i::Int64)\\\
    n      @ Main ./none:0\\n    [2] iterate\\n      @ ./iterators.jl:447 [inlined]\\\
    n    [3] iterate\\n      @ ./generator.jl:44 [inlined]\\n    [4] grow_to!(dest::Vector{Int64},\
    \ itr::Base.Generator{Base.Iterators.Filter{var\"#2#4\"{Vector{Int64}}, UnitRange{Int64}},\
    \ var\"#1#3\"{Vector{Int64}}})\\n      @ Base ./array.jl:797\\n    [5] collect\\\
    n      @ ./array.jl:721 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp1tvunxkk.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp1tvunxkk.jl:28 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = []\n    for i in x\n        for j in digits(i)\n        \
    \    if j % 2 == 0\n                break\n            else\n                push!(unique_digits,\
    \ i)\n            end\n        end\n    end\n    sort(unique_digits)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ohh8aar.jl:30\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 15, 33, 33] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ohh8aar.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ohh8aar.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9ohh8aar.jl:31\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ohh8aar.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ohh8aar.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9ohh8aar.jl:32\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 111, 111, 151, 151, 151, 2033, 2033,\
    \ 12345] == [111, 151]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ohh8aar.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ohh8aar.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9ohh8aar.jl:33\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 31, 103, 135, 135, 135] == [31, 135]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ohh8aar.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ohh8aar.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ohh8aar.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = []\n    for i in x\n        if !contains(collect(digits(i)),\
    \ 0) && !contains(collect(digits(i)), 2) && !contains(collect(digits(i)), 4) &&\
    \ !contains(collect(digits(i)), 6) && !contains(collect(digits(i)), 8)\n     \
    \       push!(unique_digits, i)\n        end\n    end\n    return sort(unique_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp65an7pv9.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for x in x\n        if any([isodd(i) for i in digits(x)])\n \
    \           push!(y, x)\n        end\n    end\n    return y\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvh2oua00.jl:26\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1422, 1] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvh2oua00.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvh2oua00.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvh2oua00.jl:27\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvh2oua00.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvh2oua00.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvh2oua00.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvh2oua00.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvh2oua00.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvh2oua00.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvh2oua00.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvh2oua00.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh2oua00.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Initialise array to store odd-only numbers\n    uniq_digits = Int64[]\n\
    \    \n    # Loop through all elements in vector x\n    for e in x\n        #\
    \ Check if number contains even digit\n        has_even = any(ismatch.(r\"\\d\"\
    , num2str(e)) % 2 == 0)\n        \n        # Add number to array if no even digit\
    \ was found\n        if !has_even\n            push!(uniq_digits, e)\n       \
    \ end\n    end\n    \n    # Sort array in ascending order\n    sort!(uniq_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkh7z75tf.jl:35\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: num2str\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkh7z75tf.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkh7z75tf.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkh7z75tf.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkh7z75tf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: num2str\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkh7z75tf.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkh7z75tf.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkh7z75tf.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkh7z75tf.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: num2str not\
    \ defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkh7z75tf.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkh7z75tf.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkh7z75tf.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkh7z75tf.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: num2str not defined\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkh7z75tf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = Vector{Int64}()\n    for i in x\n        if has_even_digit(i)\n\
    \            continue\n        else\n            push!(unique_digits, i)\n   \
    \     end\n    end\n    sort(unique_digits)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpkghl9qde.jl:28\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkghl9qde.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkghl9qde.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkghl9qde.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkghl9qde.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkghl9qde.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkghl9qde.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkghl9qde.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkghl9qde.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkghl9qde.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkghl9qde.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkghl9qde.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpkghl9qde.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: has_even_digit not\
    \ defined\n  Stacktrace:\n   [1] unique_di"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkghl9qde.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # find indices of elements with odd digits\n    idx = unique(findall(!ismatch(r\"\
    \\d*[02468]\\d*\", string(x))))\n    return sort(x[idx])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxa08b9m7.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ ismatch not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpxa08b9m7.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxa08b9m7.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxa08b9m7.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpxa08b9m7.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: ismatch\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpxa08b9m7.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxa08b9m7.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxa08b9m7.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpxa08b9m7.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: ismatch\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpxa08b9m7.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxa08b9m7.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxa08b9m7.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpxa08b9m7.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: ismatch not defined\\\
    n  Stack"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # use filter + iseven\n    # Use map() to apply function iseven() over each\
    \ element of x\n    # Then use the filter function to retain those elements for\
    \ which \n    # the result from iseven is false.\n    # Finally sort the result\n\
    \    filter(iseven, map(x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwqg5sjwt.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ objects of type Vector{Int64} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] map(f::Vector{Int64})\\n     @ Base\
    \ ./abstractarray.jl:2965\\n   [2] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpwqg5sjwt.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpwqg5sjwt.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpwqg5sjwt.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpwqg5sjwt.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\\n  Use square brackets [] for indexing\
    \ an Array.\\n  Stacktrace:\\n   [1] map(f::Vector{Int64})\\n     @ Base ./abstractarray.jl:2965\\\
    n   [2] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpwqg5sjwt.jl:18\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpwqg5sjwt.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpwqg5sjwt.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpwqg5sjwt.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  MethodError: objects of\
    \ type Vector{Int64} are not callable\\n  Use square brackets [] for indexing\
    \ an Array.\\n  Stacktrace:\\n   [1] map(f::Vector{Int64})\\n     @ Base ./abstractarray.jl:2965\\\
    n   [2] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpwqg5sjwt.jl:18\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        for j in digits(i)\n            if j % 2\
    \ == 0\n                push!(y, i)\n                break\n            end\n\
    \        end\n    end\n    return setdiff(x, y)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdgr0b0fb.jl:29\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdgr0b0fb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdgr0b0fb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdgr0b0fb.jl:32\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 31] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdgr0b0fb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdgr0b0fb.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdgr0b0fb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    answer = Int64[]\n    for i in x\n        if isodd(i)\n            push!(answer,\
    \ i)\n        elseif isodd(string(i)[1]) && isodd(string(i)[2]) && isodd(string(i)[3])\n\
    \            push!(answer, i)\n        end\n    end\n    sort(answer)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3x1ybr5h.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching isodd(::Char)\\n  Closest candidates are:\\n    isodd(!Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/float.jl:832\\n    isodd(!Matched::Missing)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:101\\n    isodd(!Matched::BigInt)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:345\\n    ...\\n  Stacktrace:\\\
    n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmp3x1ybr5h.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3x1ybr5h.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3x1ybr5h.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp3x1ybr5h.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching isodd(::Char)\\n  Closest candidates are:\\n    isodd(!Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/float.jl:832\\n    isodd(!Matched::Missing)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:101\\n    isodd(!Matched::BigInt)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:345\\n    ...\\n  Stacktrace:\\\
    n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmp3x1ybr5h.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3x1ybr5h.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3x1ybr5h.jl:27\\ntest set:\
    \ Test Failed at /tmp/tmp3x1ybr5h.jl:30\\n  Expression: candidate([12345, 2033,\
    \ 111, 151]) == [111, 151]\\n   Evaluated: [111, 151, 2033, 12345] "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Int64[]\n    for i in x\n        if all(!ismatch(r\"\\d*[02468]\\d*\"\
    , string(i)))\n            push!(y, i)\n        end\n    end\n    sort(y)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkgb6vy1e.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ ismatch not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpkgb6vy1e.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkgb6vy1e.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkgb6vy1e.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkgb6vy1e.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: ismatch\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpkgb6vy1e.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkgb6vy1e.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkgb6vy1e.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkgb6vy1e.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: ismatch\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpkgb6vy1e.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkgb6vy1e.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkgb6vy1e.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpkgb6vy1e.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: ismatch not defined\\\
    n  Stack"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    a = set([1, 3, 5, 7, 9])\n    b = []\n    for i in x\n        if issubset(unique(digits(i)),\
    \ a)\n            push!(b, i)\n        end\n    end\n    sort(b)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphj5qs7tf.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ set not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n\
    \     @ Main /tmp/tmphj5qs7tf.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphj5qs7tf.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphj5qs7tf.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmphj5qs7tf.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: set\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmphj5qs7tf.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphj5qs7tf.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphj5qs7tf.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmphj5qs7tf.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: set not\
    \ defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmphj5qs7tf.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmphj5qs7tf.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphj5qs7tf.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmphj5qs7tf.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: set not defined\\\
    n  Stacktrace:\\n   [1] u"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [n for n in x if !any(dig in [\"0\", \"2\", \"4\", \"6\", \"8\"] for\
    \ dig in string(n))]\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi5qw60a4.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1422, 1] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5qw60a4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5qw60a4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpi5qw60a4.jl:21\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5qw60a4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5qw60a4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpi5qw60a4.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5qw60a4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5qw60a4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpi5qw60a4.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5qw60a4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5qw60a4.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi5qw60a4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    # initialization of the result array\n    x_unique = []\n    \n   \
    \ # loops on the array elements\n    for i in x\n        \n        # convert to\
    \ string array\n        s = string(i)\n        \n        # convert to array of\
    \ characters\n        ch = Array(s)\n        \n        # initialize flag\n   \
    \     flag = true\n        \n        # loops on characters in array\n        for\
    \ j in ch\n            if parse(Int64, j) % 2 == 0\n                flag = false\n\
    \                break\n            end\n        end\n        \n        # if flag\
    \ is still true then all the digits are odd\n        if flag\n            push!(x_unique,\
    \ i)\n        end\n    end\n    \n    return sort(x_unique)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn2_oizxx.jl:50\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching Array(::String)\\n  Closest candidates are:\\n    Array(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\\\
    n    Array(!Matched::Union{LinearAlgebra.Hermitian, LinearAlgebra.Symmetric})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\\\
    n    Array(!Matched::LinearAlgebra.Hessenberg) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:550\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpn2_oizxx.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn2_oizxx.jl:50 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpn2_oizxx.jl:49\\ntest set:\
    \ Error During Test at /tmp/tmpn2_oizxx.jl:51\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching Array(::String)\\n  Closest candidates are:\\n    Array(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\\\
    n    Array(!Matched::Union{LinearAlgebra.Hermitian, LinearAlgebra.Symmetric})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\\\
    n    Array(!Matched::LinearAlgebra.Hessenberg) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:550\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpn2_oizxx.jl:24\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro ex"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    # an empty vector to hold unique digits\n    unique_digit = []\n  \
    \  \n    # iterate over elements of a given vector\n    for i in x\n        \n\
    \        # check if the given element is divisible by 2\n        even = i % 2\
    \ == 0\n        \n        # check if the given element is divisible by 4\n   \
    \     odd = i % 4 == 0\n        \n        # check if the given element is divisible\
    \ by 6\n        even2 = i % 6 == 0\n        \n        # check if the given element\
    \ is divisible by 8\n        even3 = i % 8 == 0\n        \n        # check if\
    \ the given element is divisible by 10\n        even4 = i % 10 == 0\n        \n\
    \        # assign the given element to variable if it passes all the tests\n \
    \       if (even == false) && (odd == false) && (even2 == false) && (even3 ==\
    \ false) && (even4 == false)\n            push!(unique_digit, i)\n        end\n\
    \    end\n    \n    # sort unique_digit in increasing order\n    sort!(unique_digit)\n\
    \    \n    # return unique_digit\n    return unique_digit\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdi315d6z.jl:53\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi315d6z.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi315d6z.jl:51\ntest set: Test\
    \ Failed at /tmp/tmpdi315d6z.jl:54\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi315d6z.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi315d6z.jl:51\ntest set: Test\
    \ Failed at /tmp/tmpdi315d6z.jl:55\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi315d6z.jl:55 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi315d6z.jl:51\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdi315d6z.jl:49\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(unique_digits_no_sort(x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp1a6x7mjb.jl:20\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: unique_digits_no_sort\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1a6x7mjb.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1a6x7mjb.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1a6x7mjb.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1a6x7mjb.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: unique_digits_no_sort\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1a6x7mjb.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1a6x7mjb.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1a6x7mjb.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1a6x7mjb.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: unique_digits_no_sort\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1a6x7mjb.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1a6x7mjb.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1a6x7mjb.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp1a6x7mjb.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: unique_digits_no_sort\
    \ not defined\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1a6x7mjb.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [i for i in x if isempty(findall(r\"\\d*[02468]\\d*\", string(i)))]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi9d30zo3.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9d30zo3.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9d30zo3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpi9d30zo3.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 31] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi9d30zo3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi9d30zo3.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi9d30zo3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Int64[]\n    for i in x\n        if all((i % 2) == 1 for i in digits(i))\
    \ \n            push!(y, i)\n        end\n    end\n    return sort(y)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = Int64[]\n    for i in x\n        if i < 10\n            append!(res,\
    \ i)\n        else\n            temp = i\n            while temp != 0\n      \
    \          if temp % 10 == 0 || temp % 10 == 2 || temp % 10 == 4 || temp % 10\
    \ == 6 || temp % 10 == 8\n                    temp = 0\n                else\n\
    \                    temp = div(temp, 10)\n                end\n            end\n\
    \            if temp != 0\n                append!(res, i)\n            end\n\
    \        end\n    end\n    sort(res)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpexmjsb1s.jl:38\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexmjsb1s.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexmjsb1s.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpexmjsb1s.jl:40\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexmjsb1s.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexmjsb1s.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpexmjsb1s.jl:41\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexmjsb1s.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexmjsb1s.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpexmjsb1s.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    if length(x) == 0 \n        return []\n    end\n    res = [x[1]]\n    for\
    \ i in 2:length(x)\n        if !(has_even_digit(x[i]))\n            push!(res,\
    \ x[i])\n        end\n    end\n    return sort(res)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt0dohgi4.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpt0dohgi4.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt0dohgi4.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt0dohgi4.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpt0dohgi4.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpt0dohgi4.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt0dohgi4.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt0dohgi4.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpt0dohgi4.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpt0dohgi4.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt0dohgi4.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt0dohgi4.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpt0dohgi4.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: has_eve"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(x[findall(!iseven, x)])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5522wvor.jl:21\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5522wvor.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5522wvor.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5522wvor.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5522wvor.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5522wvor.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5522wvor.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5522wvor.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5522wvor.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5522wvor.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x_unique = [i for i in x if ! any([j in [2, 4, 6, 8, 0] for j in digits(i)])]\n\
    \    sort!(x_unique)\n    return x_unique\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # your code here ...\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9nrrrumd.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp9nrrrumd.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp9nrrrumd.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp9nrrrumd.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp9nrrrumd.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp9nrrrumd.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(x[x .% 2 .!= 0])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6l7y9ps.jl:21\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6l7y9ps.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6l7y9ps.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq6l7y9ps.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6l7y9ps.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6l7y9ps.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpq6l7y9ps.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6l7y9ps.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6l7y9ps.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6l7y9ps.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = Int64[]\n    for i in x\n        if mod(i, 2) != 0\n            push!(res,\
    \ i)\n        end\n    end\n    return sort(res)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdyk9mstj.jl:27\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyk9mstj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyk9mstj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdyk9mstj.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyk9mstj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyk9mstj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdyk9mstj.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyk9mstj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyk9mstj.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdyk9mstj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # the output is stored in the variable `result`. So, this variable\n    #\
    \ should be returned.\n    result = []\n    for n in x\n        digits = digits(n)\n\
    \        # this variable stores whether we have to include the number\n      \
    \  # in the output list.\n        include = true\n        for d in digits\n  \
    \          if d % 2 == 0\n                include = false\n                break\n\
    \            end\n        end\n        if include\n            push!(result, n)\n\
    \        end\n    end\n    return sort(result)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp07xasjpz.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ digits not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp07xasjpz.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp07xasjpz.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp07xasjpz.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp07xasjpz.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp07xasjpz.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp07xasjpz.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp07xasjpz.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp07xasjpz.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: digits not\
    \ defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp07xasjpz.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp07xasjpz.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp07xasjpz.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmp07xasjpz.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: digits not defined\\\
    n  Stacktrac"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Transforms each number into string and then into the list of the digits\n\
    \    digit_lists = [string(digit) for digit in x]\n    digit_lists = [map(Int64,\
    \ collect(digit_list)) for digit_list in digit_lists]\n    # Filters out all numbers\
    \ that have even digits\n    digit_lists = [digit_list for digit_list in digit_lists\
    \ if length(filter(is_even, digit_list)) == 0]\n    # Transforms the list of digits\
    \ into the number\n    result = [reduce(*, map(Int64, digit_list)) for digit_list\
    \ in digit_lists]\n    # Sorts the list in ascending order\n    sort!(result)\n\
    \    # Returns the vector\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnq7xdhi5.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ is_even not defined\\n  Stacktrace:\\n    [1] (::var\"#3#7\")(digit_list::Vector{Int64})\\\
    n      @ Main ./none:0\\n    [2] iterate\\n      @ ./iterators.jl:447 [inlined]\\\
    n    [3] iterate\\n      @ ./generator.jl:44 [inlined]\\n    [4] grow_to!(dest::Vector{Vector{Int64}},\
    \ itr::Base.Generator{Base.Iterators.Filter{var\"#3#7\", Vector{Vector{Int64}}},\
    \ typeof(identity)})\\n      @ Base ./array.jl:797\\n    [5] collect\\n      @\
    \ ./array.jl:721 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\n      @\
    \ Main /tmp/tmpnq7xdhi5.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpnq7xdhi5.jl:30 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpnq7xdhi5.jl:29\\ntest\
    \ set: Error During Test at /tmp/tmpnq7xdhi5.jl:31\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError:\
    \ is_even not defined\\n  Stacktrace:\\n    [1] (::var\"#3#7\")(digit_list::Vector{Int64})\\\
    n      @ Main ./none:0\\n    [2] iterate\\n      @ ./iterators.jl:447 [inlined]\\\
    n    [3] iterate\\n      @ ./generator.jl:44 [inlined]\\n    [4] grow_to!(dest::Vector{Vector{Int64}},\
    \ itr::Base.Generator{Base.Iterators.Filter{var\"#3#7\", Vector{Vector{Int64}}},\
    \ typeof(identity)})\\n      @ Base ./array.jl:797\\n    [5] collect\\n      @\
    \ ./array.jl:721 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\n      @\
    \ Main /tmp/tmpnq7xdhi5.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpnq7xdhi5.jl:31 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [i for i in x if sum(i in digits(j) for j in 2:9) == 0]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbc2rpyuu.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1422, 1] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2rpyuu.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2rpyuu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpbc2rpyuu.jl:21\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2rpyuu.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2rpyuu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpbc2rpyuu.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2rpyuu.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2rpyuu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpbc2rpyuu.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2rpyuu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2rpyuu.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbc2rpyuu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # YOUR CODE HERE\n    z = []\n    for i in x\n        if haseven(i)\n   \
    \         continue\n        else\n            push!(z, i)\n        end\n    end\n\
    \    sort(z)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcrxhm5ln.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ haseven not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpcrxhm5ln.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcrxhm5ln.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcrxhm5ln.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpcrxhm5ln.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: haseven\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpcrxhm5ln.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcrxhm5ln.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcrxhm5ln.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpcrxhm5ln.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: haseven\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpcrxhm5ln.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcrxhm5ln.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcrxhm5ln.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpcrxhm5ln.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: haseven not defined\\\
    n  Stack"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = zeros(Int64, length(x))\n    j = 0 \n    for i in 1:length(x)\n     \
    \   is_even = false\n        while x[i] > 0\n            if mod(x[i], 2) == 0\n\
    \                is_even = true\n                break\n            end\n    \
    \        x[i] = div(x[i], 10)\n        end\n        if is_even == false\n    \
    \        j += 1\n            y[j] = x[i]\n        end\n    end\n    unique_digits\
    \ = unique(y[1:j])\n    return unique_digits\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr9pdcu1l.jl:37\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [0] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr9pdcu1l.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9pdcu1l.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpr9pdcu1l.jl:39\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [0] == [111, 151]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr9pdcu1l.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9pdcu1l.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpr9pdcu1l.jl:40\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [0] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr9pdcu1l.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9pdcu1l.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9pdcu1l.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    for i in x\n        if occursin(\"0\", string(i)) || occursin(\"2\", string(i))\
    \ || occursin(\"4\", string(i)) || occursin(\"6\", string(i)) || occursin(\"8\"\
    , string(i))\n            return Int64[]\n        end\n    end\n    sort(x)\n\
    end\nx = unique_digits([15, 33, 1422, 1])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvjyymc1u.jl:26\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: Int64[] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjyymc1u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjyymc1u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvjyymc1u.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjyymc1u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjyymc1u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvjyymc1u.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjyymc1u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjyymc1u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvjyymc1u.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # define a result vector to store our answer\n    result = Int64[]\n    #\
    \ loop over the x\n    for e in x\n        # if the remainder of e and 10 is not\
    \ zero\n        if mod(e, 10) != 0\n            # then e must be inside the result\n\
    \            push!(result, e)\n        else\n            # if the remainder of\
    \ e and 10 is zero\n            # then loop over the digits of e\n           \
    \ for i in digits(e)\n                # if the mod of any of the digits and 2\
    \ is zero\n                if mod(i, 2) == 0\n                    # then break\
    \ the loop\n                    break\n                else\n                \
    \    # otherwise push e to the result\n                    push!(result, e)\n\
    \                end\n            end\n        end\n    end\n    # sort the result\
    \ vector\n    sort!(result)\n    # return the result\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_o6tfz47.jl:46\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_o6tfz47.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_o6tfz47.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp_o6tfz47.jl:47\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_o6tfz47.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_o6tfz47.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp_o6tfz47.jl:48\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_o6tfz47.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_o6tfz47.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp_o6tfz47.jl:49\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_o6tfz47.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_o6tfz47.jl:45\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_o6tfz47.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique = []\n    for i = 1:length(x)\n        if has_even_digit(x[i]) ==\
    \ false\n            push!(unique, x[i])\n        end\n    end\n    return sort(unique)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps9ssn6oj.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmps9ssn6oj.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps9ssn6oj.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps9ssn6oj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmps9ssn6oj.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmps9ssn6oj.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps9ssn6oj.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps9ssn6oj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmps9ssn6oj.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmps9ssn6oj.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmps9ssn6oj.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmps9ssn6oj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmps9ssn6oj.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: has_eve"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if typeof(i) != Int64\n            println(\"\
    Error. enter the data of type Int64.\")\n            return \n        end\n  \
    \      if !(i in y) && all(i != j for j in eachdigit(i))\n            push!(y,\
    \ i)\n        end\n    end\n    return sort(y)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp59b0a1bx.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ eachdigit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp59b0a1bx.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp59b0a1bx.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp59b0a1bx.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp59b0a1bx.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: eachdigit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp59b0a1bx.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp59b0a1bx.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp59b0a1bx.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp59b0a1bx.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: eachdigit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp59b0a1bx.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp59b0a1bx.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp59b0a1bx.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp59b0a1bx.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: eachdigit not defined\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    output = []\n    for i in x\n        push!(output, i) if all(digit -> (digit\
    \ % 2 != 0), digits(i))\n    end\n    sort(output)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpt8_3kyf3.jl:14 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt8_3kyf3.jl:15\n\
    in expression starting at /tmp/tmpt8_3kyf3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    r = filter(x) do n\n        return all(dig -> dig % 2 != 0, digits(n))\n\
    \    end\n    return sort(r)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # YOUR CODE HERE\nend\n \n \n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkgu62xwh.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpkgu62xwh.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkgu62xwh.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkgu62xwh.jl:22\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    new_list = [] #list to store new values after even digit is removed\n\
    \    \n    for i in x #cycle through each element of x and add if no even digit\n\
    \        push!(new_list, i)\n        if i % 2 == 0\n            remove!(new_list,\
    \ i)\n        end\n    end\n    return sort(new_list)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz3v0253d.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ remove! not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpz3v0253d.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz3v0253d.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz3v0253d.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpz3v0253d.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: remove!\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpz3v0253d.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz3v0253d.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz3v0253d.jl:28\\ntest set:\
    \ Test Failed at /tmp/tmpz3v0253d.jl:31\\n  Expression: candidate([12345, 2033,\
    \ 111, 151]) == [111, 151]\\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x_list = []\n    for i in x\n        even = false\n        for j in digits(i)\n\
    \            if j%2 == 0\n                even = true\n            end\n     \
    \   end\n        if even == false\n            push!(x_list, i)\n        end\n\
    \    end\n    x_list = sort(x_list)\n    return x_list\nend\nunique_digits([152,\
    \ 323, 1422, 10])\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # YOUR CODE HERE\n    (x)\n    return unique_digits\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6axagwqe.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type typeof(unique_digits) to an object of type\
    \ Vector{Int64}\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp6axagwqe.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6axagwqe.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6axagwqe.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp6axagwqe.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: Cannot\
    \ `convert` an object of type typeof(unique_digits) to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp6axagwqe.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return x[findall(x) do i\n        (i%2==1)&((i%10%2==1)|(i%100%2==1)|(i%1000%2==1)|(i%10000%2==1))\n\
    \    end]\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t\
    @test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323,\
    \ 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111, 151])\
    \ == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnjpyuy2m.jl:22\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjpyuy2m.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjpyuy2m.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnjpyuy2m.jl:23\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjpyuy2m.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjpyuy2m.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnjpyuy2m.jl:24\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjpyuy2m.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjpyuy2m.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnjpyuy2m.jl:25\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnjpyuy2m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnjpyuy2m.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjpyuy2m.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    n = length(x)\n    y = zeros(Int64,n)\n    k = 0\n    \n    for i in\
    \ 1:n\n        x[i] = abs(x[i])\n        d = 0\n        for j in 1:5\n       \
    \     if mod(x[i],10)%2 == 0\n                d = 1\n                break\n \
    \           end\n            x[i] = div(x[i],10)\n        end\n        if d ==\
    \ 0\n            k = k + 1\n            y[k] = x[i]\n        end\n    end\n  \
    \  \n    y = sort(y[1:k])\n    \n    return y\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkaikcg2d.jl:44\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: Int64[] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaikcg2d.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaikcg2d.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpkaikcg2d.jl:46\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaikcg2d.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaikcg2d.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpkaikcg2d.jl:47\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaikcg2d.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaikcg2d.jl:43\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkaikcg2d.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odd_indices = findall(x -> all(digits(x) .!= [2, 4, 6, 8, 0]), x)\n    return\
    \ sort(x[odd_indices])\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9tv1nh_7.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  DimensionMismatch(\"\
    arrays could not be broadcast to a common size; got a dimension with lengths 2\
    \ and 5\")\\n  Stacktrace:\\n    [1] _bcs1\\n      @ ./broadcast.jl:516 [inlined]\\\
    n    [2] _bcs\\n      @ ./broadcast.jl:510 [inlined]\\n    [3] broadcast_shape\\\
    n      @ ./broadcast.jl:504 [inlined]\\n    [4] combine_axes\\n      @ ./broadcast.jl:499\
    \ [inlined]\\n    [5] instantiate\\n      @ ./broadcast.jl:281 [inlined]\\n  \
    \  [6] materialize\\n      @ ./broadcast.jl:860 [inlined]\\n    [7] (::var\"#1#2\"\
    )(x::Int64)\\n      @ Main /tmp/tmp9tv1nh_7.jl:13\\n    [8] _broadcast_getindex_evalf\\\
    n      @ ./broadcast.jl:670 [inlined]\\n    [9] _broadcast_getindex\\n      @\
    \ ./broadcast.jl:643 [inlined]\\n   [10] getindex\\n      @ ./broadcast.jl:597\
    \ [inlined]\\n   [11] macro expansion\\n      @ ./broadcast.jl:961 [inlined]\\\
    n   [12] macro expansion\\n      @ ./simdloop.jl:77 [inlined]\\n   [13] copyto!(dest::BitVector,\
    \ bc::Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, var\"#1#2\"\
    , Tuple{Vector{Int64}}})\\n      @ Base.Broadcast ./broadcast.jl:960\\n   [14]\
    \ copyto!(dest::BitVector, bc::Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}},\
    \ var\"#1#2\", Tuple{Vector{Int64}}})\\n      @ Base.Broadcast ./broadcast.jl:971\\\
    n   [15] copyto!\\n      @ ./broadcast.jl:913 [inlined]\\n   [16] copy(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Tuple{Base.OneTo{Int64}}, var\"#1#2\", Tuple{Vector{Int64}}})\\n      @ Base.Broadcast\
    \ ./broadcast.jl:885\\n   [17] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Nothing, var\"#1#2\", Tuple{Vector{Int64}}})\\n      @ Base.Broadcast ./broadcast.jl:860\\\
    n   [18] findall(testf::Function, A::Vector{Int64})\\n      @ Base ./array.jl:2257\\\
    n   [19] unique_digits(x::Vector{Int64})\\n      @ Main /tmp/tmp9tv1nh_7.jl:13\\\
    n   [20] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n  "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # if x is Int, then use isodd(x)\n    # if x is a Vector{Int64}, then use\
    \ isodd.(x)\n    return sort(x[isodd.(x)])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsf9zllks.jl:23\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf9zllks.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf9zllks.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsf9zllks.jl:24\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf9zllks.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf9zllks.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsf9zllks.jl:25\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsf9zllks.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsf9zllks.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsf9zllks.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    if !isempty(x)\n        y = filter(a -> !(a % 2 == 0), x)\n        z = sort(y)\n\
    \        return z\n    else\n        return []\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwu3gkurz.jl:27\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwu3gkurz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwu3gkurz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwu3gkurz.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwu3gkurz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwu3gkurz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwu3gkurz.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwu3gkurz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwu3gkurz.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwu3gkurz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = x[1]\n    for i = 2:length(x)\n        y = y*10 + x[i]\n    end\n   \
    \ println(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'32521\\ntest set: Error During Test at /tmp/tmpvrg_52zz.jl:24\\n  Test\
    \ threw exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\\
    n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ Vector{Int64}\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpvrg_52zz.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpvrg_52zz.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvrg_52zz.jl:23\\n198530\\\
    n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Int64[]\n    for i in x\n        if all(digits(i) .% 2 .!= 0)\n     \
    \       push!(y, i)\n        end\n    end\n    return sort(y)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    new_list = []\n    for i in x\n        if iseven(i) == false\n          \
    \  push!(new_list, i)\n        end\n    end\n    sort(new_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_6scsx0m.jl:27\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_6scsx0m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_6scsx0m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_6scsx0m.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_6scsx0m.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_6scsx0m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_6scsx0m.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_6scsx0m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_6scsx0m.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6scsx0m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    evens = [0, 2, 4, 6, 8]\n    uniques = []\n    for y in x\n        for z\
    \ in [digit for digit in digits(y)]\n            if z in evens\n             \
    \   break\n            end\n            push!(uniques, y)\n        end\n    end\n\
    \    return uniques\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1944hzzz.jl:30\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 15, 33, 33, 1] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1944hzzz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1944hzzz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1944hzzz.jl:31\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1944hzzz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1944hzzz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1944hzzz.jl:32\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 2033, 111, 111, 111, 151, 151,\
    \ 151] == [111, 151]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1944hzzz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1944hzzz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1944hzzz.jl:33\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 135, 135, 103, 31, 31] == [31, 135]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1944hzzz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1944hzzz.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1944hzzz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return findall(a -> !has_even_digit(a), x)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmphf03brmh.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n    [1] (::var\"#1#2\")(a::Int64)\\\
    n      @ Main /tmp/tmphf03brmh.jl:13\\n    [2] _broadcast_getindex_evalf\\n  \
    \    @ ./broadcast.jl:670 [inlined]\\n    [3] _broadcast_getindex\\n      @ ./broadcast.jl:643\
    \ [inlined]\\n    [4] getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [5]\
    \ copy\\n      @ ./broadcast.jl:899 [inlined]\\n    [6] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Nothing, var\"#1#2\", Tuple{Vector{Int64}}})\\n      @ Base.Broadcast ./broadcast.jl:860\\\
    n    [7] findall(testf::Function, A::Vector{Int64})\\n      @ Base ./array.jl:2257\\\
    n    [8] unique_digits(x::Vector{Int64})\\n      @ Main /tmp/tmphf03brmh.jl:13\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [10] macro expansion\\n      @ /tmp/tmphf03brmh.jl:20 [inlined]\\\
    n   [11] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [12] top-level scope\\n      @ /tmp/tmphf03brmh.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmphf03brmh.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n    [1] (::var\"#1#2\")(a::Int64)\\\
    n      @ Main /tmp/tmphf03brmh.jl:13\\n    [2] _broadcast_getindex_evalf\\n  \
    \    @ ./broadcast.jl:670 [inlined]\\n    [3] _broadcast_getindex\\n      @ ./broadcast.jl:643\
    \ [inlined]\\n    [4] getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [5]\
    \ copy\\n      @ ./broadcast.jl:899 [inlined]\\n    [6] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},\
    \ Nothing, var\"#1#2\", Tuple{Vector{Int64}}})\\n      @ Base.Broadcast ./broadcast.jl:860\\\
    n    [7] findall(testf::Function, A::Vector{Int64})\\n      @ Base ./array.jl:2257\\\
    n    [8] unique_digits(x::Vector{Int64})\\n      @ Main "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Store the result in this\n    res = Vector{Int64}()\n    # Iterate over\
    \ every element of the input vector\n    for i in x\n        # Define a boolean\
    \ variable as default = true\n        has_even_digits = true\n        # Convert\
    \ the current number (i) to a string\n        str_num = string(i)\n        # Iterate\
    \ over every character in the string\n        for j in str_num\n            #\
    \ If any of the character is even\n            if parse(Int64, j) % 2 == 0\n \
    \               # Change the boolean to false\n                has_even_digits\
    \ = false\n                # Break out of the loop, no need to keep checking\n\
    \                break\n            end\n        end\n        # If the boolean\
    \ is true, i.e. we didn't encounter any even digits\n        if has_even_digits\n\
    \            # Push the current number (i) onto the result vector\n          \
    \  push!(res, i)\n        end\n    end\n    # Return the result\n    return sort(res)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    even_digits = [0, 2, 4, 6, 8]\n    unique_digits = []\n    for i in x\n \
    \       for j in even_digits\n            if j in digits(i)\n                break\n\
    \            end\n        end\n        if j ! in even_digits\n            push!(unique_digits,\
    \ i)\n        end\n    end\n    sort(unique_digits)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"even_digits\"\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpvelwvlk3.jl:21\nin expression starting at /tmp/tmpvelwvlk3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = zeros(Int64, length(x))\n    count = 0\n    for i in 1:length(x)\n  \
    \      for j in digits(x[i])\n            if j == 1 || j == 3 || j == 5 || j ==\
    \ 7 || j == 9\n                continue\n            else\n                break\n\
    \            end\n        end\n        count += 1\n        y[count] = x[i]\n \
    \   end\n    return y[1:count]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4urc0pv2.jl:33\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1422, 1] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4urc0pv2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4urc0pv2.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4urc0pv2.jl:34\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4urc0pv2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4urc0pv2.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4urc0pv2.jl:35\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4urc0pv2.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4urc0pv2.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp4urc0pv2.jl:36\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4urc0pv2.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4urc0pv2.jl:32\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4urc0pv2.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = [true for i in x]\n    for i = 1:length(x)\n        if div(x[i], 10)\
    \ != 0\n            for j = 1:floor(log10(x[i]))\n                if rem(x[i],\
    \ 10^j) % 2 == 0\n                    y[i] = false\n                    break\n\
    \                end\n            end\n        end\n    end\n    w = []\n    for\
    \ i = 1:length(x)\n        if y[i] == true\n            push!(w, x[i])\n     \
    \   end\n    end\n    return sort(w)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkri4e1es.jl:38\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkri4e1es.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkri4e1es.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpkri4e1es.jl:39\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkri4e1es.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkri4e1es.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpkri4e1es.jl:40\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkri4e1es.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkri4e1es.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkri4e1es.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if even(i)\n            push!(y, i)\n   \
    \     end\n    end\n    return sort(y)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx40bnnuj.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ even not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpx40bnnuj.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx40bnnuj.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx40bnnuj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpx40bnnuj.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: even\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpx40bnnuj.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx40bnnuj.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx40bnnuj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpx40bnnuj.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: even not\
    \ defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpx40bnnuj.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpx40bnnuj.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx40bnnuj.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpx40bnnuj.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: even not defined\\\
    n  Stacktrace:\\n   ["
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_numbers = Set()\n    for number in x\n        if count_even_digits(number)\
    \ == 0\n            push!(unique_numbers, number)\n        end\n    end\n    sort(unique_numbers)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3mde3sa0.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ count_even_digits not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp3mde3sa0.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3mde3sa0.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3mde3sa0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp3mde3sa0.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: count_even_digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp3mde3sa0.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3mde3sa0.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3mde3sa0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp3mde3sa0.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: count_even_digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp3mde3sa0.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3mde3sa0.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3mde3sa0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp3mde3sa0.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    digits = [Int64(i) for i in \"0123456789\"]\n    evens = digits[2:2:10]\n\
    \    result = []\n    for i in x\n        if all(j not in evens for j in digits(i))\n\
    \            push!(result, i)\n        end\n    end\n    sort(result)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfo72jnic.jl:17\nin expression starting at\
    \ /tmp/tmpfo72jnic.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    #\n    # Your code here\n    #\n    y = []\n    for i in x\n        if ~hasEvenDigit(i)\n\
    \            push!(y, i)\n        end\n    end\n    return sort(y)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprwgoc5sq.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ hasEvenDigit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmprwgoc5sq.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprwgoc5sq.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprwgoc5sq.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmprwgoc5sq.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: hasEvenDigit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmprwgoc5sq.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprwgoc5sq.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprwgoc5sq.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmprwgoc5sq.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: hasEvenDigit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmprwgoc5sq.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprwgoc5sq.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprwgoc5sq.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmprwgoc5sq.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: hasEvenDigit "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits_c(Vector{Int64}(x))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpd4e209jx.jl:20\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: unique_digits_c\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpd4e209jx.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd4e209jx.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd4e209jx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpd4e209jx.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: unique_digits_c\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpd4e209jx.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd4e209jx.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd4e209jx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpd4e209jx.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: unique_digits_c\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpd4e209jx.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd4e209jx.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd4e209jx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpd4e209jx.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: unique_digits_c not\
    \ defined\n  Stacktrace:\n   [1] uniqu"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4e209jx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x = filter(y -> !any(isodd, digits(y)), x)\n    if length(x) > 0\n      \
    \  sort(x)\n    else\n        x\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp64tusfz0.jl:25\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: Int64[] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp64tusfz0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp64tusfz0.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp64tusfz0.jl:27\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp64tusfz0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp64tusfz0.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp64tusfz0.jl:28\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp64tusfz0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp64tusfz0.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64tusfz0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    h=[]\n    for i in x\n        if (i%2)==0\n            push!(h,i)\n     \
    \   end\n    end\n    h\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphh8fwtbw.jl:26\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1422] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphh8fwtbw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphh8fwtbw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphh8fwtbw.jl:27\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphh8fwtbw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphh8fwtbw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphh8fwtbw.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphh8fwtbw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphh8fwtbw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphh8fwtbw.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphh8fwtbw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphh8fwtbw.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphh8fwtbw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # filter the list if there is even numbers\n    l1 = filter(x) do x\n   \
    \     iseven(x) == false\n    end\n    # sort the list\n    sort(l1)\nend\n  \
    \  \n\"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that has at least two even digits.\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk9ev92eg.jl:21\nin expression starting at\
    \ /tmp/tmpk9ev92eg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return filter(isodd, x)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4r4rxi7y.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4r4rxi7y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4r4rxi7y.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4r4rxi7y.jl:21\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4r4rxi7y.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4r4rxi7y.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4r4rxi7y.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4r4rxi7y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4r4rxi7y.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp4r4rxi7y.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4r4rxi7y.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4r4rxi7y.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4r4rxi7y.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = []\n    for i in x\n        if !even_digit(i)\n         \
    \   push!(unique_digits, i)\n        end\n    end\n    return sort(unique_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplfxbmn37.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmplfxbmn37.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplfxbmn37.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplfxbmn37.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplfxbmn37.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmplfxbmn37.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplfxbmn37.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplfxbmn37.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplfxbmn37.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmplfxbmn37.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplfxbmn37.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplfxbmn37.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmplfxbmn37.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: even_digit not defi"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    r = Vector{Int64}(undef, 0)\n    for i in x\n        if has_no_even_digit(i)\n\
    \            push!(r, i)\n        end\n    end\n    sort(r)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpixp9fs3v.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_no_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpixp9fs3v.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpixp9fs3v.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpixp9fs3v.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpixp9fs3v.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_no_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpixp9fs3v.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpixp9fs3v.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpixp9fs3v.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpixp9fs3v.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_no_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpixp9fs3v.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpixp9fs3v.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpixp9fs3v.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpixp9fs3v.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # write your code here\n    return\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0q8bch_0.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp0q8bch_0.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0q8bch_0.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0q8bch_0.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp0q8bch_0.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp0q8bch_0.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    uniquevalues = Int64[]\n    for i in x\n        digit = 10\n        count\
    \ = 0\n        while digit <= i\n            if(mod(i, digit) < digit/10 && (mod(i,\
    \ digit) > 0))\n                count += 1\n            end\n            digit\
    \ *= 10\n        end\n        if(count == 0)\n            append!(uniquevalues,\
    \ i)\n        end\n    end\n    return sort(uniquevalues)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptqvxdqjj.jl:34\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqvxdqjj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqvxdqjj.jl:33\ntest set: Test\
    \ Failed at /tmp/tmptqvxdqjj.jl:35\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqvxdqjj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqvxdqjj.jl:33\ntest set: Test\
    \ Failed at /tmp/tmptqvxdqjj.jl:36\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqvxdqjj.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqvxdqjj.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptqvxdqjj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    filter(x) do y\n        # Find all even digits\n        isempty(findall(x\
    \ -> x in [2, 4, 6, 8, 0], digits(y)))\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsxzf9bbk.jl:23\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzf9bbk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxzf9bbk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpsxzf9bbk.jl:26\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 31] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxzf9bbk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxzf9bbk.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsxzf9bbk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    uniquedigits = Array{Int64}(0)\n    for item in x\n        allodd = true\n\
    \        while item > 0\n            if allodd == false\n                break\n\
    \            end\n            digit = item % 10\n            if digit % 2 == 0\n\
    \                allodd = false\n            end\n            item = item \xF7\
    \ 10\n        end\n        if allodd == true\n            push!(uniquedigits,\
    \ item)\n        end\n    end\n    uniquedigits\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdc30npqx.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching (Array{Int64})(::Int64)\\n  Closest candidates are:\\n  \
    \  (Array{T})(!Matched::LinearAlgebra.AbstractQ) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpdc30npqx.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdc30npqx.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdc30npqx.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpdc30npqx.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching (Array{Int64})(::Int64)\\n  Closest candidates are:\\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(filter(i -> all(!iseven.(digits(i))), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return filter(x) do x\n        all(isodd, [parse(Int64, digit) for digit\
    \ in digits(x)])\n    end\nend\nx = [15, 33, 1422, 1]\nunique_digits(x)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    unique_digits = []\n    \n    for i in x\n        if !(contains(string(i),\
    \ \"2\") || \n             contains(string(i), \"4\") || \n             contains(string(i),\
    \ \"6\") || \n             contains(string(i), \"8\") || \n             contains(string(i),\
    \ \"0\"))\n            push!(unique_digits, i)\n        end\n    end\n    sort(unique_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpypq3a2sc.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpypq3a2sc.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpypq3a2sc.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpypq3a2sc.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Int64[]\n    for i in x\n        count = 0\n        for j in string(i)\n\
    \            if string(j) in \"2468\"\n                count += 1\n          \
    \  end\n        end\n        if count == 0\n            push!(y, i)\n        end\n\
    \    end\n    sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa00q79kx.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  use\
    \ occursin(x, y) for string containment\\n  Stacktrace:\\n   [1] error(s::String)\\\
    n     @ Base ./error.jl:33\\n   [2] in(#unused#::String, #unused#::String)\\n\
    \     @ Base ./strings/search.jl:638\\n   [3] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpa00q79kx.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpa00q79kx.jl:32 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpa00q79kx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpa00q79kx.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  use occursin(x, y)\
    \ for string containment\\n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base\
    \ ./error.jl:33\\n   [2] in(#unused#::String, #unused#::String)\\n     @ Base\
    \ ./strings/search.jl:638\\n   [3] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpa00q79kx.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpa00q79kx.jl:33 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpa00q79kx.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpa00q79kx.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  use occursin(x, y) for\
    \ string containment\\n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base ./error.jl:33\\\
    n   [2] in(#unused#::String, #unused#::String)\\n     @ Base ./strings/search.jl:638\\\
    n   [3] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpa00q79kx.jl:17\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    res = []\n    for i in x\n        if isodd(i)\n            for j in\
    \ digits(i)\n                if iseven(j)\n                    break\n       \
    \         end\n            end\n            push!(res, i)\n        end\n    end\n\
    \    sort(res)\nend\nunique_digits([152, 323, 1422, 10])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr8vnind1.jl:34\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8vnind1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8vnind1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpr8vnind1.jl:35\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8vnind1.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8vnind1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpr8vnind1.jl:36\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8vnind1.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8vnind1.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr8vnind1.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    if isempty(x)\n        return []\n    end\n    temp = []\n    for a in x\n\
    \        if isodd(a) && a < 10\n            push!(temp, a)\n        elseif isodd(a)\
    \ && a >= 10\n            b = div(a, 10)\n            if isodd(b)\n          \
    \      push!(temp, a)\n            end\n        end\n    end\n    return sort(temp)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3sxvs9wl.jl:36\n  Expression: candidate([12345,\
    \ 2033, 111, 151]) == [111, 151]\n   Evaluated: [111, 151, 2033] == [111, 151]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sxvs9wl.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sxvs9wl.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3sxvs9wl.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Define an empty vector\n    y = Int64[]\n    # For loop over x\n    for\
    \ i in x\n        # Get the digits\n        digits = digits(i)\n        # Check\
    \ if any digit is even\n        if any(digits .% 2 .== 0)\n            continue\n\
    \        end\n        # Store the number in y\n        push!(y, i)\n    end\n\
    \    # Return the sorted unique y\n    sort(unique(y))\nend\n \nfor i in unique_digits([15,\
    \ 33, 1422, 1])\n    println(i)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: digits not defined\nStacktrace:\n [1]\
    \ unique_digits(x::Vector{Int64})\n   @ Main /tmp/tmpj9tgx85h.jl:18\n [2] top-level\
    \ scope\n   @ /tmp/tmpj9tgx85h.jl:30\nin expression starting at /tmp/tmpj9tgx85h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Initialize empty list\n    y = []\n    # For loop to filter x for odd numbers\
    \ and append them to y\n    for i in x\n        if !isodd(i)\n            push!(y,\
    \ i)\n        end\n    end\n    # Return the sorted list, with the even numbers\
    \ removed\n    return sort(setdiff(x, y))\nend\n    \nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbt_zgn6_.jl:31\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbt_zgn6_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbt_zgn6_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbt_zgn6_.jl:32\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbt_zgn6_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbt_zgn6_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbt_zgn6_.jl:33\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbt_zgn6_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbt_zgn6_.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbt_zgn6_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = Int64[]\n    for num in x\n        has_even = false\n        for digit\
    \ in digits(num)\n            if digit%2 == 0\n                has_even = true\n\
    \                break\n            end\n        end\n        if !has_even\n \
    \           push!(res, num)\n        end\n    end\n    return sort(res)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if ~(has_even_digit(i))\n            push!(y,\
    \ i)\n        end\n    end\n    return sort(y)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmppzz6xbnl.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmppzz6xbnl.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppzz6xbnl.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppzz6xbnl.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmppzz6xbnl.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmppzz6xbnl.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppzz6xbnl.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppzz6xbnl.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmppzz6xbnl.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmppzz6xbnl.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppzz6xbnl.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppzz6xbnl.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmppzz6xbnl.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: has_eve"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    even_digits = [\"0\", \"2\", \"4\", \"6\", \"8\"]\n    output = []\n    for\
    \ i in x\n        flag = false\n        s = string(i)\n        for c in s\n  \
    \          if c in even_digits\n                flag = true\n                break\n\
    \            end\n        end\n        if !flag\n            push!(output, i)\n\
    \        end\n    end\n    return sort(output)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvqz04geo.jl:35\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvqz04geo.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvqz04geo.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvqz04geo.jl:36\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvqz04geo.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvqz04geo.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvqz04geo.jl:37\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvqz04geo.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvqz04geo.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpvqz04geo.jl:38\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvqz04geo.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvqz04geo.jl:34\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvqz04geo.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Your code goes here\n    odd = []\n    for i in x\n        if has_even_digit(i)\
    \ == false\n            push!(odd, i)\n        end\n    end\n    return sort(odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmproyqe6r5.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmproyqe6r5.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmproyqe6r5.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmproyqe6r5.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmproyqe6r5.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmproyqe6r5.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmproyqe6r5.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmproyqe6r5.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmproyqe6r5.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmproyqe6r5.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmproyqe6r5.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmproyqe6r5.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmproyqe6r5.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: has_eve"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # replace the next line with your code\n    y = []\n    for i in x\n    \
    \    if isunique(digits(i))\n            push!(y, i)\n        end\n    end\n \
    \   return sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnec6vt9l.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ isunique not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpnec6vt9l.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnec6vt9l.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnec6vt9l.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpnec6vt9l.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: isunique\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpnec6vt9l.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnec6vt9l.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnec6vt9l.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpnec6vt9l.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: isunique\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpnec6vt9l.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnec6vt9l.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnec6vt9l.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpnec6vt9l.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: isunique not defined\\\
    n  S"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odd_list = Int64[]\n    for i in x\n        if i > 9\n            push!(odd_list,\
    \ i)\n        end\n    end\n    return odd_list\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpuwkj5xq3.jl:26\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwkj5xq3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwkj5xq3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuwkj5xq3.jl:27\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwkj5xq3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwkj5xq3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuwkj5xq3.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwkj5xq3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwkj5xq3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuwkj5xq3.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwkj5xq3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwkj5xq3.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuwkj5xq3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    new_vector = []\n    for num in x\n        temp = num\n        even_digit\
    \ = false\n        while num > 0\n            last_digit = num % 10\n        \
    \    if last_digit % 2 == 0\n                even_digit = true\n             \
    \   break\n            end\n            num = num / 10\n        end\n        if\
    \ even_digit == false\n            push!(new_vector, temp)\n        end\n    end\n\
    \    return sort(new_vector)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjzpjqsdy.jl:37\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjzpjqsdy.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjzpjqsdy.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpjzpjqsdy.jl:38\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjzpjqsdy.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjzpjqsdy.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpjzpjqsdy.jl:39\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjzpjqsdy.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjzpjqsdy.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjzpjqsdy.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odd = []\n    for i = 1:length(x)\n        if !find_even(x[i])\n        \
    \    push!(odd, x[i])\n        end\n    end\n    return sort(odd)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpftavkeq3.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ find_even not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpftavkeq3.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpftavkeq3.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpftavkeq3.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpftavkeq3.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: find_even\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpftavkeq3.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpftavkeq3.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpftavkeq3.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpftavkeq3.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: find_even\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpftavkeq3.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpftavkeq3.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpftavkeq3.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpftavkeq3.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: find_even not defined\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    has_unique_digits = Array{Bool}(undef, length(x))\n    for (i, val) in enumerate(x)\n\
    \        for digit in digits(val)\n            if digit % 2 == 0\n           \
    \     has_unique_digits[i] = false\n                break\n            end\n \
    \           has_unique_digits[i] = true\n        end\n    end\n    x[has_unique_digits]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplr5gmuwz.jl:30\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr5gmuwz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplr5gmuwz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplr5gmuwz.jl:33\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 31] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr5gmuwz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplr5gmuwz.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplr5gmuwz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t\
    @test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323,\
    \ 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111, 151])\
    \ == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa1rspgtj.jl:14\nin expression starting at /tmp/tmpa1rspgtj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # initialize the final list\n    x_sorted = Int64[]\n    for el in x\n  \
    \      # initialize a boolean flag\n        even_flag = false\n        # get the\
    \ number of digits\n        n_digits = floor(log10(el) + 1)\n        # loop over\
    \ the digits\n        for digit in 0:n_digits\n            # check if the digit\
    \ is even\n            if el % 2 == 0\n                # break if the digit is\
    \ even\n                even_flag = true\n                break\n            end\n\
    \        end\n        # append the element to the final list\n        if !even_flag\n\
    \            push!(x_sorted, el)\n        end\n    end\n    return sort(x_sorted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpknefo70a.jl:42\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpknefo70a.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpknefo70a.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpknefo70a.jl:43\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpknefo70a.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpknefo70a.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpknefo70a.jl:44\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpknefo70a.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpknefo70a.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknefo70a.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Loop through the vector, check for even digits in each element, \n    #\
    \ then push the element to a new vector if it does not have any even digits.\n\
    \    y = Vector{Int64}()\n    for i in x\n        if i % 2 != 0\n            push!(y,\
    \ i)\n        end\n    end\n    sort!(y)\n    return y\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpygab_rsc.jl:30\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpygab_rsc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpygab_rsc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpygab_rsc.jl:31\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpygab_rsc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpygab_rsc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpygab_rsc.jl:32\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpygab_rsc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpygab_rsc.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpygab_rsc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    not_even_digits = []\n    for i in x\n        if all(isodd, digits(i))\n\
    \            push!(not_even_digits, i)\n        end\n    end\n    return sort(not_even_digits)\n\
    end\n@testset \"unique_digits\" begin\n    @test unique_digits([15, 33, 1422,\
    \ 1]) == [1, 15, 33]\n    @test unique_digits([152, 323, 1422, 10]) == []\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpiatd16ko.jl:21\nin expression starting at /tmp/tmpiatd16ko.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [i for i in x if contains(r\"^\\d*[1,3,5,7,9]\\d*$\", string(i))][:]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8h8jhstc.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching contains(::Regex, ::String)\\n  Closest candidates are:\\\
    n    contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\\\
    n    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\\\
    n  Stacktrace:\\n    [1] (::var\"#1#2\")(i::Int64)\\n      @ Main ./none:0\\n\
    \    [2] iterate\\n      @ ./iterators.jl:447 [inlined]\\n    [3] iterate\\n \
    \     @ ./generator.jl:44 [inlined]\\n    [4] grow_to!\\n      @ ./array.jl:797\
    \ [inlined]\\n    [5] collect\\n      @ ./array.jl:721 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp8h8jhstc.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp8h8jhstc.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp8h8jhstc.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp8h8jhstc.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError:\
    \ no method matching contains(::Regex, ::String)\\n  Closest candidates are:\\\
    n    contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\\\
    n    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\\\
    n  Stacktrace:\\n    [1] (::var\"#1#2\")(i::Int64)\\n      @ Main ./none:0\\n\
    \    [2] iterate\\n      @ ./iterators.jl:447 [inlined]\\n    [3] iterate\\n \
    \     @ ./generator.jl:44 [inlined]\\n    [4] grow_to!\\n      @ ./array.jl:797\
    \ [inlined]\\n    [5] collect\\n      @ ./array.jl:721 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp8h8jhstc.jl:13\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    n_x = length(x)\n    unique_x = Vector{Int64}(n_x)\n    j = 0\n    for i\
    \ = 1:n_x\n        if is_unique(x[i])\n            j += 1\n            unique_x[j]\
    \ = x[i]\n        end\n    end\n    unique_x = unique_x[1:j]\n    sort!(unique_x)\n\
    \    return unique_x\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6c4a7em5.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching Vector{Int64}(::Int64)\\n  Closest candidates are:\\n   \
    \ Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\\\
    n    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\\\
    n    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp6c4a7em5.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6c4a7em5.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6c4a7em5.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp6c4a7em5.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching Vector{Int64}(::Int64)\\n  Closest candidates are:\\n    Vector{T}()\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\\\
    n    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp6c4a7em5.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6c4a7em5.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6c4a7em5.jl:30\\ntest set:\
    \ Error During "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    #checking to see if any digits have even numbers\n    result = filter(x)\
    \ do y\n        filter(digits(y)) do x\n            (x % 2) == 1\n        end\n\
    \    end\n    sort(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmoztf4ab.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  TypeError:\
    \ non-boolean (Vector{Int64}) used in boolean context\\n  Stacktrace:\\n   [1]\
    \ filter(f::var\"#1#3\", a::Vector{Int64})\\n     @ Base ./array.jl:2484\\n  \
    \ [2] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpmoztf4ab.jl:14\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpmoztf4ab.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpmoztf4ab.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmoztf4ab.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  TypeError: non-boolean\
    \ (Vector{Int64}) used in boolean context\\n  Stacktrace:\\n   [1] filter(f::var\"\
    #1#3\", a::Vector{Int64})\\n     @ Base ./array.jl:2484\\n   [2] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpmoztf4ab.jl:14\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpmoztf4ab.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpmoztf4ab.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmoztf4ab.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  TypeError: non-boolean\
    \ (Vector{Int64}) used in boolean context\\n  Stacktrace:\\n   [1] filter(f::var\"\
    #1#3\", a::Vector{Int64})\\n     @ Base ./array.jl:2484\\n   [2] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpmoztf4ab.jl:14\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpmoztf4ab.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /share"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Iterate over the elements in x\n    u = Int64[]\n    for i in x\n     \
    \   # Obtain the digits of i in s\n        s = string(i)\n        l = length(s)\n\
    \        flag = true\n        for j in 1:l\n            if parse(Int64,s[j])%2\
    \ == 0\n                flag = false\n                break\n            end\n\
    \        end\n        if flag\n            push!(u,i)\n        end\n    end\n\
    \    return sort(u)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odd = []\n    for y in x\n        if contains(string(y), \"0\") || contains(string(y),\
    \ \"2\") || contains(string(y), \"4\") || contains(string(y), \"6\") || contains(string(y),\
    \ \"8\")\n            append!(odd, y)\n        end\n    end\n    return x .- odd\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxwcjha4_.jl:26\\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\\n   Evaluated: [-1407, -1389, 0, -1421] == [1,\
    \ 15, 33]\\nStacktrace:\\n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxwcjha4_.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxwcjha4_.jl:25\\ntest set: Test\
    \ Failed at /tmp/tmpxwcjha4_.jl:27\\n  Expression: candidate([152, 323, 1422,\
    \ 10]) == Vector{Int64}([])\\n   Evaluated: [0, 0, 0, 0] == Int64[]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxwcjha4_.jl:27 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxwcjha4_.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    idx = findall(x -> !any(digits(x) % 2 .== 0), x)\n    sort(x[idx])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp080eeot2.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching rem(::Vector{Int64}, ::Int64)\\n  Closest candidates are:\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n    [1] (::var\"#1#2\")(x::Int64)\\n      @ Main /tmp/tmp080eeot2.jl:13\\\
    n    [2] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:670 [inlined]\\n \
    \   [3] _broadcast_getindex\\n      @ ./broadcast.jl:643 [inlined]\\n    [4] getindex\\\
    n      @ ./broadcast.jl:597 [inlined]\\n    [5] copy\\n      @ ./broadcast.jl:899\
    \ [inlined]\\n    [6] materialize\\n      @ ./broadcast.jl:860 [inlined]\\n  \
    \  [7] findall\\n      @ ./array.jl:2257 [inlined]\\n    [8] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp080eeot2.jl:13\\n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [10] macro expansion\\n      @ /tmp/tmp080eeot2.jl:21 [inlined]\\\
    n   [11] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [12] top-level scope\\n      @ /tmp/tmp080eeot2.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    inds = findall(!ismember(digits(x), [0, 2, 4, 6, 8]))\n    return sort(x[inds])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm6drkprs.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching digits(::Vector{Int64})\\n  Closest candidates are:\\n  \
    \  digits(!Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\\\
    n    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpm6drkprs.jl:13\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm6drkprs.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm6drkprs.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpm6drkprs.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching digits(::Vector{Int64})\\n  Closest candidates are:\\n    digits(!Matched::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\\\
    n    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpm6drkprs.jl:13\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm6drkprs.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm6drkprs.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpm6drkprs.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  MethodError: no method\
    \ matching digits(::Vector{Int64})\\n  Closest candidates are:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x = [x[i] for i = 1:length(x) if (split(string(x[i]), \"\")[1] % 2 != 0)\
    \ && (split(string(x[i]), \"\")[2] % 2 != 0) && (split(string(x[i]), \"\")[3]\
    \ % 2 != 0)]\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(filter(v -> all(i -> i % 2 != 0, digits(v)), x));\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # your code here\n    evens = Vector{Int64}()\n    odds = Vector{Int64}()\n\
    \    for i in x\n        if (i % 2 == 0)\n            push!(evens, i)\n      \
    \  else\n            push!(odds, i)\n        end\n    end\n    sort(odds)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoqnupnzr.jl:31\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoqnupnzr.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoqnupnzr.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpoqnupnzr.jl:32\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoqnupnzr.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoqnupnzr.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpoqnupnzr.jl:33\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoqnupnzr.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoqnupnzr.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoqnupnzr.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    n = length(x)\n    L = Vector{Int64}()\n   \n    for i = 1:n \n        if\
    \ (all((x[i])%2 != 0, [0:9]))\n            push!(L, x[i])\n        end\n    end\n\
    \    \n    return sort(L)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp74o31q_a.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ objects of type Bool are not callable\\n  Maybe you forgot to use an operator\
    \ such as *, ^, %, / etc. ?\\n  Stacktrace:\\n   [1] _all\\n     @ ./reduce.jl:1157\
    \ [inlined]\\n   [2] all\\n     @ ./reduce.jl:1152 [inlined]\\n   [3] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp74o31q_a.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp74o31q_a.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp74o31q_a.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp74o31q_a.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: objects\
    \ of type Bool are not callable\\n  Maybe you forgot to use an operator such as\
    \ *, ^, %, / etc. ?\\n  Stacktrace:\\n   [1] _all\\n     @ ./reduce.jl:1157 [inlined]\\\
    n   [2] all\\n     @ ./reduce.jl:1152 [inlined]\\n   [3] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp74o31q_a.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp74o31q_a.jl:30 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp74o31q_a.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp74o31q_a.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  MethodError: objects of\
    \ type Bool are not callable\\n  Maybe you forgot to use an operator such as *,\
    \ ^, %, / etc. ?\\n  Stacktrace:\\n   [1] _all\\n     @ ./reduce.jl:1157 [inlined]\\\
    n   [2] all\\n     @ ./reduce.jl:1152 [inlined]\\n   [3] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp74o31q_a.jl:17\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # we use a set to ensure uniqueness of values.\n    unique_digits_seen =\
    \ Set()\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprpx7v8dv.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprpx7v8dv.jl:1\n\
    in expression starting at /tmp/tmprpx7v8dv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # check the number is odd?\n    # return the list of number which is odd\n\
    \    return Array{Int64}([i for i in x if mod(i, 2) == 1])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo7wlazy3.jl:22\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7wlazy3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7wlazy3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo7wlazy3.jl:23\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7wlazy3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7wlazy3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo7wlazy3.jl:24\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7wlazy3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7wlazy3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo7wlazy3.jl:25\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7wlazy3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7wlazy3.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo7wlazy3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [y for y in x if !contains(digits(y),2) && !contains(digits(y),4)\
    \ && !contains(digits(y),6) && !contains(digits(y),8) && !contains(digits(y),0)]\n\
    end\nunique_digits([15, 33, 1422, 1])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    output = Int64[]\n    for n in x\n        evens = [c for c in string(n) if\
    \ parse(Int64, c) % 2 == 0]\n        if isempty(evens)\n            push!(output,\
    \ n)\n        end\n    end\n    sort(output)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15,\
    \ 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # (1) initilize the list of numbers without even digits\n    nums_without_even\
    \ = Int64[]\n    # (2) iterate over the list to check each element\n    for num\
    \ in x\n        # (3) check whether the number has even digits or not\n      \
    \  if !even_digits(num)\n            # (4) if the number doesn't have even digits,\
    \ append it \n            # to the list\n            push!(nums_without_even,\
    \ num)\n        end\n    end\n    # (5) if there is no number without even digits,\
    \ return []\n    if isempty(nums_without_even)\n        return []\n    end\n \
    \   # (6) sort the output and return it\n    return sort(nums_without_even)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7gh5p9oy.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ even_digits not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp7gh5p9oy.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7gh5p9oy.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7gh5p9oy.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp7gh5p9oy.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: even_digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp7gh5p9oy.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7gh5p9oy.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7gh5p9oy.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp7gh5p9oy.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: even_digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp7gh5p9oy.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7gh5p9oy.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7gh5p9oy.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmp7gh5p9oy.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: even_digits not "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # create new array to push unique digits\n    if length(x) == 0 \n      \
    \  return []\n    end\n    unique_digits = Int64[]\n    for i = 1:length(x)\n\
    \        for j = 1:length(x[i])\n            # check for even\n            if\
    \ x[i][j] % 2 == 0\n                break\n            end\n            # check\
    \ for the last element in string\n            if j == length(x[i])\n         \
    \       push!(unique_digits,x[i])\n            end\n        end\n    end\n   \
    \ # sort numbers in increasing order\n    sort!(unique_digits)\n    return unique_digits\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjixwk512.jl:40\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjixwk512.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjixwk512.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpjixwk512.jl:41\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjixwk512.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjixwk512.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpjixwk512.jl:42\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjixwk512.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjixwk512.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjixwk512.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    filter(p -> isodd(p), x)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp36g68w1l.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp36g68w1l.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp36g68w1l.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp36g68w1l.jl:21\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp36g68w1l.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp36g68w1l.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp36g68w1l.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp36g68w1l.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp36g68w1l.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp36g68w1l.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp36g68w1l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp36g68w1l.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp36g68w1l.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    n = length(x)\n    unique = []\n    for i = 1:n\n        if has_even_digit(x[i])\
    \ == false\n            push!(unique, x[i])\n        end\n    end\n    sort(unique)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb2fx1pbt.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpb2fx1pbt.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb2fx1pbt.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb2fx1pbt.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpb2fx1pbt.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpb2fx1pbt.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb2fx1pbt.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb2fx1pbt.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpb2fx1pbt.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpb2fx1pbt.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb2fx1pbt.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb2fx1pbt.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpb2fx1pbt.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: has_eve"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    inds = [i for i in 1:length(x) if all(x[i] != y for y in 0:9:2)]\n    return\
    \ sort(x[inds])\nend\nunique_digits([15, 33, 1422, 1])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx5wc7214.jl:22\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5wc7214.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5wc7214.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpx5wc7214.jl:23\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5wc7214.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5wc7214.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpx5wc7214.jl:24\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5wc7214.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5wc7214.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpx5wc7214.jl:25\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx5wc7214.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx5wc7214.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5wc7214.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = Int64[]\n    for i in x\n        if is_unique(i)\n            push!(res,\
    \ i)\n        end\n    end\n    return sort(res)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8q9q_74d.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ is_unique not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp8q9q_74d.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8q9q_74d.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8q9q_74d.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8q9q_74d.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: is_unique\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp8q9q_74d.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8q9q_74d.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8q9q_74d.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8q9q_74d.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: is_unique\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp8q9q_74d.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8q9q_74d.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8q9q_74d.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8q9q_74d.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: is_unique not defined\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    y = []\n    for i in x\n        if(!has_even_digit(i))\n          \
    \  push!(y, i)\n        end\n    end\n    return sort(y)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3r7f1ko4.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ has_even_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp3r7f1ko4.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3r7f1ko4.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3r7f1ko4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3r7f1ko4.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp3r7f1ko4.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3r7f1ko4.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3r7f1ko4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3r7f1ko4.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: has_even_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp3r7f1ko4.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3r7f1ko4.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3r7f1ko4.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp3r7f1ko4.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: has_eve"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    non_even_digit_set = Set([])\n    for i in x\n        for j in collect(string(i))\n\
    \            if parse(Int64, j) % 2 != 0\n                push!(non_even_digit_set,\
    \ i)\n                break\n            end\n        end\n    end\n    return\
    \ sort(collect(non_even_digit_set))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr1n1t574.jl:29\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1n1t574.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1n1t574.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr1n1t574.jl:30\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1n1t574.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1n1t574.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr1n1t574.jl:31\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1n1t574.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1n1t574.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr1n1t574.jl:32\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1n1t574.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1n1t574.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr1n1t574.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(filter(y -> any(y[2:end] .< [0 2 4 6 8]),\n                 \
    \      zip(x, digits(x))))[:,1]\nend\nunique_digits([15, 33, 1422, 1])\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    output = []\n    for i in x\n        if all( i % 2 != 0 for i in digits(i)\
    \ )\n            push!(output, i)\n        end\n    end\n    sort(output)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    A = []\n    for i in x\n        if(i%2 != 0)\n            push!(A, i)\n \
    \       end\n    end\n    sort(A)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpor9pc9lx.jl:27\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpor9pc9lx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpor9pc9lx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpor9pc9lx.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpor9pc9lx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpor9pc9lx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpor9pc9lx.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpor9pc9lx.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpor9pc9lx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpor9pc9lx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if i < 10\n            push!(y, i)\n    \
    \    elseif typeof(i) == Int64 && i != i//10*10\n            push!(y, i)\n   \
    \     else\n            for j in digits(i)\n                if j%2 == 0\n    \
    \                goto nexti\n                end\n            end\n          \
    \  push!(y, i)\n        end\n        nexti:\n    end\n    return sort(y)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"nexti\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdx3sz1we.jl:22\nin expression starting at /tmp/tmpdx3sz1we.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    empty_list = Array(Int64, 0)\n    \n    for i = 1:length(x)\n     \
    \   \n        # Check the numbers in the list if it has even digits\n        if\
    \ has_even_digits(x[i]) == false\n            \n            # If it hasn't even\
    \ digits, add it to the empty_list\n            push!(empty_list, x[i])\n    \
    \    end\n    end\n    \n    # Return the sorted empty_list.\n    sort(empty_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8s31nvdy.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching Array(::Type{Int64}, ::Int64)\\n  Closest candidates are:\\\
    n    Array(!Matched::LinearAlgebra.UniformScaling, ::Integer, !Matched::Integer)\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:496\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmp8s31nvdy.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8s31nvdy.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8s31nvdy.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp8s31nvdy.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching Array(::Type{Int64}, ::Int64)\\n  Closest candidates are:\\n    Array(!Matched::LinearAlgebra.UniformScaling,\
    \ ::Integer, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:496\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmp8s31nvdy.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8s31nvdy.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8s31nvdy.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp8s31nvdy.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  MethodError: no method\
    \ matching Array(::Type{Int64}, ::Int64)\\n  Closest candidates are:\\n    Array(!Matched::LinearAlgebra.UniformScaling,\
    \ ::Integer, !Matched::Integer) at /shared/centos7/julia/1"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # get the digits of all numbers in the vector\n    digits = [int(digit) for\
    \ number in x for digit in string(number)]\n    # use a set to determine if a\
    \ number only contains unique digits\n    unique_digits = Set(digits)\n    # create\
    \ a vector with all unique digits\n    unique_digits_vec = []\n    for digit in\
    \ unique_digits\n        push!(unique_digits_vec, digit)\n    end\n    # initialize\
    \ an empty vector for the output\n    uniq_numbers = []\n    # loop over every\
    \ number in x\n    for number in x\n        # use a counter to determine if the\
    \ current number is in uniq_numbers\n        counter = 0\n        # loop over\
    \ every digit in the current number\n        for digit in string(number)\n   \
    \         # if the digit is not in unique_digits_vec\n            if !(int(digit)\
    \ in unique_digits_vec)\n                # increment the counter\n           \
    \     counter += 1\n            end\n        end\n        # if the counter is\
    \ equal to zero, then the current number only contains unique digits\n       \
    \ if counter == 0\n            # add it to uniq_numbers\n            push!(uniq_numbers,\
    \ number)\n        end\n    end\n    # return the sorted list of uniq_numbers\n\
    \    sort(uniq_numbers)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7rbjt5tc.jl:50\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n    [1] (::var\"#1#4\"{Int64})(digit::Char)\\\
    n      @ Main ./none:0\\n    [2] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [3] iterate\\n      @ ./iterators.jl:1120 [inlined]\\n    [4] iterate\\n\
    \      @ ./iterators.jl:1114 [inlined]\\n    [5] grow_to!(dest::Vector{Any}, itr::Base.Iterators.Flatten{Base.Generator{Vector{Int64},\
    \ var\"#2#3\"}})\\n      @ Base ./array.jl:797\\n    [6] _collect\\n      @ ./array.jl:701\
    \ [inlined]\\n    [7] collect\\n      @ ./array.jl:649 [inlined]\\n    [8] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp7rbjt5tc.jl:14\\n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [10] macro expansion\\n      @ /tmp/tmp7rbjt5tc.jl:50 [inlined]\\\
    n   [11] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [12] top-level scope\\n      @ /tmp/tmp7rbjt5tc.jl:49\\ntest\
    \ set: Error During Test at /tmp/tmp7rbjt5tc.jl:51\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n    [1] (::var\"#1#4\"{Int64})(digit::Char)\\\
    n      @ Main ./none:0\\n    [2] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [3] iterate\\n      @ ./iterators.jl:1120 [inlined]\\n    [4] iterate\\n\
    \      @ ./iterators.jl:1114 [inlined]\\n    [5] grow_to!(dest::Vector{Any}, itr::Base.Iterators.Flatten{Base.Generator{Vector{Int64},\
    \ var\"#2#3\"}})\\n      @ Base ./array.jl:797\\n    [6] _collect\\n      @ ./array.jl:701\
    \ [inlined]\\n    [7] collect\\n      @ ./array.jl:649 [inlined]\\n    [8] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp7rbjt5tc.jl:14\\n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [10] macro expansion\\n      @ /tmp/tmp7rbjt5tc.jl:51 [inlined]\\\
    n   [11] macro expans"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = Int64[]\n    for i in x\n        if !any(mod.(i,10) .== 0) \n     \
    \       if !any(mod.(i,10) .== 2) \n                if !any(mod.(i,10) .== 4)\
    \ \n                    if !any(mod.(i,10) .== 6) \n                        if\
    \ !any(mod.(i,10) .== 8) \n                            push!(res, i)\n       \
    \                 end\n                    end\n                end\n        \
    \    end\n        end\n    end\n    return sort(res)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8_3davnl.jl:35\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_3davnl.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_3davnl.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp8_3davnl.jl:36\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_3davnl.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_3davnl.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp8_3davnl.jl:37\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_3davnl.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_3davnl.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_3davnl.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return x[find(map(digits, x) .== [1,3,5,7,9])]\nend\nx = unique_digits([15,\
    \ 33, 1422, 1])\nprintln(x)\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: DimensionMismatch(\"arrays could not be broadcast to\
    \ a common size; got a dimension with lengths 4 and 5\")\nStacktrace:\n [1] _bcs1\n\
    \   @ ./broadcast.jl:516 [inlined]\n [2] _bcs\n   @ ./broadcast.jl:510 [inlined]\n\
    \ [3] broadcast_shape\n   @ ./broadcast.jl:504 [inlined]\n [4] combine_axes\n\
    \   @ ./broadcast.jl:499 [inlined]\n [5] instantiate\n   @ ./broadcast.jl:281\
    \ [inlined]\n [6] materialize\n   @ ./broadcast.jl:860 [inlined]\n [7] unique_digits(x::Vector{Int64})\n\
    \   @ Main /tmp/tmp0hdwft46.jl:13\n [8] top-level scope\n   @ /tmp/tmp0hdwft46.jl:15\n\
    in expression starting at /tmp/tmp0hdwft46.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Vector{Int64}()\n    for i in x\n        if !contains(digits(i), 2) &&\
    \ !contains(digits(i), 4) && \n            !contains(digits(i), 6) && !contains(digits(i),\
    \ 8) && \n            !contains(digits(i), 0)\n            push!(y, i)\n     \
    \   end\n    end\n    sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjarjm4t0.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching contains(::Vector{Int64}, ::Int64)\\n  Closest candidates\
    \ are:\\n    contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\\\
    n    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpjarjm4t0.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjarjm4t0.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjarjm4t0.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpjarjm4t0.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching contains(::Vector{Int64}, ::Int64)\\n  Closest candidates are:\\n \
    \   contains(!Matched::AbstractString, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:100\\\
    n    contains(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:161\\\
    n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpjarjm4t0.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjarjm4t0.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjarjm4t0.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpjarjm4t0.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  MethodError: no method\
    \ matching contains(::Vector{Int64}, ::Int64)\\n  Closest candidates are:\\n \
    \   contains(!Matched::AbstractStri"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    res = []\n    for e in x\n        if all(b == 1 for b in bits(e)[2:2:end])\n\
    \            push!(res, e)\n        end\n    end\n    return sort(res)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5c3bvunm.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ bits not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp5c3bvunm.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5c3bvunm.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5c3bvunm.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5c3bvunm.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: bits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp5c3bvunm.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5c3bvunm.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5c3bvunm.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5c3bvunm.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: bits not\
    \ defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp5c3bvunm.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5c3bvunm.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5c3bvunm.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5c3bvunm.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: bits not defined\\\
    n  Stacktrace:\\n   ["
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(filter(x -> !any(digits(x) .% 2 .== 0), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_list = []\n    for i in x\n        unique = true\n        for j in\
    \ num2digits(i)\n            if j % 2 == 0\n                unique = false\n \
    \           end\n        end\n        if unique\n            push!(unique_list,\
    \ i)\n        end\n    end\n    return sort(unique_list)\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoax9tetk.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ num2digits not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpoax9tetk.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoax9tetk.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoax9tetk.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpoax9tetk.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: num2digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpoax9tetk.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoax9tetk.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoax9tetk.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpoax9tetk.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: num2digits\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpoax9tetk.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoax9tetk.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoax9tetk.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpoax9tetk.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: num2digits not defi"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [n for n in x if length(filter(isdigit,string(n))) == length(filter(x\
    \ -> x % 2 != 0,digits(n)))]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp13dnmti7.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp13dnmti7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp13dnmti7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp13dnmti7.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 31] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp13dnmti7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp13dnmti7.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp13dnmti7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    function unique_digits_impl(x::Int64, r::Vector{Int64})::Vector{Int64}\n\
    \        d = div(x, 10)\n        if d > 0 \n            if rem(x, 2) == 0 \n \
    \               r\n            else \n                unique_digits_impl(d, push!(r,\
    \ x))\n            end\n        else\n            if rem(x, 2) == 0 \n       \
    \         r\n            else \n                push!(r, x)\n            end\n\
    \        end\n    end\n    r = []\n    for v in x \n        r = unique_digits_impl(v,\
    \ r)\n    end\n    sort(r)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsis6qcp8.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching (::var\"#unique_digits_impl#1\")(::Int64, ::Vector{Any})\\\
    n  Closest candidates are:\\n    (::var\"#unique_digits_impl#1\")(::Int64, !Matched::Vector{Int64})\
    \ at /tmp/tmpsis6qcp8.jl:13\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpsis6qcp8.jl:31\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsis6qcp8.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsis6qcp8.jl:39\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Your code here\n    output = []\n    for i in x\n        x = i\n      \
    \  has_even = false\n        while x > 0\n            if mod(x, 2) == 0\n    \
    \            has_even = true\n                break\n            end\n       \
    \     x = div(x, 10)\n        end\n        if has_even == false\n            push!(output,\
    \ i)\n        end\n    end\n    return sort(output)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(x[.!(occursin.(r\"\\d*[02468]\\d*\",string.(x)))])\nend\n@testset\
    \ \"unique_digits\" begin\n    @test unique_digits([15, 33, 1422, 1]) == [1, 15,\
    \ 33]\n    @test unique_digits([152, 323, 1422, 10]) == []\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmp3ifuyb9h.jl:15\nin expression starting at /tmp/tmp3ifuyb9h.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return x[all([!isdigit(c,10) for c in digits(i)] for i in x)]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqsye2mfs.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching isdigit(::Int64, ::Int64)\\n  Stacktrace:\\n    [1] (::var\"\
    #2#4\")(c::Int64)\\n      @ Main ./none:0\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] collect\\n      @ ./array.jl:724 [inlined]\\n    [4] #1\\\
    n      @ ./none:0 [inlined]\\n    [5] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [6] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#3\"\
    }, #unused#::Colon)\\n      @ Base ./reduce.jl:1156\\n    [7] all\\n      @ ./reduce.jl:1152\
    \ [inlined]\\n    [8] all\\n      @ ./reduce.jl:1070 [inlined]\\n    [9] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmpqsye2mfs.jl:13\\n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpqsye2mfs.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpqsye2mfs.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpqsye2mfs.jl:21\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError:\
    \ no method matching isdigit(::Int64, ::Int64)\\n  Stacktrace:\\n    [1] (::var\"\
    #2#4\")(c::Int64)\\n      @ Main ./none:0\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] collect\\n      @ ./array.jl:724 [inlined]\\n    [4] #1\\\
    n      @ ./none:0 [inlined]\\n    [5] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [6] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#3\"\
    }, #unused#::Colon)\\n      @ Base ./reduce.jl:1156\\n    [7] all\\n      @ ./reduce.jl:1152\
    \ [inlined]\\n    [8] all\\n      @ ./reduce.jl:1070 [inlined]\\n    [9] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmpqsye2mfs.jl:13\\n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] mac"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(unique(filter(r -> !any(string(r) .== string.([0, 2, 4, 6, 8])),\
    \ x)))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0msgliqq.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0msgliqq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0msgliqq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0msgliqq.jl:21\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0msgliqq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0msgliqq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0msgliqq.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0msgliqq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0msgliqq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp0msgliqq.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0msgliqq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0msgliqq.jl:19\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0msgliqq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    n=length(x)\n    arr=zeros(Int64, n)\n    k=0\n    for i in 1:n\n       \
    \ if(unique_digit(x[i]))\n            k+=1\n            arr[k]=x[i]\n        end\n\
    \    end\n    arr=arr[1:k]\n    sort!(arr)\n    return arr\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6opt5yfc.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ unique_digit not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp6opt5yfc.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6opt5yfc.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6opt5yfc.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp6opt5yfc.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: unique_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp6opt5yfc.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6opt5yfc.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6opt5yfc.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp6opt5yfc.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: unique_digit\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp6opt5yfc.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6opt5yfc.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6opt5yfc.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp6opt5yfc.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: unique_digit "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # define empty array\n    new_arr = []\n    # iterate through the array\n\
    \    for i in x\n        # check if all digits in the number is odd\n        if\
    \ isequal(all(ismember.(split(string(i), \"\"), [\"1\", \"3\", \"5\", \"7\", \"\
    9\"])), true)\n            # append the number if all digits are odd\n       \
    \     push!(new_arr, i)\n        end\n    end\n    # return the sorted array\n\
    \    sort(new_arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprfz0dvo_.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ ismember not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmprfz0dvo_.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprfz0dvo_.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprfz0dvo_.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmprfz0dvo_.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: ismember\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmprfz0dvo_.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprfz0dvo_.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprfz0dvo_.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmprfz0dvo_.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: ismember\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmprfz0dvo_.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprfz0dvo_.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprfz0dvo_.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmprfz0dvo_.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: ismember not defined\\\
    n  S"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    c = Vector{Int64}(undef, 0)\n    for i in x\n        flag = 0\n        if\
    \ i < 0 \n            continue\n        end\n        while i > 0\n           \
    \ r = i % 10\n            if r % 2 == 0\n                flag = 1\n          \
    \      break\n            end\n            i = i \xF7 10\n        end\n      \
    \  if flag == 0\n            push!(c, i)\n        end\n    end\n    return sort(c)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj8uylif_.jl:38\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [0, 0, 0] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj8uylif_.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj8uylif_.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpj8uylif_.jl:40\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [0, 0] == [111, 151]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj8uylif_.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj8uylif_.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpj8uylif_.jl:41\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [0, 0] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj8uylif_.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj8uylif_.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj8uylif_.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    filter(i -> all(digits(i) .!= 0 : 2 : 9), x)\nend;\n\"\"\"Given the list\
    \ of integers x, return a new list where the element\n    at index n is n-th power\
    \ of the element at index n in x.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjdac1_ts.jl:15\nin expression starting at\
    \ /tmp/tmpjdac1_ts.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = filter(x) do x\n        all(d -> d % 2 != 0, digits(x))\n\
    \    end\n    sort(unique_digits)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_x = Set()\n    for i in x\n        if all(z % 2 != 0 for z in digits(i))\n\
    \            push!(unique_x, i)\n        end\n    end\n    return sort(unique_x)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # YOUR CODE HERE\n    v = []\n    for i in x\n        flag = 0\n        while\
    \ i > 0\n            if (i % 10) % 2 == 0\n                flag = 1\n        \
    \        break\n            end\n            i = div(i, 10)\n        end\n   \
    \     if flag == 0\n            push!(v, i)\n        end\n    end\n    return\
    \ sort(v)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t\
    @test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323,\
    \ 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111, 151])\
    \ == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ew5d9d9.jl:35\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [0, 0, 0] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ew5d9d9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ew5d9d9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4ew5d9d9.jl:37\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [0, 0] == [111, 151]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ew5d9d9.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ew5d9d9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4ew5d9d9.jl:38\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [0, 0] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ew5d9d9.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ew5d9d9.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ew5d9d9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return filter(x -> is_unique(x), x)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgo6voczj.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ is_unique not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(x::Int64)\\n\
    \     @ Main /tmp/tmpgo6voczj.jl:13\\n   [2] filter(f::var\"#1#2\", a::Vector{Int64})\\\
    n     @ Base ./array.jl:2484\\n   [3] unique_digits(x::Vector{Int64})\\n     @\
    \ Main /tmp/tmpgo6voczj.jl:13\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpgo6voczj.jl:20 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpgo6voczj.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpgo6voczj.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: is_unique\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(x::Int64)\\n     @ Main\
    \ /tmp/tmpgo6voczj.jl:13\\n   [2] filter(f::var\"#1#2\", a::Vector{Int64})\\n\
    \     @ Base ./array.jl:2484\\n   [3] unique_digits(x::Vector{Int64})\\n     @\
    \ Main /tmp/tmpgo6voczj.jl:13\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpgo6voczj.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpgo6voczj.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpgo6voczj.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: is_unique\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(x::Int64)\\n     @ Main\
    \ /tmp/tmpgo6voczj.jl:13\\n   [2] filter(f::var\"#1#2\", a::Vector{Int64})\\n\
    \     @ Base ./array.jl:2484\\n   [3] unique_digits(x::Vector{Int64})\\n     @\
    \ Main /tmp/tmpgo6voczj.jl:13\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return filter(x) do a\n        isempty(matches(r\"\\d*[02468]\\d*\", string(a)))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t\
    @test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323,\
    \ 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111, 151])\
    \ == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx3_bhyvp.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ matches not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(a::Int64)\\n  \
    \   @ Main /tmp/tmpx3_bhyvp.jl:14\\n   [2] filter(f::var\"#1#2\", a::Vector{Int64})\\\
    n     @ Base ./array.jl:2484\\n   [3] unique_digits(x::Vector{Int64})\\n     @\
    \ Main /tmp/tmpx3_bhyvp.jl:13\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpx3_bhyvp.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpx3_bhyvp.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpx3_bhyvp.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: matches\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(a::Int64)\\n     @ Main\
    \ /tmp/tmpx3_bhyvp.jl:14\\n   [2] filter(f::var\"#1#2\", a::Vector{Int64})\\n\
    \     @ Base ./array.jl:2484\\n   [3] unique_digits(x::Vector{Int64})\\n     @\
    \ Main /tmp/tmpx3_bhyvp.jl:13\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpx3_bhyvp.jl:23 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpx3_bhyvp.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpx3_bhyvp.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: matches\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\")(a::Int64)\\n     @ Main\
    \ /tmp/tmpx3_bhyvp.jl:14\\n   [2] filter(f::var\"#1#2\", a::Vector{Int64})\\n\
    \     @ Base ./array.jl:2484\\n   [3] unique_digits(x::Vector{Int64})\\n     @\
    \ Main /tmp/tmpx3_bhyvp.jl:13\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test."
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if length(unique(digits(i))) == length(digits(i))\n\
    \            push!(y, i)\n        end\n    end\n    sort(y)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnbga6b5w.jl:26\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbga6b5w.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbga6b5w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnbga6b5w.jl:27\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152] == Int64[]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbga6b5w.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbga6b5w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnbga6b5w.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbga6b5w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbga6b5w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnbga6b5w.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnbga6b5w.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnbga6b5w.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnbga6b5w.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \"\"\" \n    This solution:\n    1. Creates an array of all the unique digits\n\
    \    2. Filters all the even digits from the unique digits array\n    3. Returns\
    \ the even digits array\n    \"\"\"\n    all_digits = collect(Set(digit for x_\
    \ in x for digit in digits(x_)))\n    even_digits = filter(x -> x % 2 == 0, all_digits)\n\
    \    return even_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplibkk2e5.jl:28\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [4, 2] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplibkk2e5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplibkk2e5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplibkk2e5.jl:29\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [4, 0, 2] == Int64[]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplibkk2e5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplibkk2e5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplibkk2e5.jl:30\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [4, 0, 2] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplibkk2e5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplibkk2e5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplibkk2e5.jl:31\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [0] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplibkk2e5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplibkk2e5.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplibkk2e5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    count=0\n    for i=1:length(x)\n        if x[i]%2==0\n            count+=1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoij63z21.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type Int64 to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpoij63z21.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoij63z21.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoij63z21.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [i for i in x if all(digits(i) .% 2 .!= 0)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3r246b5a.jl:20\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3r246b5a.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3r246b5a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp3r246b5a.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 31] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3r246b5a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3r246b5a.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3r246b5a.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    even = [2, 4, 6, 8, 0]\n    i = 1\n    while i <= length(x)\n        for\
    \ j in digits(x[i])\n            if j in even\n                deleteat!(x, i)\n\
    \                break\n            end\n        end\n        i += 1\n    end\n\
    \    sort(x)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi3blv90u.jl:32\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [10, 323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3blv90u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3blv90u.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpi3blv90u.jl:33\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3blv90u.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3blv90u.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3blv90u.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    # Create an empty list\n    x_unique_digits = []\n    \n    # Iterate\
    \ over the elements of x\n    for i in x\n        # Check if i has only odd digits\n\
    \        if all(isdigit(c) && !iseven(parse(Int, c)) for c in string(i))\n   \
    \         # Add i to the list \n            push!(x_unique_digits, i)\n      \
    \  end\n    end\n    \n    # Return the sorted list of elements with only odd\
    \ digits\n    sort(x_unique_digits)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    ret = Int64[]\n    for i = 1:length(x)\n        if all(x[i] % d != 0 for\
    \ d in 2:9)\n            push!(ret, x[i])\n        end\n    end\n    sort(ret)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp466cwvzi.jl:26\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp466cwvzi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp466cwvzi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp466cwvzi.jl:27\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp466cwvzi.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp466cwvzi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp466cwvzi.jl:28\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [151, 2033] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp466cwvzi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp466cwvzi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp466cwvzi.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp466cwvzi.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp466cwvzi.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp466cwvzi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    filtered = filter(x) do num\n        return(all(i%2==1 for i in digits(num)))\n\
    \    end\n    return sort(filtered)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # the base case: if x is empty\n    if isempty(x)\n        return Int64[]\n\
    \    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpru2wdwhv.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpru2wdwhv.jl:1\n\
    in expression starting at /tmp/tmpru2wdwhv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Here we use the function odd_digit to go through the list of integer\n\
    \    # and perform a check and store the result in the array y\n    # Finally\
    \ we use the unique command on the array y to remove the\n    # duplicate\n  \
    \  y = map(x) do xi\n        odd_digit(xi)\n    end\n    unique(y)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5enqhozx.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ odd_digit not defined\\n  Stacktrace:\\n    [1] (::var\"#1#2\")(xi::Int64)\\\
    n      @ Main /tmp/tmp5enqhozx.jl:18\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp5enqhozx.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp5enqhozx.jl:27 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp5enqhozx.jl:26\\ntest\
    \ set: Error During Test at /tmp/tmp5enqhozx.jl:28\\n  Test threw exception\\\
    n  Expression: candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError:\
    \ odd_digit not defined\\n  Stacktrace:\\n    [1] (::var\"#1#2\")(xi::Int64)\\\
    n      @ Main /tmp/tmp5enqhozx.jl:18\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] unique_digits(x::Vector{Int64})\\\
    n      @ Main /tmp/tmp5enqhozx.jl:17\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp5enqhozx.jl:28 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return filter(x) do xi\n        if floor(log10(xi)) >= 0\n            @inbounds\
    \ if !((xi % 10) % 2 == 0)\n                xi = floor(xi / 10)\n            else\n\
    \                return false\n            end\n        else\n            return\
    \ true\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdv753bvw.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  TypeError:\
    \ non-boolean (Float64) used in boolean context\\n  Stacktrace:\\n   [1] filter(f::var\"\
    #1#2\", a::Vector{Int64})\\n     @ Base ./array.jl:2484\\n   [2] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpdv753bvw.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdv753bvw.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpdv753bvw.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpdv753bvw.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  TypeError: non-boolean\
    \ (Float64) used in boolean context\\n  Stacktrace:\\n   [1] filter(f::var\"#1#2\"\
    , a::Vector{Int64})\\n     @ Base ./array.jl:2484\\n   [2] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpdv753bvw.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdv753bvw.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpdv753bvw.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpdv753bvw.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  TypeError: non-boolean\
    \ (Float64) used in boolean context\\n  Stacktrace:\\n   [1] filter(f::var\"#1#2\"\
    , a::Vector{Int64})\\n     @ Base ./array.jl:2484\\n   [2] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpdv753bvw.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpdv753bvw.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1."
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    #TODO: implement the function\n    new = []\n    for i = 1:length(x)\n  \
    \      num = x[i]\n        while num != 0\n            remainder = mod(num, 10)\n\
    \            if remainder % 2 == 0\n                break\n            end\n \
    \           num = div(num, 10)\n        end\n        if num == 0\n           \
    \ push!(new, x[i])\n        end\n    end\n    sort(new)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if all(digits(i) .!= 2)\n            push!(y,\
    \ i)\n        end\n    end\n    sort(y)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptqut0taz.jl:27\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqut0taz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqut0taz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptqut0taz.jl:29\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqut0taz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqut0taz.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptqut0taz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # initial list of element without even digit\n    unique_list = Int64[]\n\
    \    for i in x\n        #to check if element is odd use the reminder %\n    \
    \    if i % 2 != 0\n            push!(unique_list, i)\n        end\n    end\n\
    \    return sort(unique_list)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5vij2paf.jl:29\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vij2paf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vij2paf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp5vij2paf.jl:30\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vij2paf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vij2paf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp5vij2paf.jl:31\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vij2paf.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vij2paf.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5vij2paf.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    #funkcja musi zwraca\u0107 Vector{Int64}\n    y = Vector{Int64}() #tworzymy\
    \ pusty wektor z za\u0142o\u017Cenia \u017Ce nie ma liczb bez parzystych cyfr\n\
    \    for i in x\n        if i%2 == 0 #je\u015Bli dzieli si\u0119 przez 2 to nie\
    \ ma parzystych cyfr\n            continue #zignoruj to i \n        else #je\u015B\
    li nie dzieli si\u0119 przez 2 to sprawdzamy czy istnieje cyfra parzysta\n   \
    \         for j in 1:3 #dla ka\u017Cdej cyfry\n                if rem(i,10)%2\
    \ == 0 #sprawdzamy czy jest parzysta\n                    break #je\u015Bli jest\
    \ przerwij p\u0119tle i nie dodawaj do y\n                else\n             \
    \       i = div(i,10) #je\u015Bli nie parzysta to przejd\u017A do nast\u0119pnej\
    \ cyfry\n                    continue\n                end\n            end\n\
    \            push!(y,i) #po sprawdzeniu wszystkich cyfr dodaj do wektora y\n \
    \       end\n    end\n    return sort(y) #zwr\xF3\u0107 posortowany wektor\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7h84gxws.jl:37\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [0, 0, 0] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7h84gxws.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7h84gxws.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp7h84gxws.jl:38\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [32] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7h84gxws.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7h84gxws.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp7h84gxws.jl:39\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [0, 0, 20, 1234] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7h84gxws.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7h84gxws.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp7h84gxws.jl:40\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [0, 0, 10] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7h84gxws.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7h84gxws.jl:36\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7h84gxws.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # TODO: write your code here\n    # Hint: \n    #     - iterate over every\
    \ element in x\n    #     - convert to string using the string() function and\
    \ iterate over every character\n    #     - determine if there is an even character\n\
    \    #     - return the elements without an even character\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmponfjc6yd.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmponfjc6yd.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmponfjc6yd.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmponfjc6yd.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \"\"\"\n    Retorna a lista dos inteiros do vetor sem os n\xFAmeros pares\n\
    \    \"\"\"\n    x1 = []\n    x2 = []\n    for i in x\n        if !contem_par(i)\n\
    \            push!(x1, i)\n        end\n    end\n    x1 = sort(x1)\n    for i\
    \ in x1\n        push!(x2, i)\n    end\n    return x2\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_za4nrw9.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ contem_par not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmp_za4nrw9.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_za4nrw9.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_za4nrw9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp_za4nrw9.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: contem_par\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp_za4nrw9.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_za4nrw9.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_za4nrw9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp_za4nrw9.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: contem_par\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmp_za4nrw9.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_za4nrw9.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_za4nrw9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp_za4nrw9.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: contem_par not defi"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    #@assert all(x .> 0)\n    #@assert all(x .< 1e9)\n    \n    # Your\
    \ code here\n    uniquelist = []\n    for element in x\n        digit = false\n\
    \        for i in 1:4\n            if element % 10 == 0 || element % 10 == 2 ||\
    \ element % 10 == 4 || element % 10 == 6 || element % 10 == 8\n              \
    \  digit = true\n                break\n            end\n            element =\
    \ element \xF7 10\n        end\n        if digit == false\n            append!(uniquelist,\
    \ element)\n        end\n    end\n    sort(uniquelist)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaod5_zgr.jl:39\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: Int64[] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaod5_zgr.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaod5_zgr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpaod5_zgr.jl:41\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaod5_zgr.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaod5_zgr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpaod5_zgr.jl:42\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaod5_zgr.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaod5_zgr.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaod5_zgr.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = Vector{Int64}()\n    for num in x\n        if !in(0, convert(Vector{Int64},\
    \ collect(digits(num)))) && !in(2, convert(Vector{Int64}, collect(digits(num))))\
    \ && !in(4, convert(Vector{Int64}, collect(digits(num)))) && !in(6, convert(Vector{Int64},\
    \ collect(digits(num)))) && !in(8, convert(Vector{Int64}, collect(digits(num))))\n\
    \            push!(unique_digits, num)\n        end\n    end\n    sort(unique_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return sort(x[x .% 2 .!= 0])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqh6l816x.jl:21\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh6l816x.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh6l816x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqh6l816x.jl:22\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh6l816x.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh6l816x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqh6l816x.jl:23\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh6l816x.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh6l816x.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqh6l816x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Vector{Int64}()\n    for item in x\n        if all(e in \"13579\" for\
    \ e in string(item))\n            push!(y, item)\n        end\n    end\n    sort(y)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # Initialize the result list with an empty list\n    res = []\n    for y\
    \ in x\n        # If y has an even digit, break\n        for z in convert(String,\
    \ y)\n            if z in \"02468\"\n                break\n            end\n\
    \        end\n        # If y does not have an even digit, add y to the result\
    \ list\n        push!(res, y)\n    end\n    return sort(res)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    i = 1\n    count = 0\n    while i <= length(x)\n        if (x[i] % 2 == 0)\n\
    \            deleteat!(x, i)\n            count += 1\n        else\n         \
    \   i += 1\n        end\n    end\n    for i in 1:count\n        deleteat!(x, 1)\n\
    \    end\n    return sort(x)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjd868i7h.jl:33\\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\\n   Evaluated: [1, 33] == [1, 15, 33]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpjd868i7h.jl:33 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpjd868i7h.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x1 = []\n    for i in x\n        c1 = 0\n        for j in string(i)\n   \
    \         if j in [\"0\", \"2\", \"4\", \"6\", \"8\"]\n                c1 += 1\n\
    \            end\n        end\n        if c1 == 0\n            push!(x1, i)\n\
    \        end\n    end\n    sort(x1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_xhy14v.jl:32\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 1422] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_xhy14v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_xhy14v.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph_xhy14v.jl:33\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_xhy14v.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_xhy14v.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph_xhy14v.jl:34\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_xhy14v.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_xhy14v.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph_xhy14v.jl:35\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_xhy14v.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_xhy14v.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_xhy14v.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for i in x\n        if (i % 2 == 0) == false\n            push!(y,\
    \ i)\n        end\n    end\n    sort(y)\nend\n# Tests for unique_digits\n# include(\"\
    Run_Tests.jl\")\nusing Base.Test\n@testset \"unique_digits Test Cases\" begin\n\
    \    @test unique_digits([15, 33, 1422, 1]) == [1, 15, 33]\n    @test unique_digits([152,\
    \ 323, 1422, 10]) == []\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: Test not defined\nin expression starting\
    \ at /tmp/tmpr8gtr2xh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odd_digit_numbers = Int64[]\n    for number in x\n        number_string =\
    \ string(number)\n        number_contains_odd_digit = false\n        for digit\
    \ in number_string\n            if !(parse(Int64, digit) % 2 == 0)\n         \
    \       number_contains_odd_digit = true\n            end\n        end\n     \
    \   if number_contains_odd_digit\n            push!(odd_digit_numbers, number)\n\
    \        end\n    end\n    return sort(odd_digit_numbers)\nend\n \nprint(unique_digits([15,\
    \ 33, 1422, 1]))\nprint(unique_digits([152, 323, 1422, 10]))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "[1, 15, 33, 1422][10, 152, 323, 1422]test set: Test Failed at /tmp/tmpr92xz2vl.jl:36\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1,\
    \ 15, 33, 1422] == [1, 15, 33]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr92xz2vl.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr92xz2vl.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpr92xz2vl.jl:37\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 152, 323, 1422] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr92xz2vl.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr92xz2vl.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpr92xz2vl.jl:38\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr92xz2vl.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr92xz2vl.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpr92xz2vl.jl:39\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr92xz2vl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr92xz2vl.jl:35\nTest Summary:\
    \ | Fail  Total\ntest se"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr92xz2vl.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # YOUR CODE HERE\n    return []\nend\n \nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpslsllo6m.jl:22\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: Int64[] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslsllo6m.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslsllo6m.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpslsllo6m.jl:24\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: Int64[] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslsllo6m.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslsllo6m.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpslsllo6m.jl:25\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: Int64[] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslsllo6m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslsllo6m.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpslsllo6m.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # create a new array to store the output\n    y = Array{Int64}(undef, 0)\n\
    \    # loop over each element\n    for x_i in x\n        # if it's odd, then append\
    \ it to the array\n        if x_i % 2 != 0\n            push!(y, x_i)\n      \
    \  end\n    end\n    # return the sorted version of the array\n    return sort(y)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz7lw6ecl.jl:31\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7lw6ecl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7lw6ecl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpz7lw6ecl.jl:32\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7lw6ecl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7lw6ecl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpz7lw6ecl.jl:33\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz7lw6ecl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz7lw6ecl.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz7lw6ecl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x = x[(x .% 2 .!= 0) .& (x .% 5 .!= 0) .& (x .% 10 .!= 0)]\n    sort(x)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3a2kvzbr.jl:21\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 33] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3a2kvzbr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3a2kvzbr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3a2kvzbr.jl:22\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3a2kvzbr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3a2kvzbr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3a2kvzbr.jl:23\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 2033] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3a2kvzbr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3a2kvzbr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3a2kvzbr.jl:24\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3a2kvzbr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3a2kvzbr.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3a2kvzbr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    answer = Int64[]\n    for i in x\n        if unique_digits_helper(i)\n  \
    \          push!(answer, i)\n        end\n    end\n    return sort(answer)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpreh1l167.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ unique_digits_helper not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\\
    n     @ Main /tmp/tmpreh1l167.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpreh1l167.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpreh1l167.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpreh1l167.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: unique_digits_helper\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpreh1l167.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpreh1l167.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpreh1l167.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpreh1l167.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: unique_digits_helper\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpreh1l167.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpreh1l167.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpreh1l167.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpreh1l167.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  Unde"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    output = Vector{Int64}()\n    for num in x\n        if all(map(isdigit, string(num),\
    \ odd))\n            push!(output, num)\n        end\n    end\n    return sort(output)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpidgnlxgk.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  UndefVarError:\
    \ odd not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n\
    \     @ Main /tmp/tmpidgnlxgk.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpidgnlxgk.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpidgnlxgk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpidgnlxgk.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  UndefVarError: odd\
    \ not defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n    \
    \ @ Main /tmp/tmpidgnlxgk.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpidgnlxgk.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpidgnlxgk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpidgnlxgk.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\\n  UndefVarError: odd not\
    \ defined\\n  Stacktrace:\\n   [1] unique_digits(x::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpidgnlxgk.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpidgnlxgk.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpidgnlxgk.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpidgnlxgk.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\\n  UndefVarError: odd not defined\\\
    n  Stacktrace:\\n   [1] u"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    z = []\n    for i in x\n        b = unique(digits(i))\n        if !any(b\
    \ .% 2 .== 0)\n            push!(z, i)\n        end\n    end\n    return sort(z)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = Int64[]\n    for i in x\n        c = Int64(1)\n        while i != 0\n\
    \            d = Int64(i % 10)\n            if d % 2 == 0\n                c =\
    \ Int64(0)\n                break\n            end\n            i = i / 10\n \
    \       end\n        if c == 1\n            push!(y, i)\n        end\n    end\n\
    \    return sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkx_nre84.jl:35\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  InexactError: Int64(1.5)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] unique_digits(x::Vector{Int64})\n\
    \     @ Main /tmp/tmpkx_nre84.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkx_nre84.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkx_nre84.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkx_nre84.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  InexactError: Int64(2.299999999999997)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] unique_digits(x::Vector{Int64})\n\
    \     @ Main /tmp/tmpkx_nre84.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkx_nre84.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkx_nre84.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkx_nre84.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  InexactError: Int64(4.5)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] unique_digits(x::Vector{Int64})\n\
    \     @ Main /tmp/tmpkx_nre84.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkx_nre84.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkx_nre84.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkx_nre84.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([135,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkx_nre84.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x_odd = filter(n -> (n % 2 != 0), x)\n    return x_odd\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8cvds6ec.jl:21\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cvds6ec.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cvds6ec.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8cvds6ec.jl:22\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cvds6ec.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cvds6ec.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8cvds6ec.jl:23\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cvds6ec.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cvds6ec.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8cvds6ec.jl:24\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8cvds6ec.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8cvds6ec.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8cvds6ec.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \n    # x_digits = split(x)\n    a = x |> map(digits)\n    b = a |> map(iseven)\n\
    \    e = b |> map(all)\n    # e = [all(iseven(i)) for i in a]\n    y = e .== false\n\
    \    f = x[y]\n    \n    return f\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn6g07v55.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\\n  MethodError:\
    \ no method matching digits()\\n  Closest candidates are:\\n    digits(!Matched::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\\\
    n    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\\\
    n  Stacktrace:\\n   [1] map(f::typeof(digits))\\n     @ Base ./abstractarray.jl:2965\\\
    n   [2] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpn6g07v55.jl:15\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpn6g07v55.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpn6g07v55.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpn6g07v55.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\\n  MethodError: no method\
    \ matching digits()\\n  Closest candidates are:\\n    digits(!Matched::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\\\
    n    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\\\
    n  Stacktrace:\\n   [1] map(f::typeof(digits))\\n     @ Base ./abstractarray.jl:2965\\\
    n   [2] unique_digits(x::Vector{Int64})\\n     @ Main /tmp/tmpn6g07v55.jl:15\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpn6g07v55.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpn6g07v55.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpn6g07v55.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate([12345, 2033, 111,"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    unique_digits = []\n    for i = 1:length(x)\n        for j = 1:length(digits(x[i]))\n\
    \            if mod(digits(x[i])[j], 2) == 0\n                break\n        \
    \    elseif j == length(digits(x[i]))\n                push!(unique_digits, x[i])\n\
    \            end\n        end\n    end\n    return sort(unique_digits)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    if length(x) == 0\n        return x\n    end\n    if all(unique_digit(i)\
    \ for i in x)\n        return x\n    end\n    return unique_digits(filter(unique_digit,\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwdoocgg2.jl:26\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: unique_digit\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity),\
    \ itr::Base.Generator{Vector{Int64}, var\"#1#2\"}, #unused#::Colon)\n      @ Base\
    \ ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n\
    \      @ ./reduce.jl:1070 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmpwdoocgg2.jl:16\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpwdoocgg2.jl:26 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpwdoocgg2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwdoocgg2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: unique_digit\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity),\
    \ itr::Base.Generator{Vector{Int64}, var\"#1#2\"}, #unused#::Colon)\n      @ Base\
    \ ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n\
    \      @ ./reduce.jl:1070 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmpwdoocgg2.jl:16\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpwdoocgg2.jl:27 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpwdoocgg2.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwdoocgg2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  Undef"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdoocgg2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # input x: a list of positive integers. \n    # output: a sorted list of\
    \ integers that has no even digit. \n    # Hint: use findall() function in Julia.\n\
    \    # \n    # YOUR CODE HERE\n    #\n    nums = convert(Vector{Int64}, x)\n \
    \   solutions = findall(nums) do x\n        for i = 1:length(x)\n            y\
    \ = mod(x[i], 2)\n            if y == 0\n                return false\n      \
    \      end\n        end\n        return true\n    end\n    solutions = sort(solutions)\n\
    \    return solutions\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv9eosqb1.jl:37\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 2, 4] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9eosqb1.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9eosqb1.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpv9eosqb1.jl:38\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [2] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9eosqb1.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9eosqb1.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpv9eosqb1.jl:39\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [1, 2, 3, 4] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9eosqb1.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9eosqb1.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpv9eosqb1.jl:40\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [1, 2, 3] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9eosqb1.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9eosqb1.jl:36\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9eosqb1.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = [d for d in x if !any(even, d)]\n    sort(y)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplk3fgkqz.jl:21\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: even\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(d::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n\
    \      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"\
    #1#2\", Vector{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5]\
    \ collect\n      @ ./array.jl:721 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmplk3fgkqz.jl:13\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmplk3fgkqz.jl:21 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmplk3fgkqz.jl:20\ntest set:\
    \ Error During Test at /tmp/tmplk3fgkqz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: even\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(d::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n\
    \      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"\
    #1#2\", Vector{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5]\
    \ collect\n      @ ./array.jl:721 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmplk3fgkqz.jl:13\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmplk3fgkqz.jl:22 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmplk3fgkqz.jl:20\ntest set:\
    \ Error During Test at /tmp/tmplk3fgkqz.jl:23\n  Test threw exception\n  Expression:\
    \ cand"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplk3fgkqz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    y = []\n    for element in x\n        count = 0\n        for digit in digits(element)\n\
    \            if digit % 2 == 0\n                count += 1\n            end\n\
    \        end\n        if count == 0\n            push!(y, element)\n        end\n\
    \    end\n    y = sort(y)\n    return y\nend\nusing Test\n\n@testset begin\n\n\
    candidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\
    \t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345,\
    \ 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    return [y for y in x if all(!ismatch(r\"\\d*[02468]\\d*\", string(y)))]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp27s8o1cw.jl:20\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: ismatch\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(y::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n\
    \      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"\
    #1#2\", Vector{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5]\
    \ collect\n      @ ./array.jl:721 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmp27s8o1cw.jl:13\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp27s8o1cw.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp27s8o1cw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp27s8o1cw.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: ismatch\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(y::Int64)\n      @ Main\
    \ ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n\
    \      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"\
    #1#2\", Vector{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5]\
    \ collect\n      @ ./array.jl:721 [inlined]\n    [6] unique_digits(x::Vector{Int64})\n\
    \      @ Main /tmp/tmp27s8o1cw.jl:13\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp27s8o1cw.jl:21 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp27s8o1cw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp27s8o1cw.jl:22\n  Test threw exception\n  Expression"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27s8o1cw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    answer = Int64[]\n    for y in x\n        if mod(y, 2) == 1\n           \
    \ z = length(string(y))\n            for i in 1:z\n                if mod(Int64(string(y)[i]),\
    \ 2) == 0\n                    break\n                elseif i == z\n        \
    \            push!(answer, y)\n                end\n            end\n        end\n\
    \    end\n    sort(answer)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    odd = []\n    for i in x\n        if i == 0\n            continue\n     \
    \   end\n        for j in 0:4\n            if i%10 == j\n                break\n\
    \            end\n            if j == 4\n                push!(odd, i)\n     \
    \       end\n        end\n        i = div(i, 10)\n    end\n    sort(odd)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5v4yctp.jl:35\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5v4yctp.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5v4yctp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps5v4yctp.jl:37\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345] == [111, 151]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5v4yctp.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5v4yctp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps5v4yctp.jl:38\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps5v4yctp.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps5v4yctp.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5v4yctp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    g = []\n    for i = 1:length(x)\n        y = x[i]\n        f = false\n  \
    \      while (y > 0)\n            if (mod(y,10)%2 == 0)\n                f = true\n\
    \                break\n            end\n            y = floor(y/10)\n       \
    \ end\n        if f == false\n            push!(g,x[i])\n        end\n    end\n\
    \    g = sort(g)\n    return g\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # initialise an empty list\n    n = []\n    # append the values that satisfy\
    \ the condition in the for loop\n    for i in x\n        if all(!(i % 2 == 0)\
    \ for i in digits(i))\n            push!(n, i)\n        end\n    end\n    return\
    \ sort(n)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t\
    @test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323,\
    \ 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111, 151])\
    \ == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    even_digits = Dict{Int64, Int64}()\n    for i in 2:2:10\n        even_digits[i]\
    \ = i\n    end\n    y = []\n    for i in x\n        digits = digits(i)\n     \
    \   test = true\n        for d in digits\n            if d in keys(even_digits)\n\
    \                test = false\n                break\n            end\n      \
    \  end\n        if test\n            push!(y, i)\n        end\n    end\n    return\
    \ sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t\
    @test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323,\
    \ 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111, 151])\
    \ == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqo24t76z.jl:38\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: digits\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpqo24t76z.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqo24t76z.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqo24t76z.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpqo24t76z.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: digits\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpqo24t76z.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqo24t76z.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqo24t76z.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpqo24t76z.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: digits not\
    \ defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpqo24t76z.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqo24t76z.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqo24t76z.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpqo24t76z.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqo24t76z.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    u = filter(all_unique, x)\n    return sort(u)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph8m5cjl1.jl:21\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: all_unique\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmph8m5cjl1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8m5cjl1.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8m5cjl1.jl:20\ntest set:\
    \ Error During Test at /tmp/tmph8m5cjl1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: all_unique\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmph8m5cjl1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8m5cjl1.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8m5cjl1.jl:20\ntest set:\
    \ Error During Test at /tmp/tmph8m5cjl1.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: all_unique\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmph8m5cjl1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph8m5cjl1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph8m5cjl1.jl:20\ntest set:\
    \ Error During Test at /tmp/tmph8m5cjl1.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: all_unique not defined\n\
    \  Stacktrace:\n   [1] unique_digits(x::Vector{I"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph8m5cjl1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    L = []\n    for i in x\n        if i == 0\n            push!(L, i)\n    \
    \    else\n            for j in digits(i)\n                if j % 2 == 0\n   \
    \                 break\n                elseif j == last(digits(i))\n       \
    \             push!(L, i)\n                end\n            end\n        end\n\
    \    end\n    return sort(L)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbsp6iuog.jl:34\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 15, 33, 33] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsp6iuog.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsp6iuog.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpbsp6iuog.jl:35\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [323] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsp6iuog.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsp6iuog.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpbsp6iuog.jl:36\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 111, 111, 151, 151] == [111, 151]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsp6iuog.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsp6iuog.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbsp6iuog.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x_odd = []\n    for i in x\n        if i % 2 == 0\n            push!(x_odd,\
    \ i)\n        end\n    end\n    unique_digits = deleteat!(x, x_odd)\n    return\
    \ unique_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmvczpisx.jl:27\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [1422]\n  Stacktrace:\n    [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Int64})\n      @ Base ./abstractarray.jl:691\n    [2] checkbounds\n\
    \      @ ./abstractarray.jl:656 [inlined]\n    [3] _deleteat!(a::Vector{Int64},\
    \ inds::Vector{Any}, dltd::Base.Nowhere)\n      @ Base ./array.jl:1479\n    [4]\
    \ _deleteat!\n      @ ./array.jl:1475 [inlined]\n    [5] deleteat!\n      @ ./array.jl:1469\
    \ [inlined]\n    [6] unique_digits(x::Vector{Int64})\n      @ Main /tmp/tmpmvczpisx.jl:19\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmvczpisx.jl:27 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmvczpisx.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpmvczpisx.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  BoundsError: attempt\
    \ to access 4-element Vector{Int64} at index [152]\n  Stacktrace:\n    [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Int64})\n      @ Base ./abstractarray.jl:691\n    [2] checkbounds\n\
    \      @ ./abstractarray.jl:656 [inlined]\n    [3] _deleteat!(a::Vector{Int64},\
    \ inds::Vector{Any}, dltd::Base.Nowhere)\n      @ Base ./array.jl:1479\n    [4]\
    \ _deleteat!\n      @ ./array.jl:1475 [inlined]\n    [5] deleteat!\n      @ ./array.jl:1469\
    \ [inlined]\n    [6] unique_digits(x::Vector{Int64})\n      @ Main /tmp/tmpmvczpisx.jl:19\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmvczpisx.jl:28 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmvczpisx.jl:26\ntest s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmvczpisx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    \"\"\"\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>>\
    \ unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"\n    y = zeros(Int64,\
    \ 0)\n    z = zeros(Int64, length(x))\n    for i in 1:length(x)\n        for j\
    \ in 1:length(digits(x[i]))\n            if digits(x[i])[j] % 2 == 0\n       \
    \         z[i] = 1\n            end\n        end\n    end\n    for i in 1:length(x)\n\
    \        if z[i] == 0\n            y = push!(y, x[i])\n        end\n    end\n\
    \    sort(y)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x_unique = Int64[]\n    for i in x\n        if !has_even_digit(i)\n     \
    \       push!(x_unique, i)\n        end\n    end\n    return sort(x_unique)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_br8z5rs.jl:26\n  Test threw exception\n\
    \  Expression: candidate([15, 33, 1422, 1]) == [1, 15, 33]\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp_br8z5rs.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_br8z5rs.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_br8z5rs.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_br8z5rs.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp_br8z5rs.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_br8z5rs.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_br8z5rs.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_br8z5rs.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n  UndefVarError: has_even_digit\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmp_br8z5rs.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_br8z5rs.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_br8z5rs.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_br8z5rs.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([135, 103, 31]) == [31, 135]\n  UndefVarError: has_even_digit not\
    \ defined\n  Stacktrace:\n   [1] unique_di"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_br8z5rs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    digits = []\n    for i in x\n        if length(digits) == 0\n           \
    \ push!(digits, i)\n        else\n            for i in digits\n              \
    \  if i%2 == 0\n                    deleteat!(digits, find(digits .== i))\n  \
    \              end\n            end\n        end\n    end\n    return sort(digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw2pjdxoq.jl:32\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2pjdxoq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2pjdxoq.jl:31\ntest set: Error\
    \ During Test at /tmp/tmpw2pjdxoq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([152, 323, 1422, 10]) == Vector{Int64}([])\n  UndefVarError: find\
    \ not defined\n  Stacktrace:\n   [1] unique_digits(x::Vector{Int64})\n     @ Main\
    \ /tmp/tmpw2pjdxoq.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw2pjdxoq.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw2pjdxoq.jl:31\ntest set:\
    \ Test Failed at /tmp/tmpw2pjdxoq.jl:34\n  Expression: candidate([12345, 2033,\
    \ 111, 151]) == [111, 151]\n   Evaluated: [12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2pjdxoq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2pjdxoq.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpw2pjdxoq.jl:35\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2pjdxoq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2pjdxoq.jl:31\nT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2pjdxoq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x = [y for y in x if isodd(sum(digits(y)))]\n    return sort(x)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpftv6wxgh.jl:21\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [1, 1422] == [1, 15, 33]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpftv6wxgh.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpftv6wxgh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpftv6wxgh.jl:22\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [10, 1422] == Int64[]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpftv6wxgh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpftv6wxgh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpftv6wxgh.jl:23\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [111, 151, 12345] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpftv6wxgh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpftv6wxgh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpftv6wxgh.jl:24\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135] == [31, 135]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpftv6wxgh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpftv6wxgh.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpftv6wxgh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    a = []\n    for i in x\n        for j in digits(i)\n            if j%2 ==\
    \ 0\n                push!(a, i)\n                break\n            end\n   \
    \     end\n    end\n    return sort(setdiff(x, a))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    x = filter(x) do i\n        !occursin(r\"[2468]\", string(i))\n    end\n\
    \    sort(x)\nend\nusing Test\n\n@testset begin\n\ncandidate = unique_digits;\n\
    \t@test(candidate([15, 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([]))\n\t@test(candidate([12345, 2033, 111,\
    \ 151]) == [111, 151])\n\t@test(candidate([135, 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvygulr5x.jl:24\n  Expression: candidate([152,\
    \ 323, 1422, 10]) == Vector{Int64}([])\n   Evaluated: [10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvygulr5x.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvygulr5x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpvygulr5x.jl:26\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [31, 103, 135] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvygulr5x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvygulr5x.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvygulr5x.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    # TODO: Complete this function.\n    return x\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzgvypr66.jl:21\n  Expression: candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n   Evaluated: [15, 33, 1422, 1] == [1, 15, 33]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgvypr66.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgvypr66.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzgvypr66.jl:22\n  Expression: candidate([152, 323, 1422, 10])\
    \ == Vector{Int64}([])\n   Evaluated: [152, 323, 1422, 10] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgvypr66.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgvypr66.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzgvypr66.jl:23\n  Expression: candidate([12345, 2033, 111,\
    \ 151]) == [111, 151]\n   Evaluated: [12345, 2033, 111, 151] == [111, 151]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgvypr66.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgvypr66.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzgvypr66.jl:24\n  Expression: candidate([135, 103, 31]) ==\
    \ [31, 135]\n   Evaluated: [135, 103, 31] == [31, 135]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzgvypr66.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzgvypr66.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzgvypr66.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of positive integers x. return a sorted list of all\
    \ \n    elements that hasn't any even digit.\n\n    Note: Returned list should\
    \ be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64} \n\
    \    even = 0\n    result = []\n    for i in x\n        temp = i\n        while\
    \ temp != 0\n            if mod(temp, 10) % 2 == 0\n                even = 1\n\
    \                break\n            end\n            temp = div(temp, 10)\n  \
    \      end\n        if even == 0\n            push!(result, i)\n        end\n\
    \        even = 0\n    end\n    return sort(result)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = unique_digits;\n\t@test(candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
    \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
    \ 103, 31]) == [31, 135])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK

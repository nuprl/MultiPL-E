name: HumanEval_81_numerical_letter_grade
language: jl
prompt: "\"\"\"It is the last week of the semester and the teacher has to give the\
  \ grades\n    to students. The teacher has been making her own algorithm for grading.\n\
  \    The only problem is, she has lost the code she used for grading.\n    She has\
  \ given you a list of GPAs for some students and you have to write \n    a function\
  \ that can output a list of letter grades using the following table:\n         \
  \    GPA       |    Letter grade\n              4.0                A+\n        \
  \    > 3.7                A \n            > 3.3                A- \n           \
  \ > 3.0                B+\n            > 2.7                B \n            > 2.3\
  \                B-\n            > 2.0                C+\n            > 1.7    \
  \            C\n            > 1.3                C-\n            > 1.0         \
  \       D+ \n            > 0.7                D \n            > 0.0            \
  \    D-\n              0.0                E\n    \n\n    Example:\n    grade_equation([4.0,\
  \ 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n    \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
  \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
  \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
  \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"\
  C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
completions: ["    # convert the numerical grade to a letter grade\n    # you can\
    \ use the following conversion table:\n    #             GPA       |    Letter\
    \ grade\n    #              4.0                A+\n    #            > 3.7    \
    \            A \n    #            > 3.3                A- \n    #            >\
    \ 3.0                B+\n    #            > 2.7                B \n    #     \
    \       > 2.3                B-\n    #            > 2.0                C+\n  \
    \  #            > 1.7                C\n    #            > 1.3               \
    \ C-\n    #            > 1.0                D+ \n    #            > 0.7      \
    \          D \n    #            > 0.0                D-\n    #              0.0\
    \                E\n    #\n    # NOTE: the letter grades have a dash at the end\
    \ if the decimal is 0 or 4.\n    #       E.g. a numerical grade of 4.0 is A+ while\
    \ a numerical grade of 3.7 is A.\n    grade = []\n    for i = 1:length(grades)\n\
    \        if grades[i] == 4.0\n            push!(grade, \"A+\")\n        elseif\
    \ grades[i] > 3.7\n            push!(grade, \"A\")\n        elseif grades[i] >\
    \ 3.3\n            push!(grade, \"A-\")\n        elseif grades[i] > 3.0\n    \
    \        push!(grade, \"B+\")\n        elseif grades[i] > 2.7\n            push!(grade,\
    \ \"B\")\n        elseif grades[i] > 2.3\n            push!(grade, \"B-\")\n \
    \       elseif grades[i] > 2.0\n            push!(grade, \"C+\")\n        elseif\
    \ grades[i] > 1.7\n            push!(grade, \"C\")\n        elseif grades[i] >\
    \ 1.3\n            push!(grade, \"C-\")\n        elseif grades[i] > 1.0\n    \
    \        push!(grade, \"D+\")\n        elseif grades[i] > 0.7\n            push!(grade,\
    \ \"D\")\n        elseif grades[i] > 0.0\n            push!(grade, \"D", "   \
    \ letter_grades = Array{String}(length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            letter_grades[i] = \"A+\"\n        elseif\
    \ grades[i] > 3.7\n            letter_grades[i] = \"A\"\n        elseif grades[i]\
    \ > 3.3\n            letter_grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n\
    \            letter_grades[i] = \"B+\"\n        elseif grades[i] > 2.7\n     \
    \       letter_grades[i] = \"B\"\n        elseif grades[i] > 2.3\n           \
    \ letter_grades[i] = \"B-\"\n        elseif grades[i] > 2.0\n            letter_grades[i]\
    \ = \"C+\"\n        elseif grades[i] > 1.7\n            letter_grades[i] = \"\
    C\"\n        elseif grades[i] > 1.3\n            letter_grades[i] = \"C-\"\n \
    \       elseif grades[i] > 1.0\n            letter_grades[i] = \"D+\"\n      \
    \  elseif grades[i] > 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grades[i] > 0.0\n            letter_grades[i] = \"D-\"\n        else\n     \
    \       letter_grades[i] = \"E\"\n        end\n    end\n    return letter_grades\n\
    end", "    grade::Vector{String} = []\n    for i in 1:length(grades)\n       \
    \ if grades[i] == 4.0\n            push!(grade, \"A+\")\n        elseif grades[i]\
    \ > 3.7\n            push!(grade, \"A\")\n        elseif grades[i] > 3.3\n   \
    \         push!(grade, \"A-\")\n        elseif grades[i] > 3.0\n            push!(grade,\
    \ \"B+\")\n        elseif grades[i] > 2.7\n            push!(grade, \"B\")\n \
    \       elseif grades[i] > 2.3\n            push!(grade, \"B-\")\n        elseif\
    \ grades[i] > 2.0\n            push!(grade, \"C+\")\n        elseif grades[i]\
    \ > 1.7\n            push!(grade, \"C\")\n        elseif grades[i] > 1.3\n   \
    \         push!(grade, \"C-\")\n        elseif grades[i] > 1.0\n            push!(grade,\
    \ \"D+\")\n        elseif grades[i] > 0.7\n            push!(grade, \"D\")\n \
    \       elseif grades[i] > 0.0\n            push!(grade, \"D-\")\n        elseif\
    \ grades[i] == 0.0\n            push!(grade, \"E\")\n        end\n    end\n  \
    \  return grade\nend\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])", "    # YOUR\
    \ CODE HERE \n    grades = String[]\n    for i in grades\n        if i == 4.0\n\
    \            push!(grades, \"A+\")\n        elseif i >= 3.7\n            push!(grades,\
    \ \"A\")\n        elseif i >= 3.3\n            push!(grades, \"A-\")\n       \
    \ elseif i >= 3.0\n            push!(grades, \"B+\")\n        elseif i >= 2.7\n\
    \            push!(grades, \"B\")\n        elseif i >= 2.3\n            push!(grades,\
    \ \"B-\")\n        elseif i >= 2.0\n            push!(grades, \"C+\")\n      \
    \  elseif i >= 1.7\n            push!(grades, \"C\")\n        elseif i >= 1.3\n\
    \            push!(grades, \"C-\")\n        elseif i >= 1.0\n            push!(grades,\
    \ \"D+\")\n        elseif i >= 0.7\n            push!(grades, \"D\")\n       \
    \ elseif i > 0.0\n            push!(grades, \"D-\")\n        elseif i == 0.0\n\
    \            push!(grades, \"E\")\n        end\n    end\n    \n    return grades\n\
    end", "    grades = [grade >= 4.0 ? \"A+\" : \n              grade >= 3.7 ? \"\
    A\" : \n              grade >= 3.3 ? \"A-\" : \n              grade >= 3.0 ? \"\
    B+\" : \n              grade >= 2.7 ? \"B\" : \n              grade >= 2.3 ? \"\
    B-\" : \n              grade >= 2.0 ? \"C+\" : \n              grade >= 1.7 ?\
    \ \"C\" : \n              grade >= 1.3 ? \"C-\" : \n              grade >= 1.0\
    \ ? \"D+\" : \n              grade >= 0.7 ? \"D\" : \n              grade >= 0.0\
    \ ? \"D-\" : \"E\" for grade in grades]\n    return grades\nend", "    x = length(grades)\n\
    \    grades_string = String[]\n    for i in 1:x\n        if grades[i] >= 4.0\n\
    \            append!(grades_string, \"A+\")\n        elseif grades[i] >= 3.7\n\
    \            append!(grades_string, \"A\")\n        elseif grades[i] >= 3.3\n\
    \            append!(grades_string, \"A-\")\n        elseif grades[i] >= 3.0\n\
    \            append!(grades_string, \"B+\")\n        elseif grades[i] >= 2.7\n\
    \            append!(grades_string, \"B\")\n        elseif grades[i] >= 2.3\n\
    \            append!(grades_string, \"B-\")\n        elseif grades[i] >= 2.0\n\
    \            append!(grades_string, \"C+\")\n        elseif grades[i] >= 1.7\n\
    \            append!(grades_string, \"C\")\n        elseif grades[i] >= 1.3\n\
    \            append!(grades_string, \"C-\")\n        elseif grades[i] >= 1.0\n\
    \            append!(grades_string, \"D+\")\n        elseif grades[i] >= 0.7\n\
    \            append!(grades_string, \"D\")\n        elseif grades[i] >= 0.0\n\
    \            append!(grades_string, \"D-\")\n        elseif grades[i] == 0.0\n\
    \            append!(grades_string, \"E\")\n        end\n    end\n    return grades_string\n\
    end", "    \"\"\"numerical_letter_grade gives the letter grades of the students\"\
    \"\"\n    lettergrades = []\n    for g in grades\n        if g == 4.0\n      \
    \      push!(lettergrades, \"A+\")\n        elseif g > 3.7\n            push!(lettergrades,\
    \ \"A\")\n        elseif g > 3.3\n            push!(lettergrades, \"A-\")\n  \
    \      elseif g > 3.0\n            push!(lettergrades, \"B+\")\n        elseif\
    \ g > 2.7\n            push!(lettergrades, \"B\")\n        elseif g > 2.3\n  \
    \          push!(lettergrades, \"B-\")\n        elseif g > 2.0\n            push!(lettergrades,\
    \ \"C+\")\n        elseif g > 1.7\n            push!(lettergrades, \"C\")\n  \
    \      elseif g > 1.3\n            push!(lettergrades, \"C-\")\n        elseif\
    \ g > 1.0\n            push!(lettergrades, \"D+\")\n        elseif g > 0.7\n \
    \           push!(lettergrades, \"D\")\n        elseif g > 0.0\n            push!(lettergrades,\
    \ \"D-\")\n        elseif g == 0.0\n            push!(lettergrades, \"E\")\n \
    \       end\n    end\n    return lettergrades\nend", "    \"\"\"This function\
    \ converts numerical grades to letter grades using a step function.\"\"\"\n  \
    \  letter_grades = []\n    for grade in grades\n        if grade >= 4.0\n    \
    \        push!(letter_grades, \"A+\")\n        elseif grade >= 3.7\n         \
    \   push!(letter_grades, \"A\")\n        elseif grade >= 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(letter_grades, \"B+\"\
    )\n        elseif grade >= 2.7\n            push!(letter_grades, \"B\")\n    \
    \    elseif grade >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif\
    \ grade >= 2.0\n            push!(letter_grades, \"C+\")\n        elseif grade\
    \ >= 1.7\n            push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n\
    \            push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n     \
    \       push!(letter_grades, \"D+\")\n        elseif grade >= 0.7\n          \
    \  push!(letter_grades, \"D\")\n        elseif grade >= 0.0\n            push!(letter_grades,\
    \ \"D-\")\n        else\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend", "    grades_string = [0 for i in 1:length(grades)]\n\
    \    for i in 1:length(grades)\n        if grades[i] == 4.0\n            grades_string[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            grades_string[i] = \"\
    A\"\n        elseif grades[i] > 3.3\n            grades_string[i] = \"A-\"\n \
    \       elseif grades[i] > 3.0\n            grades_string[i] = \"B+\"\n      \
    \  elseif grades[i] > 2.7\n            grades_string[i] = \"B\"\n        elseif\
    \ grades[i] > 2.3\n            grades_string[i] = \"B-\"\n        elseif grades[i]\
    \ > 2.0\n            grades_string[i] = \"C+\"\n        elseif grades[i] > 1.7\n\
    \            grades_string[i] = \"C\"\n        elseif grades[i] > 1.3\n      \
    \      grades_string[i] = \"C-\"\n        elseif grades[i] > 1.0\n           \
    \ grades_string[i] = \"D+\"\n        elseif grades[i] > 0.7\n            grades_string[i]\
    \ = \"D\"\n        elseif grades[i] > 0.0\n            grades_string[i] = \"D-\"\
    \n        else\n            grades_string[i] = \"E\"\n        end\n    end\n \
    \   return grades_string\nend\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])",
  "    letter_grade_list = []\n    for index in 1:length(grades)\n        if grades[index]\
    \ == 4.0\n            push!(letter_grade_list, \"A+\")\n        elseif grades[index]\
    \ > 3.7\n            push!(letter_grade_list, \"A\")\n        elseif grades[index]\
    \ > 3.3\n            push!(letter_grade_list, \"A-\")\n        elseif grades[index]\
    \ > 3.0\n            push!(letter_grade_list, \"B+\")\n        elseif grades[index]\
    \ > 2.7\n            push!(letter_grade_list, \"B\")\n        elseif grades[index]\
    \ > 2.3\n            push!(letter_grade_list, \"B-\")\n        elseif grades[index]\
    \ > 2.0\n            push!(letter_grade_list, \"C+\")\n        elseif grades[index]\
    \ > 1.7\n            push!(letter_grade_list, \"C\")\n        elseif grades[index]\
    \ > 1.3\n            push!(letter_grade_list, \"C-\")\n        elseif grades[index]\
    \ > 1.0\n            push!(letter_grade_list, \"D+\")\n        elseif grades[index]\
    \ > 0.7\n            push!(letter_grade_list, \"D\")\n        elseif grades[index]\
    \ > 0.0\n            push!(letter_grade_list, \"D-\")\n        else\n        \
    \    push!(letter_grade_list, \"E\")\n        end\n    end\n    return letter_grade_list\n\
    end\n ", "    # Your implementation here\nend", "    result = []\n    for i in\
    \ grades\n        if i >= 4.0\n            push!(result, \"A+\")\n        elseif\
    \ i >= 3.7\n            push!(result, \"A\")\n        elseif i >= 3.3\n      \
    \      push!(result, \"A-\")\n        elseif i >= 3.0\n            push!(result,\
    \ \"B+\")\n        elseif i >= 2.7\n            push!(result, \"B\")\n       \
    \ elseif i >= 2.3\n            push!(result, \"B-\")\n        elseif i >= 2.0\n\
    \            push!(result, \"C+\")\n        elseif i >= 1.7\n            push!(result,\
    \ \"C\")\n        elseif i >= 1.3\n            push!(result, \"C-\")\n       \
    \ elseif i >= 1.0\n            push!(result, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(result, \"D\")\n        elseif i >= 0.0\n            push!(result,\
    \ \"D-\")\n        else\n            push!(result, \"E\")\n        end\n    end\n\
    \    return result\nend", "    #gpa_letter = [0.0, 0.7, 1.0, 1.3, 1.7, 2.0, 2.3,\
    \ 2.7, 3.0, 3.3, 3.7, 4.0]\n    #letter_grade = ['E', 'D-', 'D+', 'C-', 'C', 'C+',\
    \ 'B-', 'B', 'B+', 'A-', 'A', 'A+']\n    #for i in grades \n    #    for j in\
    \ gpa_letter \n    #        if i == j \n    #            letter_grade.append(i)\n\
    \    #            continue \n    #        end \n    #    end \n    #end \n   \
    \ #return letter_grade\nend ", "    letter_grades = Vector{String}(undef, length(grades))\n\
    \    for (i, grade) in enumerate(grades)\n        if grade == 4.0\n          \
    \  letter_grades[i] = \"A+\"\n        elseif grade > 3.7\n            letter_grades[i]\
    \ = \"A\"\n        elseif grade > 3.3\n            letter_grades[i] = \"A-\"\n\
    \        elseif grade > 3.0\n            letter_grades[i] = \"B+\"\n        elseif\
    \ grade > 2.7\n            letter_grades[i] = \"B\"\n        elseif grade > 2.3\n\
    \            letter_grades[i] = \"B-\"\n        elseif grade > 2.0\n         \
    \   letter_grades[i] = \"C+\"\n        elseif grade > 1.7\n            letter_grades[i]\
    \ = \"C\"\n        elseif grade > 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grade > 1.0\n            letter_grades[i] = \"D+\"\n        elseif\
    \ grade > 0.7\n            letter_grades[i] = \"D\"\n        elseif grade > 0.0\n\
    \            letter_grades[i] = \"D-\"\n        else\n            letter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grades\nend", "    grades_letters\
    \ = []\n    i = 0\n    while i < length(grades)\n        a = grades[i]\n     \
    \   if a >= 4.0\n            push!(grades_letters, \"A+\")\n        elseif a >=\
    \ 3.7\n            push!(grades_letters, \"A\")\n        elseif a >= 3.3\n   \
    \         push!(grades_letters, \"A-\")\n        elseif a >= 3.0\n           \
    \ push!(grades_letters, \"B+\")\n        elseif a >= 2.7\n            push!(grades_letters,\
    \ \"B\")\n        elseif a >= 2.3\n            push!(grades_letters, \"B-\")\n\
    \        elseif a >= 2.0\n            push!(grades_letters, \"C+\")\n        elseif\
    \ a >= 1.7\n            push!(grades_letters, \"C\")\n        elseif a >= 1.3\n\
    \            push!(grades_letters, \"C-\")\n        elseif a >= 1.0\n        \
    \    push!(grades_letters, \"D+\")\n        elseif a >= 0.7\n            push!(grades_letters,\
    \ \"D\")\n        elseif a >= 0.0\n            push!(grades_letters, \"D-\")\n\
    \        else\n            push!(grades_letters, \"E\")\n        end\n       \
    \ i += 1\n    end\n    return grades_letters\nend", "    grade_conversion = (4.0,\
    \ \"A+\", 3.7, \"A\", 3.3, \"A-\", 3.0, \"B+\", 2.7, \"B\", 2.3, \"B-\", \n  \
    \                  2.0, \"C+\", 1.7, \"C\", 1.3, \"C-\", 1.0, \"D+\", 0.7, \"\
    D\", 0.0, \"D-\", 0.0, \"E\")\n    letter_grades = []\n    for i in grades\n \
    \       for j in grade_conversion\n            if i > j[1]\n                push!(letter_grades,\
    \ j[2])\n                break\n            end\n        end\n    end\n    return\
    \ letter_grades\nend", "    letter_grades = [] \n    for grade in grades \n  \
    \      if grade >= 4.0 \n            push!(letter_grades, \"A+\")\n        elseif\
    \ grade >= 3.7\n            push!(letter_grades, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif grade >= 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif grade >= 2.7\n     \
    \       push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n           \
    \ push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif grade >= 1.7\n            push!(letter_grades, \"C\"\
    )\n        elseif grade >= 1.3\n            push!(letter_grades, \"C-\")\n   \
    \     elseif grade >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif\
    \ grade >= 0.7\n            push!(letter_grades, \"D\")\n        elseif grade\
    \ >= 0.0\n            push!(letter_grades, \"D-\")\n        elseif grade >= 0.0\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    \n    final_grade = []\n    \n    for i = 1:length(grades)\n      \
    \  if grades[i] >= 4.0\n            push!(final_grade, \"A+\")\n        elseif\
    \ grades[i] >= 3.7\n            push!(final_grade, \"A\")\n        elseif grades[i]\
    \ >= 3.3\n            push!(final_grade, \"A-\")\n        elseif grades[i] >=\
    \ 3.0\n            push!(final_grade, \"B+\")\n        elseif grades[i] >= 2.7\n\
    \            push!(final_grade, \"B\")\n        elseif grades[i] >= 2.3\n    \
    \        push!(final_grade, \"B-\")\n        elseif grades[i] >= 2.0\n       \
    \     push!(final_grade, \"C+\")\n        elseif grades[i] >= 1.7\n          \
    \  push!(final_grade, \"C\")\n        elseif grades[i] >= 1.3\n            push!(final_grade,\
    \ \"C-\")\n        elseif grades[i] >= 1.0\n            push!(final_grade, \"\
    D+\")\n        elseif grades[i] >= 0.7\n            push!(final_grade, \"D\")\n\
    \        elseif grades[i] >= 0.0\n            push!(final_grade, \"D-\")\n   \
    \     else\n            push!(final_grade, \"E\")\n        end\n    end\n    return\
    \ final_grade\nend", "    \"\"\"\n    >>> numerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5])\n    5-element Array{String,1}:\n     \"A+\"\n     \"B\" \n     \"\
    C-\"\n     \"C\" \n     \"A-\"\n    \"\"\"\n    grades = (convert(Vector{Int64},\
    \ round.(1000*collect(grades))) % 10) / 10\n    letter_grade = Dict(\"A+\" =>\
    \ 4.0,\n                        \"A\" => 3.7,\n                        \"A-\"\
    \ => 3.3,\n                        \"B+\" => 3.0,\n                        \"\
    B\" => 2.7,\n                        \"B-\" => 2.3,\n                        \"\
    C+\" => 2.0,\n                        \"C\" => 1.7,\n                        \"\
    C-\" => 1.3,\n                        \"D+\" => 1.0,\n                       \
    \ \"D\" => 0.7,\n                        \"D-\" => 0.0,\n                    \
    \    \"E\" => 0.0\n                        )\n    grades_letter = [string(key[1])\
    \ for key in letter_grade]\n    return [grades_letter[findlast(grade .<= letter_grade)]\
    \ for grade in grades]\nend", "  # initialize empty vector\n  letter_grades =\
    \ Vector{String}(undef, length(grades))\n  for (i, grade) in enumerate(grades)\n\
    \    if grade >= 4.0\n      letter_grades[i] = \"A+\"\n    elseif grade >= 3.7\n\
    \      letter_grades[i] = \"A\"\n    elseif grade >= 3.3\n      letter_grades[i]\
    \ = \"A-\"\n    elseif grade >= 3.0\n      letter_grades[i] = \"B+\"\n    elseif\
    \ grade >= 2.7\n      letter_grades[i] = \"B\"\n    elseif grade >= 2.3\n    \
    \  letter_grades[i] = \"B-\"\n    elseif grade >= 2.0\n      letter_grades[i]\
    \ = \"C+\"\n    elseif grade >= 1.7\n      letter_grades[i] = \"C\"\n    elseif\
    \ grade >= 1.3\n      letter_grades[i] = \"C-\"\n    elseif grade >= 1.0\n   \
    \   letter_grades[i] = \"D+\"\n    elseif grade >= 0.7\n      letter_grades[i]\
    \ = \"D\"\n    elseif grade >= 0.0\n      letter_grades[i] = \"D-\"\n    else\n\
    \      letter_grades[i] = \"E\"\n    end\n  end\n  return letter_grades\nend",
  "    # Write your code here\n    return letter_grades\nend", "    new_grades = []\n\
    \    for i in grades\n        if i > 4.0\n            append!(new_grades, \"A+\"\
    )\n        elseif i > 3.7\n            append!(new_grades, \"A\")\n        elseif\
    \ i > 3.3\n            append!(new_grades, \"A-\")\n        elseif i > 3.0\n \
    \           append!(new_grades, \"B+\")\n        elseif i > 2.7\n            append!(new_grades,\
    \ \"B\")\n        elseif i > 2.3\n            append!(new_grades, \"B-\")\n  \
    \      elseif i > 2.0\n            append!(new_grades, \"C+\")\n        elseif\
    \ i > 1.7\n            append!(new_grades, \"C\")\n        elseif i > 1.3\n  \
    \          append!(new_grades, \"C-\")\n        elseif i > 1.0\n            append!(new_grades,\
    \ \"D+\")\n        elseif i > 0.7\n            append!(new_grades, \"D\")\n  \
    \      elseif i > 0.0\n            append!(new_grades, \"D-\")\n        else\n\
    \            append!(new_grades, \"E\")\n        end\n    end\n    return new_grades\n\
    end", "    \"\"\"\n    >>> numerical_letter_grade([4.0, 3, 1.7, 2, 3.5])\n   \
    \ 5-element Array{String,1}:\n     \"A+\"\n     \"B\" \n     \"C-\"\n     \"C\"\
    \ \n     \"A-\"\n    \"\"\"\n    letter_grades = String[] #Intialize empty vector\
    \ to store letter grades\n    for grade in grades\n        if grade == 4.0\n \
    \           push!(letter_grades, \"A+\")\n        elseif grade > 3.7\n       \
    \     push!(letter_grades, \"A\")\n        elseif grade > 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grade > 3.0\n            push!(letter_grades, \"B+\"\
    )\n        elseif grade > 2.7\n            push!(letter_grades, \"B\")\n     \
    \   elseif grade > 2.3\n            push!(letter_grades, \"B-\")\n        elseif\
    \ grade > 2.0\n            push!(letter_grades, \"C+\")\n        elseif grade\
    \ > 1.7\n            push!(letter_grades, \"C\")\n        elseif grade > 1.3\n\
    \            push!(letter_grades, \"C-\")\n        elseif grade > 1.0\n      \
    \      push!(letter_grades, \"D+\")\n        elseif grade > 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif grade > 0.0\n            push!(letter_grades, \"D-\"\
    )\n        else\n            push!(letter_grades, \"E\")\n        end\n    end\n\
    \    return letter_grades\nend", "    grades_array = Array{String}(length(grades))\n\
    \    for i in 1:length(grades)\n        if grades[i] >= 4.0\n            grades_array[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            grades_array[i] = \"\
    A\"\n        elseif grades[i] >= 3.3\n            grades_array[i] = \"A-\"\n \
    \       elseif grades[i] >= 3.0\n            grades_array[i] = \"B+\"\n      \
    \  elseif grades[i] >= 2.7\n            grades_array[i] = \"B\"\n        elseif\
    \ grades[i] >= 2.3\n            grades_array[i] = \"B-\"\n        elseif grades[i]\
    \ >= 2.0\n            grades_array[i] = \"C+\"\n        elseif grades[i] >= 1.7\n\
    \            grades_array[i] = \"C\"\n        elseif grades[i] >= 1.3\n      \
    \      grades_array[i] = \"C-\"\n        elseif grades[i] >= 1.0\n           \
    \ grades_array[i] = \"D+\"\n        elseif grades[i] >= 0.7\n            grades_array[i]\
    \ = \"D\"\n        elseif grades[i] >= 0.0\n            grades_array[i] = \"D-\"\
    \n        elseif grades[i] == 0.0\n            grades_array[i] = \"E\"\n     \
    \   end\n    end\n    return grades_array\nend", "    letter_grades = []\n   \
    \ for grade in grades\n        if grade >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     else\n            push!(letter_grades, \"E\")\n        end\n    end\n  \
    \  return letter_grades\nend", "    l = size(grades)[1]\n    letter_grades = []\n\
    \    for i in 1:l\n        if grades[i] == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades, \"\
    A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"A-\"\
    )\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n   \
    \     elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n     \
    \   elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n       \
    \ elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    # ...\nend",
  "    grades_copy = copy(grades)\n    answer = []\n    for g in grades_copy\n   \
    \     if g == 4.0\n            append!(answer, \"A+\")\n        elseif g > 3.7\n\
    \            append!(answer, \"A\")\n        elseif g > 3.3\n            append!(answer,\
    \ \"A-\")\n        elseif g > 3.0\n            append!(answer, \"B+\")\n     \
    \   elseif g > 2.7\n            append!(answer, \"B\")\n        elseif g > 2.3\n\
    \            append!(answer, \"B-\")\n        elseif g > 2.0\n            append!(answer,\
    \ \"C+\")\n        elseif g > 1.7\n            append!(answer, \"C\")\n      \
    \  elseif g > 1.3\n            append!(answer, \"C-\")\n        elseif g > 1.0\n\
    \            append!(answer, \"D+\")\n        elseif g > 0.7\n            append!(answer,\
    \ \"D\")\n        elseif g > 0.0\n            append!(answer, \"D-\")\n      \
    \  else\n            append!(answer, \"E\")\n        end\n    end\n    return\
    \ answer\nend", "    letters = []\n    for grade in grades\n        if grade ==\
    \ 4.0\n            push!(letters, \"A+\")\n        elseif grade > 3.7\n      \
    \      push!(letters, \"A\")\n        elseif grade > 3.3\n            push!(letters,\
    \ \"A-\")\n        elseif grade > 3.0\n            push!(letters, \"B+\")\n  \
    \      elseif grade > 2.7\n            push!(letters, \"B\")\n        elseif grade\
    \ > 2.3\n            push!(letters, \"B-\")\n        elseif grade > 2.0\n    \
    \        push!(letters, \"C+\")\n        elseif grade > 1.7\n            push!(letters,\
    \ \"C\")\n        elseif grade > 1.3\n            push!(letters, \"C-\")\n   \
    \     elseif grade > 1.0\n            push!(letters, \"D+\")\n        elseif grade\
    \ > 0.7\n            push!(letters, \"D\")\n        elseif grade > 0.0\n     \
    \       push!(letters, \"D-\")\n        else\n            push!(letters, \"E\"\
    )\n        end\n    end\n    return letters\nend", "    output = []\n    for grade\
    \ in grades\n        if grade >= 4.0\n            push!(output, \"A+\")\n    \
    \    elseif grade >= 3.7\n            push!(output, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(output, \"A-\")\n        elseif grade >= 3.0\n   \
    \         push!(output, \"B+\")\n        elseif grade >= 2.7\n            push!(output,\
    \ \"B\")\n        elseif grade >= 2.3\n            push!(output, \"B-\")\n   \
    \     elseif grade >= 2.0\n            push!(output, \"C+\")\n        elseif grade\
    \ >= 1.7\n            push!(output, \"C\")\n        elseif grade >= 1.3\n    \
    \        push!(output, \"C-\")\n        elseif grade >= 1.0\n            push!(output,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(output, \"D\")\n   \
    \     elseif grade >= 0.0\n            push!(output, \"D-\")\n        else\n \
    \           push!(output, \"E\")\n        end\n    end\n    return output\nend",
  "    ltr_grades = String[]\n    for grade in grades\n        if grade == 4.0\n \
    \           push!(ltr_grades, \"A+\")\n        elseif grade > 3.7\n          \
    \  push!(ltr_grades, \"A\")\n        elseif grade > 3.3\n            push!(ltr_grades,\
    \ \"A-\")\n        elseif grade > 3.0\n            push!(ltr_grades, \"B+\")\n\
    \        elseif grade > 2.7\n            push!(ltr_grades, \"B\")\n        elseif\
    \ grade > 2.3\n            push!(ltr_grades, \"B-\")\n        elseif grade > 2.0\n\
    \            push!(ltr_grades, \"C+\")\n        elseif grade > 1.7\n         \
    \   push!(ltr_grades, \"C\")\n        elseif grade > 1.3\n            push!(ltr_grades,\
    \ \"C-\")\n        elseif grade > 1.0\n            push!(ltr_grades, \"D+\")\n\
    \        elseif grade > 0.7\n            push!(ltr_grades, \"D\")\n        elseif\
    \ grade > 0.0\n            push!(ltr_grades, \"D-\")\n        else\n         \
    \   push!(ltr_grades, \"E\")\n        end\n    end\n    return ltr_grades\nend",
  "    lg = String[]\n    for grade in grades\n        if grade >= 4.0\n         \
    \   push!(lg, \"A+\")\n        elseif grade >= 3.7\n            push!(lg, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(lg, \"A-\")\n        elseif\
    \ grade >= 3.0\n            push!(lg, \"B+\")\n        elseif grade >= 2.7\n \
    \           push!(lg, \"B\")\n        elseif grade >= 2.3\n            push!(lg,\
    \ \"B-\")\n        elseif grade >= 2.0\n            push!(lg, \"C+\")\n      \
    \  elseif grade >= 1.7\n            push!(lg, \"C\")\n        elseif grade >=\
    \ 1.3\n            push!(lg, \"C-\")\n        elseif grade >= 1.0\n          \
    \  push!(lg, \"D+\")\n        elseif grade >= 0.7\n            push!(lg, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(lg, \"D-\")\n        else\n\
    \            push!(lg, \"E\")\n        end\n    end\n    return lg\nend\n#test\n\
    println(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))", "    \n    grades_strings\
    \ = fill(\"E\", length(grades))\n    \n    for (i, grade) in enumerate(grades)\n\
    \        \n        if grade > 4.0\n            grades_strings[i] = \"A+\"\n  \
    \      elseif grade > 3.7\n            grades_strings[i] = \"A\"\n        elseif\
    \ grade > 3.3\n            grades_strings[i] = \"A-\"\n        elseif grade >\
    \ 3.0\n            grades_strings[i] = \"B+\"\n        elseif grade > 2.7\n  \
    \          grades_strings[i] = \"B\"\n        elseif grade > 2.3\n           \
    \ grades_strings[i] = \"B-\"\n        elseif grade > 2.0\n            grades_strings[i]\
    \ = \"C+\"\n        elseif grade > 1.7\n            grades_strings[i] = \"C\"\n\
    \        elseif grade > 1.3\n            grades_strings[i] = \"C-\"\n        elseif\
    \ grade > 1.0\n            grades_strings[i] = \"D+\"\n        elseif grade >\
    \ 0.7\n            grades_strings[i] = \"D\"\n        elseif grade > 0.0\n   \
    \         grades_strings[i] = \"D-\"\n        elseif grade >= 0.0\n          \
    \  grades_strings[i] = \"E\"\n        end\n        \n    end\n    \n    return\
    \ grades_strings\n    \nend", "    output = Vector{String}(undef, length(grades))\n\
    \    for i in 1:length(grades)\n        if grades[i] >= 4.0\n            output[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            output[i] = \"A\"\n \
    \       elseif grades[i] >= 3.3\n            output[i] = \"A-\"\n        elseif\
    \ grades[i] >= 3.0\n            output[i] = \"B+\"\n        elseif grades[i] >=\
    \ 2.7\n            output[i] = \"B\"\n        elseif grades[i] >= 2.3\n      \
    \      output[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            output[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            output[i] = \"C\"\n \
    \       elseif grades[i] >= 1.3\n            output[i] = \"C-\"\n        elseif\
    \ grades[i] >= 1.0\n            output[i] = \"D+\"\n        elseif grades[i] >=\
    \ 0.7\n            output[i] = \"D\"\n        elseif grades[i] >= 0.0\n      \
    \      output[i] = \"D-\"\n        elseif grades[i] < 0.0\n            output[i]\
    \ = \"E\"\n        end\n    end\n    return output\nend", "    # create empty\
    \ vector for letter grades\n    letter_grades = []\n    # iterate through grades\n\
    \    for grade in grades\n        # grade is an A+\n        if grade == 4.0\n\
    \            push!(letter_grades, \"A+\")\n        # grade is an A\n        elseif\
    \ grade > 3.7\n            push!(letter_grades, \"A\")\n        # grade is an\
    \ A-\n        elseif grade > 3.3\n            push!(letter_grades, \"A-\")\n \
    \       # grade is a B+\n        elseif grade > 3.0\n            push!(letter_grades,\
    \ \"B+\")\n        # grade is a B\n        elseif grade > 2.7\n            push!(letter_grades,\
    \ \"B\")\n        # grade is a B-\n        elseif grade > 2.3\n            push!(letter_grades,\
    \ \"B-\")\n        # grade is a C+\n        elseif grade > 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        # grade is a C\n        elseif grade > 1.7\n            push!(letter_grades,\
    \ \"C\")\n        # grade is a C-\n        elseif grade > 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        # grade is a D+\n        elseif grade > 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        # grade is a D\n        elseif grade > 0.7\n            push!(letter_grades,\
    \ \"D\")\n        # grade is a D-\n        elseif grade > 0.0\n            push!(letter_grades,\
    \ \"D-\")\n        # grade is an E\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    # return grades\n    return letter_grades\n\
    end", "    output_grades = []\n    for i in grades\n        if i >= 4.0\n    \
    \        push!(output_grades, \"A+\")\n        elseif i >= 3.7\n            push!(output_grades,\
    \ \"A\")\n        elseif i >= 3.3\n            push!(output_grades, \"A-\")\n\
    \        elseif i >= 3.0\n            push!(output_grades, \"B+\")\n        elseif\
    \ i >= 2.7\n            push!(output_grades, \"B\")\n        elseif i >= 2.3\n\
    \            push!(output_grades, \"B-\")\n        elseif i >= 2.0\n         \
    \   push!(output_grades, \"C+\")\n        elseif i >= 1.7\n            push!(output_grades,\
    \ \"C\")\n        elseif i >= 1.3\n            push!(output_grades, \"C-\")\n\
    \        elseif i >= 1.0\n            push!(output_grades, \"D+\")\n        elseif\
    \ i >= 0.7\n            push!(output_grades, \"D\")\n        elseif i >= 0.0\n\
    \            push!(output_grades, \"D-\")\n        else\n            push!(output_grades,\
    \ \"E\")\n        end\n    end\n    return output_grades\nend", "    grades_letters\
    \ = []\n    for grade in grades\n        if grade == 4.0\n            push!(grades_letters,\
    \ \"A+\")\n        elseif grade > 3.7\n            push!(grades_letters, \"A\"\
    )\n        elseif grade > 3.3\n            push!(grades_letters, \"A-\")\n   \
    \     elseif grade > 3.0\n            push!(grades_letters, \"B+\")\n        elseif\
    \ grade > 2.7\n            push!(grades_letters, \"B\")\n        elseif grade\
    \ > 2.3\n            push!(grades_letters, \"B-\")\n        elseif grade > 2.0\n\
    \            push!(grades_letters, \"C+\")\n        elseif grade > 1.7\n     \
    \       push!(grades_letters, \"C\")\n        elseif grade > 1.3\n           \
    \ push!(grades_letters, \"C-\")\n        elseif grade > 1.0\n            push!(grades_letters,\
    \ \"D+\")\n        elseif grade > 0.7\n            push!(grades_letters, \"D\"\
    )\n        elseif grade > 0.0\n            push!(grades_letters, \"D-\")\n   \
    \     elseif grade == 0.0\n            push!(grades_letters, \"E\")\n        end\n\
    \    end\n    return grades_letters\nend", "    \n    letter_grades = []\n   \
    \ \n    for i in grades\n        if i >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif i >= 3.7\n            push!(letter_grades, \"A\")\n\
    \        elseif i >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ i >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif i >= 2.7\n\
    \            push!(letter_grades, \"B\")\n        elseif i >= 2.3\n          \
    \  push!(letter_grades, \"B-\")\n        elseif i >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif i >= 1.7\n            push!(letter_grades, \"C\")\n\
    \        elseif i >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ i >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif i >= 0.0\n          \
    \  push!(letter_grades, \"D-\")\n        elseif i >= 0.0\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    \n    return letter_grades\nend", "    letter_grades\
    \ = \"\"\n    for grade in grades\n        if grade >= 4.0\n            letter_grades\
    \ = push!(letter_grades, \"A+\")\n        elseif grade >= 3.7\n            letter_grades\
    \ = push!(letter_grades, \"A\")\n        elseif grade >= 3.3\n            letter_grades\
    \ = push!(letter_grades, \"A-\")\n        elseif grade >= 3.0\n            letter_grades\
    \ = push!(letter_grades, \"B+\")\n        elseif grade >= 2.7\n            letter_grades\
    \ = push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n            letter_grades\
    \ = push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n            letter_grades\
    \ = push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n            letter_grades\
    \ = push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n            letter_grades\
    \ = push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            letter_grades\
    \ = push!(letter_grades, \"D+\")\n        elseif grade >= 0.7\n            letter_grades\
    \ = push!(letter_grades, \"D\")\n        elseif grade >= 0.0\n            letter_grades\
    \ = push!(letter_grades, \"D-\")\n        elseif grade >= 0.0\n            letter_grades\
    \ = push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    # Write your code here\n    grades_letters = []\n    for grade in grades\n\
    \        if grade >= 4.0\n            push!(grades_letters, \"A+\")\n        elseif\
    \ grade >= 3.7\n            push!(grades_letters, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(grades_letters, \"A-\")\n        elseif grade >= 3.0\n\
    \            push!(grades_letters, \"B+\")\n        elseif grade >= 2.7\n    \
    \        push!(grades_letters, \"B\")\n        elseif grade >= 2.3\n         \
    \   push!(grades_letters, \"B-\")\n        elseif grade >= 2.0\n            push!(grades_letters,\
    \ \"C+\")\n        elseif grade >= 1.7\n            push!(grades_letters, \"C\"\
    )\n        elseif grade >= 1.3\n            push!(grades_letters, \"C-\")\n  \
    \      elseif grade >= 1.0\n            push!(grades_letters, \"D+\")\n      \
    \  elseif grade >= 0.7\n            push!(grades_letters, \"D\")\n        elseif\
    \ grade >= 0.0\n            push!(grades_letters, \"D-\")\n        else\n    \
    \        push!(grades_letters, \"E\")\n        end\n    end\n    return grades_letters\n\
    end", "    letter_grades = [] \n    for grade in grades \n        if grade ==\
    \ 4.0 \n            push!(letter_grades, \"A+\")\n        elseif grade > 3.7 \n\
    \            push!(letter_grades, \"A\")\n        elseif grade > 3.3 \n      \
    \      push!(letter_grades, \"A-\")\n        elseif grade > 3.0 \n           \
    \ push!(letter_grades, \"B+\")\n        elseif grade > 2.7 \n            push!(letter_grades,\
    \ \"B\")\n        elseif grade > 2.3 \n            push!(letter_grades, \"B-\"\
    )\n        elseif grade > 2.0 \n            push!(letter_grades, \"C+\")\n   \
    \     elseif grade > 1.7 \n            push!(letter_grades, \"C\")\n        elseif\
    \ grade > 1.3 \n            push!(letter_grades, \"C-\")\n        elseif grade\
    \ > 1.0 \n            push!(letter_grades, \"D+\")\n        elseif grade > 0.7\
    \ \n            push!(letter_grades, \"D\")\n        elseif grade > 0.0 \n   \
    \         push!(letter_grades, \"D-\")\n        elseif grade == 0.0 \n       \
    \     push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    letter_grade = []\n    for i in grades\n        if i == 4.0\n     \
    \       push!(letter_grade, \"A+\")\n        elseif i > 3.7\n            push!(letter_grade,\
    \ \"A\")\n        elseif i > 3.3\n            push!(letter_grade, \"A-\")\n  \
    \      elseif i > 3.0\n            push!(letter_grade, \"B+\")\n        elseif\
    \ i > 2.7\n            push!(letter_grade, \"B\")\n        elseif i > 2.3\n  \
    \          push!(letter_grade, \"B-\")\n        elseif i > 2.0\n            push!(letter_grade,\
    \ \"C+\")\n        elseif i > 1.7\n            push!(letter_grade, \"C\")\n  \
    \      elseif i > 1.3\n            push!(letter_grade, \"C-\")\n        elseif\
    \ i > 1.0\n            push!(letter_grade, \"D+\")\n        elseif i > 0.7\n \
    \           push!(letter_grade, \"D\")\n        elseif i > 0.0\n            push!(letter_grade,\
    \ \"D-\")\n        else\n            push!(letter_grade, \"E\")\n        end\n\
    \    end\n    return letter_grade\nend", "    n = length(grades)\n    letter_grades\
    \ = Array{String}(n)\n    for i in 1:n\n        if grades[i] >= 4.0\n        \
    \    letter_grades[i] = \"A+\"\n        elseif grades[i] >= 3.7\n            letter_grades[i]\
    \ = \"A\"\n        elseif grades[i] >= 3.3\n            letter_grades[i] = \"\
    A-\"\n        elseif grades[i] >= 3.0\n            letter_grades[i] = \"B+\"\n\
    \        elseif grades[i] >= 2.7\n            letter_grades[i] = \"B\"\n     \
    \   elseif grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n        elseif\
    \ grades[i] >= 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i]\
    \ >= 1.7\n            letter_grades[i] = \"C\"\n        elseif grades[i] >= 1.3\n\
    \            letter_grades[i] = \"C-\"\n        elseif grades[i] >= 1.0\n    \
    \        letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n        \
    \    letter_grades[i] = \"D\"\n        elseif grades[i] >= 0.0\n            letter_grades[i]\
    \ = \"D-\"\n        else\n            letter_grades[i] = \"E\"\n        end\n\
    \    end\n    return letter_grades\nend", "    \n    lst = []\n    for g in grades\n\
    \        if g == 4.0\n            push!(lst, \"A+\")\n        elseif g > 3.7\n\
    \            push!(lst, \"A\")\n        elseif g > 3.3\n            push!(lst,\
    \ \"A-\")\n        elseif g > 3.0\n            push!(lst, \"B+\")\n        elseif\
    \ g > 2.7\n            push!(lst, \"B\")\n        elseif g > 2.3\n           \
    \ push!(lst, \"B-\")\n        elseif g > 2.0\n            push!(lst, \"C+\")\n\
    \        elseif g > 1.7\n            push!(lst, \"C\")\n        elseif g > 1.3\n\
    \            push!(lst, \"C-\")\n        elseif g > 1.0\n            push!(lst,\
    \ \"D+\")\n        elseif g > 0.7\n            push!(lst, \"D\")\n        elseif\
    \ g > 0.0\n            push!(lst, \"D-\")\n        else\n            push!(lst,\
    \ \"E\")\n        end\n    end\n    return lst\nend", "    grade_list = []\n \
    \   for g in grades\n        if g == 4.0\n            push!(grade_list, \"A+\"\
    )\n        elseif g > 3.7 && g < 4.0\n            push!(grade_list, \"A\")\n \
    \       elseif g > 3.3 && g < 3.7\n            push!(grade_list, \"A-\")\n   \
    \     elseif g > 3.0 && g < 3.3\n            push!(grade_list, \"B+\")\n     \
    \   elseif g > 2.7 && g < 3.0\n            push!(grade_list, \"B\")\n        elseif\
    \ g > 2.3 && g < 2.7\n            push!(grade_list, \"B-\")\n        elseif g\
    \ > 2.0 && g < 2.3\n            push!(grade_list, \"C+\")\n        elseif g >\
    \ 1.7 && g < 2.0\n            push!(grade_list, \"C\")\n        elseif g > 1.3\
    \ && g < 1.7\n            push!(grade_list, \"C-\")\n        elseif g > 1.0 &&\
    \ g < 1.3\n            push!(grade_list, \"D+\")\n        elseif g > 0.7 && g\
    \ < 1.0\n            push!(grade_list, \"D\")\n        elseif g > 0.0 && g < 0.7\n\
    \            push!(grade_list, \"D-\")\n        elseif g == 0.0\n            push!(grade_list,\
    \ \"E\")\n        end\n    end\n    return grade_list\nend", "    return map(x\
    \ -> x < 4.0 ? \n    x < 3.7 ? \n    x < 3.3 ? \n    x < 3.0 ? \n    x < 2.7 ?\
    \ \n    x < 2.3 ? \n    x < 2.0 ? \n    x < 1.7 ? \n    x < 1.3 ? \n    x < 1.0\
    \ ? \n    x < 0.7 ? \n    x < 0.0 ? \n    x < 0.0 ? \"E\" : \"D-\" : \"D\" : \"\
    D+\" : \"C-\" : \"C\" : \"C+\" : \"B-\" : \"B\" : \"B+\" : \"A-\" : \"A\" : \"\
    A+\", grades)\nend", "    grades_letter = []\n    for grade in grades\n      \
    \  if grade == 4.0\n            push!(grades_letter, \"A+\")\n        elseif grade\
    \ > 3.7\n            push!(grades_letter, \"A\")\n        elseif grade > 3.3\n\
    \            push!(grades_letter, \"A-\")\n        elseif grade > 3.0\n      \
    \      push!(grades_letter, \"B+\")\n        elseif grade > 2.7\n            push!(grades_letter,\
    \ \"B\")\n        elseif grade > 2.3\n            push!(grades_letter, \"B-\"\
    )\n        elseif grade > 2.0\n            push!(grades_letter, \"C+\")\n    \
    \    elseif grade > 1.7\n            push!(grades_letter, \"C\")\n        elseif\
    \ grade > 1.3\n            push!(grades_letter, \"C-\")\n        elseif grade\
    \ > 1.0\n            push!(grades_letter, \"D+\")\n        elseif grade > 0.7\n\
    \            push!(grades_letter, \"D\")\n        elseif grade > 0.0\n       \
    \     push!(grades_letter, \"D-\")\n        else\n            push!(grades_letter,\
    \ \"E\")\n        end\n    end\n    return grades_letter\nend", "    letter_grades\
    \ = []\n    for g in grades\n        if g >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif g >= 3.7\n            push!(letter_grades, \"A\")\n\
    \        elseif g >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ g >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif g >= 2.7\n\
    \            push!(letter_grades, \"B\")\n        elseif g >= 2.3\n          \
    \  push!(letter_grades, \"B-\")\n        elseif g >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif g >= 1.7\n            push!(letter_grades, \"C\")\n\
    \        elseif g >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ g >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif g >= 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif g >= 0.0\n          \
    \  push!(letter_grades, \"D-\")\n        elseif g >= 0.0\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    result =\
    \ [String]()\n    for grade in grades\n        if grade >= 4.0\n            push!(result,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(result, \"A\")\n   \
    \     elseif grade >= 3.3\n            push!(result, \"A-\")\n        elseif grade\
    \ >= 3.0\n            push!(result, \"B+\")\n        elseif grade >= 2.7\n   \
    \         push!(result, \"B\")\n        elseif grade >= 2.3\n            push!(result,\
    \ \"B-\")\n        elseif grade >= 2.0\n            push!(result, \"C+\")\n  \
    \      elseif grade >= 1.7\n            push!(result, \"C\")\n        elseif grade\
    \ >= 1.3\n            push!(result, \"C-\")\n        elseif grade >= 1.0\n   \
    \         push!(result, \"D+\")\n        elseif grade >= 0.7\n            push!(result,\
    \ \"D\")\n        elseif grade >= 0.0\n            push!(result, \"D-\")\n   \
    \     else\n            push!(result, \"E\")\n        end\n    end\n    return\
    \ result\nend\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])", "    \"\"\"Function\
    \ that converts numerical grades to letter grades.\"\"\"\n    # Your code here\n\
    \    grades_converted = Vector{String}(length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            grades_converted[i] = \"A+\"\n     \
    \   elseif grades[i] > 3.7\n            grades_converted[i] = \"A\"\n        elseif\
    \ grades[i] > 3.3\n            grades_converted[i] = \"A-\"\n        elseif grades[i]\
    \ > 3.0\n            grades_converted[i] = \"B+\"\n        elseif grades[i] >\
    \ 2.7\n            grades_converted[i] = \"B\"\n        elseif grades[i] > 2.3\n\
    \            grades_converted[i] = \"B-\"\n        elseif grades[i] > 2.0\n  \
    \          grades_converted[i] = \"C+\"\n        elseif grades[i] > 1.7\n    \
    \        grades_converted[i] = \"C\"\n        elseif grades[i] > 1.3\n       \
    \     grades_converted[i] = \"C-\"\n        elseif grades[i] > 1.0\n         \
    \   grades_converted[i] = \"D+\"\n        elseif grades[i] > 0.7\n           \
    \ grades_converted[i] = \"D\"\n        elseif grades[i] > 0.0\n            grades_converted[i]\
    \ = \"D-\"\n        elseif grades[i] == 0.0\n            grades_converted[i] =\
    \ \"E\"\n        end\n    end\n    return grades_converted\nend\nprintln(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    \n    grades_length = length(grades)\n    letter_grades\
    \ = fill(string(\"\"), grades_length)", "   letter_grades = []\n    for grade\
    \ in grades\n        if grade >= 4.0\n            push!(letter_grades, \"A+\"\
    )\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\")\n    \
    \    elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif grade\
    \ >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n\
    \            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n     \
    \       push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n          \
    \  push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades, \"D+\"\
    )\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\")\n    \
    \    elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n        elseif\
    \ grade == 0.0\n            push!(letter_grades, \"E\")\n        end\n    end\n\
    \    return letter_grades\nend", "    # YOUR CODE HERE\n    return [\"B+\" for\
    \ i in 1:length(grades)]\nend", "    letter = []\n    for i in 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            push!(letter, \"A+\")\n        elseif\
    \ grades[i] > 3.7\n            push!(letter, \"A\")\n        elseif grades[i]\
    \ > 3.3\n            push!(letter, \"A-\")\n        elseif grades[i] > 3.0\n \
    \           push!(letter, \"B+\")\n        elseif grades[i] > 2.7\n          \
    \  push!(letter, \"B\")\n        elseif grades[i] > 2.3\n            push!(letter,\
    \ \"B-\")\n        elseif grades[i] > 2.0\n            push!(letter, \"C+\")\n\
    \        elseif grades[i] > 1.7\n            push!(letter, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter, \"D+\")\n        elseif grades[i] > 0.7\n \
    \           push!(letter, \"D\")\n        elseif grades[i] > 0.0\n           \
    \ push!(letter, \"D-\")\n        else\n            push!(letter, \"E\")\n    \
    \    end\n    end\n    return letter\nend\nnumerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5])", "    output = \"\"\n    for grade in grades\n        if grade ==\
    \ 4.0\n            output = output * \"A+ \"\n        elseif grade > 3.7\n   \
    \         output = output * \"A \"\n        elseif grade > 3.3\n            output\
    \ = output * \"A- \"\n        elseif grade > 3.0\n            output = output\
    \ * \"B+ \"\n        elseif grade > 2.7\n            output = output * \"B \"\n\
    \        elseif grade > 2.3\n            output = output * \"B- \"\n        elseif\
    \ grade > 2.0\n            output = output * \"C+ \"\n        elseif grade > 1.7\n\
    \            output = output * \"C \"\n        elseif grade > 1.3\n          \
    \  output = output * \"C- \"\n        elseif grade > 1.0\n            output =\
    \ output * \"D+ \"\n        elseif grade > 0.7\n            output = output *\
    \ \"D \"\n        elseif grade > 0.0\n            output = output * \"D- \"\n\
    \        else\n            output = output * \"E \"\n        end\n    end\n  \
    \  return split(output)\nend", "    grade_table = Dict('A+' => 4.0, 'A' => 3.7,\
    \ 'A-' => 3.3, 'B+' => 3.0, \n    'B' => 2.7, 'B-' => 2.3, 'C+' => 2.0, 'C' =>\
    \ 1.7, 'C-' => 1.3, 'D+' => 1.0, \n    'D' => 0.7, 'D-' => 0.0, 'E' => 0.0)\n\
    \    letter_grades = []\n    for grade in grades\n        for key in sort(collect(keys(grade_table)),\
    \ rev=true)\n            if grade >= grade_table[key]\n                push!(letter_grades,\
    \ key)\n                break\n            end\n        end\n    end\n    return\
    \ letter_grades\nend", "    \n    letter_grades = Vector{String}(undef,length(grades))\n\
    \    \n    for (i,grade) in enumerate(grades)\n        if grade >= 4.0\n     \
    \       letter_grades[i] = \"A+\"\n        elseif grade >= 3.7\n            letter_grades[i]\
    \ = \"A\"\n        elseif grade >= 3.3\n            letter_grades[i] = \"A-\"\n\
    \        elseif grade >= 3.0\n            letter_grades[i] = \"B+\"\n        elseif\
    \ grade >= 2.7\n            letter_grades[i] = \"B\"\n        elseif grade >=\
    \ 2.3\n            letter_grades[i] = \"B-\"\n        elseif grade >= 2.0\n  \
    \          letter_grades[i] = \"C+\"\n        elseif grade >= 1.7\n          \
    \  letter_grades[i] = \"C\"\n        elseif grade >= 1.3\n            letter_grades[i]\
    \ = \"C-\"\n        elseif grade >= 1.0\n            letter_grades[i] = \"D+\"\
    \n        elseif grade >= 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grade >= 0.0\n            letter_grades[i] = \"D-\"\n        else\n        \
    \    letter_grades[i] = \"E\"\n        end\n    end\n    \n    return letter_grades\n\
    end", "    z = zeros(length(grades))\n    for i = 1:length(grades)\n        if\
    \ grades[i] == 4.0\n            z[i] = \"A+\"\n        elseif grades[i] >= 3.7\n\
    \            z[i] = \"A\"\n        elseif grades[i] >= 3.3\n            z[i] =\
    \ \"A-\"\n        elseif grades[i] >= 3.0\n            z[i] = \"B+\"\n       \
    \ elseif grades[i] >= 2.7\n            z[i] = \"B\"\n        elseif grades[i]\
    \ >= 2.3\n            z[i] = \"B-\"\n        elseif grades[i] >= 2.0\n       \
    \     z[i] = \"C+\"\n        elseif grades[i] >= 1.7\n            z[i] = \"C\"\
    \n        elseif grades[i] >= 1.3\n            z[i] = \"C-\"\n        elseif grades[i]\
    \ >= 1.0\n            z[i] = \"D+\"\n        elseif grades[i] >= 0.7\n       \
    \     z[i] = \"D\"\n        elseif grades[i] >= 0.0\n            z[i] = \"D-\"\
    \n        elseif grades[i] == 0.0\n            z[i] = \"E\"\n        end\n   \
    \ end\n    return z\nend", "    let\n        letter_grade = [\"A+\", \"A\", \"\
    A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"\
    E\"]\n        lower_bound = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0,\
    \ 0.7, 0.0, 0.0]\n        upper_bound = [0.0, 4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0,\
    \ 1.7, 1.3, 1.0, 0.7, 0.0]\n    end\n    letter_grades = Vector{String}(length(grades))\n\
    \    for i in 1:length(grades)\n        for j in 1:length(lower_bound)\n     \
    \       if grades[i] <= lower_bound[j] && grades[i] > upper_bound[j]\n       \
    \         letter_grades[i] = letter_grade[j]\n            end\n        end\n \
    \   end\n    return letter_grades\nend", "    \n    grades_letters = []\n    \n\
    \    for g in grades\n        if g >= 4.0\n            push!(grades_letters, \"\
    A+\")\n        elseif g >= 3.7\n            push!(grades_letters, \"A\")\n   \
    \     elseif g >= 3.3\n            push!(grades_letters, \"A-\")\n        elseif\
    \ g >= 3.0\n            push!(grades_letters, \"B+\")\n        elseif g >= 2.7\n\
    \            push!(grades_letters, \"B\")\n        elseif g >= 2.3\n         \
    \   push!(grades_letters, \"B-\")\n        elseif g >= 2.0\n            push!(grades_letters,\
    \ \"C+\")\n        elseif g >= 1.7\n            push!(grades_letters, \"C\")\n\
    \        elseif g >= 1.3\n            push!(grades_letters, \"C-\")\n        elseif\
    \ g >= 1.0\n            push!(grades_letters, \"D+\")\n        elseif g >= 0.7\n\
    \            push!(grades_letters, \"D\")\n        elseif g >= 0.0\n         \
    \   push!(grades_letters, \"D-\")\n        else\n            push!(grades_letters,\
    \ \"E\")\n        end\n    end\n    \n    return grades_letters\nend", "    \"\
    \"\"\n    This function takes in a vector of grades that is of type Float64\n\
    \    and outputs a vector that contains the letter grades.\n    \"\"\"\n    grades_length\
    \ = length(grades)\n    output = fill(String, grades_length)\n    for i in 1:grades_length\n\
    \        if grades[i] > 3.7\n            output[i] = \"A\"\n        elseif grades[i]\
    \ > 3.3\n            output[i] = \"A-\"\n        elseif grades[i] > 3.0\n    \
    \        output[i] = \"B+\"\n        elseif grades[i] > 2.7\n            output[i]\
    \ = \"B\"\n        elseif grades[i] > 2.3\n            output[i] = \"B-\"\n  \
    \      elseif grades[i] > 2.0\n            output[i] = \"C+\"\n        elseif\
    \ grades[i] > 1.7\n            output[i] = \"C\"\n        elseif grades[i] > 1.3\n\
    \            output[i] = \"C-\"\n        elseif grades[i] > 1.0\n            output[i]\
    \ = \"D+\"\n        elseif grades[i] > 0.7\n            output[i] = \"D\"\n  \
    \      elseif grades[i] > 0.0\n            output[i] = \"D-\"\n        else\n\
    \            output[i] = \"E\"\n        end\n    end\n    return output\nend",
  "    answer = []\n    for i = 1:length(grades)\n        if grades[i] == 4.0\n  \
    \          push!(answer, \"A+\")\n        elseif grades[i] > 3.7\n           \
    \ push!(answer, \"A\")\n        elseif grades[i] > 3.3\n            push!(answer,\
    \ \"A-\")\n        elseif grades[i] > 3.0\n            push!(answer, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(answer, \"B\")\n        elseif\
    \ grades[i] > 2.3\n            push!(answer, \"B-\")\n        elseif grades[i]\
    \ > 2.0\n            push!(answer, \"C+\")\n        elseif grades[i] > 1.7\n \
    \           push!(answer, \"C\")\n        elseif grades[i] > 1.3\n           \
    \ push!(answer, \"C-\")\n        elseif grades[i] > 1.0\n            push!(answer,\
    \ \"D+\")\n        elseif grades[i] > 0.7\n            push!(answer, \"D\")\n\
    \        elseif grades[i] > 0.0\n            push!(answer, \"D-\")\n        else\n\
    \            push!(answer, \"E\")\n        end\n    end\n    return answer\nend",
  "    letter_grades = []\n    for grade in grades\n        if grade == 4.0\n    \
    \        push!(letter_grades, \"A+\")\n        elseif grade > 3.7\n          \
    \  push!(letter_grades, \"A\")\n        elseif grade > 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grade > 3.0\n            push!(letter_grades, \"B+\"\
    )\n        elseif grade > 2.7\n            push!(letter_grades, \"B\")\n     \
    \   elseif grade > 2.3\n            push!(letter_grades, \"B-\")\n        elseif\
    \ grade > 2.0\n            push!(letter_grades, \"C+\")\n        elseif grade\
    \ > 1.7\n            push!(letter_grades, \"C\")\n        elseif grade > 1.3\n\
    \            push!(letter_grades, \"C-\")\n        elseif grade > 1.0\n      \
    \      push!(letter_grades, \"D+\")\n        elseif grade > 0.7\n            push!(letter_grades,\
    \ \"D\")\n        elseif grade > 0.0\n            push!(letter_grades, \"D-\"\
    )\n        elseif grade == 0.0\n            push!(letter_grades, \"E\")\n    \
    \    end\n    end\n    return letter_grades\nend", "    # Find number of grades\n\
    \    n = length(grades)\n    # Initialize a vector of string to hold the letter\
    \ grades.\n    letter_grades = [\"\" for i = 1:n]\n    # Loop through grades and\
    \ assign letter grades\n    for i in 1:n\n        if grades[i] < 0\n         \
    \   letter_grades[i] = \"E\"\n        elseif grades[i] < 0.7\n            letter_grades[i]\
    \ = \"D-\"\n        elseif grades[i] < 1.0\n            letter_grades[i] = \"\
    D+\"\n        elseif grades[i] < 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grades[i] < 1.7\n            letter_grades[i] = \"C\"\n      \
    \  elseif grades[i] < 2.0\n            letter_grades[i] = \"C+\"\n        elseif\
    \ grades[i] < 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ < 2.7\n            letter_grades[i] = \"B\"\n        elseif grades[i] < 3.0\n\
    \            letter_grades[i] = \"B+\"\n        elseif grades[i] < 3.3\n     \
    \       letter_grades[i] = \"A-\"\n        elseif grades[i] < 3.7\n          \
    \  letter_grades[i] = \"A\"\n        else\n            letter_grades[i] = \"A+\"\
    \n        end\n    end\n    return letter_grades\nend", "    grades_letter_grade\
    \ = []\n    for i in grades\n        if i == 4.0\n            push!(grades_letter_grade,\
    \ \"A+\")\n        elseif i > 3.7\n            push!(grades_letter_grade, \"A\"\
    )\n        elseif i > 3.3\n            push!(grades_letter_grade, \"A-\")\n  \
    \      elseif i > 3.0\n            push!(grades_letter_grade, \"B+\")\n      \
    \  elseif i > 2.7\n            push!(grades_letter_grade, \"B\")\n        elseif\
    \ i > 2.3\n            push!(grades_letter_grade, \"B-\")\n        elseif i >\
    \ 2.0\n            push!(grades_letter_grade, \"C+\")\n        elseif i > 1.7\n\
    \            push!(grades_letter_grade, \"C\")\n        elseif i > 1.3\n     \
    \       push!(grades_letter_grade, \"C-\")\n        elseif i > 1.0\n         \
    \   push!(grades_letter_grade, \"D+\")\n        elseif i > 0.7\n            push!(grades_letter_grade,\
    \ \"D\")\n        elseif i > 0.0\n            push!(grades_letter_grade, \"D-\"\
    )\n        else\n            push!(grades_letter_grade, \"E\")\n        end\n\
    \    end\n    return grades_letter_grade\nend", "    output = []\n    for grade\
    \ in grades\n        if grade >= 4.0\n            push!(output, \"A+\")\n    \
    \    elseif grade >= 3.7\n            push!(output, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(output, \"A-\")\n        elseif grade >= 3.0\n   \
    \         push!(output, \"B+\")\n        elseif grade >= 2.7\n            push!(output,\
    \ \"B\")\n        elseif grade >= 2.3\n            push!(output, \"B-\")\n   \
    \     elseif grade >= 2.0\n            push!(output, \"C+\")\n        elseif grade\
    \ >= 1.7\n            push!(output, \"C\")\n        elseif grade >= 1.3\n    \
    \        push!(output, \"C-\")\n        elseif grade >= 1.0\n            push!(output,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(output, \"D\")\n   \
    \     elseif grade >= 0.0\n            push!(output, \"D-\")\n        elseif grade\
    \ == 0.0\n            push!(output, \"E\")\n        end\n    end\n    return output\n\
    end", "    \n    letter_grade = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\"\
    , \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    numerical_grade =\
    \ [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    student_grade\
    \ = []\n    \n    for i in 1:length(grades)\n        for j in 1:length(numerical_grade)\n\
    \            if grades[i] >= numerical_grade[j]\n                push!(student_grade,\
    \ letter_grade[j])\n                break\n            end\n        end\n    end\n\
    \    \n    return student_grade\nend\n    \n    \n    \n    \n    ", "    letters\
    \ = Vector{String}()\n    for i in grades\n        if i == 4.0\n            push!(letters,\
    \ \"A+\")\n        elseif i > 3.7\n            push!(letters, \"A\")\n       \
    \ elseif i > 3.3\n            push!(letters, \"A-\")\n        elseif i > 3.0\n\
    \            push!(letters, \"B+\")\n        elseif i > 2.7\n            push!(letters,\
    \ \"B\")\n        elseif i > 2.3\n            push!(letters, \"B-\")\n       \
    \ elseif i > 2.0\n            push!(letters, \"C+\")\n        elseif i > 1.7\n\
    \            push!(letters, \"C\")\n        elseif i > 1.3\n            push!(letters,\
    \ \"C-\")\n        elseif i > 1.0\n            push!(letters, \"D+\")\n      \
    \  elseif i > 0.7\n            push!(letters, \"D\")\n        elseif i > 0.0\n\
    \            push!(letters, \"D-\")\n        elseif i == 0.0\n            push!(letters,\
    \ \"E\")\n        end\n    end\n    return letters\nend", "    grades_out = []\n\
    \    for g in grades\n        grade_out = \"\"\n        if g < 0.7\n         \
    \   grade_out = \"E\"\n        elseif g < 1.0\n            grade_out = \"D-\"\n\
    \        elseif g < 1.3\n            grade_out = \"D+\"\n        elseif g < 1.7\n\
    \            grade_out = \"C-\"\n        elseif g < 2.0\n            grade_out\
    \ = \"C\"\n        elseif g < 2.3\n            grade_out = \"C+\"\n        elseif\
    \ g < 2.7\n            grade_out = \"B-\"\n        elseif g < 3.0\n          \
    \  grade_out = \"B\"\n        elseif g < 3.3\n            grade_out = \"B+\"\n\
    \        elseif g < 3.7\n            grade_out = \"A-\"\n        elseif g <= 4.0\n\
    \            grade_out = \"A\"\n        else\n            grade_out = \"A+\"\n\
    \        end\n        push!(grades_out, grade_out)\n    end\n    return grades_out\n\
    end", "    grade_list = []\n    for i in grades\n        if i >= 4.0\n       \
    \     push!(grade_list, \"A+\")\n        elseif i > 3.7\n            push!(grade_list,\
    \ \"A\")\n        elseif i > 3.3\n            push!(grade_list, \"A-\")\n    \
    \    elseif i > 3.0\n            push!(grade_list, \"B+\")\n        elseif i >\
    \ 2.7\n            push!(grade_list, \"B\")\n        elseif i > 2.3\n        \
    \    push!(grade_list, \"B-\")\n        elseif i > 2.0\n            push!(grade_list,\
    \ \"C+\")\n        elseif i > 1.7\n            push!(grade_list, \"C\")\n    \
    \    elseif i > 1.3\n            push!(grade_list, \"C-\")\n        elseif i >\
    \ 1.0\n            push!(grade_list, \"D+\")\n        elseif i > 0.7\n       \
    \     push!(grade_list, \"D\")\n        elseif i > 0.0\n            push!(grade_list,\
    \ \"D-\")\n        else\n            push!(grade_list, \"E\")\n        end\n \
    \   end\n    return grade_list\nend", "    letter_grades = Vector{String}(undef,\
    \ size(grades, 1))\n    i = 1\n    while i <= size(grades, 1)\n        if grades[i]\
    \ == 4.0\n            letter_grades[i] = \"A+\"\n        elseif grades[i] >= 3.7\n\
    \            letter_grades[i] = \"A\"\n        elseif grades[i] >= 3.3\n     \
    \       letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n         \
    \   letter_grades[i] = \"B+\"\n        elseif grades[i] >= 2.7\n            letter_grades[i]\
    \ = \"B\"\n        elseif grades[i] >= 2.3\n            letter_grades[i] = \"\
    B-\"\n        elseif grades[i] >= 2.0\n            letter_grades[i] = \"C+\"\n\
    \        elseif grades[i] >= 1.7\n            letter_grades[i] = \"C\"\n     \
    \   elseif grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n        elseif\
    \ grades[i] >= 1.0\n            letter_grades[i] = \"D+\"\n        elseif grades[i]\
    \ >= 0.7\n            letter_grades[i] = \"D\"\n        elseif grades[i] >= 0.0\n\
    \            letter_grades[i] = \"D-\"\n        elseif grades[i] == 0.0\n    \
    \        letter_grades[i] = \"E\"\n        end\n        i += 1\n    end\n    return\
    \ letter_grades\nend", "    grade_1 = [] \n    for g in grades\n        if g >=\
    \ 4.0\n            push!(grade_1, \"A+\")\n        elseif g >= 3.7\n         \
    \   push!(grade_1, \"A\")\n        elseif g >= 3.3\n            push!(grade_1,\
    \ \"A-\")\n        elseif g >= 3.0\n            push!(grade_1, \"B+\")\n     \
    \   elseif g >= 2.7\n            push!(grade_1, \"B\")\n        elseif g >= 2.3\n\
    \            push!(grade_1, \"B-\")\n        elseif g >= 2.0\n            push!(grade_1,\
    \ \"C+\")\n        elseif g >= 1.7\n            push!(grade_1, \"C\")\n      \
    \  elseif g >= 1.3\n            push!(grade_1, \"C-\")\n        elseif g >= 1.0\n\
    \            push!(grade_1, \"D+\")\n        elseif g >= 0.7\n            push!(grade_1,\
    \ \"D\")\n        elseif g >= 0.0\n            push!(grade_1, \"D-\")\n      \
    \  elseif g == 0.0\n            push!(grade_1, \"E\")\n        end\n    end\n\
    \    return grade_1\nend", "    letters = Vector{String}(length(grades))\n   \
    \ for i in 1:length(grades)\n        if grades[i] >= 4.0\n            letters[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            letters[i] = \"A\"\n\
    \        elseif grades[i] >= 3.3\n            letters[i] = \"A-\"\n        elseif\
    \ grades[i] >= 3.0\n            letters[i] = \"B+\"\n        elseif grades[i]\
    \ >= 2.7\n            letters[i] = \"B\"\n        elseif grades[i] >= 2.3\n  \
    \          letters[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            letters[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            letters[i] = \"C\"\n\
    \        elseif grades[i] >= 1.3\n            letters[i] = \"C-\"\n        elseif\
    \ grades[i] >= 1.0\n            letters[i] = \"D+\"\n        elseif grades[i]\
    \ >= 0.7\n            letters[i] = \"D\"\n        elseif grades[i] >= 0.0\n  \
    \          letters[i] = \"D-\"\n        else\n            letters[i] = \"E\"\n\
    \        end\n    end\n    return letters\nend\nnumerical_letter_grade([4.0, 3,\
    \ 1.7, 2, 3.5])", "    letter_grade = []\n    for grade in grades\n        if\
    \ grade >= 4.0\n            push!(letter_grade, \"A+\")\n        elseif 3.7 <=\
    \ grade < 4.0\n            push!(letter_grade, \"A\")\n        elseif 3.3 <= grade\
    \ < 3.7\n            push!(letter_grade, \"A-\")\n        elseif 3.0 <= grade\
    \ < 3.3\n            push!(letter_grade, \"B+\")\n        elseif 2.7 <= grade\
    \ < 3.0\n            push!(letter_grade, \"B\")\n        elseif 2.3 <= grade <\
    \ 2.7\n            push!(letter_grade, \"B-\")\n        elseif 2.0 <= grade <\
    \ 2.3\n            push!(letter_grade, \"C+\")\n        elseif 1.7 <= grade <\
    \ 2.0\n            push!(letter_grade, \"C\")\n        elseif 1.3 <= grade < 1.7\n\
    \            push!(letter_grade, \"C-\")\n        elseif 1.0 <= grade < 1.3\n\
    \            push!(letter_grade, \"D+\")\n        elseif 0.7 <= grade < 1.0\n\
    \            push!(letter_grade, \"D\")\n        elseif 0.0 <= grade < 0.7\n \
    \           push!(letter_grade, \"D-\")\n        else\n            push!(letter_grade,\
    \ \"E\")\n        end\n    end\n    return letter_grade\nend", "    letters =\
    \ Vector{String}(undef, size(grades, 1))\n    for (i, grade) in enumerate(grades)\n\
    \        if grade == 4.0\n            letters[i] = \"A+\"\n        elseif grade\
    \ > 3.7\n            letters[i] = \"A\"\n        elseif grade > 3.3\n        \
    \    letters[i] = \"A-\"\n        elseif grade > 3.0\n            letters[i] =\
    \ \"B+\"\n        elseif grade > 2.7\n            letters[i] = \"B\"\n       \
    \ elseif grade > 2.3\n            letters[i] = \"B-\"\n        elseif grade >\
    \ 2.0\n            letters[i] = \"C+\"\n        elseif grade > 1.7\n         \
    \   letters[i] = \"C\"\n        elseif grade > 1.3\n            letters[i] = \"\
    C-\"\n        elseif grade > 1.0\n            letters[i] = \"D+\"\n        elseif\
    \ grade > 0.7\n            letters[i] = \"D\"\n        elseif grade > 0.0\n  \
    \          letters[i] = \"D-\"\n        else\n            letters[i] = \"E\"\n\
    \        end\n    end\n    return letters\nend\nnumerical_letter_grade([4.0, 3,\
    \ 1.7, 2, 3.5])", "    letter_grades = []\n    for grade in grades\n        if\
    \ grade >= 4.0\n            push!(letter_grades, \"A+\")\n        elseif grade\
    \ >= 3.7\n            push!(letter_grades, \"A\")\n        elseif grade >= 3.3\n\
    \            push!(letter_grades, \"A-\")\n        elseif grade >= 3.0\n     \
    \       push!(letter_grades, \"B+\")\n        elseif grade >= 2.7\n          \
    \  push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n            push!(letter_grades,\
    \ \"B-\")\n        elseif grade >= 2.0\n            push!(letter_grades, \"C+\"\
    )\n        elseif grade >= 1.7\n            push!(letter_grades, \"C\")\n    \
    \    elseif grade >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ grade >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif grade\
    \ >= 0.7\n            push!(letter_grades, \"D\")\n        elseif grade >= 0.0\n\
    \            push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])", "    letter_grades = Array{String}(undef, length(grades))\n\
    \    for i in 1:length(grades)\n        if grades[i] >= 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            letter_grades[i] = \"\
    A\"\n        elseif grades[i] >= 3.3\n            letter_grades[i] = \"A-\"\n\
    \        elseif grades[i] >= 3.0\n            letter_grades[i] = \"B+\"\n    \
    \    elseif grades[i] >= 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ >= 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i] >= 1.7\n\
    \            letter_grades[i] = \"C\"\n        elseif grades[i] >= 1.3\n     \
    \       letter_grades[i] = \"C-\"\n        elseif grades[i] >= 1.0\n         \
    \   letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif grades[i] >= 0.0\n            letter_grades[i] = \"\
    D-\"\n        else\n            letter_grades[i] = \"E\"\n        end\n    end\n\
    \    return letter_grades\nend", "    letter_grades = []\n    for i in 1:length(grades)\n\
    \        if grades[i]>=4.0\n            push!(letter_grades, \"A+\")\n       \
    \ elseif grades[i]>=3.7\n            push!(letter_grades, \"A\")\n        elseif\
    \ grades[i]>=3.3\n            push!(letter_grades, \"A-\")\n        elseif grades[i]>=3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif grades[i]>=2.7\n   \
    \         push!(letter_grades, \"B\")\n        elseif grades[i]>=2.3\n       \
    \     push!(letter_grades, \"B-\")\n        elseif grades[i]>=2.0\n          \
    \  push!(letter_grades, \"C+\")\n        elseif grades[i]>=1.7\n            push!(letter_grades,\
    \ \"C\")\n        elseif grades[i]>=1.3\n            push!(letter_grades, \"C-\"\
    )\n        elseif grades[i]>=1.0\n            push!(letter_grades, \"D+\")\n \
    \       elseif grades[i]>=0.7\n            push!(letter_grades, \"D\")\n     \
    \   elseif grades[i]>=0.0\n            push!(letter_grades, \"D-\")\n        elseif\
    \ grades[i]<0.0\n            push!(letter_grades, \"E\")\n        end\n    end\n\
    \    return letter_grades\nend", "    letter_grades = []\n    for grade in grades\n\
    \        if grade == 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ grade > 3.7\n            push!(letter_grades, \"A\")\n        elseif grade >\
    \ 3.3\n            push!(letter_grades, \"A-\")\n        elseif grade > 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif grade > 2.7\n      \
    \      push!(letter_grades, \"B\")\n        elseif grade > 2.3\n            push!(letter_grades,\
    \ \"B-\")\n        elseif grade > 2.0\n            push!(letter_grades, \"C+\"\
    )\n        elseif grade > 1.7\n            push!(letter_grades, \"C\")\n     \
    \   elseif grade > 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ grade > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grade\
    \ > 0.7\n            push!(letter_grades, \"D\")\n        elseif grade > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        elseif grade == 0.0\n     \
    \       push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    # See the docstring for more info\n    \n    # Initalize the letter\
    \ grades array\n    letter_grades = []\n    \n    # Loop through grades array\n\
    \    for grade in grades\n        \n        # Determine letter grade using an\
    \ if-else statement \n        if grade > 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade > 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade > 3.3\n            push!(letter_grades, \"A-\")\n    \
    \    elseif grade > 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade > 2.7\n            push!(letter_grades, \"B\")\n        elseif grade >\
    \ 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade > 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade > 1.7\n      \
    \      push!(letter_grades, \"C\")\n        elseif grade > 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grade > 1.0\n            push!(letter_grades, \"D+\"\
    )\n        elseif grade > 0.7\n            push!(letter_grades, \"D\")\n     \
    \   elseif grade > 0.0\n            push!(letter_grades, \"D-\")\n        else\n\
    \            push!(letter_grades, \"E\")\n        end\n    end\n    \n    # Return\
    \ letter grades\n    return letter_grades\n    \nend", "    # initialize empty\
    \ list for letter grades\n    grades_list = []\n    # loop over the grades \n\
    \    for grade in grades\n        # use ifelse to add the letter grade of the\
    \ student to the list\n        ifelse(grade == 4.0, push!(grades_list, \"A+\"\
    ), grade > 3.7, push!(grades_list, \"A\"), \n            grade > 3.3, push!(grades_list,\
    \ \"A-\"), grade > 3.0, push!(grades_list, \"B+\"), \n            grade > 2.7,\
    \ push!(grades_list, \"B\"), grade > 2.3, push!(grades_list, \"B-\"), \n     \
    \       grade > 2.0, push!(grades_list, \"C+\"), grade > 1.7, push!(grades_list,\
    \ \"C\"), \n            grade > 1.3, push!(grades_list, \"C-\"), grade > 1.0,\
    \ push!(grades_list, \"D+\"), \n            grade > 0.7, push!(grades_list, \"\
    D\"), grade > 0.0, push!(grades_list, \"D-\"), \n            grade == 0.0, push!(grades_list,\
    \ \"E\"))\n    end\n    # return the list of letter grades\n    return grades_list\n\
    end", "    letter_grade = zeros(String, length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            letter_grade[i] = \"A+\"\n        elseif\
    \ grades[i] > 3.7\n            letter_grade[i] = \"A\"\n        elseif grades[i]\
    \ > 3.3\n            letter_grade[i] = \"A-\"\n        elseif grades[i] > 3.0\n\
    \            letter_grade[i] = \"B+\"\n        elseif grades[i] > 2.7\n      \
    \      letter_grade[i] = \"B\"\n        elseif grades[i] > 2.3\n            letter_grade[i]\
    \ = \"B-\"\n        elseif grades[i] > 2.0\n            letter_grade[i] = \"C+\"\
    \n        elseif grades[i] > 1.7\n            letter_grade[i] = \"C\"\n      \
    \  elseif grades[i] > 1.3\n            letter_grade[i] = \"C-\"\n        elseif\
    \ grades[i] > 1.0\n            letter_grade[i] = \"D+\"\n        elseif grades[i]\
    \ > 0.7\n            letter_grade[i] = \"D\"\n        elseif grades[i] > 0.0\n\
    \            letter_grade[i] = \"D-\"\n        else\n            letter_grade[i]\
    \ = \"E\"\n        end\n    end\n    return letter_grade\nend", "    \"\"\"This\
    \ function takes a vector of numeric grades and outputs a vector of\n        letter\
    \ grades\n        \"\"\"\n    letter_grades = []\n    for num_grade in grades\n\
    \        if num_grade > 4.0\n            append!(letter_grades, \"A+\")\n    \
    \    elseif num_grade > 3.7\n            append!(letter_grades, \"A\")\n     \
    \   elseif num_grade > 3.3\n            append!(letter_grades, \"A-\")\n     \
    \   elseif num_grade > 3.0\n            append!(letter_grades, \"B+\")\n     \
    \   elseif num_grade > 2.7\n            append!(letter_grades, \"B\")\n      \
    \  elseif num_grade > 2.3\n            append!(letter_grades, \"B-\")\n      \
    \  elseif num_grade > 2.0\n            append!(letter_grades, \"C+\")\n      \
    \  elseif num_grade > 1.7\n            append!(letter_grades, \"C\")\n       \
    \ elseif num_grade > 1.3\n            append!(letter_grades, \"C-\")\n       \
    \ elseif num_grade > 1.0\n            append!(letter_grades, \"D+\")\n       \
    \ elseif num_grade > 0.7\n            append!(letter_grades, \"D\")\n        elseif\
    \ num_grade > 0.0\n            append!(letter_grades, \"D-\")\n        else\n\
    \            append!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    letters = String[]\n    for grade in grades\n        if grade < 0.0\
    \ \n            push!(letters, \"E\")\n        elseif grade <= 0.7\n         \
    \   push!(letters, \"D-\")\n        elseif grade <= 1.0\n            push!(letters,\
    \ \"D+\")\n        elseif grade <= 1.3\n            push!(letters, \"C-\")\n \
    \       elseif grade <= 1.7\n            push!(letters, \"C\")\n        elseif\
    \ grade <= 2.0\n            push!(letters, \"C+\")\n        elseif grade <= 2.3\n\
    \            push!(letters, \"B-\")\n        elseif grade <= 2.7\n           \
    \ push!(letters, \"B\")\n        elseif grade <= 3.0\n            push!(letters,\
    \ \"B+\")\n        elseif grade <= 3.3\n            push!(letters, \"A-\")\n \
    \       elseif grade <= 3.7\n            push!(letters, \"A\")\n        else\n\
    \            push!(letters, \"A+\")\n        end\n    end\n    return letters\n\
    end", "    letter_grade = Array{String}(undef, length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            letter_grade[i] = \"A+\"\n        elseif\
    \ grades[i] >= 3.7\n            letter_grade[i] = \"A\"\n        elseif grades[i]\
    \ >= 3.3\n            letter_grade[i] = \"A-\"\n        elseif grades[i] >= 3.0\n\
    \            letter_grade[i] = \"B+\"\n        elseif grades[i] >= 2.7\n     \
    \       letter_grade[i] = \"B\"\n        elseif grades[i] >= 2.3\n           \
    \ letter_grade[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            letter_grade[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            letter_grade[i] = \"\
    C\"\n        elseif grades[i] >= 1.3\n            letter_grade[i] = \"C-\"\n \
    \       elseif grades[i] >= 1.0\n            letter_grade[i] = \"D+\"\n      \
    \  elseif grades[i] >= 0.7\n            letter_grade[i] = \"D\"\n        elseif\
    \ grades[i] >= 0.0\n            letter_grade[i] = \"D-\"\n        elseif grades[i]\
    \ == 0.0\n            letter_grade[i] = \"E\"\n        end\n    end\n    return\
    \ letter_grade\nend", "    # Code the function\nend", "    letter_grades = []\n\
    \    for i in 1:length(grades)\n        if grades[i] == 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grades[i] > 3.7\n            push!(letter_grades, \"\
    A\")\n        elseif grades[i] > 3.3\n            push!(letter_grades, \"A-\"\
    )\n        elseif grades[i] > 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif grades[i] > 2.7\n            push!(letter_grades, \"B\")\n   \
    \     elseif grades[i] > 2.3\n            push!(letter_grades, \"B-\")\n     \
    \   elseif grades[i] > 2.0\n            push!(letter_grades, \"C+\")\n       \
    \ elseif grades[i] > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grades[i] > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grades[i]\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grades[i] >\
    \ 0.7\n            push!(letter_grades, \"D\")\n        elseif grades[i] > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    l_grades\
    \ = Array{String}(length(grades))\n    for i in eachindex(grades)\n        if\
    \ grades[i] == 4.0\n            l_grades[i] = \"A+\"\n        elseif grades[i]\
    \ > 3.7\n            l_grades[i] = \"A\"\n        elseif grades[i] > 3.3\n   \
    \         l_grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n            l_grades[i]\
    \ = \"B+\"\n        elseif grades[i] > 2.7\n            l_grades[i] = \"B\"\n\
    \        elseif grades[i] > 2.3\n            l_grades[i] = \"B-\"\n        elseif\
    \ grades[i] > 2.0\n            l_grades[i] = \"C+\"\n        elseif grades[i]\
    \ > 1.7\n            l_grades[i] = \"C\"\n        elseif grades[i] > 1.3\n   \
    \         l_grades[i] = \"C-\"\n        elseif grades[i] > 1.0\n            l_grades[i]\
    \ = \"D+\"\n        elseif grades[i] > 0.7\n            l_grades[i] = \"D\"\n\
    \        elseif grades[i] > 0.0\n            l_grades[i] = \"D-\"\n        else\n\
    \            l_grades[i] = \"E\"\n        end\n    end\n    return l_grades\n\
    end", "    # Base case\n    if length(grades) == 0\n        return []\n    end\n\
    \    \n    # Recursive Case\n    if grades[1] >= 4.0\n        push!([\"A+\"],\
    \ numerical_letter_grade(grades[2:end]))\n    elseif grades[1] >= 3.7\n      \
    \  push!([\"A\"], numerical_letter_grade(grades[2:end]))\n    elseif grades[1]\
    \ >= 3.3\n        push!([\"A-\"], numerical_letter_grade(grades[2:end]))\n   \
    \ elseif grades[1] >= 3.0\n        push!([\"B+\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 2.7\n        push!([\"B\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 2.3\n        push!([\"B-\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 2.0\n        push!([\"C+\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 1.7\n        push!([\"C\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 1.3\n        push!([\"C-\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 1.0\n        push!([\"D+\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 0.7\n        push!([\"D\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] >= 0.0\n        push!([\"D-\"], numerical_letter_grade(grades[2:end]))\n\
    \    elseif grades[1] == 0.0\n        push!([\"E\"], numerical_letter_grade(grades[2:end]))\n\
    \    end\nend", "    len = length(grades)\n    letter_grades = Vector{String}(len)\n\
    \    for i in 1:len\n        if grades[i] >= 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            letter_grades[i] = \"\
    A\"\n        elseif grades[i] >= 3.3\n            letter_grades[i] = \"A-\"\n\
    \        elseif grades[i] >= 3.0\n            letter_grades[i] = \"B+\"\n    \
    \    elseif grades[i] >= 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ >= 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i] >= 1.7\n\
    \            letter_grades[i] = \"C\"\n        elseif grades[i] >= 1.3\n     \
    \       letter_grades[i] = \"C-\"\n        elseif grades[i] >= 1.0\n         \
    \   letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif grades[i] >= 0.0\n            letter_grades[i] = \"\
    D-\"\n        else\n            letter_grades[i] = \"E\"\n        end\n    end\n\
    \    return letter_grades\nend", "    # YOUR CODE HERE\n    return \nend", " \
    \   my_result = []\n    for i = 1:length(grades)\n        if grades[i] == 4.0\n\
    \            push!(my_result, \"A+\")\n        elseif grades[i] > 3.7\n      \
    \      push!(my_result, \"A\")\n        elseif grades[i] > 3.3\n            push!(my_result,\
    \ \"A-\")\n        elseif grades[i] > 3.0\n            push!(my_result, \"B+\"\
    )\n        elseif grades[i] > 2.7\n            push!(my_result, \"B\")\n     \
    \   elseif grades[i] > 2.3\n            push!(my_result, \"B-\")\n        elseif\
    \ grades[i] > 2.0\n            push!(my_result, \"C+\")\n        elseif grades[i]\
    \ > 1.7\n            push!(my_result, \"C\")\n        elseif grades[i] > 1.3\n\
    \            push!(my_result, \"C-\")\n        elseif grades[i] > 1.0\n      \
    \      push!(my_result, \"D+\")\n        elseif grades[i] > 0.7\n            push!(my_result,\
    \ \"D\")\n        elseif grades[i] > 0.0\n            push!(my_result, \"D-\"\
    )\n        else\n            push!(my_result, \"E\")\n        end\n    end\n \
    \   return my_result\nend", "    l = length(grades)\n    result = Vector{String}(undef,\
    \ l)\n    for i in 1:l\n        if grades[i] >= 4.0\n            result[i] = \"\
    A+\"\n        elseif grades[i] >= 3.7\n            result[i] = \"A\"\n       \
    \ elseif grades[i] >= 3.3\n            result[i] = \"A-\"\n        elseif grades[i]\
    \ >= 3.0\n            result[i] = \"B+\"\n        elseif grades[i] >= 2.7\n  \
    \          result[i] = \"B\"\n        elseif grades[i] >= 2.3\n            result[i]\
    \ = \"B-\"\n        elseif grades[i] >= 2.0\n            result[i] = \"C+\"\n\
    \        elseif grades[i] >= 1.7\n            result[i] = \"C\"\n        elseif\
    \ grades[i] >= 1.3\n            result[i] = \"C-\"\n        elseif grades[i] >=\
    \ 1.0\n            result[i] = \"D+\"\n        elseif grades[i] >= 0.7\n     \
    \       result[i] = \"D\"\n        elseif grades[i] >= 0.0\n            result[i]\
    \ = \"D-\"\n        elseif grades[i] == 0.0\n            result[i] = \"E\"\n \
    \       end\n    end\n    return result\nend", "    converted_grades = []\n  \
    \  for i in 1:length(grades)\n        if grades[i] >= 4.0\n            push!(converted_grades,\
    \ \"A+\")\n        elseif grades[i] >= 3.7\n            push!(converted_grades,\
    \ \"A\")\n        elseif grades[i] >= 3.3\n            push!(converted_grades,\
    \ \"A-\")\n        elseif grades[i] >= 3.0\n            push!(converted_grades,\
    \ \"B+\")\n        elseif grades[i] >= 2.7\n            push!(converted_grades,\
    \ \"B\")\n        elseif grades[i] >= 2.3\n            push!(converted_grades,\
    \ \"B-\")\n        elseif grades[i] >= 2.0\n            push!(converted_grades,\
    \ \"C+\")\n        elseif grades[i] >= 1.7\n            push!(converted_grades,\
    \ \"C\")\n        elseif grades[i] >= 1.3\n            push!(converted_grades,\
    \ \"C-\")\n        elseif grades[i] >= 1.0\n            push!(converted_grades,\
    \ \"D+\")\n        elseif grades[i] >= 0.7\n            push!(converted_grades,\
    \ \"D\")\n        elseif grades[i] >= 0.0\n            push!(converted_grades,\
    \ \"D-\")\n        else\n            push!(converted_grades, \"E\")\n        end\n\
    \    end\n    return converted_grades\nend", "    letter_grades = []\n    for\
    \ x in grades\n        if x > 4.0\n            push!(letter_grades, \"A+\")\n\
    \        elseif x > 3.7\n            push!(letter_grades, \"A\")\n        elseif\
    \ x > 3.3\n            push!(letter_grades, \"A-\")\n        elseif x > 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif x > 2.7\n          \
    \  push!(letter_grades, \"B\")\n        elseif x > 2.3\n            push!(letter_grades,\
    \ \"B-\")\n        elseif x > 2.0\n            push!(letter_grades, \"C+\")\n\
    \        elseif x > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ x > 1.3\n            push!(letter_grades, \"C-\")\n        elseif x > 1.0\n\
    \            push!(letter_grades, \"D+\")\n        elseif x > 0.7\n          \
    \  push!(letter_grades, \"D\")\n        elseif x > 0.0\n            push!(letter_grades,\
    \ \"D-\")\n        elseif x == 0.0\n            push!(letter_grades, \"E\")\n\
    \        end\n    end\n    return letter_grades\nend", "    # to be coded\nend",
  "    grades_letters = []\n    for i in 1:length(grades)\n        if grades[i] ==\
    \ 4.0\n            push!(grades_letters, \"A+\")\n        elseif grades[i] > 3.7\
    \ && grades[i] < 4.0\n            push!(grades_letters, \"A\")\n        elseif\
    \ grades[i] > 3.3 && grades[i] < 3.7\n            push!(grades_letters, \"A-\"\
    )\n        elseif grades[i] > 3.0 && grades[i] < 3.3\n            push!(grades_letters,\
    \ \"B+\")\n        elseif grades[i] > 2.7 && grades[i] < 3.0\n            push!(grades_letters,\
    \ \"B\")\n        elseif grades[i] > 2.3 && grades[i] < 2.7\n            push!(grades_letters,\
    \ \"B-\")\n        elseif grades[i] > 2.0 && grades[i] < 2.3\n            push!(grades_letters,\
    \ \"C+\")\n        elseif grades[i] > 1.7 && grades[i] < 2.0\n            push!(grades_letters,\
    \ \"C\")\n        elseif grades[i] > 1.3 && grades[i] < 1.7\n            push!(grades_letters,\
    \ \"C-\")\n        elseif grades[i] > 1.0 && grades[i] < 1.3\n            push!(grades_letters,\
    \ \"D+\")\n        elseif grades[i] > 0.7 && grades[i] < 1.0\n            push!(grades_letters,\
    \ \"D\")\n        elseif grades[i] > 0.0 && grades[i] < 0.7\n            push!(grades_letters,\
    \ \"D-\")\n        elseif grades[i] == 0.0\n            push!(grades_letters,\
    \ \"E\")\n        end\n    end\n    return grades_letters\nend\n        ", " \
    \   letter_grade = []\n    for g in grades\n        if g == 4.0\n            push!(letter_grade,\
    \ \"A+\")\n        elseif g > 3.7\n            push!(letter_grade, \"A\")\n  \
    \      elseif g > 3.3\n            push!(letter_grade, \"A-\")\n        elseif\
    \ g > 3.0\n            push!(letter_grade, \"B+\")\n        elseif g > 2.7\n \
    \           push!(letter_grade, \"B\")\n        elseif g > 2.3\n            push!(letter_grade,\
    \ \"B-\")\n        elseif g > 2.0\n            push!(letter_grade, \"C+\")\n \
    \       elseif g > 1.7\n            push!(letter_grade, \"C\")\n        elseif\
    \ g > 1.3\n            push!(letter_grade, \"C-\")\n        elseif g > 1.0\n \
    \           push!(letter_grade, \"D+\")\n        elseif g > 0.7\n            push!(letter_grade,\
    \ \"D\")\n        elseif g > 0.0\n            push!(letter_grade, \"D-\")\n  \
    \      else\n            push!(letter_grade, \"E\")\n        end\n    end\n  \
    \  return letter_grade\nend", "    letter_grade = []\n    for grade in grades\n\
    \        if grade >= 4.0\n            push!(letter_grade, \"A+\")\n        elseif\
    \ grade >= 3.7\n            push!(letter_grade, \"A\")\n        elseif grade >=\
    \ 3.3\n            push!(letter_grade, \"A-\")\n        elseif grade >= 3.0\n\
    \            push!(letter_grade, \"B+\")\n        elseif grade >= 2.7\n      \
    \      push!(letter_grade, \"B\")\n        elseif grade >= 2.3\n            push!(letter_grade,\
    \ \"B-\")\n        elseif grade >= 2.0\n            push!(letter_grade, \"C+\"\
    )\n        elseif grade >= 1.7\n            push!(letter_grade, \"C\")\n     \
    \   elseif grade >= 1.3\n            push!(letter_grade, \"C-\")\n        elseif\
    \ grade >= 1.0\n            push!(letter_grade, \"D+\")\n        elseif grade\
    \ >= 0.7\n            push!(letter_grade, \"D\")\n        elseif grade >= 0.0\n\
    \            push!(letter_grade, \"D-\")\n        elseif grade == 0.0\n      \
    \      push!(letter_grade, \"E\")\n        end\n    end\n    return letter_grade\n\
    end", "    letters = String[]\n    for grade in grades\n        if grade == 4.0\n\
    \            push!(letters, \"A+\")\n        elseif grade > 3.7\n            push!(letters,\
    \ \"A\")\n        elseif grade > 3.3\n            push!(letters, \"A-\")\n   \
    \     elseif grade > 3.0\n            push!(letters, \"B+\")\n        elseif grade\
    \ > 2.7\n            push!(letters, \"B\")\n        elseif grade > 2.3\n     \
    \       push!(letters, \"B-\")\n        elseif grade > 2.0\n            push!(letters,\
    \ \"C+\")\n        elseif grade > 1.7\n            push!(letters, \"C\")\n   \
    \     elseif grade > 1.3\n            push!(letters, \"C-\")\n        elseif grade\
    \ > 1.0\n            push!(letters, \"D+\")\n        elseif grade > 0.7\n    \
    \        push!(letters, \"D\")\n        elseif grade > 0.0\n            push!(letters,\
    \ \"D-\")\n        elseif grade == 0.0\n            push!(letters, \"E\")\n  \
    \      end\n    end\n    return letters\nend", "    \n    grades_list = [\"A+\"\
    , \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\",\
    \ \"D-\", \"E\"]\n    grades_list_1 = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0, 0.0]\n    numerical_letter_grade = []\n    \n    for i =\
    \ 1:length(grades)\n        for j = 1:length(grades_list_1)\n            if grades[i]\
    \ >= grades_list_1[j]\n                numerical_letter_grade = [numerical_letter_grade;\
    \ grades_list[j]]\n                break\n            end\n        end\n    end\n\
    \    \n    return numerical_letter_grade\nend", "    grades_letter = String[]\n\
    \    for grade in grades\n        if grade >= 4.0\n            push!(grades_letter,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(grades_letter, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(grades_letter, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(grades_letter, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(grades_letter, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(grades_letter, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(grades_letter, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(grades_letter, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(grades_letter, \"C-\")\n        elseif grade >= 1.0\n            push!(grades_letter,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(grades_letter, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(grades_letter, \"D-\")\n   \
    \     else\n            push!(grades_letter, \"E\")\n        end\n    end\n  \
    \  return grades_letter\nend", "    letters = [\"E\", \"D-\", \"D\", \"D+\", \"\
    C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    grades\
    \ = [round(x, 1) for x in grades]\n    grades = [(x-0.4) for x in grades]\n  \
    \  grades = Int.(trunc.(grades))\n    grades = [x + 1 for x in grades]\n    grades\
    \ = [max(x, 1) for x in grades]\n    grades = [min(x, 14) for x in grades]\n \
    \   grades = [letters[x] for x in grades]\n    return grades\nend", "    letter_grades\
    \ = []\n    for grade in grades\n        if grade >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     else\n            push!(letter_grades, \"E\")\n        end\n    end\n  \
    \  return letter_grades\nend", "    #######################\n    ##### YOUR CODE\
    \ HERE #####\n    #######################\nend", "    letter_grades = Vector{String}(undef,\
    \ length(grades))\n    for (i, grade) in enumerate(grades)\n        if grade ==\
    \ 4.0\n            letter_grades[i] = \"A+\"\n        elseif grade > 3.7\n   \
    \         letter_grades[i] = \"A\"\n        elseif grade > 3.3\n            letter_grades[i]\
    \ = \"A-\"\n        elseif grade > 3.0\n            letter_grades[i] = \"B+\"\n\
    \        elseif grade > 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grade > 2.3\n            letter_grades[i] = \"B-\"\n        elseif grade > 2.0\n\
    \            letter_grades[i] = \"C+\"\n        elseif grade > 1.7\n         \
    \   letter_grades[i] = \"C\"\n        elseif grade > 1.3\n            letter_grades[i]\
    \ = \"C-\"\n        elseif grade > 1.0\n            letter_grades[i] = \"D+\"\n\
    \        elseif grade > 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grade > 0.0\n            letter_grades[i] = \"D-\"\n        else\n         \
    \   letter_grades[i] = \"E\"\n        end\n    end\n    return letter_grades\n\
    end", "    letter = Vector{String}(undef, length(grades))\n    for i in 1:length(grades)\n\
    \        if grades[i] == 4.0\n            letter[i] = \"A+\"\n        elseif grades[i]\
    \ > 3.7\n            letter[i] = \"A\"\n        elseif grades[i] > 3.3\n     \
    \       letter[i] = \"A-\"\n        elseif grades[i] > 3.0\n            letter[i]\
    \ = \"B+\"\n        elseif grades[i] > 2.7\n            letter[i] = \"B\"\n  \
    \      elseif grades[i] > 2.3\n            letter[i] = \"B-\"\n        elseif\
    \ grades[i] > 2.0\n            letter[i] = \"C+\"\n        elseif grades[i] >\
    \ 1.7\n            letter[i] = \"C\"\n        elseif grades[i] > 1.3\n       \
    \     letter[i] = \"C-\"\n        elseif grades[i] > 1.0\n            letter[i]\
    \ = \"D+\"\n        elseif grades[i] > 0.7\n            letter[i] = \"D\"\n  \
    \      elseif grades[i] > 0.0\n            letter[i] = \"D-\"\n        elseif\
    \ grades[i] == 0.0\n            letter[i] = \"E\"\n        end\n    end\n    return\
    \ letter\nend", "    # Write your code here\nend", "    grades_letter = []\n \
    \   for g in grades\n        if g >= 4.0\n            push!(grades_letter, \"\
    A+\")\n        elseif g > 3.7\n            push!(grades_letter, \"A\")\n     \
    \   elseif g > 3.3\n            push!(grades_letter, \"A-\")\n        elseif g\
    \ > 3.0\n            push!(grades_letter, \"B+\")\n        elseif g > 2.7\n  \
    \          push!(grades_letter, \"B\")\n        elseif g > 2.3\n            push!(grades_letter,\
    \ \"B-\")\n        elseif g > 2.0\n            push!(grades_letter, \"C+\")\n\
    \        elseif g > 1.7\n            push!(grades_letter, \"C\")\n        elseif\
    \ g > 1.3\n            push!(grades_letter, \"C-\")\n        elseif g > 1.0\n\
    \            push!(grades_letter, \"D+\")\n        elseif g > 0.7\n          \
    \  push!(grades_letter, \"D\")\n        elseif g > 0.0\n            push!(grades_letter,\
    \ \"D-\")\n        elseif g == 0.0\n            push!(grades_letter, \"E\")\n\
    \        end\n    end\n    return grades_letter\nend", "    \n    #initialize\
    \ list to store the letter grades\n    letter_grades = []\n    \n    #iterate\
    \ through the grades and append the corresponding letter grade to the list\n \
    \   for grade in grades\n        \n        if grade >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     else\n            push!(letter_grades, \"E\")\n        end\n    end\n  \
    \  \n    return letter_grades\nend", "    letter_grades = [\"A+\", \"A\", \"A-\"\
    , \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n\
    \    gpa_values = reverse([4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7,\
    \ 0.0, 0.0])\n    grade_filter(x) = max(first(gpa_values[gpa_values .<= x]))\n\
    \    return letter_grades[find(gpa_values .== grade_filter.(grades))]\nend", " \
    \   \"\"\"\n    Returns a list of letter grades using the following table:\n \
    \            GPA       |    Letter grade\n              4.0                A+\n\
    \            > 3.7                A \n            > 3.3                A- \n \
    \           > 3.0                B+\n            > 2.7                B \n   \
    \         > 2.3                B-\n            > 2.0                C+\n     \
    \       > 1.7                C\n            > 1.3                C-\n        \
    \    > 1.0                D+ \n            > 0.7                D \n         \
    \   > 0.0                D-\n              0.0                E\n    \"\"\"\n\
    \    num_grades = []\n    for grade in grades\n        if grade > 4.0\n      \
    \      print(\"Error!! your grade can't be greater than 4.0\")\n        elseif\
    \ grade > 3.7\n            push!(num_grades, \"A+\")\n        elseif grade > 3.3\n\
    \            push!(num_grades, \"A\")\n        elseif grade > 3.0\n          \
    \  push!(num_grades, \"A-\")\n        elseif grade > 2.7\n            push!(num_grades,\
    \ \"B+\")\n        elseif grade > 2.3\n            push!(num_grades, \"B\")\n\
    \        elseif grade > 2.0\n            push!(num_grades, \"B-\")\n        elseif\
    \ grade > 1.7\n            push!(num_grades, \"C+\")\n        elseif grade > 1.3\n\
    \            push!(num_grades, \"C\")\n        elseif grade > 1.0\n          \
    \  push!(num_grades, \"C-\")\n        elseif grade > 0.7\n            push!(num_grades,\
    \ \"D+\")\n        elseif grade > 0.0\n            push!(num_grades, \"D\")\n\
    \        elseif grade > 0.0\n            push!(num_grades, \"D-\")\n        else\n\
    \            push!(num_grades, \"E\")\n        end\n    end\n    return num_grades\n\
    end", "    letter_grades = String[]\n    for g in grades\n        if g >= 4.0\n\
    \            push!(letter_grades, \"A+\")\n        elseif g >= 3.7\n         \
    \   push!(letter_grades, \"A\")\n        elseif g >= 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif g >= 3.0\n            push!(letter_grades, \"B+\")\n\
    \        elseif g >= 2.7\n            push!(letter_grades, \"B\")\n        elseif\
    \ g >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif g >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif g >= 1.7\n         \
    \   push!(letter_grades, \"C\")\n        elseif g >= 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif g >= 1.0\n            push!(letter_grades, \"D+\")\n\
    \        elseif g >= 0.7\n            push!(letter_grades, \"D\")\n        elseif\
    \ g >= 0.0\n            push!(letter_grades, \"D-\")\n        else\n         \
    \   push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    result = []\n    for i in grades\n        if i>4.0\n            push!(result,\
    \ \"A+\")\n        elseif i>3.7\n            push!(result, \"A\")\n        elseif\
    \ i>3.3\n            push!(result, \"A-\")\n        elseif i>3.0\n           \
    \ push!(result, \"B+\")\n        elseif i>2.7\n            push!(result, \"B\"\
    )\n        elseif i>2.3\n            push!(result, \"B-\")\n        elseif i>2.0\n\
    \            push!(result, \"C+\")\n        elseif i>1.7\n            push!(result,\
    \ \"C\")\n        elseif i>1.3\n            push!(result, \"C-\")\n        elseif\
    \ i>1.0\n            push!(result, \"D+\")\n        elseif i>0.7\n           \
    \ push!(result, \"D\")\n        elseif i>0.0\n            push!(result, \"D-\"\
    )\n        elseif i>=0.0\n            push!(result, \"E\")\n        end\n    end\n\
    \    return result\nend", "    \"\"\"\n    Function that takes a vector of Float64\
    \ and returns a vector of String\n    \"\"\"\n    letter_grade_list = String[]\n\
    \    for i = 1:length(grades)\n        if grades[i] == 4.0\n            append!(letter_grade_list,\
    \ \"A+\")\n        elseif grades[i] >= 3.7\n            append!(letter_grade_list,\
    \ \"A\")\n        elseif grades[i] >= 3.3\n            append!(letter_grade_list,\
    \ \"A-\")\n        elseif grades[i] >= 3.0\n            append!(letter_grade_list,\
    \ \"B+\")\n        elseif grades[i] >= 2.7\n            append!(letter_grade_list,\
    \ \"B\")\n        elseif grades[i] >= 2.3\n            append!(letter_grade_list,\
    \ \"B-\")\n        elseif grades[i] >= 2.0\n            append!(letter_grade_list,\
    \ \"C+\")\n        elseif grades[i] >= 1.7\n            append!(letter_grade_list,\
    \ \"C\")\n        elseif grades[i] >= 1.3\n            append!(letter_grade_list,\
    \ \"C-\")\n        elseif grades[i] >= 1.0\n            append!(letter_grade_list,\
    \ \"D+\")\n        elseif grades[i] >= 0.7\n            append!(letter_grade_list,\
    \ \"D\")\n        elseif grades[i] >= 0.0\n            append!(letter_grade_list,\
    \ \"D-\")\n        else\n            append!(letter_grade_list, \"E\")\n     \
    \   end\n    end\n    return letter_grade_list\nend", "    letter_grade = Vector{String}(undef,length(grades))\n\
    \    for i in 1:length(grades)\n        if grades[i] >= 4.0\n            letter_grade[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            letter_grade[i] = \"A\"\
    \n        elseif grades[i] > 3.3\n            letter_grade[i] = \"A-\"\n     \
    \   elseif grades[i] > 3.0\n            letter_grade[i] = \"B+\"\n        elseif\
    \ grades[i] > 2.7\n            letter_grade[i] = \"B\"\n        elseif grades[i]\
    \ > 2.3\n            letter_grade[i] = \"B-\"\n        elseif grades[i] > 2.0\n\
    \            letter_grade[i] = \"C+\"\n        elseif grades[i] > 1.7\n      \
    \      letter_grade[i] = \"C\"\n        elseif grades[i] > 1.3\n            letter_grade[i]\
    \ = \"C-\"\n        elseif grades[i] > 1.0\n            letter_grade[i] = \"D+\"\
    \n        elseif grades[i] > 0.7\n            letter_grade[i] = \"D\"\n      \
    \  elseif grades[i] > 0.0\n            letter_grade[i] = \"D-\"\n        else\
    \ \n            letter_grade[i] = \"E\"\n        end\n    end\n    return letter_grade\n\
    end", "    letter_grades = []\n    for grade in grades\n        if grade > 4.0\n\
    \            letter_grades = append!(letter_grades, \"A+\")\n        elseif grade\
    \ > 3.7\n            letter_grades = append!(letter_grades, \"A\")\n        elseif\
    \ grade > 3.3\n            letter_grades = append!(letter_grades, \"A-\")\n  \
    \      elseif grade > 3.0\n            letter_grades = append!(letter_grades,\
    \ \"B+\")\n        elseif grade > 2.7\n            letter_grades = append!(letter_grades,\
    \ \"B\")\n        elseif grade > 2.3\n            letter_grades = append!(letter_grades,\
    \ \"B-\")\n        elseif grade > 2.0\n            letter_grades = append!(letter_grades,\
    \ \"C+\")\n        elseif grade > 1.7\n            letter_grades = append!(letter_grades,\
    \ \"C\")\n        elseif grade > 1.3\n            letter_grades = append!(letter_grades,\
    \ \"C-\")\n        elseif grade > 1.0\n            letter_grades = append!(letter_grades,\
    \ \"D+\")\n        elseif grade > 0.7\n            letter_grades = append!(letter_grades,\
    \ \"D\")\n        elseif grade > 0.0\n            letter_grades = append!(letter_grades,\
    \ \"D-\")\n        else\n            letter_grades = append!(letter_grades, \"\
    E\")\n        end\n    end\n    return letter_grades\nend", "    grade_list =\
    \ []\n    for item in grades\n        if item == 4.0\n            push!(grade_list,\
    \ \"A+\")\n        elseif item > 3.7\n            push!(grade_list, \"A\")\n \
    \       elseif item > 3.3\n            push!(grade_list, \"A-\")\n        elseif\
    \ item > 3.0\n            push!(grade_list, \"B+\")\n        elseif item > 2.7\n\
    \            push!(grade_list, \"B\")\n        elseif item > 2.3\n           \
    \ push!(grade_list, \"B-\")\n        elseif item > 2.0\n            push!(grade_list,\
    \ \"C+\")\n        elseif item > 1.7\n            push!(grade_list, \"C\")\n \
    \       elseif item > 1.3\n            push!(grade_list, \"C-\")\n        elseif\
    \ item > 1.0\n            push!(grade_list, \"D+\")\n        elseif item > 0.7\n\
    \            push!(grade_list, \"D\")\n        elseif item > 0.0\n           \
    \ push!(grade_list, \"D-\")\n        else\n            push!(grade_list, \"E\"\
    )\n        end\n    end\n    return grade_list\nend\nnumerical_letter_grade([3.5,\
    \ 2.7, 3.3, 1.7, 2.3, 2.0, 4.0, 1.0, 0.7, 0.0])", "    letter_grades = []\n  \
    \  for score in grades\n        if score >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif score >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif score >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif score >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ score >= 2.7\n            push!(letter_grades, \"B\")\n        elseif score\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif score >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif score >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif score >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif score >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif score >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif score >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     else\n            push!(letter_grades, \"E\")\n        end\n    end\n  \
    \  return letter_grades\nend", "    \"\"\"This function takes a list of floats\
    \ (grades) and returns a list of \n    String (letter grades)\n    \"\"\"\n  \
    \  out = []\n    for i in grades\n        if i >= 4.0\n            push!(out,\
    \ \"A+\")\n        elseif i >= 3.7\n            push!(out, \"A\")\n        elseif\
    \ i >= 3.3\n            push!(out, \"A-\")\n        elseif i >= 3.0\n        \
    \    push!(out, \"B+\")\n        elseif i >= 2.7\n            push!(out, \"B\"\
    )\n        elseif i >= 2.3\n            push!(out, \"B-\")\n        elseif i >=\
    \ 2.0\n            push!(out, \"C+\")\n        elseif i >= 1.7\n            push!(out,\
    \ \"C\")\n        elseif i >= 1.3\n            push!(out, \"C-\")\n        elseif\
    \ i >= 1.0\n            push!(out, \"D+\")\n        elseif i >= 0.7\n        \
    \    push!(out, \"D\")\n        elseif i >= 0.0\n            push!(out, \"D-\"\
    )\n        else\n            push!(out, \"E\")\n        end\n    end\n    return\
    \ out\nend", "    result = zeros(String, length(grades))\n    for (i, score) in\
    \ enumerate(grades)\n        if score >= 4.0\n            result[i] = \"A+\"\n\
    \        elseif score >= 3.7\n            result[i] = \"A\"\n        elseif score\
    \ >= 3.3\n            result[i] = \"A-\"\n        elseif score >= 3.0\n      \
    \      result[i] = \"B+\"\n        elseif score >= 2.7\n            result[i]\
    \ = \"B\"\n        elseif score >= 2.3\n            result[i] = \"B-\"\n     \
    \   elseif score >= 2.0\n            result[i] = \"C+\"\n        elseif score\
    \ >= 1.7\n            result[i] = \"C\"\n        elseif score >= 1.3\n       \
    \     result[i] = \"C-\"\n        elseif score >= 1.0\n            result[i] =\
    \ \"D+\"\n        elseif score >= 0.7\n            result[i] = \"D\"\n       \
    \ elseif score >= 0.0\n            result[i] = \"D-\"\n        elseif score ==\
    \ 0.0\n            result[i] = \"E\"\n        end\n    end\n    return result\n\
    end", "    \"\"\" The function calculates the numerical letter grade of each grade\
    \ \n        element in the vector input and returns a vector of corresponding\
    \ letter \n        grades. The function also rounds up the grades to the nearest\
    \ decimal \n        place. \n        \n        Example: \n        numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n    \"\"\"\n    grades =\
    \ round.(grades, digits=1)\n    letter_grades = []\n    for grade in grades\n\
    \        if grade >= 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ grade >= 3.7\n            push!(letter_grades, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif grade >= 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif grade >= 2.7\n     \
    \       push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n           \
    \ push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif grade >= 1.7\n            push!(letter_grades, \"C\"\
    )\n        elseif grade >= 1.3\n            push!(letter_grades, \"C-\")\n   \
    \     elseif grade >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif\
    \ grade >= 0.7\n            push!(letter_grades, \"D\")\n        elseif grade\
    \ >= 0.0\n            push!(letter_grades, \"D-\")\n        else\n           \
    \ push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    letter_grades = Array{String}(length(grades))\n    for i = 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            letter_grades[i] = \"A+\"\n        elseif\
    \ grades[i] >= 3.7\n            letter_grades[i] = \"A\"\n        elseif grades[i]\
    \ >= 3.3\n            letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n\
    \            letter_grades[i] = \"B+\"\n        elseif grades[i] >= 2.7\n    \
    \        letter_grades[i] = \"B\"\n        elseif grades[i] >= 2.3\n         \
    \   letter_grades[i] = \"B-\"\n        elseif grades[i] >= 2.0\n            letter_grades[i]\
    \ = \"C+\"\n        elseif grades[i] >= 1.7\n            letter_grades[i] = \"\
    C\"\n        elseif grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n\
    \        elseif grades[i] >= 1.0\n            letter_grades[i] = \"D+\"\n    \
    \    elseif grades[i] >= 0.7\n            letter_grades[i] = \"D\"\n        elseif\
    \ grades[i] >= 0.0\n            letter_grades[i] = \"D-\"\n        elseif grades[i]\
    \ < 0.0\n            letter_grades[i] = \"E\"\n        end\n    end\n    return\
    \ letter_grades\nend", "    letter_grades = []\n    for grade in grades\n    \
    \    if grade > 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ grade > 3.7\n            push!(letter_grades, \"A\")\n        elseif grade >\
    \ 3.3\n            push!(letter_grades, \"A-\")\n        elseif grade > 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif grade > 2.7\n      \
    \      push!(letter_grades, \"B\")\n        elseif grade > 2.3\n            push!(letter_grades,\
    \ \"B-\")\n        elseif grade > 2.0\n            push!(letter_grades, \"C+\"\
    )\n        elseif grade > 1.7\n            push!(letter_grades, \"C\")\n     \
    \   elseif grade > 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ grade > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grade\
    \ > 0.7\n            push!(letter_grades, \"D\")\n        elseif grade > 0.0\n\
    \            push!(letter_grades, \"D-\")\n        elseif grade == 0.0\n     \
    \       push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])", "    grade_dict = Dict(\n\
    \        4.0 => \"A+\",\n        3.7 => \"A\",\n        3.3 => \"A-\",\n     \
    \   3.0 => \"B+\",\n        2.7 => \"B\",\n        2.3 => \"B-\",\n        2.0\
    \ => \"C+\",\n        1.7 => \"C\",\n        1.3 => \"C-\",\n        1.0 => \"\
    D+\",\n        0.7 => \"D\",\n        0.0 => \"D-\",\n        0.0 => \"E\"\n \
    \   )\n    return [grade_dict[grade] for grade in grades]\nend", "    letter_grades\
    \ = []\n    for i = 1:length(grades)\n        if grades[i] >= 4.0\n          \
    \  push!(letter_grades, \"A+\")\n        elseif grades[i] >= 3.7 && grades[i]\
    \ < 4.0\n            push!(letter_grades, \"A\")\n        elseif grades[i] >=\
    \ 3.3 && grades[i] < 3.7\n            push!(letter_grades, \"A-\")\n        elseif\
    \ grades[i] >= 3.0 && grades[i] < 3.3\n            push!(letter_grades, \"B+\"\
    )\n        elseif grades[i] >= 2.7 && grades[i] < 3.0\n            push!(letter_grades,\
    \ \"B\")\n        elseif grades[i] >= 2.3 && grades[i] < 2.7\n            push!(letter_grades,\
    \ \"B-\")\n        elseif grades[i] >= 2.0 && grades[i] < 2.3\n            push!(letter_grades,\
    \ \"C+\")\n        elseif grades[i] >= 1.7 && grades[i] < 2.0\n            push!(letter_grades,\
    \ \"C\")\n        elseif grades[i] >= 1.3 && grades[i] < 1.7\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grades[i] >= 1.0 && grades[i] < 1.3\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grades[i] >= 0.7 && grades[i] < 1.0\n            push!(letter_grades,\
    \ \"D\")\n        elseif grades[i] >= 0.0 && grades[i] < 0.7\n            push!(letter_grades,\
    \ \"D-\")\n        elseif grades[i] == 0.0\n            push!(letter_grades, \"\
    E\")\n        end\n    end\n    return letter_grades\nend\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])", "    grade_dict = Dict(\"4.0\" => \"A+\", \"3.7\" => \"A\"\
    , \"3.3\" => \"A-\", \"3.0\" => \"B+\", \"2.7\" => \"B\", \"2.3\" => \"B-\", \"\
    2.0\" => \"C+\", \"1.7\" => \"C\", \"1.3\" => \"C-\", \"1.0\" => \"D+\", \"0.7\"\
    \ => \"D\", \"0.0\" => \"D-\", \"-1.0\" => \"E\")\n    numerical_grade = [\"4.0\"\
    , \"3.7\", \"3.3\", \"3.0\", \"2.7\", \"2.3\", \"2.0\", \"1.7\", \"1.3\", \"1.0\"\
    , \"0.7\", \"0.0\", \"-1.0\"]\n    letter_grade = []\n    for i in 1:length(grades)\n\
    \        for j in 1:length(numerical_grade)\n            if grades[i] < parse(Float64,\
    \ numerical_grade[j]) \n                push!(letter_grade, grade_dict[numerical_grade[j]])\n\
    \                break\n            end\n        end\n    end\n    return letter_grade\n\
    end", "    letter_grades = []\n    for i in grades\n        if i == 4.0\n    \
    \        push!(letter_grades, \"A+\")\n        elseif i > 3.7\n            push!(letter_grades,\
    \ \"A\")\n        elseif i > 3.3\n            push!(letter_grades, \"A-\")\n \
    \       elseif i > 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ i > 2.7\n            push!(letter_grades, \"B\")\n        elseif i > 2.3\n \
    \           push!(letter_grades, \"B-\")\n        elseif i > 2.0\n           \
    \ push!(letter_grades, \"C+\")\n        elseif i > 1.7\n            push!(letter_grades,\
    \ \"C\")\n        elseif i > 1.3\n            push!(letter_grades, \"C-\")\n \
    \       elseif i > 1.0\n            push!(letter_grades, \"D+\")\n        elseif\
    \ i > 0.7\n            push!(letter_grades, \"D\")\n        elseif i > 0.0\n \
    \           push!(letter_grades, \"D-\")\n        elseif i == 0.0\n          \
    \  push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    \"\"\"\n    Input: grades is a list of floats\n    Output: a list of\
    \ letters that corresponds to each grade\n    \"\"\"\n    grades_letters = []\n\
    \    for g in grades\n        if g >= 4.0\n            append!(grades_letters,\
    \ \"A+\")\n        elseif g >= 3.7\n            append!(grades_letters, \"A\"\
    )\n        elseif g >= 3.3\n            append!(grades_letters, \"A-\")\n    \
    \    elseif g >= 3.0\n            append!(grades_letters, \"B+\")\n        elseif\
    \ g >= 2.7\n            append!(grades_letters, \"B\")\n        elseif g >= 2.3\n\
    \            append!(grades_letters, \"B-\")\n        elseif g >= 2.0\n      \
    \      append!(grades_letters, \"C+\")\n        elseif g >= 1.7\n            append!(grades_letters,\
    \ \"C\")\n        elseif g >= 1.3\n            append!(grades_letters, \"C-\"\
    )\n        elseif g >= 1.0\n            append!(grades_letters, \"D+\")\n    \
    \    elseif g >= 0.7\n            append!(grades_letters, \"D\")\n        elseif\
    \ g >= 0.0\n            append!(grades_letters, \"D-\")\n        elseif g == 0.0\n\
    \            append!(grades_letters, \"E\")\n        end\n    end\n    return\
    \ grades_letters\nend", "    letter_grades = [\"E\", \"D-\", \"D\", \"D+\", \"\
    C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    # This\
    \ function returns a string vector containing the corresponding letter grade based\
    \ on the GPA.\n    return [letter_grades[Int(round(x*2)+1)] for x in grades]\n\
    end", "    grade_equation(grades::Vector{Float64})::Vector{String} = map(x ->\
    \ \n    if x >= 3.7\n        \"A\"\n    elseif x >= 3.3\n        \"A-\"\n    elseif\
    \ x >= 3.0\n        \"B+\"\n    elseif x >= 2.7\n        \"B\"\n    elseif x >=\
    \ 2.3\n        \"B-\"\n    elseif x >= 2.0\n        \"C+\"\n    elseif x >= 1.7\n\
    \        \"C\"\n    elseif x >= 1.3\n        \"C-\"\n    elseif x >= 1.0\n   \
    \     \"D+\"\n    elseif x >= 0.7\n        \"D\"\n    elseif x >= 0.0\n      \
    \  \"D-\"\n    else\n        \"E\"\n    end,\n    grades)\nend", "    letters\
    \ = fill(\"E\", length(grades))\n    grades > 3.7 && (letters = fill(\"A+\", length(grades)))\n\
    \    grades > 3.3 && (letters = fill(\"A\", length(grades)))\n    grades > 3.0\
    \ && (letters = fill(\"A-\", length(grades)))\n    grades > 2.7 && (letters =\
    \ fill(\"B+\", length(grades)))\n    grades > 2.3 && (letters = fill(\"B\", length(grades)))\n\
    \    grades > 2.0 && (letters = fill(\"B-\", length(grades)))\n    grades > 1.7\
    \ && (letters = fill(\"C+\", length(grades)))\n    grades > 1.3 && (letters =\
    \ fill(\"C\", length(grades)))\n    grades > 1.0 && (letters = fill(\"C-\", length(grades)))\n\
    \    grades > 0.7 && (letters = fill(\"D+\", length(grades)))\n    grades > 0.0\
    \ && (letters = fill(\"D\", length(grades)))\n    grades > 0.0 && (letters = fill(\"\
    D-\", length(grades)))\n    return letters\nend", "    letter_grades = []\n  \
    \  for grade in grades\n        if grade >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     else\n            push!(letter_grades, \"E\")\n        end\n    end\n  \
    \  return letter_grades\nend", "    grades_str = [ifelse(round(g,1) == 4.0, \"\
    A+\",\n                         ifelse(round(g,1) == 3.7, \"A\",\n           \
    \                     ifelse(round(g,1) == 3.3, \"A-\",\n                    \
    \                   ifelse(round(g,1) == 3.0, \"B+\",\n                      \
    \                        ifelse(round(g,1) == 2.7, \"B\",\n                  \
    \                                   ifelse(round(g,1) == 2.3, \"B-\",\n      \
    \                                                      ifelse(round(g,1) == 2.0,\
    \ \"C+\",\n                                                                  \
    \ ifelse(round(g,1) == 1.7, \"C\",\n                                         \
    \                                 ifelse(round(g,1) == 1.3, \"C-\",\n        \
    \                                                                         ifelse(round(g,1)\
    \ == 1.0, \"D+\",\n                                                          \
    \                              ifelse(round(g,1) == 0.7, \"D\",\n            \
    \                                                                            \
    \       ifelse(round(g,1) == 0.0, \"D-\",\n                                  \
    \                                                                    ifelse(round(g,1)\
    \ == 0.0, \"E\",\n                                                           \
    \                                                  \"N/A\")))))))))))))))\n  \
    \                                                                            \
    \                                       for g in grades]\n    return grades_str\n\
    end", "    letters=[\"E\"]*length(grades)\n    for i in 1:length(grades)\n   \
    \     if grades[i]==4.0\n            letters[i]=\"A+\"\n        elseif 3.7<grades[i]<4.0\n\
    \            letters[i]=\"A\"\n        elseif 3.3<grades[i]<3.7\n            letters[i]=\"\
    A-\"\n        elseif 3.0<grades[i]<3.3\n            letters[i]=\"B+\"\n      \
    \  elseif 2.7<grades[i]<3.0\n            letters[i]=\"B\"\n        elseif 2.3<grades[i]<2.7\n\
    \            letters[i]=\"B-\"\n        elseif 2.0<grades[i]<2.3\n           \
    \ letters[i]=\"C+\"\n        elseif 1.7<grades[i]<2.0\n            letters[i]=\"\
    C\"\n        elseif 1.3<grades[i]<1.7\n            letters[i]=\"C-\"\n       \
    \ elseif 1.0<grades[i]<1.3\n            letters[i]=\"D+\"\n        elseif 0.7<grades[i]<1.0\n\
    \            letters[i]=\"D\"\n        elseif 0.0<grades[i]<0.7\n            letters[i]=\"\
    D-\"\n        else\n            letters[i]=\"E\"\n        end\n    end\n    return\
    \ letters\nend", "    letter_grade = Vector{\"\"}(length(grades))\n    for i in\
    \ 1:length(grades)\n        if grades[i] == 4.0\n            letter_grade[i] =\
    \ \"A+\"\n        elseif grades[i] > 3.7\n            letter_grade[i] = \"A\"\n\
    \        elseif grades[i] > 3.3\n            letter_grade[i] = \"A-\"\n      \
    \  elseif grades[i] > 3.0\n            letter_grade[i] = \"B+\"\n        elseif\
    \ grades[i] > 2.7\n            letter_grade[i] = \"B\"\n        elseif grades[i]\
    \ > 2.3\n            letter_grade[i] = \"B-\"\n        elseif grades[i] > 2.0\n\
    \            letter_grade[i] = \"C+\"\n        elseif grades[i] > 1.7\n      \
    \      letter_grade[i] = \"C\"\n        elseif grades[i] > 1.3\n            letter_grade[i]\
    \ = \"C-\"\n        elseif grades[i] > 1.0\n            letter_grade[i] = \"D+\"\
    \n        elseif grades[i] > 0.7\n            letter_grade[i] = \"D\"\n      \
    \  elseif grades[i] > 0.0\n            letter_grade[i] = \"D-\"\n        else\n\
    \            letter_grade[i] = \"E\"\n        end\n    end\n    return letter_grade\n\
    end", "     #Create the array for the letter grades\n     let_grade = Array{String}(length(grades))\n\
    \     #For loop that runs through the grades and assigns them the appropriate\
    \ letter grade\n    for i in 1:length(grades)\n    if grades[i] == 4.0\n     \
    \   let_grade[i] = \"A+\"\n    elseif grades[i] > 3.7\n        let_grade[i] =\
    \ \"A\"\n    elseif grades[i] > 3.3\n        let_grade[i] = \"A-\"\n    elseif\
    \ grades[i] > 3.0\n        let_grade[i] = \"B+\"\n    elseif grades[i] > 2.7\n\
    \        let_grade[i] = \"B\"\n    elseif grades[i] > 2.3\n        let_grade[i]\
    \ = \"B-\"\n    elseif grades[i] > 2.0\n        let_grade[i] = \"C+\"\n    elseif\
    \ grades[i] > 1.7\n        let_grade[i] = \"C\"\n    elseif grades[i] > 1.3\n\
    \        let_grade[i] = \"C-\"\n    elseif grades[i] > 1.0\n        let_grade[i]\
    \ = \"D+\"\n    elseif grades[i] > 0.7\n        let_grade[i] = \"D\"\n    elseif\
    \ grades[i] > 0.0\n        let_grade[i] = \"D-\"\n    elseif grades[i] == 0.0\n\
    \        let_grade[i] = \"E\"\n        end\n    end\n    return let_grade\nend",
  "    \n    \"\"\"\n    This function takes a vector of floats and returns the \n\
    \    corresponding letter grades\n    \"\"\"\n    \n    # Create the output vector\n\
    \    letter_grades = Array{String}(length(grades))\n    \n    # Create the letter\
    \ grade codes vector\n    letter_codes = [\"A+\", \"A\", \"A-\", \"B+\", \"B\"\
    , \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    \n    # Create\
    \ the GPA codes vector\n    gpa_codes = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0, 0.0]\n    \n    # Iterate through the grades\n    for i\
    \ in 1:length(grades)\n        # Check to see if the grade is a 4.0\n        if\
    \ grades[i] == 4.0\n            letter_grades[i] = letter_codes[1]\n        else\n\
    \            # Iterate through the gpa codes\n            for j in 1:length(gpa_codes)\n\
    \                # Check to see if the grade is bigger than the GPA\n        \
    \        if grades[i] > gpa_codes[j]\n                    letter_grades[i] = letter_codes[j]\n\
    \                    break\n                end\n            end\n        end\n\
    \    end\n    \n    return letter_grades\n    \nend", "   \n    grades_letters\
    \ = []\n    \n    for i in grades\n        if i == 4.0\n            push!(grades_letters,\
    \ \"A+\")\n        elseif i == 3.7\n            push!(grades_letters, \"A\")\n\
    \        elseif i == 3.3\n            push!(grades_letters, \"A-\")\n        elseif\
    \ i == 3.0\n            push!(grades_letters, \"B+\")\n        elseif i == 2.7\n\
    \            push!(grades_letters, \"B\")\n        elseif i == 2.3\n         \
    \   push!(grades_letters, \"B-\")\n        elseif i == 2.0\n            push!(grades_letters,\
    \ \"C+\")\n        elseif i == 1.7\n            push!(grades_letters, \"C\")\n\
    \        elseif i == 1.3\n            push!(grades_letters, \"C-\")\n        elseif\
    \ i == 1.0\n            push!(grades_letters, \"D+\")\n        elseif i == 0.7\n\
    \            push!(grades_letters, \"D\")\n        elseif i == 0.0\n         \
    \   push!(grades_letters, \"D-\")\n        else\n            push!(grades_letters,\
    \ \"E\")\n        end\n    end\n    return grades_letters\nend", "    \n    num2grade\
    \ = [(\"A+\", 4.0),(\"A\", 3.7),(\"A-\", 3.3),(\"B+\", 3.0),(\"B\", 2.7),(\"B-\"\
    , 2.3),(\"C+\", 2.0),(\"C\", 1.7),(\"C-\", 1.3),(\"D+\", 1.0),(\"D\", 0.7),(\"\
    D-\", 0.0),(\"E\", 0.0)]\n    grades_ = Vector{String}(undef,length(grades))\n\
    \    \n    for (i,g) in enumerate(grades)\n        for (j,numgrade) in enumerate(num2grade)\n\
    \            if g >= numgrade[2]\n                grades_[i] = numgrade[1]\n \
    \               break\n            end\n        end\n    end\n    return grades_\n\
    end", "    \"\"\"Takes a vector of floats and returns a vector of strings which\
    \ are\n    grades corresponding to the table given in the docstring\"\"\"\n  \
    \  letter_grades = []\n    for grade in grades\n        if grade >= 4.0\n    \
    \        push!(letter_grades, \"A+\")\n        elseif grade >= 3.7\n         \
    \   push!(letter_grades, \"A\")\n        elseif grade >= 3.3\n            push!(letter_grades,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(letter_grades, \"B+\"\
    )\n        elseif grade >= 2.7\n            push!(letter_grades, \"B\")\n    \
    \    elseif grade >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif\
    \ grade >= 2.0\n            push!(letter_grades, \"C+\")\n        elseif grade\
    \ >= 1.7\n            push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n\
    \            push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n     \
    \       push!(letter_grades, \"D+\")\n        elseif grade >= 0.7\n          \
    \  push!(letter_grades, \"D\")\n        elseif grade >= 0.0\n            push!(letter_grades,\
    \ \"D-\")\n        else\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend", "    answer = []\n    for i in grades\n\
    \        if i == 4.0\n            push!(answer, \"A+\")\n        elseif i > 3.7\n\
    \            push!(answer, \"A\")\n        elseif i > 3.3\n            push!(answer,\
    \ \"A-\")\n        elseif i > 3.0\n            push!(answer, \"B+\")\n       \
    \ elseif i > 2.7\n            push!(answer, \"B\")\n        elseif i > 2.3\n \
    \           push!(answer, \"B-\")\n        elseif i > 2.0\n            push!(answer,\
    \ \"C+\")\n        elseif i > 1.7\n            push!(answer, \"C\")\n        elseif\
    \ i > 1.3\n            push!(answer, \"C-\")\n        elseif i > 1.0\n       \
    \     push!(answer, \"D+\")\n        elseif i > 0.7\n            push!(answer,\
    \ \"D\")\n        elseif i > 0.0\n            push!(answer, \"D-\")\n        else\n\
    \            push!(answer, \"E\")\n        end\n    end\n    return answer\nend",
  "    grades_float64 = [Float64(i) for i in grades]\n    function grade_equation(grade)::String\n\
    \        if grade >= 4.0\n            return \"A+\"\n        elseif grade >= 3.7\
    \ \n            return \"A\"\n        elseif grade >= 3.3\n            return\
    \ \"A-\"\n        elseif grade >= 3.0\n            return \"B+\"\n        elseif\
    \ grade >= 2.7\n            return \"B\"\n        elseif grade >= 2.3\n      \
    \      return \"B-\"\n        elseif grade >= 2.0\n            return \"C+\"\n\
    \        elseif grade >= 1.7\n            return \"C\"\n        elseif grade >=\
    \ 1.3\n            return \"C-\"\n        elseif grade >= 1.0\n            return\
    \ \"D+\"\n        elseif grade >= 0.7\n            return \"D\"\n        elseif\
    \ grade >= 0.0\n            return \"D-\"\n        elseif grade < 0.0\n      \
    \      return \"E\"\n        end\n    end", "    letters = [\"A+\", \"A\", \"\
    A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"\
    E\"]\n    m = size(letters, 1)\n    grade_letter = Vector{String}(undef, size(grades,\
    \ 1))\n    for i in 1:size(grades, 1)\n        m = size(letters, 1)\n        for\
    \ j in 1:m\n            if grades[i] >= 4.0\n                grade_letter[i] =\
    \ letters[1]\n                break\n            elseif grades[i] >= 3.7 && grades[i]\
    \ < 4.0\n                grade_letter[i] = letters[2]\n                break\n\
    \            elseif grades[i] >= 3.3 && grades[i] < 3.7\n                grade_letter[i]\
    \ = letters[3]\n                break\n            elseif grades[i] >= 3.0 &&\
    \ grades[i] < 3.3\n                grade_letter[i] = letters[4]\n            \
    \    break\n            elseif grades[i] >= 2.7 && grades[i] < 3.0\n         \
    \       grade_letter[i] = letters[5]\n                break\n            elseif\
    \ grades[i] >= 2.3 && grades[i] < 2.7\n                grade_letter[i] = letters[6]\n\
    \                break\n            elseif grades[i] >= 2.0 && grades[i] < 2.3\n\
    \                grade_letter[i] = letters[7]\n                break\n       \
    \     elseif grades[i] >= 1.7 && grades[i] < 2.0\n                grade_letter[i]\
    \ = letters[8]\n                break\n            elseif grades[i] >= 1.3 &&\
    \ grades[i] < 1.7\n                grade_letter[i] = letters[9]\n            \
    \    break\n            elseif grades[i] >= 1.0 && grades[i] < 1.3\n         \
    \       grade_letter[i] = letters[10]\n                break\n            elseif\
    \ grades[i] >= 0.7 && grades[i] < 1.0\n                grade_letter[i] = letters[11]\n\
    \                break\n            else", "    # the array to be returned\n \
    \   letter_grades = []\n    # iterate through all grades\n    for i in 1:length(grades)\n\
    \        # A+\n        if grades[i] == 4.0\n            append!(letter_grades,\
    \ \"A+\")\n        # A, A-\n        elseif grades[i] > 3.7\n            append!(letter_grades,\
    \ \"A\")\n        elseif grades[i] > 3.3\n            append!(letter_grades, \"\
    A-\")\n        # B+, B, B-\n        elseif grades[i] > 3.0\n            append!(letter_grades,\
    \ \"B+\")\n        elseif grades[i] > 2.7\n            append!(letter_grades,\
    \ \"B\")\n        elseif grades[i] > 2.3\n            append!(letter_grades, \"\
    B-\")\n        # C+, C, C-\n        elseif grades[i] > 2.0\n            append!(letter_grades,\
    \ \"C+\")\n        elseif grades[i] > 1.7\n            append!(letter_grades,\
    \ \"C\")\n        elseif grades[i] > 1.3\n            append!(letter_grades, \"\
    C-\")\n        # D+, D, D-\n        elseif grades[i] > 1.0\n            append!(letter_grades,\
    \ \"D+\")\n        elseif grades[i] > 0.7\n            append!(letter_grades,\
    \ \"D\")\n        elseif grades[i] > 0.0\n            append!(letter_grades, \"\
    D-\")\n        # E\n        elseif grades[i] == 0.0\n            append!(letter_grades,\
    \ \"E\")\n        # The grade is invalid\n        else\n            println(\"\
    The grade for student \", i, \" is invalid\")\n        end\n    end\n    return\
    \ letter_grades\nend", "    # The Vector{String} is necessary because the function\
    \ should return a Vector of Strings\n    num_letter_grades = []\n    for i in\
    \ grades\n        if 4.0 >= i > 3.7\n            append!(num_letter_grades, \"\
    A+\")\n        elseif 3.7 >= i > 3.3\n            append!(num_letter_grades, \"\
    A\")\n        elseif 3.3 >= i > 3.0\n            append!(num_letter_grades, \"\
    A-\")\n        elseif 3.0 >= i > 2.7\n            append!(num_letter_grades, \"\
    B+\")\n        elseif 2.7 >= i > 2.3\n            append!(num_letter_grades, \"\
    B\")\n        elseif 2.3 >= i > 2.0\n            append!(num_letter_grades, \"\
    B-\")\n        elseif 2.0 >= i > 1.7\n            append!(num_letter_grades, \"\
    C+\")\n        elseif 1.7 >= i > 1.3\n            append!(num_letter_grades, \"\
    C\")\n        elseif 1.3 >= i > 1.0\n            append!(num_letter_grades, \"\
    C-\")\n        elseif 1.0 >= i > 0.7\n            append!(num_letter_grades, \"\
    D+\")\n        elseif 0.7 >= i > 0.0\n            append!(num_letter_grades, \"\
    D\")\n        elseif 0.0 >= i > -1.0\n            append!(num_letter_grades, \"\
    D-\")\n        elseif i == 0.0\n            append!(num_letter_grades, \"E\")\n\
    \        end\n    end\n    return num_letter_grades\nend", "    letter_grades\
    \ = []\n    for grade in grades\n        if grade >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grades, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n   \
    \     elseif grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade\
    \ >= 2.3\n            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n     \
    \       push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n           \
    \ push!(letter_grades, \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades,\
    \ \"D+\")\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\"\
    )\n        elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n   \
    \     elseif grade == 0.0\n            push!(letter_grades, \"E\")\n        end\n\
    \    end\n    return letter_grades\nend", "    grade_dict = Dict()\n    grade_dict[4.0]\
    \ = \"A+\"\n    grade_dict[3.7] = \"A\"\n    grade_dict[3.3] = \"A-\"\n    grade_dict[3.0]\
    \ = \"B+\"\n    grade_dict[2.7] = \"B\"\n    grade_dict[2.3] = \"B-\"\n    grade_dict[2.0]\
    \ = \"C+\"\n    grade_dict[1.7] = \"C\"\n    grade_dict[1.3] = \"C-\"\n    grade_dict[1.0]\
    \ = \"D+\"\n    grade_dict[0.7] = \"D\"\n    grade_dict[0.0] = \"D-\"\n    grade_dict[-1.0]\
    \ = \"E\"\n    \n    grades_list = []\n    for grade in grades\n        for key\
    \ in keys(grade_dict)\n            if grade >= key\n                push!(grades_list,\
    \ grade_dict[key])\n                break\n            end\n        end\n    end\n\
    \    return grades_list\nend", "    \"\"\"\"\"\"\n    grades = round.(grades,\
    \ digits=1)\n    lettered_grades = []\n    for i in grades\n        if i >= 4.0\n\
    \            push!(lettered_grades, \"A+\")\n        elseif i >= 3.7\n       \
    \     push!(lettered_grades, \"A\")\n        elseif i >= 3.3\n            push!(lettered_grades,\
    \ \"A-\")\n        elseif i >= 3.0\n            push!(lettered_grades, \"B+\"\
    )\n        elseif i >= 2.7\n            push!(lettered_grades, \"B\")\n      \
    \  elseif i >= 2.3\n            push!(lettered_grades, \"B-\")\n        elseif\
    \ i >= 2.0\n            push!(lettered_grades, \"C+\")\n        elseif i >= 1.7\n\
    \            push!(lettered_grades, \"C\")\n        elseif i >= 1.3\n        \
    \    push!(lettered_grades, \"C-\")\n        elseif i >= 1.0\n            push!(lettered_grades,\
    \ \"D+\")\n        elseif i >= 0.7\n            push!(lettered_grades, \"D\")\n\
    \        elseif i >= 0.0\n            push!(lettered_grades, \"D-\")\n       \
    \ else\n            push!(lettered_grades, \"E\")\n        end\n    end\n    return\
    \ lettered_grades\nend", "    letters = []\n    for grade in grades\n        if\
    \ grade >= 4.0\n            push!(letters, \"A+\")\n        elseif grade >= 3.7\n\
    \            push!(letters, \"A\")\n        elseif grade >= 3.3\n            push!(letters,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(letters, \"B+\")\n \
    \       elseif grade >= 2.7\n            push!(letters, \"B\")\n        elseif\
    \ grade >= 2.3\n            push!(letters, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letters, \"C+\")\n        elseif grade >= 1.7\n           \
    \ push!(letters, \"C\")\n        elseif grade >= 1.3\n            push!(letters,\
    \ \"C-\")\n        elseif grade >= 1.0\n            push!(letters, \"D+\")\n \
    \       elseif grade >= 0.7\n            push!(letters, \"D\")\n        elseif\
    \ grade >= 0.0\n            push!(letters, \"D-\")\n        else\n           \
    \ push!(letters, \"E\")\n        end\n    end\n    return letters\nend", "   \
    \ grades_symb = []\n    for i = 1:length(grades)\n        if grades[i] == 4.0\n\
    \            push!(grades_symb, \"A+\")\n        elseif grades[i] >= 3.7\n   \
    \         push!(grades_symb, \"A\")\n        elseif grades[i] >= 3.3\n       \
    \     push!(grades_symb, \"A-\")\n        elseif grades[i] >= 3.0\n          \
    \  push!(grades_symb, \"B+\")\n        elseif grades[i] >= 2.7\n            push!(grades_symb,\
    \ \"B\")\n        elseif grades[i] >= 2.3\n            push!(grades_symb, \"B-\"\
    )\n        elseif grades[i] >= 2.0\n            push!(grades_symb, \"C+\")\n \
    \       elseif grades[i] >= 1.7\n            push!(grades_symb, \"C\")\n     \
    \   elseif grades[i] >= 1.3\n            push!(grades_symb, \"C-\")\n        elseif\
    \ grades[i] >= 1.0\n            push!(grades_symb, \"D+\")\n        elseif grades[i]\
    \ >= 0.7\n            push!(grades_symb, \"D\")\n        elseif grades[i] >= 0.0\n\
    \            push!(grades_symb, \"D-\")\n        else\n            push!(grades_symb,\
    \ \"E\")\n        end\n    end\n    return grades_symb\nend", "    letter_grade\
    \ = []\n    for i in grades\n        if i == 4.0\n            append!(letter_grade,\
    \ \"A+\")\n        elseif 3.7 < i <= 4.0\n            append!(letter_grade, \"\
    A\")\n        elseif 3.3 < i <= 3.7\n            append!(letter_grade, \"A-\"\
    )\n        elseif 3.0 < i <= 3.3\n            append!(letter_grade, \"B+\")\n\
    \        elseif 2.7 < i <= 3.0\n            append!(letter_grade, \"B\")\n   \
    \     elseif 2.3 < i <= 2.7\n            append!(letter_grade, \"B-\")\n     \
    \   elseif 2.0 < i <= 2.3\n            append!(letter_grade, \"C+\")\n       \
    \ elseif 1.7 < i <= 2.0\n            append!(letter_grade, \"C\")\n        elseif\
    \ 1.3 < i <= 1.7\n            append!(letter_grade, \"C-\")\n        elseif 1.0\
    \ < i <= 1.3\n            append!(letter_grade, \"D+\")\n        elseif 0.7 <\
    \ i <= 1.0\n            append!(letter_grade, \"D\")\n        elseif 0.0 < i <=\
    \ 0.7\n            append!(letter_grade, \"D-\")\n        elseif i == 0.0\n  \
    \          append!(letter_grade, \"E\")\n        end\n    end\n    return letter_grade\n\
    end", "    pass \nend", "    letters = Vector{String}()\n    for g in grades\n\
    \        if g == 4.0\n            push!(letters, \"A+\")\n        elseif g > 3.7\n\
    \            push!(letters, \"A\")\n        elseif g > 3.3\n            push!(letters,\
    \ \"A-\")\n        elseif g > 3.0\n            push!(letters, \"B+\")\n      \
    \  elseif g > 2.7\n            push!(letters, \"B\")\n        elseif g > 2.3\n\
    \            push!(letters, \"B-\")\n        elseif g > 2.0\n            push!(letters,\
    \ \"C+\")\n        elseif g > 1.7\n            push!(letters, \"C\")\n       \
    \ elseif g > 1.3\n            push!(letters, \"C-\")\n        elseif g > 1.0\n\
    \            push!(letters, \"D+\")\n        elseif g > 0.7\n            push!(letters,\
    \ \"D\")\n        elseif g > 0.0\n            push!(letters, \"D-\")\n       \
    \ else\n            push!(letters, \"E\")\n        end\n    end\n    return letters\n\
    end", "    \n    grades_length = length(grades)\n    letters_length = length(let_grade)\n\
    \    letter_grade = Vector{String}(undef, grades_length)\n    \n    for i in 1:grades_length\n\
    \        for j in 1:letters_length\n            if grades[i] == let_grade[j][1]\n\
    \                letter_grade[i] = let_grade[j][2]\n            end\n        end\n\
    \    end\n    \n    return letter_grade\n    \nend\n    \n    \n    ", "    #\
    \ code here\nend\n\"\"\"", "    grades = collect(grades)\n    letters = []\n \
    \   # if 4.0 in grades:\n    #     letters.append(\"A+\")\n    #     grades.remove(4.0)\n\
    \    if 3.7 in grades:\n        letters.append(\"A\")\n        grades.remove(3.7)\n\
    \    if 3.3 in grades:\n        letters.append(\"A-\")\n        grades.remove(3.3)\n\
    \    if 3.0 in grades:\n        letters.append(\"B+\")\n        grades.remove(3.0)\n\
    \    if 2.7 in grades:\n        letters.append(\"B\")\n        grades.remove(2.7)\n\
    \    if 2.3 in grades:\n        letters.append(\"B-\")\n        grades.remove(2.3)\n\
    \    if 2.0 in grades:\n        letters.append(\"C+\")\n        grades.remove(2.0)\n\
    \    if 1.7 in grades:\n        letters.append(\"C\")\n        grades.remove(1.7)\n\
    \    if 1.3 in grades:\n        letters.append(\"C-\")\n        grades.remove(1.3)\n\
    \    if 1.0 in grades:\n        letters.append(\"D+\")\n        grades.remove(1.0)\n\
    \    if 0.7 in grades:\n        letters.append(\"D\")\n        grades.remove(0.7)\n\
    \    if 0.0 in grades:\n        letters.append(\"D-\")\n        grades.remove(0.0)\n\
    \    if 0.0 in grades:\n        letters.append(\"E\")\n        grades.remove(0.0)\n\
    \    return letters\nend", "    \"\"\" Output a list of letter grades using the\
    \ following table:\n             GPA       |    Letter grade\n              4.0\
    \                A+\n            > 3.7                A \n            > 3.3  \
    \              A- \n            > 3.0                B+\n            > 2.7   \
    \             B \n            > 2.3                B-\n            > 2.0     \
    \           C+\n            > 1.7                C\n            > 1.3        \
    \        C-\n            > 1.0                D+ \n            > 0.7         \
    \       D \n            > 0.0                D-\n              0.0           \
    \     E\n    ", "    \"\"\"Function that converts a given list of GPAs to a list\
    \ of letter grades\"\"\"\n    grades_letter=String[]\n    for i in 1:length(grades)\n\
    \        if grades[i]==4.0\n            push!(grades_letter,\"A+\")\n        elseif\
    \ grades[i]>3.7\n            push!(grades_letter,\"A\")\n        elseif grades[i]>3.3\n\
    \            push!(grades_letter,\"A-\")\n        elseif grades[i]>3.0\n     \
    \       push!(grades_letter,\"B+\")\n        elseif grades[i]>2.7\n          \
    \  push!(grades_letter,\"B\")\n        elseif grades[i]>2.3\n            push!(grades_letter,\"\
    B-\")\n        elseif grades[i]>2.0\n            push!(grades_letter,\"C+\")\n\
    \        elseif grades[i]>1.7\n            push!(grades_letter,\"C\")\n      \
    \  elseif grades[i]>1.3\n            push!(grades_letter,\"C-\")\n        elseif\
    \ grades[i]>1.0\n            push!(grades_letter,\"D+\")\n        elseif grades[i]>0.7\n\
    \            push!(grades_letter,\"D\")\n        elseif grades[i]>0.0\n      \
    \      push!(grades_letter,\"D-\")\n        else\n            push!(grades_letter,\"\
    E\")\n        end\n    end\n    return grades_letter\nend\n ", "    grades_symbols\
    \ = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\"\
    , \"D\", \"D-\", \"E\"];\n    grades_bound = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0,\
    \ 1.7, 1.3, 1.0, 0.7, 0.0, 0.0];\n    grades_symbols[findfirst(grades_bound .>\
    \ grades)]\nend", "    letter_grades = [\"E\", \"D-\", \"D\", \"D+\", \"C-\",\
    \ \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    gpas = [0.0,\
    \ 0.7, 1.0, 1.3, 1.7, 2.0, 2.3, 2.7, 3.0, 3.3, 3.7, 4.0]\n    letter_grade = []\n\
    \    for i = 1:length(grades)\n        for j = 1:length(gpas)\n            if\
    \ grades[i] == gpas[j]\n                push!(letter_grade, letter_grades[j])\n\
    \            elseif grades[i] > gpas[j]\n                push!(letter_grade, letter_grades[j+1])\n\
    \                break\n            end\n        end\n    end\n    return letter_grade\n\
    end", "    \n    \"\"\"\n    This function converts a vector of numerical grades\
    \ to a vector of string grades.\n    This implementation is slightly optimized\
    \ because it only has to iterate through the \n    grades array once, reducing\
    \ the time complexity from O(n^2) to O(n). This is achieved\n    by using the\
    \ fact that the vector is sorted and by storing the current cutoff grade in \n\
    \    a variable, reducing the number of if statements to be checked through. \n\
    \    \"\"\"\n    \n    letter_grades = Vector{String}(undef, length(grades))\n\
    \    cutoff_grade = 4.0\n    cutoff_index = 0", "    letter_grade = []\n    for\
    \ num in grades\n        if num >= 4.0\n            push!(letter_grade, \"A+\"\
    )\n        elseif num >= 3.7\n            push!(letter_grade, \"A\")\n       \
    \ elseif num >= 3.3\n            push!(letter_grade, \"A-\")\n        elseif num\
    \ >= 3.0\n            push!(letter_grade, \"B+\")\n        elseif num >= 2.7\n\
    \            push!(letter_grade, \"B\")\n        elseif num >= 2.3\n         \
    \   push!(letter_grade, \"B-\")\n        elseif num >= 2.0\n            push!(letter_grade,\
    \ \"C+\")\n        elseif num >= 1.7\n            push!(letter_grade, \"C\")\n\
    \        elseif num >= 1.3\n            push!(letter_grade, \"C-\")\n        elseif\
    \ num >= 1.0\n            push!(letter_grade, \"D+\")\n        elseif num >= 0.7\n\
    \            push!(letter_grade, \"D\")\n        elseif num >= 0.0\n         \
    \   push!(letter_grade, \"D-\")\n        elseif num == 0.0\n            push!(letter_grade,\
    \ \"E\")\n        end\n    end\n    return letter_grade\nend", "    letter_grades\
    \ = []\n    for i in grades\n        if i >= 4.0\n            push!(letter_grades,\
    \ \"A+\")\n        elseif i >= 3.7\n            push!(letter_grades, \"A\")\n\
    \        elseif i >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ i >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif i >= 2.7\n\
    \            push!(letter_grades, \"B\")\n        elseif i >= 2.3\n          \
    \  push!(letter_grades, \"B-\")\n        elseif i >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif i >= 1.7\n            push!(letter_grades, \"C\")\n\
    \        elseif i >= 1.3\n            push!(letter_grades, \"C-\")\n        elseif\
    \ i >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif i >= 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif i >= 0.0\n          \
    \  push!(letter_grades, \"D-\")\n        else\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    # write your\
    \ code here\n    return grade\n \nend\n \n \n\"\"\"Mark has an array of integers.\
    \ Mark wants to know the length of the longest\n    contiguous subarray such that\
    \ the product of all the elements in the subarray\n    is divisible by k.\n  \
    \  Example:\n    divisible_by_k([1, 2, 3, 4, 5], 2) ==> 2\n    Explanation:\n\
    \    When we consider only [2, 3], the product of all elements in that subarray\
    \ is\n    6, which is divisible by 2. When we consider only [1, 2, 3, 4], the\
    \ product\n    of all elements in that subarray is 24, which is divisible by 2.\n\
    \    Since the number 6 is the largest product of all elements in a subarray that\n\
    \    is divisible by 2, the answer is 2.\n    \"\"\"", "    letter_grades = Array{String}(undef,\
    \ length(grades))\n    for i in 1:length(grades)\n        if grades[i] >= 4.0\n\
    \            letter_grades[i] = \"A+\"\n        elseif grades[i] >= 3.7\n    \
    \        letter_grades[i] = \"A\"\n        elseif grades[i] >= 3.3\n         \
    \   letter_grades[i] = \"A-\"\n        elseif grades[i] >= 3.0\n            letter_grades[i]\
    \ = \"B+\"\n        elseif grades[i] >= 2.7\n            letter_grades[i] = \"\
    B\"\n        elseif grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n\
    \        elseif grades[i] >= 2.0\n            letter_grades[i] = \"C+\"\n    \
    \    elseif grades[i] >= 1.7\n            letter_grades[i] = \"C\"\n        elseif\
    \ grades[i] >= 1.3\n            letter_grades[i] = \"C-\"\n        elseif grades[i]\
    \ >= 1.0\n            letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n\
    \            letter_grades[i] = \"D\"\n        elseif grades[i] >= 0.0\n     \
    \       letter_grades[i] = \"D-\"\n        elseif grades[i] < 0.0\n          \
    \  letter_grades[i] = \"E\"\n        end\n    end\n    return letter_grades\n\
    end", "    letter_grades = Vector{String}(undef, length(grades))\n    for i in\
    \ 1:length(grades)\n        if grades[i] >= 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grades[i] >= 3.7\n            letter_grades[i] = \"\
    A\"\n        elseif grades[i] >= 3.3\n            letter_grades[i] = \"A-\"\n\
    \        elseif grades[i] >= 3.0\n            letter_grades[i] = \"B+\"\n    \
    \    elseif grades[i] >= 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grades[i] >= 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ >= 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i] >= 1.7\n\
    \            letter_grades[i] = \"C\"\n        elseif grades[i] >= 1.3\n     \
    \       letter_grades[i] = \"C-\"\n        elseif grades[i] >= 1.0\n         \
    \   letter_grades[i] = \"D+\"\n        elseif grades[i] >= 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif grades[i] >= 0.0\n            letter_grades[i] = \"\
    D-\"\n        elseif grades[i] >= 0.0\n            letter_grades[i] = \"E\"\n\
    \        end\n    end\n    return letter_grades\nend\n ", "   \n    result = []\n\
    \    for grade in grades\n        \n        if grade < 0\n            push!(result,\
    \ \"E\")\n        elseif grade >= 0 && grade < 0.7\n            push!(result,\
    \ \"D-\")\n        elseif grade >= 0.7 && grade < 1.0\n            push!(result,\
    \ \"D\")\n        elseif grade >= 1.0 && grade < 1.3\n            push!(result,\
    \ \"D+\")\n        elseif grade >= 1.3 && grade < 1.7\n            push!(result,\
    \ \"C-\")\n        elseif grade >= 1.7 && grade < 2.0\n            push!(result,\
    \ \"C\")\n        elseif grade >= 2.0 && grade < 2.3\n            push!(result,\
    \ \"C+\")\n        elseif grade >= 2.3 && grade < 2.7\n            push!(result,\
    \ \"B-\")\n        elseif grade >= 2.7 && grade < 3.0\n            push!(result,\
    \ \"B\")\n        elseif grade >= 3.0 && grade < 3.3\n            push!(result,\
    \ \"B+\")\n        elseif grade >= 3.3 && grade < 3.7\n            push!(result,\
    \ \"A-\")\n        elseif grade >= 3.7 && grade < 4.0\n            push!(result,\
    \ \"A\")\n        elseif grade >= 4.0\n            push!(result, \"A+\")\n   \
    \     end\n    end\n    \n    return result\n    \nend", "    letter_grades =\
    \ [\"E\"]\n    push!(letter_grades, \"D-\")\n    push!(letter_grades, \"D\")\n\
    \    push!(letter_grades, \"D+\")\n    push!(letter_grades, \"C-\")\n    push!(letter_grades,\
    \ \"C\")\n    push!(letter_grades, \"C+\")\n    push!(letter_grades, \"B-\")\n\
    \    push!(letter_grades, \"B\")\n    push!(letter_grades, \"B+\")\n    push!(letter_grades,\
    \ \"A-\")\n    push!(letter_grades, \"A\")\n    push!(letter_grades, \"A+\")\n\
    \    letter_grades\nend", "   letter_grade = []\n   for i in grades\n      if\
    \ i == 4.0\n         append!(letter_grade, \"A+\")\n      elseif i > 3.7\n   \
    \      append!(letter_grade, \"A\")\n      elseif i > 3.3\n         append!(letter_grade,\
    \ \"A-\")\n      elseif i > 3.0\n         append!(letter_grade, \"B+\")\n    \
    \  elseif i > 2.7\n         append!(letter_grade, \"B\")\n      elseif i > 2.3\n\
    \         append!(letter_grade, \"B-\")\n      elseif i > 2.0\n         append!(letter_grade,\
    \ \"C+\")\n      elseif i > 1.7\n         append!(letter_grade, \"C\")\n     \
    \ elseif i > 1.3\n         append!(letter_grade, \"C-\")\n      elseif i > 1.0\n\
    \         append!(letter_grade, \"D+\")\n      elseif i > 0.7\n         append!(letter_grade,\
    \ \"D\")\n      elseif i > 0.0\n         append!(letter_grade, \"D-\")\n     \
    \ elseif i == 0.0\n         append!(letter_grade, \"E\")\n      end\n   end\n\
    \   return letter_grade\nend", "    letter_grades = []\n    for grade in grades\n\
    \        if grade >= 4.0\n            push!(letter_grades, \"A+\")\n        elseif\
    \ grade >= 3.7\n            push!(letter_grades, \"A\")\n        elseif grade\
    \ >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif grade >= 3.0\n\
    \            push!(letter_grades, \"B+\")\n        elseif grade >= 2.7\n     \
    \       push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n           \
    \ push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n            push!(letter_grades,\
    \ \"C+\")\n        elseif grade >= 1.7\n            push!(letter_grades, \"C\"\
    )\n        elseif grade >= 1.3\n            push!(letter_grades, \"C-\")\n   \
    \     elseif grade >= 1.0\n            push!(letter_grades, \"D+\")\n        elseif\
    \ grade >= 0.7\n            push!(letter_grades, \"D\")\n        elseif grade\
    \ >= 0.0\n            push!(letter_grades, \"D-\")\n        else\n           \
    \ push!(letter_grades, \"E\")\n        end\n    end\n    return letter_grades\n\
    end", "    grades_string = []\n    for i in grades\n        if i == 4.0\n    \
    \        push!(grades_string, \"A+\")\n        elseif i > 3.7\n            push!(grades_string,\
    \ \"A\")\n        elseif i > 3.3\n            push!(grades_string, \"A-\")\n \
    \       elseif i > 3.0\n            push!(grades_string, \"B+\")\n        elseif\
    \ i > 2.7\n            push!(grades_string, \"B\")\n        elseif i > 2.3\n \
    \           push!(grades_string, \"B-\")\n        elseif i > 2.0\n           \
    \ push!(grades_string, \"C+\")\n        elseif i > 1.7\n            push!(grades_string,\
    \ \"C\")\n        elseif i > 1.3\n            push!(grades_string, \"C-\")\n \
    \       elseif i > 1.0\n            push!(grades_string, \"D+\")\n        elseif\
    \ i > 0.7\n            push!(grades_string, \"D\")\n        elseif i > 0.0\n \
    \           push!(grades_string, \"D-\")\n        else\n            push!(grades_string,\
    \ \"E\")\n        end\n    end\n    return grades_string\nend", "    grades_len\
    \ = length(grades)\n    letter_grades = Array{String}(grades_len)\n    i = 1\n\
    \    while i <= grades_len\n        if grades[i] == 4.0\n            letter_grades[i]\
    \ = \"A+\"\n        elseif grades[i] > 3.7\n            letter_grades[i] = \"\
    A\"\n        elseif grades[i] > 3.3\n            letter_grades[i] = \"A-\"\n \
    \       elseif grades[i] > 3.0\n            letter_grades[i] = \"B+\"\n      \
    \  elseif grades[i] > 2.7\n            letter_grades[i] = \"B\"\n        elseif\
    \ grades[i] > 2.3\n            letter_grades[i] = \"B-\"\n        elseif grades[i]\
    \ > 2.0\n            letter_grades[i] = \"C+\"\n        elseif grades[i] > 1.7\n\
    \            letter_grades[i] = \"C\"\n        elseif grades[i] > 1.3\n      \
    \      letter_grades[i] = \"C-\"\n        elseif grades[i] > 1.0\n           \
    \ letter_grades[i] = \"D+\"\n        elseif grades[i] > 0.7\n            letter_grades[i]\
    \ = \"D\"\n        elseif grades[i] > 0.0\n            letter_grades[i] = \"D-\"\
    \n        else\n            letter_grades[i] = \"E\"\n        end\n        i +=\
    \ 1\n    end\n    return letter_grades\nend", "    return [numerical_letter_grade(x)\
    \ for x in grades]\nend", "    gpas = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0]\n    letters = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"\
    B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    return [letters[findlast(gpa->grade>=gpa,\
    \ gpas) ] for grade in grades]\nend\n ", "    \n    letters = []\n    \n    for\
    \ grade in grades\n        if grade >= 4.0\n            push!(letters, \"A+\"\
    )\n        elseif grade >= 3.7\n            push!(letters, \"A\")\n        elseif\
    \ grade >= 3.3\n            push!(letters, \"A-\")\n        elseif grade >= 3.0\n\
    \            push!(letters, \"B+\")\n        elseif grade >= 2.7\n           \
    \ push!(letters, \"B\")\n        elseif grade >= 2.3\n            push!(letters,\
    \ \"B-\")\n        elseif grade >= 2.0\n            push!(letters, \"C+\")\n \
    \       elseif grade >= 1.7\n            push!(letters, \"C\")\n        elseif\
    \ grade >= 1.3\n            push!(letters, \"C-\")\n        elseif grade >= 1.0\n\
    \            push!(letters, \"D+\")\n        elseif grade >= 0.7\n           \
    \ push!(letters, \"D\")\n        elseif grade >= 0.0\n            push!(letters,\
    \ \"D-\")\n        else\n            push!(letters, \"E\")\n        end\n    end\n\
    \    \n    return letters\nend", "    lg = []\n    push!(lg, \"A+\")\n    push!(lg,\
    \ \"A\")\n    push!(lg, \"A-\")\n    push!(lg, \"B+\")\n    push!(lg, \"B\")\n\
    \    push!(lg, \"B-\")\n    push!(lg, \"C+\")\n    push!(lg, \"C\")\n    push!(lg,\
    \ \"C-\")\n    push!(lg, \"D+\")\n    push!(lg, \"D\")\n    push!(lg, \"D-\")\n\
    \    push!(lg, \"E\")\n    grade = []\n    for i in grades\n        if i >= 4.0\n\
    \            push!(grade, lg[1])\n        elseif i >= 3.7\n            push!(grade,\
    \ lg[2])\n        elseif i >= 3.3\n            push!(grade, lg[3])\n        elseif\
    \ i >= 3.0\n            push!(grade, lg[4])\n        elseif i >= 2.7\n       \
    \     push!(grade, lg[5])\n        elseif i >= 2.3\n            push!(grade, lg[6])\n\
    \        elseif i >= 2.0\n            push!(grade, lg[7])\n        elseif i >=\
    \ 1.7\n            push!(grade, lg[8])\n        elseif i >= 1.3\n            push!(grade,\
    \ lg[9])\n        elseif i >= 1.0\n            push!(grade, lg[10])\n        elseif\
    \ i >= 0.7\n            push!(grade, lg[11])\n        elseif i >= 0.0\n      \
    \      push!(grade, lg[12])\n        else\n            push!(grade, lg[13])\n\
    \        end\n    end\n    return grade\nend", "    \"\"\"\n    A function to\
    \ find the letter grade given a vector of grades in numerical value \n    \"\"\
    \"\n    # A dictionary of numerical and letter grades\n    grade_dict = Dict(4.0\
    \ => \"A+\",\n        3.7 => \"A\",\n        3.3 => \"A-\",\n        3.0 => \"\
    B+\",\n        2.7 => \"B\",\n        2.3 => \"B-\",\n        2.0 => \"C+\",\n\
    \        1.7 => \"C\",\n        1.3 => \"C-\",\n        1.0 => \"D+\",\n     \
    \   0.7 => \"D\",\n        0.0 => \"D-\",\n        0.0 => \"E\")\n    \n    letter_grades\
    \ = []\n    for i in grades\n        for key in keys(grade_dict)\n           \
    \ if key < i\n                push!(letter_grades, grade_dict[key])\n        \
    \        break\n            end\n        end\n    end\n    return letter_grades\n\
    end", "    a = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"\
    C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    b = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0,\
    \ 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    grade = []\n    for i in 1:length(grades)\n\
    \        if grades[i] > 4.0\n            push!(grade, a[1])\n        elseif grades[i]\
    \ > 3.7\n            push!(grade, a[2])\n        elseif grades[i] > 3.3\n    \
    \        push!(grade, a[3])\n        elseif grades[i] > 3.0\n            push!(grade,\
    \ a[4])\n        elseif grades[i] > 2.7\n            push!(grade, a[5])\n    \
    \    elseif grades[i] > 2.3\n            push!(grade, a[6])\n        elseif grades[i]\
    \ > 2.0\n            push!(grade, a[7])\n        elseif grades[i] > 1.7\n    \
    \        push!(grade, a[8])\n        elseif grades[i] > 1.3\n            push!(grade,\
    \ a[9])\n        elseif grades[i] > 1.0\n            push!(grade, a[10])\n   \
    \     elseif grades[i] > 0.7\n            push!(grade, a[11])\n        elseif\
    \ grades[i] > 0.0\n            push!(grade, a[12])\n        else\n           \
    \ push!(grade, a[13])\n        end\n    end\n    return grade\nend", "    letter_grades\
    \ = []\n    for i in grades\n        if i == 4.0\n            append!(letter_grades,\
    \ \"A+\")\n        elseif i > 3.7\n            append!(letter_grades, \"A\")\n\
    \        elseif i > 3.3\n            append!(letter_grades, \"A-\")\n        elseif\
    \ i > 3.0\n            append!(letter_grades, \"B+\")\n        elseif i > 2.7\n\
    \            append!(letter_grades, \"B\")\n        elseif i > 2.3\n         \
    \   append!(letter_grades, \"B-\")\n        elseif i > 2.0\n            append!(letter_grades,\
    \ \"C+\")\n        elseif i > 1.7\n            append!(letter_grades, \"C\")\n\
    \        elseif i > 1.3\n            append!(letter_grades, \"C-\")\n        elseif\
    \ i > 1.0\n            append!(letter_grades, \"D+\")\n        elseif i > 0.7\n\
    \            append!(letter_grades, \"D\")\n        elseif i > 0.0\n         \
    \   append!(letter_grades, \"D-\")\n        else\n            append!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "    letter_grades\
    \ = []\n    push!(letter_grades, \"E\")\n    push!(letter_grades, \"D-\")\n  \
    \  push!(letter_grades, \"D\")\n    push!(letter_grades, \"D+\")\n    push!(letter_grades,\
    \ \"C-\")\n    push!(letter_grades, \"C\")\n    push!(letter_grades, \"C+\")\n\
    \    push!(letter_grades, \"B-\")\n    push!(letter_grades, \"B\")\n    push!(letter_grades,\
    \ \"B+\")\n    push!(letter_grades, \"A-\")\n    push!(letter_grades, \"A\")\n\
    \    push!(letter_grades, \"A+\")\n    letter_grades = reverse(letter_grades)\n\
    \    grades_array = []\n    for grade in grades\n        push!(grades_array, letter_grades[ceil(grade*10)])\n\
    \    end\n    return grades_array\nend", "    # Write your code here\n    return\n\
    end", "    \"\"\"\n    This function converts a list of numerical grades to a\
    \ list of letter grades \n    \"\"\"\n    letter_grades = []\n    for grade in\
    \ grades\n        if grade >= 4.0\n            push!(letter_grades, \"A+\")\n\
    \        elseif grade >= 3.7\n            push!(letter_grades, \"A\")\n      \
    \  elseif grade >= 3.3\n            push!(letter_grades, \"A-\")\n        elseif\
    \ grade >= 3.0\n            push!(letter_grades, \"B+\")\n        elseif grade\
    \ >= 2.7\n            push!(letter_grades, \"B\")\n        elseif grade >= 2.3\n\
    \            push!(letter_grades, \"B-\")\n        elseif grade >= 2.0\n     \
    \       push!(letter_grades, \"C+\")\n        elseif grade >= 1.7\n          \
    \  push!(letter_grades, \"C\")\n        elseif grade >= 1.3\n            push!(letter_grades,\
    \ \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grades, \"D+\"\
    )\n        elseif grade >= 0.7\n            push!(letter_grades, \"D\")\n    \
    \    elseif grade >= 0.0\n            push!(letter_grades, \"D-\")\n        elseif\
    \ grade == 0.0\n            push!(letter_grades, \"E\")\n        end\n    end\n\
    \    return letter_grades\nend", "    # define the first letter grade\n    let_grade\
    \ = \"E\"\n    # define the array that will contain all letter grades\n    let_array\
    \ = Array{String}(undef, length(grades))", "    letter_grade = Vector{String}(undef,\
    \ length(grades))\n    j = 1\n    for i in grades\n        if(i >= 4.0)\n    \
    \        letter_grade[j] = \"A+\"\n        elseif(i >= 3.7)\n            letter_grade[j]\
    \ = \"A\"\n        elseif(i >= 3.3)\n            letter_grade[j] = \"A-\"\n  \
    \      elseif(i >= 3.0)\n            letter_grade[j] = \"B+\"\n        elseif(i\
    \ >= 2.7)\n            letter_grade[j] = \"B\"\n        elseif(i >= 2.3)\n   \
    \         letter_grade[j] = \"B-\"\n        elseif(i >= 2.0)\n            letter_grade[j]\
    \ = \"C+\"\n        elseif(i >= 1.7)\n            letter_grade[j] = \"C\"\n  \
    \      elseif(i >= 1.3)\n            letter_grade[j] = \"C-\"\n        elseif(i\
    \ >= 1.0)\n            letter_grade[j] = \"D+\"\n        elseif(i >= 0.7)\n  \
    \          letter_grade[j] = \"D\"\n        elseif(i >= 0.0)\n            letter_grade[j]\
    \ = \"D-\"\n        else\n            letter_grade[j] = \"E\"\n        end\n \
    \       j = j + 1\n    end\n    return letter_grade\nend", "    leter_grades =\
    \ Vector{String}(undef, length(grades)) \n    for i in 1:length(grades)\n    \
    \    if grades[i] >= 4.0\n            leter_grades[i] = \"A+\"\n        elseif\
    \ grades[i] > 3.7\n            leter_grades[i] = \"A\"\n        elseif grades[i]\
    \ > 3.3\n            leter_grades[i] = \"A-\"\n        elseif grades[i] > 3.0\n\
    \            leter_grades[i] = \"B+\"\n        elseif grades[i] > 2.7\n      \
    \      leter_grades[i] = \"B\"\n        elseif grades[i] > 2.3\n            leter_grades[i]\
    \ = \"B-\"\n        elseif grades[i] > 2.0\n            leter_grades[i] = \"C+\"\
    \n        elseif grades[i] > 1.7\n            leter_grades[i] = \"C\"\n      \
    \  elseif grades[i] > 1.3\n            leter_grades[i] = \"C-\"\n        elseif\
    \ grades[i] > 1.0\n            leter_grades[i] = \"D+\"\n        elseif grades[i]\
    \ > 0.7\n            leter_grades[i] = \"D\"\n        elseif grades[i] > 0.0\n\
    \            leter_grades[i] = \"D-\"\n        else\n            leter_grades[i]\
    \ = \"E\"\n        end\n    end\n    return leter_grades\nend", "    grades_letters\
    \ = Vector{String}(length(grades))\n    for (index, grade) in enumerate(grades)\n\
    \        if grade == 4.0\n            grades_letters[index] = \"A+\"\n       \
    \ elseif grade > 3.7\n            grades_letters[index] = \"A\"\n        elseif\
    \ grade > 3.3\n            grades_letters[index] = \"A-\"\n        elseif grade\
    \ > 3.0\n            grades_letters[index] = \"B+\"\n        elseif grade > 2.7\n\
    \            grades_letters[index] = \"B\"\n        elseif grade > 2.3\n     \
    \       grades_letters[index] = \"B-\"\n        elseif grade > 2.0\n         \
    \   grades_letters[index] = \"C+\"\n        elseif grade > 1.7\n            grades_letters[index]\
    \ = \"C\"\n        elseif grade > 1.3\n            grades_letters[index] = \"\
    C-\"\n        elseif grade > 1.0\n            grades_letters[index] = \"D+\"\n\
    \        elseif grade > 0.7\n            grades_letters[index] = \"D\"\n     \
    \   elseif grade > 0.0\n            grades_letters[index] = \"D-\"\n        elseif\
    \ grade == 0.0\n            grades_letters[index] = \"E\"\n        end\n    end\n\
    \    return grades_letters\nend", "    result = []\n    for i = 1:length(grades)\n\
    \        if grades[i] >= 4.0\n            push!(result, \"A+\")\n        elseif\
    \ grades[i] >= 3.7\n            push!(result, \"A\")\n        elseif grades[i]\
    \ >= 3.3\n            push!(result, \"A-\")\n        elseif grades[i] >= 3.0\n\
    \            push!(result, \"B+\")\n        elseif grades[i] >= 2.7\n        \
    \    push!(result, \"B\")\n        elseif grades[i] >= 2.3\n            push!(result,\
    \ \"B-\")\n        elseif grades[i] >= 2.0\n            push!(result, \"C+\")\n\
    \        elseif grades[i] >= 1.7\n            push!(result, \"C\")\n        elseif\
    \ grades[i] >= 1.3\n            push!(result, \"C-\")\n        elseif grades[i]\
    \ >= 1.0\n            push!(result, \"D+\")\n        elseif grades[i] >= 0.7\n\
    \            push!(result, \"D\")\n        elseif grades[i] >= 0.0\n         \
    \   push!(result, \"D-\")\n        else\n            push!(result, \"E\")\n  \
    \      end\n    end\n    return result\nend", "    if size(grades, 1) == 0\n \
    \       return []\n    end\n    grades = sort(grades, rev=true)\n    if grades[1]\
    \ >= 4.0\n        return [\"A+\"]\n    elseif grades[1] >= 3.7\n        return\
    \ [\"A\"]\n    elseif grades[1] >= 3.3\n        return [\"A-\"]\n    elseif grades[1]\
    \ >= 3.0\n        return [\"B+\"]\n    elseif grades[1] >= 2.7\n        return\
    \ [\"B\"]\n    elseif grades[1] >= 2.3\n        return [\"B-\"]\n    elseif grades[1]\
    \ >= 2.0\n        return [\"C+\"]\n    elseif grades[1] >= 1.7\n        return\
    \ [\"C\"]\n    elseif grades[1] >= 1.3\n        return [\"C-\"]\n    elseif grades[1]\
    \ >= 1.0\n        return [\"D+\"]\n    elseif grades[1] >= 0.7\n        return\
    \ [\"D\"]\n    elseif grades[1] >= 0.0\n        return [\"D-\"]\n    else\n  \
    \      return [\"E\"]\n    end\nend", "    letter_grades = [\"A+\", \"A\", \"\
    A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"\
    E\"]\n    grades_out = []\n    for i in grades\n        if i == 4.0\n        \
    \    push!(grades_out, \"A+\")\n        elseif i > 3.7\n            push!(grades_out,\
    \ \"A\")\n        elseif i > 3.3\n            push!(grades_out, \"A-\")\n    \
    \    elseif i > 3.0\n            push!(grades_out, \"B+\")\n        elseif i >\
    \ 2.7\n            push!(grades_out, \"B\")\n        elseif i > 2.3\n        \
    \    push!(grades_out, \"B-\")\n        elseif i > 2.0\n            push!(grades_out,\
    \ \"C+\")\n        elseif i > 1.7\n            push!(grades_out, \"C\")\n    \
    \    elseif i > 1.3\n            push!(grades_out, \"C-\")\n        elseif i >\
    \ 1.0\n            push!(grades_out, \"D+\")\n        elseif i > 0.7\n       \
    \     push!(grades_out, \"D\")\n        elseif i > 0.0\n            push!(grades_out,\
    \ \"D-\")\n        else\n            push!(grades_out, \"E\")\n        end\n \
    \   end\n    return grades_out\nend", "    \"\"\"It is the last week of the semester\
    \ and the teacher has to give the grades\n    to students. The teacher has been\
    \ making her own algorithm for grading.\n    The only problem is, she has lost\
    \ the code she used for grading.\n    She has given you a list of GPAs for some\
    \ students and you have to write \n    a function that can output a list of letter\
    \ grades using the following table:\n             GPA       |    Letter grade\n\
    \              4.0                A+\n            > 3.7                A \n  \
    \          > 3.3                A- \n            > 3.0                B+\n   \
    \         > 2.7                B \n            > 2.3                B-\n     \
    \       > 2.0                C+\n            > 1.7                C\n        \
    \    > 1.3                C-\n            > 1.0                D+ \n         \
    \   > 0.7                D \n            > 0.0                D-\n           \
    \   0.0                E\n    ", "    let_grades = []\n    for i in grades\n \
    \       if i >= 4.0\n            push!(let_grades, \"A+\")\n        elseif i >=\
    \ 3.7\n            push!(let_grades, \"A\")\n        elseif i >= 3.3\n       \
    \     push!(let_grades, \"A-\")\n        elseif i >= 3.0\n            push!(let_grades,\
    \ \"B+\")\n        elseif i >= 2.7\n            push!(let_grades, \"B\")\n   \
    \     elseif i >= 2.3\n            push!(let_grades, \"B-\")\n        elseif i\
    \ >= 2.0\n            push!(let_grades, \"C+\")\n        elseif i >= 1.7\n   \
    \         push!(let_grades, \"C\")\n        elseif i >= 1.3\n            push!(let_grades,\
    \ \"C-\")\n        elseif i >= 1.0\n            push!(let_grades, \"D+\")\n  \
    \      elseif i >= 0.7\n            push!(let_grades, \"D\")\n        elseif i\
    \ >= 0.0\n            push!(let_grades, \"D-\")\n        elseif i == 0.0\n   \
    \         push!(let_grades, \"E\")\n        end\n    end\n    return let_grades\n\
    end", "    letter_grades = [\"E\", \"D-\", \"D\", \"D+\", \"C-\", \"C\", \"C+\"\
    , \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"]\n    new_grades = []\n    for\
    \ grade in grades\n        if grade < 0.7\n            push!(new_grades, letter_grades[1])\n\
    \        elseif grade < 1.0\n            push!(new_grades, letter_grades[2])\n\
    \        elseif grade < 1.3\n            push!(new_grades, letter_grades[3])\n\
    \        elseif grade < 1.7\n            push!(new_grades, letter_grades[4])\n\
    \        elseif grade < 2.0\n            push!(new_grades, letter_grades[5])\n\
    \        elseif grade < 2.3\n            push!(new_grades, letter_grades[6])\n\
    \        elseif grade < 2.7\n            push!(new_grades, letter_grades[7])\n\
    \        elseif grade < 3.0\n            push!(new_grades, letter_grades[8])\n\
    \        elseif grade < 3.3\n            push!(new_grades, letter_grades[9])\n\
    \        elseif grade < 3.7\n            push!(new_grades, letter_grades[10])\n\
    \        elseif grade < 4.0\n            push!(new_grades, letter_grades[11])\n\
    \        else\n            push!(new_grades, letter_grades[12])\n        end\n\
    \    end\n    return new_grades\nend\n            ", "    letter_grade = []\n\
    \    for grade in grades\n        if grade >= 4.0\n            push!(letter_grade,\
    \ \"A+\")\n        elseif grade >= 3.7\n            push!(letter_grade, \"A\"\
    )\n        elseif grade >= 3.3\n            push!(letter_grade, \"A-\")\n    \
    \    elseif grade >= 3.0\n            push!(letter_grade, \"B+\")\n        elseif\
    \ grade >= 2.7\n            push!(letter_grade, \"B\")\n        elseif grade >=\
    \ 2.3\n            push!(letter_grade, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letter_grade, \"C+\")\n        elseif grade >= 1.7\n      \
    \      push!(letter_grade, \"C\")\n        elseif grade >= 1.3\n            push!(letter_grade,\
    \ \"C-\")\n        elseif grade >= 1.0\n            push!(letter_grade, \"D+\"\
    )\n        elseif grade >= 0.7\n            push!(letter_grade, \"D\")\n     \
    \   elseif grade >= 0.0\n            push!(letter_grade, \"D-\")\n        elseif\
    \ grade == 0.0\n            push!(letter_grade, \"E\")\n        end\n    end\n\
    \    return letter_grade\nend", "    numerical_grade = [\"A+\",\"A\",\"A-\",\"\
    B+\",\"B\",\"B-\",\"C+\",\"C\",\"C-\",\"D+\",\"D\",\"D-\",\"E\"]\n    grade_range\
    \ = [4.0,3.7,3.3,3.0,2.7,2.3,2.0,1.7,1.3,1.0,0.7,0.0,0.0]\n    letter_grade =\
    \ []\n    for i in grades\n        for j in 1:length(grade_range)\n          \
    \  if i >= grade_range[j]\n                push!(letter_grade, numerical_grade[j])\n\
    \                break\n            end\n        end\n    end\n    return letter_grade\n\
    end", "    # Create a vector of strings with the size equal to the input grades.\n\
    \    letter_grades = String[]\n    # Loop over each grade in the input grades\
    \ and compare it with a number.\n    for grade in grades\n        # If a grade\
    \ is greater than a number, then append a letter to the string vector.\n     \
    \   if grade > 4.0\n            push!(letter_grades, \"A+\")\n        elseif grade\
    \ > 3.7\n            push!(letter_grades, \"A\")\n        elseif grade > 3.3\n\
    \            push!(letter_grades, \"A-\")\n        elseif grade > 3.0\n      \
    \      push!(letter_grades, \"B+\")\n        elseif grade > 2.7\n            push!(letter_grades,\
    \ \"B\")\n        elseif grade > 2.3\n            push!(letter_grades, \"B-\"\
    )\n        elseif grade > 2.0\n            push!(letter_grades, \"C+\")\n    \
    \    elseif grade > 1.7\n            push!(letter_grades, \"C\")\n        elseif\
    \ grade > 1.3\n            push!(letter_grades, \"C-\")\n        elseif grade\
    \ > 1.0\n            push!(letter_grades, \"D+\")\n        elseif grade > 0.7\n\
    \            push!(letter_grades, \"D\")\n        elseif grade > 0.0\n       \
    \     push!(letter_grades, \"D-\")\n        elseif grade == 0.0\n            push!(letter_grades,\
    \ \"E\")\n        end\n    end\n    return letter_grades\nend", "        x = length(grades)\n\
    \        result = []\n        for i in 1:x\n            if (grades[i]==4.0)\n\
    \                grade = \"A+\"\n            elseif (grades[i] > 3.7)\n      \
    \          grade = \"A\"\n            elseif (grades[i] > 3.3)\n             \
    \   grade = \"A-\"\n            elseif (grades[i] > 3.0)\n                grade\
    \ = \"B+\"\n            elseif (grades[i] > 2.7)\n                grade = \"B\"\
    \n            elseif (grades[i] > 2.3)\n                grade = \"B-\"\n     \
    \       elseif (grades[i] > 2.0)\n                grade = \"C+\"\n           \
    \ elseif (grades[i] > 1.7)\n                grade = \"C\"\n            elseif\
    \ (grades[i] > 1.3)\n                grade = \"C-\"\n            elseif (grades[i]\
    \ > 1.0)\n                grade = \"D+\"\n            elseif (grades[i] > 0.7)\n\
    \                grade = \"D\"\n            elseif (grades[i] > 0.0)\n       \
    \         grade = \"D-\"\n            else\n                grade = \"E\"\n  \
    \          end\n            push!(result, grade)\n        end\n        return\
    \ result\n    end", "    return [if g >= 4.0 \n            \"A+\" \n         \
    \   elseif g >= 3.7 \n            \"A\" \n            elseif g >= 3.3 \n     \
    \       \"A-\" \n            elseif g >= 3.0 \n            \"B+\" \n         \
    \   elseif g >= 2.7 \n            \"B\" \n            elseif g >= 2.3 \n     \
    \       \"B-\" \n            elseif g >= 2.0 \n            \"C+\" \n         \
    \   elseif g >= 1.7 \n            \"C\" \n            elseif g >= 1.3 \n     \
    \       \"C-\" \n            elseif g >= 1.0 \n            \"D+\" \n         \
    \   elseif g >= 0.7 \n            \"D\" \n            elseif g >= 0.0 \n     \
    \       \"D-\" \n            else \n            \"E\"\n            end for g in\
    \ grades]\nend\n ", "    letters = []\n    for grade in grades\n        if grade\
    \ >= 4.0\n            push!(letters, \"A+\")\n        elseif grade >= 3.7\n  \
    \          push!(letters, \"A\")\n        elseif grade >= 3.3\n            push!(letters,\
    \ \"A-\")\n        elseif grade >= 3.0\n            push!(letters, \"B+\")\n \
    \       elseif grade >= 2.7\n            push!(letters, \"B\")\n        elseif\
    \ grade >= 2.3\n            push!(letters, \"B-\")\n        elseif grade >= 2.0\n\
    \            push!(letters, \"C+\")\n        elseif grade >= 1.7\n           \
    \ push!(letters, \"C\")\n        elseif grade >= 1.3\n            push!(letters,\
    \ \"C-\")\n        elseif grade >= 1.0\n            push!(letters, \"D+\")\n \
    \       elseif grade >= 0.7\n            push!(letters, \"D\")\n        elseif\
    \ grade >= 0.0\n            push!(letters, \"D-\")\n        else\n           \
    \ push!(letters, \"E\")\n        end\n    end\n    return letters\nend", "   \
    \ grades_out = []\n    for i in grades\n        if i == 4.0\n            push!(grades_out,\
    \ \"A+\")\n        elseif i > 3.7\n            push!(grades_out, \"A\")\n    \
    \    elseif i > 3.3\n            push!(grades_out, \"A-\")\n        elseif i >\
    \ 3.0\n            push!(grades_out, \"B+\")\n        elseif i > 2.7\n       \
    \     push!(grades_out, \"B\")\n        elseif i > 2.3\n            push!(grades_out,\
    \ \"B-\")\n        elseif i > 2.0\n            push!(grades_out, \"C+\")\n   \
    \     elseif i > 1.7\n            push!(grades_out, \"C\")\n        elseif i >\
    \ 1.3\n            push!(grades_out, \"C-\")\n        elseif i > 1.0\n       \
    \     push!(grades_out, \"D+\")\n        elseif i > 0.7\n            push!(grades_out,\
    \ \"D\")\n        elseif i > 0.0\n            push!(grades_out, \"D-\")\n    \
    \    elseif i == 0.0\n            push!(grades_out, \"E\")\n        end\n    end\n\
    \    return grades_out\nend\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5])"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

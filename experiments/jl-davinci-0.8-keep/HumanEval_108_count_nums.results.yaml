name: HumanEval_108_count_nums
language: jl
results:
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for n in arr\n        if n < 0\n            s = string(n)\n            sum =\
    \ parse(Int64, s[2]) + parse(Int64, s[3]) + parse(Int64, s[4])\n        else\n\
    \            sum = 0\n            while n > 0\n                sum += n % 10\n\
    \                n = n % 10\n            end\n        end\n        if sum > 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwvijzc_z.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate([-1, -2, 0]) == 0\\n  BoundsError: attempt\
    \ to access 2-codeunit String at index [3]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] count_nums(arr::Vector{Int64})\\n     @ Main /tmp/tmpwvijzc_z.jl:15\\n \
    \  [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpwvijzc_z.jl:35 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpwvijzc_z.jl:33\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    val = 0\n    for\
    \ i in arr\n        if sum(digits(abs(i))) > 0\n            val += 1\n       \
    \ end\n    end\n    return val\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_bpkgpc.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph_bpkgpc.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_bpkgpc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph_bpkgpc.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_bpkgpc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_bpkgpc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph_bpkgpc.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_bpkgpc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_bpkgpc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph_bpkgpc.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph_bpkgpc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph_bpkgpc.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_bpkgpc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwoax_fdk.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwoax_fdk.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoax_fdk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwoax_fdk.jl:29\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoax_fdk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoax_fdk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwoax_fdk.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoax_fdk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoax_fdk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwoax_fdk.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoax_fdk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoax_fdk.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwoax_fdk.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for a in arr\n        sum = 0\n        if a < 0\n            a = -a\n      \
    \  end\n        while a > 0\n            sum += a % 10\n            a = div(a,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9o5ny8v9.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9o5ny8v9.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9o5ny8v9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9o5ny8v9.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9o5ny8v9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9o5ny8v9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9o5ny8v9.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9o5ny8v9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9o5ny8v9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9o5ny8v9.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9o5ny8v9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9o5ny8v9.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9o5ny8v9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # Write your code\
    \ here\nend\n\"\"\"\n    Write a function list_complement which takes two lists\
    \ of integers as\n    inputs and returns a vector of all integers in the first\
    \ list which are\n    not in the second list.\n    >>> sort(list_complement([1,\
    \ 2, 3], [2, 3, 4])) == [1]\n    >>> sort(list_complement([1, 2, 3], [1, 2, 3]))\
    \ == []\n    >>> sort(list_complement([1, 2, 3], [])) == [1, 2, 3]\n    >>> sort(list_complement([],\
    \ [1, 2, 3])) == []\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpz0fwq0oj.jl:13\nin expression starting at /tmp/tmpz0fwq0oj.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if length(arr)\
    \ == 0\n        return 0\n    end\n    num = 0\n    for i in arr\n        if abs(i)\
    \ < 10\n            num += 1\n        elseif abs(i) < 100\n            if abs(i)\
    \ % 10 == 0\n                continue\n            else\n                num +=\
    \ 1\n            end\n        elseif abs(i) < 1000\n            if abs(i) % 100\
    \ == 0\n                continue\n            else\n                num += 1\n\
    \            end\n        elseif abs(i) < 10000\n            if abs(i) % 1000\
    \ == 0\n                continue\n            else\n                num += 1\n\
    \            end\n        elseif abs(i) < 100000\n            if abs(i) % 10000\
    \ == 0\n                continue\n            else\n                num += 1\n\
    \            end\n        elseif abs(i) < 1000000\n            if abs(i) % 100000\
    \ == 0\n                continue\n            else\n                num += 1\n\
    \            end\n        elseif abs(i) < 10000000\n            if abs(i) % 1000000\
    \ == 0\n                continue\n            else\n                num += 1\n\
    \            end\n        elseif abs(i) < 100000000\n            if abs(i) % 10000000\
    \ == 0\n                continue\n            else\n                num += 1\n\
    \            end\n        elseif abs(i) < 1000000000\n            if abs(i) %\
    \ 100000000 == 0\n                continue\n            else\n               \
    \ num += 1\n            end\n        elseif abs(i) < 10000000000\n           \
    \ if abs(i) % 1000000000 == 0\n                continue\n            else\n  \
    \              num += 1\n            end\n        elseif abs(i) < 100000000000\n\
    \            if abs(i) % 10000000000 == 0\n                continue\n        \
    \    else\n                num += 1\n            end\n        elseif abs(i) <\
    \ 1000000000000\n            if abs(i) % 100000000000 == 0\n                continue\n\
    \            else\n                num += 1\n            end\n        elseif abs(i)\
    \ < 10000000000000\n            if abs(i) % 1000000000000 == 0\n             \
    \   continue\n            else\n                num += 1\n            end\n  \
    \      elseif abs(i) < 100000000000000\n            if abs(i) % 10000000000000\
    \ == 0\n                continue\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu16wbddt.jl:1\nin expression starting at /tmp/tmpu16wbddt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"\"\"\n    >>>\
    \ count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1,\
    \ 1, 2]) == 3\n    \"\"\"\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpib6fcg5x.jl:25\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpib6fcg5x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpib6fcg5x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpib6fcg5x.jl:26\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpib6fcg5x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpib6fcg5x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpib6fcg5x.jl:27\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpib6fcg5x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpib6fcg5x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpib6fcg5x.jl:28\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpib6fcg5x.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpib6fcg5x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpib6fcg5x.jl:29\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpib6fcg5x.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0 \n  \
    \  for i = 1:length(arr)\n        if signed_digits_sum(arr[i]) > 0\n         \
    \   count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqihpunps.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpqihpunps.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqihpunps.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqihpunps.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpqihpunps.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpqihpunps.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqihpunps.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqihpunps.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpqihpunps.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpqihpunps.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqihpunps.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqihpunps.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpqihpunps.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqihpunps.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if ispositive(i) && i != 0\n            count += 1\n \
    \       elseif i == 0\n            count += 1\n        else\n            while\
    \ i != 0\n                if mod(i,10) > 0\n                    count += 1\n \
    \                   break\n                end\n                i = div(i,10)\n\
    \            end\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpydin66wd.jl:35\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: ispositive not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpydin66wd.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpydin66wd.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpydin66wd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpydin66wd.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: ispositive not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpydin66wd.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpydin66wd.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpydin66wd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpydin66wd.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: ispositive not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpydin66wd.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpydin66wd.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpydin66wd.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpydin66wd.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: ispositive not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpydin66wd.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydin66wd.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum_digits = 0\n\
    \    cnt = 0\n    for i in arr\n        i == negative(i) ? sum_digits += abs(i)\
    \ : sum_digits += i\n        if sum_digits > 0\n            cnt += 1\n       \
    \ end\n    end\n    return cnt\nend\n \n \n\"\"\"\n    Write a function is_multiple\
    \ which takes an integer n and returns true\n    if the number is a multiple of\
    \ 3.\n    >>> is_multiple(3) == true\n    >>> is_multiple(4) == false\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpfsdo3bij.jl:23\nin expression starting at /tmp/tmpfsdo3bij.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjno1qv47.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjno1qv47.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjno1qv47.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjno1qv47.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjno1qv47.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjno1qv47.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjno1qv47.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjno1qv47.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjno1qv47.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjno1qv47.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjno1qv47.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjno1qv47.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjno1qv47.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjno1qv47.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjno1qv47.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr1axzh_r.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpr1axzh_r.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1axzh_r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1axzh_r.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1axzh_r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1axzh_r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1axzh_r.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1axzh_r.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1axzh_r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1axzh_r.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr1axzh_r.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr1axzh_r.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr1axzh_r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(sum(abs.(digits(x)))\
    \ > 0 for x in arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppm_bjtk0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})\n      @\
    \ Base ./reduce.jl:331\n    [4] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n\
    \    [5] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n    [6] foldl_impl\n\
    \      @ ./reduce.jl:49 [inlined]\n    [7] mapfoldl_impl\n      @ ./reduce.jl:44\
    \ [inlined]\n    [8] #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [9]\
    \ mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [10] #mapreduce#248\n      @\
    \ ./reduce.jl:289 [inlined]\n   [11] mapreduce\n      @ ./reduce.jl:289 [inlined]\n\
    \   [12] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [13] sum\n      @ ./reduce.jl:503\
    \ [inlined]\n   [14] #sum#252\n      @ ./reduce.jl:532 [inlined]\n   [15] sum\n\
    \      @ ./reduce.jl:532 [inlined]\n   [16] count_nums(arr::Vector{Int64})\n \
    \     @ Main /tmp/tmppm_bjtk0.jl:11\n   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [18] macro expansion\n      @ /tmp/tmppm_bjtk0.jl:18 [inlined]\n\
    \   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [20] top-level scope\n      @ /tmp/tmppm_bjtk0.jl:17\ntest set:\
    \ Test Failed at /tmp/tmppm_bjtk0.jl:19\n  Expression: candidate([-1, -2, 0])\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm_bjtk0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm_bjtk0.jl:17\ntest set: Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm_bjtk0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # YOUR CODE HERE\n\
    \    count=0\n    for i in arr\n        if sum_of_digits(i)>0\n            count+=1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuuil2ez7.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuuil2ez7.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuuil2ez7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuuil2ez7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuuil2ez7.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuuil2ez7.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuuil2ez7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuuil2ez7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuuil2ez7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuuil2ez7.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuuil2ez7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuuil2ez7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuuil2ez7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuuil"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuuil2ez7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        if num < 0\n            sum = sum_of_digits(-num)\n\
    \        else\n            sum = sum_of_digits(num)\n        end\n        if sum\
    \ > 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphr20hqqu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphr20hqqu.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphr20hqqu.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphr20hqqu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphr20hqqu.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphr20hqqu.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphr20hqqu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphr20hqqu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphr20hqqu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphr20hqqu.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphr20hqqu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphr20hqqu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphr20hqqu.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphr20"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphr20hqqu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in arr\n        if i < 0\n            i = -i\n        end\n        sum +=\
    \ sum_digits(i)\n    end\n    if sum > 0\n        return 1\n    else\n       \
    \ return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp97pk4zbt.jl:30\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp97pk4zbt.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97pk4zbt.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97pk4zbt.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp97pk4zbt.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp97pk4zbt.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97pk4zbt.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97pk4zbt.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp97pk4zbt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp97pk4zbt.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97pk4zbt.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97pk4zbt.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp97pk4zbt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp97pk4zbt.jl:16\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97pk4zbt.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    c = 0\n \
    \   for i = 1:length(arr)\n        if arr[i]>=0\n            if sum_digits(arr[i])\
    \ > 0\n                c = c + 1\n            end\n        else\n            if\
    \ sum_digits(abs(arr[i])) > 0\n                c = c + 1\n            end\n  \
    \      end\n    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8tjri1a_.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8tjri1a_.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8tjri1a_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8tjri1a_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp8tjri1a_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8tjri1a_.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8tjri1a_.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8tjri1a_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp8tjri1a_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8tjri1a_.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8tjri1a_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8tjri1a_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp8tjri1a_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8tjri1a_.jl:15\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8tjri1a_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if signed_digits_sum(i) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpptz_auqe.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpptz_auqe.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz_auqe.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptz_auqe.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpptz_auqe.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpptz_auqe.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz_auqe.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptz_auqe.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpptz_auqe.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpptz_auqe.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz_auqe.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptz_auqe.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpptz_auqe.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpptz_auqe.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ x in arr\n        if sum(digits(abs(x))) > 0\n            n += 1\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpps5lh01z.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpps5lh01z.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps5lh01z.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpps5lh01z.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps5lh01z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps5lh01z.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpps5lh01z.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps5lh01z.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps5lh01z.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpps5lh01z.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpps5lh01z.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpps5lh01z.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpps5lh01z.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(abs.(digits(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdq33_k_v.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdq33_k_v.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdq33_k_v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdq33_k_v.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdq33_k_v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdq33_k_v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdq33_k_v.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdq33_k_v.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdq33_k_v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdq33_k_v.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdq33_k_v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdq33_k_v.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdq33_k_v.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sumdigits(i) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3nzdwwxl.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3nzdwwxl.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nzdwwxl.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nzdwwxl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3nzdwwxl.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3nzdwwxl.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nzdwwxl.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nzdwwxl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3nzdwwxl.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3nzdwwxl.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nzdwwxl.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nzdwwxl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3nzdwwxl.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3nzdwwxl.jl:13\n\
    \   [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3nzdwwxl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if sum_digits(x) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyre_zvx2.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpyre_zvx2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyre_zvx2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyre_zvx2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyre_zvx2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpyre_zvx2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyre_zvx2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyre_zvx2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyre_zvx2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpyre_zvx2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyre_zvx2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyre_zvx2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyre_zvx2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpyre_zvx2.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyre_zvx2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i != 0\n            while i != 0\n                if\
    \ i > 0\n                    count += i % 10\n                    i = i - (i %\
    \ 10)\n                    i = i / 10\n                else\n                \
    \    i = i * -1\n                    count += i % 10\n                    i =\
    \ i - (i % 10)\n                    i = i / 10\n                end\n        \
    \    end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp94jg4rzk.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp94jg4rzk.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94jg4rzk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp94jg4rzk.jl:37\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94jg4rzk.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94jg4rzk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp94jg4rzk.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94jg4rzk.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94jg4rzk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp94jg4rzk.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94jg4rzk.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94jg4rzk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp94jg4rzk.jl:40\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94jg4rzk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0 \n  \
    \  for item in arr \n        # Handle negative numbers\n        if item < 0 \n\
    \            item = -item \n        end \n        sum_of_digits = 0 \n       \
    \ while item != 0 \n            sum_of_digits += item % 10 \n            item\
    \ = item / 10 \n        end \n        if sum_of_digits > 0 \n            count\
    \ += 1 \n        end \n    end \n    return count \nend \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp74on_u68.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp74on_u68.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74on_u68.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp74on_u68.jl:35\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74on_u68.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74on_u68.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp74on_u68.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74on_u68.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74on_u68.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp74on_u68.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74on_u68.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74on_u68.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp74on_u68.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    result = 0\n  \
    \  for i in arr\n        if i >= 0 \n            sum = 0\n            while i\
    \ >= 10\n                sum += i % 10\n                i = trunc(Int64, i / 10)\n\
    \            end\n            if sum + i > 0\n                result += 1\n  \
    \          end\n        else\n            sum = 0\n            for i in abs(i)\n\
    \                sum += i % 10\n                i = trunc(Int64, i / 10)\n   \
    \         end\n            if sum > 0\n                result += 1\n         \
    \   end\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpembmfugh.jl:41\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpembmfugh.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpembmfugh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpembmfugh.jl:42\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpembmfugh.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpembmfugh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpembmfugh.jl:43\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpembmfugh.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpembmfugh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpembmfugh.jl:44\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpembmfugh.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpembmfugh.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpembmfugh.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(sum(abs.(digits(x)))\
    \ > 0 for x in arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwjz1x4y0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})\n      @\
    \ Base ./reduce.jl:331\n    [4] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n\
    \    [5] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n    [6] foldl_impl\n\
    \      @ ./reduce.jl:49 [inlined]\n    [7] mapfoldl_impl\n      @ ./reduce.jl:44\
    \ [inlined]\n    [8] #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [9]\
    \ mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [10] #mapreduce#248\n      @\
    \ ./reduce.jl:289 [inlined]\n   [11] mapreduce\n      @ ./reduce.jl:289 [inlined]\n\
    \   [12] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [13] sum\n      @ ./reduce.jl:503\
    \ [inlined]\n   [14] #sum#252\n      @ ./reduce.jl:532 [inlined]\n   [15] sum\n\
    \      @ ./reduce.jl:532 [inlined]\n   [16] count_nums(arr::Vector{Int64})\n \
    \     @ Main /tmp/tmpwjz1x4y0.jl:11\n   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [18] macro expansion\n      @ /tmp/tmpwjz1x4y0.jl:18 [inlined]\n\
    \   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [20] top-level scope\n      @ /tmp/tmpwjz1x4y0.jl:17\ntest set:\
    \ Test Failed at /tmp/tmpwjz1x4y0.jl:19\n  Expression: candidate([-1, -2, 0])\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwjz1x4y0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwjz1x4y0.jl:17\ntest set: Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwjz1x4y0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxv8am556.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxv8am556.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxv8am556.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxv8am556.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxv8am556.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxv8am556.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxv8am556.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxv8am556.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxv8am556.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxv8am556.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxv8am556.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxv8am556.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxv8am556.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum(count_num(x)\
    \ for x in arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi73qv5ka.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})\n      @\
    \ Base ./reduce.jl:331\n    [4] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n\
    \    [5] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n    [6] foldl_impl\n\
    \      @ ./reduce.jl:49 [inlined]\n    [7] mapfoldl_impl\n      @ ./reduce.jl:44\
    \ [inlined]\n    [8] #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [9]\
    \ mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [10] #mapreduce#248\n      @\
    \ ./reduce.jl:289 [inlined]\n   [11] mapreduce\n      @ ./reduce.jl:289 [inlined]\n\
    \   [12] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [13] sum\n      @ ./reduce.jl:503\
    \ [inlined]\n   [14] #sum#252\n      @ ./reduce.jl:532 [inlined]\n   [15] sum\n\
    \      @ ./reduce.jl:532 [inlined]\n   [16] count_nums(arr::Vector{Int64})\n \
    \     @ Main /tmp/tmpi73qv5ka.jl:11\n   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [18] macro expansion\n      @ /tmp/tmpi73qv5ka.jl:18 [inlined]\n\
    \   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [20] top-level scope\n      @ /tmp/tmpi73qv5ka.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpi73qv5ka.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  UndefVarError: count_num not defined\n  Stacktrace:\n\
    \    [1] (::var\"#1#2\")(x::Int64)\n      @ Main ./none:0\n    [2] MappingRF\n\
    \      @ ./reduce.jl:95 [inlined]\n    [3] _foldl_impl(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, init::Base._InitialValue, itr::Vector{Int64})\n\
    \      @ Base ./reduce.jl:58\n    [4] foldl_impl\n      "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi73qv5ka.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    s = 0 \n    for\
    \ n in arr \n        if digitsum(n) > 0 \n            s += 1 \n        end \n\
    \    end \n    return s \nend \n \n \n \n \n\"\"\"\n    Write a function count_letters\
    \ which takes a string and returns the\n    number of characters in the string\
    \ which have an ord value > 100.\n    >>> count_letters(\"\") == 0\n    >>> count_letters(\"\
    asdf\") == 4\n    >>> count_letters(\"Asdf\") == 3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmppu3y7xyo.jl:23\nin expression starting at /tmp/tmppu3y7xyo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        count += sum(digits(abs(num))) > 0 ? 1 : 0\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp27v4uy0z.jl:23\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp27v4uy0z.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27v4uy0z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp27v4uy0z.jl:24\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27v4uy0z.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27v4uy0z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp27v4uy0z.jl:25\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27v4uy0z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27v4uy0z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp27v4uy0z.jl:26\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27v4uy0z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27v4uy0z.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27v4uy0z.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplhcv9c7w.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmplhcv9c7w.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplhcv9c7w.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplhcv9c7w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmplhcv9c7w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmplhcv9c7w.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplhcv9c7w.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplhcv9c7w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmplhcv9c7w.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmplhcv9c7w.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplhcv9c7w.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplhcv9c7w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmplhcv9c7w.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmplhcv9c7w.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhcv9c7w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total = 0\n   \
    \ for value in arr\n        #if sum(digits(abs(value))) > 0\n        if sum(digits(value))\
    \ > 0\n            total += 1\n        end\n    end\n    return total\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdyoxlbbc.jl:30\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyoxlbbc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyoxlbbc.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdyoxlbbc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sumdigits(i)>0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkr4ya3te.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpkr4ya3te.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkr4ya3te.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkr4ya3te.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkr4ya3te.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpkr4ya3te.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkr4ya3te.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkr4ya3te.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkr4ya3te.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpkr4ya3te.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkr4ya3te.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkr4ya3te.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkr4ya3te.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpkr4ya3te.jl:13\n\
    \   [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkr4ya3te.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if x > 0\n            s = sum(digits(x))\n        else\n\
    \            s = sum(digits(-x))\n        end\n        if s > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdidftgbe.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdidftgbe.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdidftgbe.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdidftgbe.jl:31\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdidftgbe.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdidftgbe.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdidftgbe.jl:32\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdidftgbe.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdidftgbe.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdidftgbe.jl:33\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdidftgbe.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdidftgbe.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdidftgbe.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(abs(x)\
    \ < 10 ? x > 0 : digit_sum(x) > 0 for x in arr)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyaptq1s9.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})\n      @\
    \ Base ./reduce.jl:331\n    [4] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n\
    \    [5] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n    [6] foldl_impl\n\
    \      @ ./reduce.jl:49 [inlined]\n    [7] mapfoldl_impl\n      @ ./reduce.jl:44\
    \ [inlined]\n    [8] #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [9]\
    \ mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [10] #mapreduce#248\n      @\
    \ ./reduce.jl:289 [inlined]\n   [11] mapreduce\n      @ ./reduce.jl:289 [inlined]\n\
    \   [12] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [13] sum\n      @ ./reduce.jl:503\
    \ [inlined]\n   [14] #sum#252\n      @ ./reduce.jl:532 [inlined]\n   [15] sum\n\
    \      @ ./reduce.jl:532 [inlined]\n   [16] count_nums(arr::Vector{Int64})\n \
    \     @ Main /tmp/tmpyaptq1s9.jl:11\n   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [18] macro expansion\n      @ /tmp/tmpyaptq1s9.jl:18 [inlined]\n\
    \   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [20] top-level scope\n      @ /tmp/tmpyaptq1s9.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpyaptq1s9.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digit_sum not defined\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main ./none:0\n   \
    \ [2] MappingRF\n      @ ./reduce.jl:95 [inlined]\n    [3] _foldl_impl(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, init::Base._InitialValue, itr::Vector{Int64})\n\
    \      @ Base ./reduce.jl:62\n    [4] foldl"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyaptq1s9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            n = abs(i)\n        else\n     \
    \       n = i\n        end\n        if sum_digits(n) > 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nprintln(count_nums([-1, 11,\
    \ -11]))\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: sum_digits not defined\nStacktrace:\n\
    \ [1] count_nums(arr::Vector{Int64})\n   @ Main /tmp/tmphn6ahi53.jl:18\n [2] top-level\
    \ scope\n   @ /tmp/tmphn6ahi53.jl:24\nin expression starting at /tmp/tmphn6ahi53.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if x > 0\n            count += 1\n        else\n     \
    \       x = -x\n            y = (x-mod(x,10))/10\n            while y > 9\n  \
    \              x = y\n                y = (x-mod(x,10))/10\n            end\n\
    \            if y == 1 || y == 2 || y == 3 || y == 4 || y == 5 || y == 6 || y\
    \ == 7 || y == 8 || y == 9\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    arr_of_sign_nums\
    \ = map(x -> map(x -> sign(x), digits(x)), arr)\n    arr_of_sign_nums = map(x\
    \ -> reduce(+, x), arr_of_sign_nums)\n    return count(x -> x > 0, arr_of_sign_nums)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxhkshp_o.jl:25\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhkshp_o.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhkshp_o.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhkshp_o.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    elements::Int64\
    \ = 0\n    for i in arr\n        sum::Int64 = 0\n        if i < 0\n          \
    \  i = -i\n        end\n        while i > 0\n            sum += i % 10\n     \
    \       i = div(i, 10)\n        end\n        if sum > 0\n            elements\
    \ += 1\n        end\n    end\n    return elements\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjl_1ypf4.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjl_1ypf4.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl_1ypf4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjl_1ypf4.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjl_1ypf4.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl_1ypf4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjl_1ypf4.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjl_1ypf4.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl_1ypf4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjl_1ypf4.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjl_1ypf4.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl_1ypf4.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjl_1ypf4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if ssum(i) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2gmz01om.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: ssum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2gmz01om.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gmz01om.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gmz01om.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp2gmz01om.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: ssum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2gmz01om.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gmz01om.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gmz01om.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp2gmz01om.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: ssum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2gmz01om.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gmz01om.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gmz01om.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp2gmz01om.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: ssum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2gmz01om.jl:13\n\
    \   [2] macro expansion\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2gmz01om.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    answer = 0\n  \
    \  for num in arr\n        if sum_digits(num) > 0\n            answer += 1\n \
    \       end\n    end\n    return answer\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwi_rexet.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwi_rexet.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwi_rexet.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwi_rexet.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwi_rexet.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwi_rexet.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwi_rexet.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwi_rexet.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwi_rexet.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwi_rexet.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwi_rexet.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwi_rexet.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwi_rexet.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwi_rexet.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwi_rexet.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        for j in digits(i)\n            n += j\n        end\n    end\n\
    \    return n\nend\n@test function count_nums_tests()\n    @testset \"empty list\"\
    \ begin\n        @test count_nums([]) == 0\n    end\n    @testset \"negative numbers\"\
    \ begin\n        @test count_nums([-1, 11, -11]) == 1\n    end\n    @testset \"\
    positive numbers\" begin\n        @test count_nums([1, 1, 2]) == 3\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpl6rt7unh.jl:19\nin expression starting at /tmp/tmpl6rt7unh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for a in arr\n        if a < 0\n            a = a * -1\n        end\n      \
    \  if sum_of_digits(a) > 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n#     >>> count_nums([-1, 11, -11]) == 1\n@test count_nums([-1,\
    \ 11, -11]) == 1\n#     >>> count_nums([1, 1, 2]) == 3\n@test count_nums([1, 1,\
    \ 2]) == 3\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpbyws1dsh.jl:23\nin expression starting at /tmp/tmpbyws1dsh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n    for\
    \ i in arr\n        cnt += sum(digits(abs(i))) > 0 ? 1 : 0\n    end\n    return\
    \ cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpksde44cz.jl:23\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpksde44cz.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksde44cz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpksde44cz.jl:24\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksde44cz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksde44cz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpksde44cz.jl:25\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksde44cz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksde44cz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpksde44cz.jl:26\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpksde44cz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpksde44cz.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpksde44cz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nonzero_count =\
    \ 0\n    for i in arr\n        digits = digits(i)\n        if sum(digits) > 0\n\
    \            nonzero_count += 1\n        end\n    end\n    return nonzero_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpythmb5za.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpythmb5za.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpythmb5za.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpythmb5za.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpythmb5za.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpythmb5za.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpythmb5za.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpythmb5za.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpythmb5za.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpythmb5za.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpythmb5za.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpythmb5za.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpythmb5za.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpythmb5za.jl:13\n\
    \   [2] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpythmb5za.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ sum = 0\n    for x in arr\n        for s in string(x)\n            if x > 0\n\
    \                sum += parse(Int64, s)\n            else\n                sum\
    \ += -parse(Int64, s)\n            end\n        end\n        if sum > 0\n    \
    \        count += 1\n        end\n        sum = 0\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxu3kx3e9.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] count_nums(arr::Vector{Int64})\n     @ Main ./array.jl:0\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxu3kx3e9.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxu3kx3e9.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxu3kx3e9.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] count_nums(arr::Vector{Int64})\n     @ Main ./array.jl:0\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxu3kx3e9.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxu3kx3e9.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxu3kx3e9.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] count_nums(arr::Vector{Int64})\n     @ Main ./array.jl:0\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxu3kx3e9.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxu3kx3e9.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxu3kx3e9.jl:37\n  Test threw except"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxu3kx3e9.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter::Int64\
    \ = 0\n    for i in arr\n        if signed_sum(i) > 0\n            counter +=\
    \ 1\n        end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjmmabo9u.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjmmabo9u.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmmabo9u.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmmabo9u.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjmmabo9u.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjmmabo9u.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmmabo9u.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmmabo9u.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjmmabo9u.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjmmabo9u.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmmabo9u.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmmabo9u.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjmmabo9u.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjmmabo9u.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjmmabo9u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for number in arr\n        if number < 0\n            number = -1 * number\n\
    \        end\n        if sum(digits(number)) > 0\n            count += 1\n   \
    \     end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4u6ju__e.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4u6ju__e.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4u6ju__e.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4u6ju__e.jl:29\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4u6ju__e.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4u6ju__e.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4u6ju__e.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4u6ju__e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4u6ju__e.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4u6ju__e.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4u6ju__e.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4u6ju__e.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4u6ju__e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in arr\n        if i >= 0\n            while i > 0\n                sum +=\
    \ i % 10\n                i = floor(i / 10)\n            end\n        else\n \
    \           while i < 0\n                sum += abs(i % 10)\n                i\
    \ = floor(i / 10)\n            end\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ n in arr\n        s += sum(abs(digits(n))) > 0 ? 1 : 0\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnj1rdil0.jl:23\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  MethodError: no method matching\
    \ abs(::Vector{Int64})\n  Closest candidates are:\n    abs(!Matched::Unsigned)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:179\n    abs(!Matched::Signed)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:180\n    abs(!Matched::Complex)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/complex.jl:277\n    ...\n  Stacktrace:\n\
    \   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpnj1rdil0.jl:13\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj1rdil0.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj1rdil0.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpnj1rdil0.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  MethodError: no method matching abs(::Vector{Int64})\n\
    \  Closest candidates are:\n    abs(!Matched::Unsigned) at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:179\n\
    \    abs(!Matched::Signed) at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:180\n\
    \    abs(!Matched::Complex) at /shared/centos7/julia/1.7.3/share/julia/base/complex.jl:277\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpnj1rdil0.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj1rdil0.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj1rdil0.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpnj1rdil0.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  MethodError: no method matching abs(::Vector{Int64})\n\
    \  Closest candidates are:\n    abs(!Matched::Unsigned"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnj1rdil0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n     count = 0\n  \
    \   for num in arr\n        if (num == 0)\n            next\n        end\n   \
    \     sum = 0\n        for i in digits(num)\n            sum += i\n        end\n\
    \        if (sum > 0)\n            count += 1\n        end\n     end\n     return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwchazedi.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwchazedi.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwchazedi.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwchazedi.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpwchazedi.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwchazedi.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwchazedi.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwchazedi.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpwchazedi.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwchazedi.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwchazedi.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwchazedi.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpwchazedi.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([0, 1]) == 1\n  UndefVarError: next not defined\n  Stacktrace:\n \
    \  [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwchazedi.jl:14\n  \
    \ [2] macro expansion\n     @ /shared/c"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwchazedi.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        s = sum(abs.(digits(i)))\n        if s > 0\n         \
    \   count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw93l8_ct.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw93l8_ct.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw93l8_ct.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpw93l8_ct.jl:27\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw93l8_ct.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw93l8_ct.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpw93l8_ct.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw93l8_ct.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw93l8_ct.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpw93l8_ct.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw93l8_ct.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw93l8_ct.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw93l8_ct.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if signed_sum(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvghuu62o.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvghuu62o.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvghuu62o.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvghuu62o.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvghuu62o.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvghuu62o.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvghuu62o.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvghuu62o.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvghuu62o.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvghuu62o.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvghuu62o.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvghuu62o.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvghuu62o.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvghuu62o.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvghuu62o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return length(filter(x\
    \ -> sum(signed_digits(x)) > 0, arr))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp10y55nn2.jl:19\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmp10y55nn2.jl:11\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp10y55nn2.jl:11\n \
    \  [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp10y55nn2.jl:19 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp10y55nn2.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp10y55nn2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmp10y55nn2.jl:11\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp10y55nn2.jl:11\n \
    \  [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp10y55nn2.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp10y55nn2.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp10y55nn2.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmp10y55nn2.jl:11\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp10y55nn2.jl:11\n \
    \  [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp10y55nn2.jl:21 [inline"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10y55nn2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            count += i % 10\n            i = i // 10\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcjno7ary.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpcjno7ary.jl:17\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcjno7ary.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcjno7ary.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpcjno7ary.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpcjno7ary.jl:17\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcjno7ary.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcjno7ary.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpcjno7ary.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcjno7ary.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        s = abs(i)\n        d = 0\n        while s > 0\n     \
    \       d += s % 10\n            s = s / 10\n        end\n        if d > 0\n \
    \           count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfjwbzxu8.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfjwbzxu8.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfjwbzxu8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfjwbzxu8.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfjwbzxu8.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfjwbzxu8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfjwbzxu8.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfjwbzxu8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfjwbzxu8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfjwbzxu8.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfjwbzxu8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfjwbzxu8.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfjwbzxu8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if signed_digits_sum(i) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjf1xk58q.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpjf1xk58q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjf1xk58q.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjf1xk58q.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjf1xk58q.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjf1xk58q.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjf1xk58q.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjf1xk58q.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjf1xk58q.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjf1xk58q.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjf1xk58q.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjf1xk58q.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjf1xk58q.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjf1xk58q.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum = 0\n        for j in string(i)\n            sum +=\
    \ parse(Int64, j)\n        end\n        if sum > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxqjp8ja5.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxqjp8ja5.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxqjp8ja5.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxqjp8ja5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxqjp8ja5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxqjp8ja5.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxqjp8ja5.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxqjp8ja5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpxqjp8ja5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxqjp8ja5.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxqjp8ja5.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxqjp8ja5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"\"\"\n    >>>\
    \ count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\
    \"\n    n = 0\n    for v in arr\n        r = 0\n        for c in string(v)\n \
    \           r += parse(Int64, c)\n        end\n        if r > 0\n            n\
    \ += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpphi71i3g.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpphi71i3g.jl:19\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpphi71i3g.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpphi71i3g.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpphi71i3g.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpphi71i3g.jl:19\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpphi71i3g.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpphi71i3g.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpphi71i3g.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpphi71i3g.jl:19\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpphi71i3g.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphi71i3g.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            count += i % 10\n            i = i // 10\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8o164pwh.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8o164pwh.jl:17\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8o164pwh.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8o164pwh.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8o164pwh.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp8o164pwh.jl:17\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8o164pwh.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8o164pwh.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp8o164pwh.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8o164pwh.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n    for\
    \ num in arr\n        if sum(abs.(digits(num))) > 0\n            cnt += 1\n  \
    \      end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppyneme77.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppyneme77.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyneme77.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppyneme77.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyneme77.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyneme77.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppyneme77.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyneme77.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyneme77.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppyneme77.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyneme77.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyneme77.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppyneme77.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    s = 0\n    for\
    \ i in arr\n        if iszero(i) \n            s += 0\n        elseif i < 0\n\
    \            s += abs(i) \n        else\n            s += i\n        end\n   \
    \ end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbvm6h7wi.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbvm6h7wi.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbvm6h7wi.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpbvm6h7wi.jl:30\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbvm6h7wi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbvm6h7wi.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpbvm6h7wi.jl:31\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbvm6h7wi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbvm6h7wi.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpbvm6h7wi.jl:32\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 208 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbvm6h7wi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbvm6h7wi.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpbvm6h7wi.jl:33\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 170 == 5\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvm6h7wi.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n      \
    \  end\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqiparzzs.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqiparzzs.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiparzzs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqiparzzs.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiparzzs.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiparzzs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqiparzzs.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiparzzs.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiparzzs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqiparzzs.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiparzzs.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiparzzs.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqiparzzs.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(abs(i)\
    \ for i in arr) > 0 ? length(arr) : 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwm2fotwu.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  ArgumentError: reducing over\
    \ an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n\
    \      @ Base ./reduce.jl:301\n    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)},\
    \ T::Type)\n      @ Base ./reduce.jl:344\n    [3] reduce_empty(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})\n      @\
    \ Base ./reduce.jl:331\n    [4] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n\
    \    [5] reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n    [6] foldl_impl\n\
    \      @ ./reduce.jl:49 [inlined]\n    [7] mapfoldl_impl\n      @ ./reduce.jl:44\
    \ [inlined]\n    [8] #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [9]\
    \ mapfoldl\n      @ ./reduce.jl:162 [inlined]\n   [10] #mapreduce#248\n      @\
    \ ./reduce.jl:289 [inlined]\n   [11] mapreduce\n      @ ./reduce.jl:289 [inlined]\n\
    \   [12] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [13] sum\n      @ ./reduce.jl:503\
    \ [inlined]\n   [14] #sum#252\n      @ ./reduce.jl:532 [inlined]\n   [15] sum\n\
    \      @ ./reduce.jl:532 [inlined]\n   [16] count_nums(arr::Vector{Int64})\n \
    \     @ Main /tmp/tmpwm2fotwu.jl:11\n   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [18] macro expansion\n      @ /tmp/tmpwm2fotwu.jl:18 [inlined]\n\
    \   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [20] top-level scope\n      @ /tmp/tmpwm2fotwu.jl:17\ntest set:\
    \ Test Failed at /tmp/tmpwm2fotwu.jl:19\n  Expression: candidate([-1, -2, 0])\
    \ == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwm2fotwu.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwm2fotwu.jl:17\ntest set: Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwm2fotwu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum_arr = zero(Int64)\n\
    \    for i in 1:length(arr)\n        if abs(arr[i]) < 10\n            if arr[i]\
    \ != 0\n                sum_arr += 1\n            end\n        else\n        \
    \    a = abs(arr[i])\n            sum_digit = zero(Int64)\n            while a\
    \ != 0\n                sum_digit += a % 10\n                a = floor(Int64,\
    \ a / 10)\n            end\n            if sum_digit != 0\n                sum_arr\
    \ += 1\n            end\n        end\n    end\n    return sum_arr\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6kjyryd5.jl:37\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6kjyryd5.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6kjyryd5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp6kjyryd5.jl:38\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6kjyryd5.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6kjyryd5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp6kjyryd5.jl:39\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6kjyryd5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6kjyryd5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp6kjyryd5.jl:40\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6kjyryd5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6kjyryd5.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6kjyryd5.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i = 1:length(arr)\n        arr[i] = abs(arr[i])\n        while arr[i] >\
    \ 0\n            count += arr[i] % 10\n            arr[i] = arr[i] \xF7 10\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpglb_tlg1.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpglb_tlg1.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpglb_tlg1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpglb_tlg1.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpglb_tlg1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpglb_tlg1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpglb_tlg1.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpglb_tlg1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpglb_tlg1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpglb_tlg1.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpglb_tlg1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpglb_tlg1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpglb_tlg1.jl:31\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpglb_tlg1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        ssum = sum_signed_digits(x)\n        if ssum > 0\n   \
    \         count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_vwbk3f4.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp_vwbk3f4.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_vwbk3f4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_vwbk3f4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_vwbk3f4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_signed_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp_vwbk3f4.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_vwbk3f4.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_vwbk3f4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_vwbk3f4.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_signed_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp_vwbk3f4.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_vwbk3f4.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_vwbk3f4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_vwbk3f4.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_vwbk3f4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    i = 0\n    while\
    \ i <= length(arr)\n        total = 0\n        if arr[i] < 0\n            arr[i]\
    \ = abs(arr[i])\n            total += -1\n        end\n        while arr[i] >\
    \ 0\n            total += arr[i] % 10\n            arr[i] = arr[i] \xF7 10\n \
    \       end\n        if total > 0\n            return i + 1\n        end\n   \
    \     i += 1\n    end\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphon0y89l.jl:34\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  BoundsError: attempt to access\
    \ 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmphon0y89l.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphon0y89l.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphon0y89l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphon0y89l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphon0y89l.jl:14\n \
    \  [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphon0y89l.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphon0y89l.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphon0y89l.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  BoundsError: attempt to access 7-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphon0y89l.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphon0y89l.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphon0y89l.jl:33\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphon0y89l.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i != 0\n            if i < 0\n                i = -i\n\
    \            end\n            temp = i\n            sum = 0\n            while\
    \ temp != 0\n                sum += rem(temp, 10)\n                temp = div(temp,\
    \ 10)\n            end\n            if sum > 0\n                count += 1\n \
    \           end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkmuxu73a.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkmuxu73a.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmuxu73a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkmuxu73a.jl:37\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmuxu73a.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmuxu73a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkmuxu73a.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmuxu73a.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmuxu73a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkmuxu73a.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmuxu73a.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmuxu73a.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkmuxu73a.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        digitsum = 0\n        if i < 0\n            for d in digits(abs(i),\
    \ base=10)\n                digitsum += d\n            end\n            digitsum\
    \ *= -1\n        else\n            for d in digits(i, base=10)\n             \
    \   digitsum += d\n            end\n        end\n        if digitsum > 0\n   \
    \         count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyv49kssz.jl:40\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyv49kssz.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyv49kssz.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyv49kssz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(signed_digits(i)) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwn2vj9n2.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwn2vj9n2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwn2vj9n2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwn2vj9n2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwn2vj9n2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwn2vj9n2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwn2vj9n2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwn2vj9n2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwn2vj9n2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwn2vj9n2.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwn2vj9n2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwn2vj9n2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwn2vj9n2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpwn2v"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwn2vj9n2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64 =\
    \ 0\n    for i in arr\n        if sum(digits(abs(i))) > 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfvq1pqnx.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfvq1pqnx.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfvq1pqnx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfvq1pqnx.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfvq1pqnx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfvq1pqnx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfvq1pqnx.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfvq1pqnx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfvq1pqnx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfvq1pqnx.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfvq1pqnx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfvq1pqnx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfvq1pqnx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i = 1:length(arr)\n        if sum(digits(arr[i])) > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqjll7loy.jl:29\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjll7loy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjll7loy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqjll7loy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums = 0\n    for\
    \ i in arr\n        sum = 0\n        if i < 0\n            i = -i\n        end\n\
    \        while i != 0\n            sum += i % 10\n            i = i \xF7 10\n\
    \        end\n        if sum > 0\n            nums += 1\n        end\n    end\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyoqmhl0q.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyoqmhl0q.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyoqmhl0q.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpyoqmhl0q.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyoqmhl0q.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyoqmhl0q.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpyoqmhl0q.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyoqmhl0q.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyoqmhl0q.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpyoqmhl0q.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyoqmhl0q.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyoqmhl0q.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyoqmhl0q.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i = 1:length(arr)\n        if arr[i] < 0\n            temp = abs(arr[i])\n\
    \            sum = -(temp % 10)\n            while (temp > 0)\n              \
    \  temp = temp % 10\n                sum += temp\n                temp = floor(temp\
    \ / 10)\n            end\n        else\n            temp = arr[i]\n          \
    \  sum = 0\n            while (temp > 0)\n                sum += temp % 10\n \
    \               temp = floor(temp / 10)\n            end\n        end\n      \
    \  if sum > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpswcpw0jz.jl:45\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswcpw0jz.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswcpw0jz.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswcpw0jz.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    ln = length(arr)\n\
    \    cnt = 0\n    for i = 1:ln\n        num = arr[i]\n        total = 0\n    \
    \    while num != 0\n            total += abs(num % 10)\n            num = floor(Int64,\
    \ num / 10)\n        end\n        if total > 0\n            cnt += 1\n       \
    \ end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for n in arr\n        if n < 0\n            n = -n\n        end\n        sum\
    \ = 0\n        while n > 0\n            sum += n % 10\n            n = n // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjbe7p6p5.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjbe7p6p5.jl:18\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjbe7p6p5.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjbe7p6p5.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjbe7p6p5.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpjbe7p6p5.jl:18\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjbe7p6p5.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjbe7p6p5.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjbe7p6p5.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbe7p6p5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n    for\
    \ n in arr\n        if n < 0\n            n = -n\n        end\n        n = n %\
    \ 10\n        if n != 0\n            cnt += 1\n        end\n    end\n    return\
    \ cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40k4q2y4.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp40k4q2y4.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40k4q2y4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp40k4q2y4.jl:30\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40k4q2y4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40k4q2y4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp40k4q2y4.jl:31\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40k4q2y4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40k4q2y4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp40k4q2y4.jl:32\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp40k4q2y4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp40k4q2y4.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40k4q2y4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n \
    \   for i in arr\n        x = abs(i)\n        sum = 0\n        while (x > 0)\n\
    \            sum += x % 10\n            x = div(x, 10)\n        end\n        if\
    \ sum > 0\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl1_yga2c.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl1_yga2c.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1_yga2c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl1_yga2c.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1_yga2c.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1_yga2c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl1_yga2c.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1_yga2c.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1_yga2c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl1_yga2c.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1_yga2c.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1_yga2c.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl1_yga2c.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64 =\
    \ 0\n    for i in arr\n        if sum_digits(i) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk0iam9_p.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpk0iam9_p.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk0iam9_p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk0iam9_p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk0iam9_p.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpk0iam9_p.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk0iam9_p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk0iam9_p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk0iam9_p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpk0iam9_p.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk0iam9_p.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk0iam9_p.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk0iam9_p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpk0iam9_p.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk0iam9_p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ # iterate through each integer\n    for i in arr\n        # get the digits of\
    \ each integer\n        a = digits(i)\n        # iterate through the digits of\
    \ each integer\n        # check if each digit is greater than 0\n        # if\
    \ it is, add one to the count\n        for d in a\n            if d > 0\n    \
    \            count += 1\n            end\n        end\n    end\n    # return the\
    \ final count\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl53uwsig.jl:37\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl53uwsig.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl53uwsig.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpl53uwsig.jl:38\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl53uwsig.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl53uwsig.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl53uwsig.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(map(x\
    \ -> x > 0 ? 1 : 0, map(get_signed_digits_sum, arr)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpluj3qi39.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  UndefVarError: get_signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpluj3qi39.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpluj3qi39.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpluj3qi39.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpluj3qi39.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  UndefVarError: get_signed_digits_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpluj3qi39.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpluj3qi39.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpluj3qi39.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpluj3qi39.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: get_signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpluj3qi39.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpluj3qi39.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpluj3qi39.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpluj3qi39.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: get_signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64}"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpluj3qi39.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if digitsum(i)>0\n            count+=1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaz2ku2o6.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpaz2ku2o6.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz2ku2o6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz2ku2o6.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaz2ku2o6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpaz2ku2o6.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz2ku2o6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz2ku2o6.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaz2ku2o6.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpaz2ku2o6.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz2ku2o6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz2ku2o6.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaz2ku2o6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digitsum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpaz2ku2o6.jl:13\n\
    \   [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaz2ku2o6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum_num = 0\n        if i < 0\n            num = abs(i)\n\
    \            while num > 0\n                sum_num += num % 10\n            \
    \    num = floor(Int64, num / 10)\n            end\n            sum_num *= -1\n\
    \        else\n            num = i\n            while num > 0\n              \
    \  sum_num += num % 10\n                num = floor(Int64, num / 10)\n       \
    \     end\n        end\n        if sum_num > 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp0o_ksa5.jl:44\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0o_ksa5.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0o_ksa5.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp0o_ksa5.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum = 0\n        if i < 0\n            j = i\n       \
    \     while j < 0\n                sum += j % 10\n                j = j / 10\n\
    \            end\n        else\n            j = i\n            while j > 0\n \
    \               sum += j % 10\n                j = j / 10\n            end\n \
    \       end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7mcb56o4.jl:43\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mcb56o4.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mcb56o4.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7mcb56o4.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ num in arr\n        sum += get_sum_signed_digits(num)\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpotheg0zw.jl:23\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: get_sum_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpotheg0zw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpotheg0zw.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpotheg0zw.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpotheg0zw.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: get_sum_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpotheg0zw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpotheg0zw.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpotheg0zw.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpotheg0zw.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: get_sum_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpotheg0zw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpotheg0zw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpotheg0zw.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpotheg0zw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: get_sum_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpotheg0zw.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num = 0\n    for\
    \ i in arr\n        if sum(digits(abs(i))) > 0\n            num += 1\n       \
    \ end\n    end\n    return num\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw_sn2jaq.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw_sn2jaq.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_sn2jaq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpw_sn2jaq.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_sn2jaq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_sn2jaq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpw_sn2jaq.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_sn2jaq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_sn2jaq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpw_sn2jaq.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_sn2jaq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_sn2jaq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_sn2jaq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    c = 0\n    for\
    \ x in arr\n        s = 0\n        if x < 0\n            x = -x\n        end\n\
    \        while x > 0\n            s += x % 10\n            x = div(x, 10)\n  \
    \      end\n        if s > 0\n            c += 1\n        end\n    end\n    return\
    \ c\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2y035wt5.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2y035wt5.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y035wt5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2y035wt5.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y035wt5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y035wt5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2y035wt5.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y035wt5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y035wt5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2y035wt5.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y035wt5.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y035wt5.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2y035wt5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n    for\
    \ i in arr\n        digits = abs(div(i, 10))\n        sum = abs(i) - digits*10\n\
    \        while digits != 0\n            sum += digits % 10\n            digits\
    \ = div(digits, 10)\n        end\n        if sum > 0\n            cnt += 1\n \
    \       end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp53gzl2ra.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp53gzl2ra.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53gzl2ra.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp53gzl2ra.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53gzl2ra.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53gzl2ra.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp53gzl2ra.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53gzl2ra.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53gzl2ra.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp53gzl2ra.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53gzl2ra.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53gzl2ra.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp53gzl2ra.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for n in arr\n        if n < 0\n            ns = -n\n        else\n        \
    \    ns = n\n        end\n        s = 0\n        while ns > 0\n            s +=\
    \ ns % 10\n            ns = div(ns, 10)\n        end\n        if s > 0\n     \
    \       count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp74uva61i.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp74uva61i.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74uva61i.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp74uva61i.jl:36\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74uva61i.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74uva61i.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp74uva61i.jl:37\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74uva61i.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74uva61i.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp74uva61i.jl:38\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp74uva61i.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp74uva61i.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp74uva61i.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n \
    \   for i in arr\n        if sumdigits(i) > 0\n            counter += 1\n    \
    \    end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp65hhr8lu.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp65hhr8lu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65hhr8lu.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65hhr8lu.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp65hhr8lu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp65hhr8lu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65hhr8lu.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65hhr8lu.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp65hhr8lu.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp65hhr8lu.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp65hhr8lu.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp65hhr8lu.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp65hhr8lu.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp65hhr8lu.jl:13\n\
    \   [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp65hhr8lu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(int(j) for j in digits(i)) > 0\n            count += 1\n        end\n  \
    \  end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk_ji6uu3.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(j::Int64)\n      @ Main ./none:0\n   \
    \ [2] MappingRF\n      @ ./reduce.jl:95 [inlined]\n    [3] _foldl_impl(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, init::Base._InitialValue, itr::Vector{Int64})\n\
    \      @ Base ./reduce.jl:58\n    [4] foldl_impl\n      @ ./reduce.jl:48 [inlined]\n\
    \    [5] mapfoldl_impl\n      @ ./reduce.jl:44 [inlined]\n    [6] #mapfoldl#244\n\
    \      @ ./reduce.jl:162 [inlined]\n    [7] mapfoldl\n      @ ./reduce.jl:162\
    \ [inlined]\n    [8] #mapreduce#248\n      @ ./reduce.jl:289 [inlined]\n    [9]\
    \ mapreduce\n      @ ./reduce.jl:289 [inlined]\n   [10] #sum#251\n      @ ./reduce.jl:503\
    \ [inlined]\n   [11] sum\n      @ ./reduce.jl:503 [inlined]\n   [12] #sum#252\n\
    \      @ ./reduce.jl:532 [inlined]\n   [13] sum\n      @ ./reduce.jl:532 [inlined]\n\
    \   [14] count_nums(arr::Vector{Int64})\n      @ Main /tmp/tmpk_ji6uu3.jl:16\n\
    \   [15] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [16] macro expansion\n      @ /tmp/tmpk_ji6uu3.jl:28 [inlined]\n\
    \   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [18] top-level scope\n      @ /tmp/tmpk_ji6uu3.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpk_ji6uu3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: int not defined\n \
    \ Stacktrace:\n    [1] (::var\"#1#2\")(j::Int64)\n      @ Main ./none:0\n    [2]\
    \ MappingRF\n      @ ./reduce.jl:95 [inlined]\n    [3] _foldl_impl(op::Base.MappingRF{var\"\
    #1#2\", Base.BottomRF{typeof(Base.add_sum)}}, init::Base._InitialValue, itr::Vector{Int64})\n\
    \      @ Base ./reduce.jl:58\n    [4] foldl_impl\n      @ ./reduce.jl:48 [inlined]\n\
    \    [5] mapfoldl_impl\n      @ ./reduce.jl:44 [inlined]\n    [6] #mapfoldl#244\n\
    \      @ ./reduce.jl:162 [inlined]\n    [7] mapfoldl\n      @ ./reduce.jl:162\
    \ [inlined]\n    [8] #mapre"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_ji6uu3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum_of_digits = 0\n        if i < 0\n            i = -i\n\
    \        end\n        while i > 0\n            sum_of_digits += i % 10\n     \
    \       i = div(i, 10)\n        end\n        if sum_of_digits > 0\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgbpy75_v.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgbpy75_v.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbpy75_v.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbpy75_v.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbpy75_v.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbpy75_v.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbpy75_v.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbpy75_v.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbpy75_v.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbpy75_v.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbpy75_v.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbpy75_v.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgbpy75_v.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        if num > 0\n            count += 1\n        else\n \
    \           #if num == 0 continue\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqh1h7up5.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqh1h7up5.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh1h7up5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqh1h7up5.jl:29\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh1h7up5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh1h7up5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqh1h7up5.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh1h7up5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh1h7up5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqh1h7up5.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh1h7up5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh1h7up5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqh1h7up5.jl:32\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqh1h7up5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return sum(map(x\
    \ -> abs(x)>9 ? sum(digits(abs(x))) : abs(x), arr))>0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp380rdxht.jl:19\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp380rdxht.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp380rdxht.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp380rdxht.jl:20\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 1 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp380rdxht.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp380rdxht.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp380rdxht.jl:21\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp380rdxht.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp380rdxht.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp380rdxht.jl:22\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp380rdxht.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp380rdxht.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp380rdxht.jl:23\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp380rdxht.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        x = abs(i)\n        sum = 0\n        while x != 0\n  \
    \          sum += x % 10\n            x = div(x, 10)\n        end\n        if\
    \ sum > 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99mdoy_3.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp99mdoy_3.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99mdoy_3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp99mdoy_3.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99mdoy_3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99mdoy_3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp99mdoy_3.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99mdoy_3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99mdoy_3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp99mdoy_3.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99mdoy_3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99mdoy_3.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99mdoy_3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if sum_digits(i)>0\n            n += 1\n        end\n    end\n\
    \    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ffs2ndn.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp4ffs2ndn.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ffs2ndn.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ffs2ndn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4ffs2ndn.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp4ffs2ndn.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ffs2ndn.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ffs2ndn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4ffs2ndn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp4ffs2ndn.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4ffs2ndn.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4ffs2ndn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp4ffs2ndn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp4ffs2ndn.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ffs2ndn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64 =\
    \ 0\n    for i = 1:length(arr)\n        number = arr[i]\n        sum_nums = 0\n\
    \        if number < 0\n            sum_nums = number*-1\n        else\n     \
    \       sum_nums = number\n        end\n        while sum_nums >= 1\n        \
    \    tmp = sum_nums%10\n            sum_nums = div(sum_nums, 10)\n           \
    \ count += tmp\n        end\n        if count > 0\n            count += 1\n  \
    \      end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprbw19pk5.jl:37\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 6 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprbw19pk5.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbw19pk5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprbw19pk5.jl:38\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 25 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbw19pk5.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbw19pk5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprbw19pk5.jl:39\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbw19pk5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbw19pk5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprbw19pk5.jl:40\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 34 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbw19pk5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbw19pk5.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprbw19pk5.jl:41\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 41 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprbw19pk5.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if isempty(arr)\n\
    \        return 0\n    end\n    nums = 0\n    for num in arr\n        sum = 0\n\
    \        if num > 0\n            new_num = num\n        else\n            new_num\
    \ = -num\n        end\n        while new_num > 0\n            sum += new_num %\
    \ 10\n            new_num = new_num \xF7 10\n        end\n        if sum > 0\n\
    \            nums += 1\n        end\n    end\n    return nums\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqvfyl5qq.jl:38\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqvfyl5qq.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqvfyl5qq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpqvfyl5qq.jl:39\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqvfyl5qq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqvfyl5qq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpqvfyl5qq.jl:40\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqvfyl5qq.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqvfyl5qq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpqvfyl5qq.jl:41\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqvfyl5qq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqvfyl5qq.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqvfyl5qq.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    result = 0\n  \
    \  for num in arr\n        if sum_digits(num) > 0\n            result += 1\n \
    \       end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ijmrhcz.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp7ijmrhcz.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ijmrhcz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ijmrhcz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7ijmrhcz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp7ijmrhcz.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ijmrhcz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ijmrhcz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7ijmrhcz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp7ijmrhcz.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ijmrhcz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ijmrhcz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7ijmrhcz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp7ijmrhcz.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ijmrhcz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    count = 0\n    for i in 1:n\n        if sum(abs.(digits(arr[i]))) > 0\n \
    \           count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwsqky2fm.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwsqky2fm.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwsqky2fm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpwsqky2fm.jl:27\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwsqky2fm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwsqky2fm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpwsqky2fm.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwsqky2fm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwsqky2fm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpwsqky2fm.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwsqky2fm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwsqky2fm.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwsqky2fm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    i = 0\n    for\
    \ num in arr\n        digits = digits_sum(num)\n        if digits > 0\n      \
    \      i += 1\n        end\n    end\n    return i\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpekqtl_b7.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digits_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpekqtl_b7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpekqtl_b7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpekqtl_b7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpekqtl_b7.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digits_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpekqtl_b7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpekqtl_b7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpekqtl_b7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpekqtl_b7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digits_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpekqtl_b7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpekqtl_b7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpekqtl_b7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpekqtl_b7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digits_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpekqtl_b7.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpekqtl_b7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if x >= 0 \n            if sum(digits(x)) > 0\n      \
    \          count += 1\n            end\n        else\n            if sum(digits(-x))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuhncbhif.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuhncbhif.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhncbhif.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuhncbhif.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhncbhif.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhncbhif.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuhncbhif.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhncbhif.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhncbhif.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuhncbhif.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhncbhif.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhncbhif.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuhncbhif.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n    for\
    \ a in arr\n        sum = 0\n        if a < 0\n            sum += a % 10\n   \
    \         sum += abs(floor(a / 10))\n        else\n            while a > 0\n \
    \               sum += a % 10\n                a = floor(a / 10)\n           \
    \ end\n        end\n        if sum > 0\n            cnt += 1\n        end\n  \
    \  end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8aa4_m7l.jl:39\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8aa4_m7l.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8aa4_m7l.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8aa4_m7l.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i >= 0\n            count += sum(digits(i)) > 0 ? 1\
    \ : 0\n        else\n            count += sum(digits(-i)) > 0 ? 1 : 0\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprfhh1h7e.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprfhh1h7e.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfhh1h7e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprfhh1h7e.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfhh1h7e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfhh1h7e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprfhh1h7e.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfhh1h7e.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfhh1h7e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprfhh1h7e.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfhh1h7e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfhh1h7e.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprfhh1h7e.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in arr\n        if sum(abs.(digits(i))) > 0\n            res += 1\n      \
    \  end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpskrv8tp8.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpskrv8tp8.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskrv8tp8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpskrv8tp8.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskrv8tp8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskrv8tp8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpskrv8tp8.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskrv8tp8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskrv8tp8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpskrv8tp8.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpskrv8tp8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpskrv8tp8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpskrv8tp8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            count += i % 10\n            i = i // 10\n        end\n \
    \   end\n    return count\nend\n        \ncount_nums([-1, 11, -11])\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: OverflowError: 1000000000000000000 * 10 overflowed for\
    \ type Int64\nStacktrace:\n [1] throw_overflowerr_binaryop(op::Symbol, x::Int64,\
    \ y::Int64)\n   @ Base.Checked ./checked.jl:154\n [2] checked_mul\n   @ ./checked.jl:288\
    \ [inlined]\n [3] rem\n   @ ./rational.jl:312 [inlined]\n [4] count_nums(arr::Vector{Int64})\n\
    \   @ Main /tmp/tmplrc6ts8x.jl:17\n [5] top-level scope\n   @ /tmp/tmplrc6ts8x.jl:24\n\
    in expression starting at /tmp/tmplrc6ts8x.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    new_arr = abs.(arr)\n\
    \    sum = 0\n    for i in 1:length(new_arr)\n        sum += sum_digits(new_arr[i])\n\
    \    end\n    if sum > 0\n        return length(new_arr)\n    else\n        return\
    \ 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3ui_onj1.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ui_onj1.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ui_onj1.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ui_onj1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3ui_onj1.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ui_onj1.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ui_onj1.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ui_onj1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3ui_onj1.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ui_onj1.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ui_onj1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ui_onj1.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3ui_onj1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp3ui_onj1.jl:14\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ui_onj1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i = 1:length(arr)\n        if sign(arr[i]) * sum(digits(abs(arr[i]))) >\
    \ 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0i7_kmpl.jl:29\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0i7_kmpl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0i7_kmpl.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0i7_kmpl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if sum(digits(abs(i))) > 0\n            n += 1\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp33uxcbpv.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp33uxcbpv.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33uxcbpv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp33uxcbpv.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33uxcbpv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33uxcbpv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp33uxcbpv.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33uxcbpv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33uxcbpv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp33uxcbpv.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33uxcbpv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33uxcbpv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp33uxcbpv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ x in arr\n        sum += sum_digits(x)\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphuivtp8g.jl:23\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphuivtp8g.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphuivtp8g.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphuivtp8g.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphuivtp8g.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphuivtp8g.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphuivtp8g.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphuivtp8g.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphuivtp8g.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphuivtp8g.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphuivtp8g.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphuivtp8g.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphuivtp8g.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmphuivtp8g.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphuivtp8g.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num_count = 0\n\
    \    for num in arr\n        if sum_digits(num) > 0\n            num_count +=\
    \ 1\n        end\n    end\n    return num_count\nend\nprintln(count_nums([-1,\
    \ 11, -11]))\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: sum_digits not defined\nStacktrace:\n\
    \ [1] count_nums(arr::Vector{Int64})\n   @ Main /tmp/tmpdu4ow68t.jl:13\n [2] top-level\
    \ scope\n   @ /tmp/tmpdu4ow68t.jl:19\nin expression starting at /tmp/tmpdu4ow68t.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums = 0 \n   \
    \ for num in arr \n        dnum = 0 \n        if num < 0 \n            num = -num\
    \ \n        end \n        for i in 1:floor(log10(num))+1 \n            dnum +=\
    \ (num%10^i - num%10^(i-1))/10^(i-1) \n        end \n        if dnum > 0 \n  \
    \          nums += 1 \n        end \n    end \n    return nums \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkm4qr3d9.jl:32\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkm4qr3d9.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkm4qr3d9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkm4qr3d9.jl:33\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkm4qr3d9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkm4qr3d9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkm4qr3d9.jl:34\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkm4qr3d9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkm4qr3d9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkm4qr3d9.jl:35\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkm4qr3d9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkm4qr3d9.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkm4qr3d9.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        count += (sum_of_digits(x) > 0) ? 1 : 0\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_nyrv50_.jl:23\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp_nyrv50_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nyrv50_.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nyrv50_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_nyrv50_.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp_nyrv50_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nyrv50_.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nyrv50_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_nyrv50_.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp_nyrv50_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_nyrv50_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_nyrv50_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_nyrv50_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp_nyr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_nyrv50_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sumdigits(a) =\
    \ sum(digits(abs(a)))\n    return sum(map(sumdigits, arr)) > 0 ? length(arr) :\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp43hia6f3.jl:20\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp43hia6f3.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hia6f3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp43hia6f3.jl:21\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43hia6f3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hia6f3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp43hia6f3.jl:22\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43hia6f3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hia6f3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp43hia6f3.jl:23\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43hia6f3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hia6f3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp43hia6f3.jl:24\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp43hia6f3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"\"\"\n    counts\
    \ the number of elements which have a sum of digits > 0\n    \"\"\"\n    sum::Int64\
    \ = 0\n    count::Int64 = 0\n    for i in arr\n        sum = countDigits(i)\n\
    \        if sum > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n \nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuy3jej9r.jl:31\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: countDigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuy3jej9r.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuy3jej9r.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuy3jej9r.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuy3jej9r.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: countDigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuy3jej9r.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuy3jej9r.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuy3jej9r.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuy3jej9r.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: countDigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuy3jej9r.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuy3jej9r.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuy3jej9r.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpuy3jej9r.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: countDigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpuy3jej9r.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuy3jej9r.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i >= 0\n            if sum(digits(i)) > 0\n       \
    \         count += 1\n            end\n        else\n            if sum(digits(-i))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ieebke3.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1ieebke3.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ieebke3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ieebke3.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ieebke3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ieebke3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ieebke3.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ieebke3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ieebke3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ieebke3.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ieebke3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ieebke3.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ieebke3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    res = 0\n    if n == 0\n        return res\n    end\n    for i in arr\n \
    \       if i < 0\n            res += signed_sum(i * -1)\n        else\n      \
    \      res += signed_sum(i)\n        end\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpai933tpd.jl:31\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpai933tpd.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpai933tpd.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpai933tpd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpai933tpd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpai933tpd.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpai933tpd.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpai933tpd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpai933tpd.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpai933tpd.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpai933tpd.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpai933tpd.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpai933tpd.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_sum not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpai933tpd.jl:20\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpai933tpd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if length(arr)\
    \ == 0\n        return 0\n    end\n    if arr[1] < 0\n        return 1 + count_nums(arr[2:end])\n\
    \    elseif sum(digits(arr[1])) > 0\n        return 1 + count_nums(arr[2:end])\n\
    \    else\n        return count_nums(arr[2:end])\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptapktxi9.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptapktxi9.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptapktxi9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmptapktxi9.jl:29\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptapktxi9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptapktxi9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmptapktxi9.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptapktxi9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptapktxi9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmptapktxi9.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptapktxi9.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptapktxi9.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptapktxi9.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(abs.(digits(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd7iapxc0.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpd7iapxc0.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7iapxc0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd7iapxc0.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd7iapxc0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7iapxc0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd7iapxc0.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd7iapxc0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7iapxc0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd7iapxc0.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd7iapxc0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7iapxc0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd7iapxc0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    return length(findall(i\
    \ -> sum(digits(abs(i))) > 0, arr))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7c5rx7l.jl:20\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl7c5rx7l.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7c5rx7l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpl7c5rx7l.jl:21\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7c5rx7l.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7c5rx7l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpl7c5rx7l.jl:22\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7c5rx7l.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7c5rx7l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpl7c5rx7l.jl:23\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7c5rx7l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7c5rx7l.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7c5rx7l.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        if num < 0\n            num = -num\n        end\n  \
    \      sum_digits = 0\n        while num != 0\n            digit = num % 10\n\
    \            sum_digits += digit\n            num = div(num, 10)\n        end\n\
    \        if sum_digits > 0\n            count += 1\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzr0xkmw7.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzr0xkmw7.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzr0xkmw7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzr0xkmw7.jl:35\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzr0xkmw7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzr0xkmw7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzr0xkmw7.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzr0xkmw7.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzr0xkmw7.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpzr0xkmw7.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzr0xkmw7.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzr0xkmw7.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzr0xkmw7.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ num in arr\n        num_str = str(num)\n        num_sum = 0\n        for c in\
    \ num_str\n            num_sum += parse(Int64, c)\n        end\n        if num_sum\
    \ > 0\n            sum += 1\n        end\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm06q97bx.jl:30\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: str not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm06q97bx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm06q97bx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm06q97bx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpm06q97bx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: str not defined\n \
    \ Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm06q97bx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm06q97bx.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm06q97bx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpm06q97bx.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: str not defined\n \
    \ Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm06q97bx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm06q97bx.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm06q97bx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpm06q97bx.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: str not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm06q97bx.jl:13\n\
    \   [2] macro expansion\n     @"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm06q97bx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # stores number\
    \ of elements which have a sum of digits > 0\n    n = 0\n    for i in arr\n  \
    \      # if the number is negative, sum negative digits\n        if i < 0\n  \
    \          digits = digits(-i)\n        else\n            digits = digits(i)\n\
    \        end\n        if sum(digits) > 0\n            n += 1\n        end\n  \
    \  end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpshsplgzz.jl:32\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpshsplgzz.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpshsplgzz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpshsplgzz.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpshsplgzz.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpshsplgzz.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpshsplgzz.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpshsplgzz.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpshsplgzz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpshsplgzz.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpshsplgzz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpshsplgzz.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpshsplgzz.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpshsplgzz.jl:0\n\
    \   [2] macro expansio"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpshsplgzz.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if sum(digits(abs(i))) > 0\n            n += 1\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiev80yva.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpiev80yva.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiev80yva.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiev80yva.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiev80yva.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiev80yva.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiev80yva.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiev80yva.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiev80yva.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiev80yva.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiev80yva.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiev80yva.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiev80yva.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i > 0 \n            count += 1\n        else\n    \
    \        i = -i\n            nums = digits(i)\n            if sum(nums) > 0\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbc2ontlb.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbc2ontlb.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2ontlb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbc2ontlb.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2ontlb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2ontlb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbc2ontlb.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2ontlb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2ontlb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbc2ontlb.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbc2ontlb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbc2ontlb.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbc2ontlb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    count = 0\n    for i in arr\n        if i < 0\n            i = -i\n     \
    \   end\n        s = 0\n        while i > 0\n            s += i % 10\n       \
    \     i = div(i, 10)\n        end\n        if s > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6cnnjz7d.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6cnnjz7d.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cnnjz7d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp6cnnjz7d.jl:35\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cnnjz7d.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cnnjz7d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp6cnnjz7d.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cnnjz7d.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cnnjz7d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp6cnnjz7d.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cnnjz7d.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cnnjz7d.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6cnnjz7d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if (sum(digits(abs(i))) > 0)\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvvc6bkdu.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvvc6bkdu.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvc6bkdu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvvc6bkdu.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvc6bkdu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvc6bkdu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvvc6bkdu.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvc6bkdu.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvc6bkdu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvvc6bkdu.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvvc6bkdu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvvc6bkdu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvvc6bkdu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt::Int64 = 0\n\
    \    for a in arr\n        if signed_digits_sum(a) > 0\n            cnt += 1\n\
    \        end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmmd7emqs.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpmmd7emqs.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmd7emqs.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmd7emqs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmmd7emqs.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpmmd7emqs.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmd7emqs.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmd7emqs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmmd7emqs.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: signed_digits_sum not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpmmd7emqs.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmmd7emqs.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmmd7emqs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmmd7emqs.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: signed_digits_sum\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmd7emqs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    result = 0\n  \
    \  for i in arr\n        if sum([digit for digit in digits(i)]) > 0\n        \
    \    result += 1\n        end\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq3cfle9e.jl:29\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq3cfle9e.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq3cfle9e.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3cfle9e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i >= 0\n            val = i\n        else\n       \
    \     val = -i\n        end\n        total = 0\n        while val > 0\n      \
    \      total += val % 10\n            val = val \xF7 10\n        end\n       \
    \ if total > 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzqumgeoh.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzqumgeoh.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqumgeoh.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzqumgeoh.jl:36\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqumgeoh.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqumgeoh.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzqumgeoh.jl:37\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqumgeoh.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqumgeoh.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzqumgeoh.jl:38\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqumgeoh.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqumgeoh.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqumgeoh.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if !(sum(digits(abs(i))) == 0)\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps7kehf9h.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmps7kehf9h.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps7kehf9h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps7kehf9h.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps7kehf9h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps7kehf9h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps7kehf9h.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps7kehf9h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps7kehf9h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps7kehf9h.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps7kehf9h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps7kehf9h.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7kehf9h.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i = 1:length(arr)\n        if sum(digits(arr[i])) > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsjpv6kjr.jl:29\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjpv6kjr.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjpv6kjr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsjpv6kjr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        dsum = 0\n        for d in digits(i)\n            dsum\
    \ += d\n        end\n        if dsum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpagtkw82a.jl:33\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagtkw82a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagtkw82a.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpagtkw82a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    # YOUR\
    \ CODE HERE\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpenjrjhmx.jl:22\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenjrjhmx.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenjrjhmx.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpenjrjhmx.jl:23\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenjrjhmx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenjrjhmx.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpenjrjhmx.jl:24\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenjrjhmx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenjrjhmx.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpenjrjhmx.jl:25\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpenjrjhmx.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenjrjhmx.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpenjrjhmx.jl:26\n  Expression: candidate([0, 1]) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpenjrjhmx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if sumdigits(x) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp57__lz2a.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp57__lz2a.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp57__lz2a.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp57__lz2a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp57__lz2a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp57__lz2a.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp57__lz2a.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp57__lz2a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp57__lz2a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp57__lz2a.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp57__lz2a.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp57__lz2a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp57__lz2a.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp57__lz2a.jl:13\n\
    \   [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp57__lz2a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n::Int64 = 0\n\
    \    for i in arr\n        if i >= 0\n            if sum(digits(i)) > 0\n    \
    \            n += 1\n            end\n        else\n            if sum(digits(-i))\
    \ > 0\n                n += 1\n            end\n        end\n    end\n    return\
    \ n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfsitxeyw.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfsitxeyw.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsitxeyw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfsitxeyw.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfsitxeyw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsitxeyw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfsitxeyw.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfsitxeyw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsitxeyw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfsitxeyw.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfsitxeyw.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsitxeyw.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfsitxeyw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64 =\
    \ 0\n    for i in arr\n        if get_sum_of_digits(i) > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv4lbkmnk.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: get_sum_of_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpv4lbkmnk.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv4lbkmnk.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv4lbkmnk.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpv4lbkmnk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: get_sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpv4lbkmnk.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv4lbkmnk.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv4lbkmnk.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpv4lbkmnk.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: get_sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpv4lbkmnk.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv4lbkmnk.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv4lbkmnk.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpv4lbkmnk.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: get_sum_of_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv4lbkmnk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2fre71ui.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2fre71ui.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fre71ui.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fre71ui.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp2fre71ui.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2fre71ui.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fre71ui.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fre71ui.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp2fre71ui.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2fre71ui.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2fre71ui.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2fre71ui.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp2fre71ui.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp2fre71ui.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2fre71ui.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if x == 0\n            count += 1\n        else\n    \
    \        count += sum(digits(abs(x)))\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplzsu003x.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplzsu003x.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzsu003x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplzsu003x.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzsu003x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzsu003x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplzsu003x.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 29 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzsu003x.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzsu003x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplzsu003x.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplzsu003x.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplzsu003x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplzsu003x.jl:31\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 36 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzsu003x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    arr = abs.(arr)\n\
    \    count = 0\n    for (i, x) in enumerate(arr)\n        sum = 0\n        while\
    \ x > 0\n            x, rem = divrem(x, 10)\n            sum += rem\n        end\n\
    \        if sum > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaayqvu_4.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpaayqvu_4.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaayqvu_4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaayqvu_4.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaayqvu_4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaayqvu_4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaayqvu_4.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaayqvu_4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaayqvu_4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpaayqvu_4.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaayqvu_4.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaayqvu_4.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaayqvu_4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if sum(map(abs, digits(x))) > 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphuvjpuju.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphuvjpuju.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphuvjpuju.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphuvjpuju.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphuvjpuju.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphuvjpuju.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphuvjpuju.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphuvjpuju.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphuvjpuju.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphuvjpuju.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphuvjpuju.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphuvjpuju.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphuvjpuju.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        s = 0\n        if i < 0\n            i = abs(i)\n    \
    \    end\n        while i > 0\n            s += i % 10\n            i = div(i,\
    \ 10)\n        end\n        if s > 0\n            count += 1\n        end\n  \
    \  end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpslbbquc7.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpslbbquc7.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslbbquc7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpslbbquc7.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslbbquc7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslbbquc7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpslbbquc7.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslbbquc7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslbbquc7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpslbbquc7.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpslbbquc7.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpslbbquc7.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpslbbquc7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    t = 0\n    for\
    \ i in arr\n        if i>0\n            t += sum(digits(i))\n        else\n  \
    \          t += sum(digits(-i))\n        end\n    end\n    return t\nend\ncount_nums([])\
    \ == 0\ncount_nums([-1, 11, -11]) == 1\ncount_nums([1, 1, 2]) == 3\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching count_nums(::Vector{Any})\n\
    Closest candidates are:\n  count_nums(!Matched::Vector{Int64}) at /tmp/tmpg50v0h78.jl:10\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpg50v0h78.jl:21\nin expression\
    \ starting at /tmp/tmpg50v0h78.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        if sum(digits(abs(num))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo8zpkwyk.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo8zpkwyk.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8zpkwyk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo8zpkwyk.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8zpkwyk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8zpkwyk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo8zpkwyk.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8zpkwyk.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8zpkwyk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo8zpkwyk.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8zpkwyk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8zpkwyk.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo8zpkwyk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return count(int\
    \ -> int > 0, [sum(digits(int)) for int in arr])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcwst42qh.jl:23\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwst42qh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwst42qh.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcwst42qh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i != 0\n            if i < 0\n                i = i\
    \ * -1\n            end\n            # Convert to string\n            i = string(i)\n\
    \            sum = 0\n            for ch in i\n                sum += parse(Int64,\
    \ ch)\n            end\n            if sum > 0\n                count += 1\n \
    \           end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1tb8m2yq.jl:36\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1tb8m2yq.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1tb8m2yq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1tb8m2yq.jl:37\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1tb8m2yq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1tb8m2yq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1tb8m2yq.jl:38\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1tb8m2yq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1tb8m2yq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1tb8m2yq.jl:39\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1tb8m2yq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1tb8m2yq.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1tb8m2yq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    cnt = 0\n    for\
    \ i in arr\n        s = 0\n        for j in digits(i)\n            s += j\n  \
    \      end\n        if s > 0\n            cnt += 1\n        end\n    end\n   \
    \ return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpztkg7ze_.jl:33\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztkg7ze_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztkg7ze_.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztkg7ze_.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = 0\n    for\
    \ i in arr\n        if count_signed_digits(i) > 0\n            n += 1\n      \
    \  end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkpikiry2.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: count_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkpikiry2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpikiry2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpikiry2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkpikiry2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: count_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkpikiry2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpikiry2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpikiry2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkpikiry2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: count_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkpikiry2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpikiry2.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpikiry2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkpikiry2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: count_signed_digits\
    \ not defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkpikiry2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"\"\"\n    Sum\
    \ up the digits of each number and return count of \n    numbers with positive\
    \ sum of digits.\n    \"\"\"\n    sum_of_digits = [sum(sum_of_digits_in_num(n))\
    \ for n in arr]\n    return count(sum_of_digits) do n\n        n > 0\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe1p29h1l.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_of_digits_in_num\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(n::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpe1p29h1l.jl:15\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe1p29h1l.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe1p29h1l.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe1p29h1l.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_of_digits_in_num\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(n::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpe1p29h1l.jl:15\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe1p29h1l.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe1p29h1l.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe1p29h1l.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_of_digits_in_num\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(n::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] count_nums(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpe1p29h1l.jl:15"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1p29h1l.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for el in arr\n        nums = abs(el)\n        el_sum = 0\n        while nums\
    \ != 0\n            el_sum += nums % 10\n            nums = div(nums, 10)\n  \
    \      end\n        if el_sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl16p3srs.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl16p3srs.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl16p3srs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl16p3srs.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl16p3srs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl16p3srs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl16p3srs.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl16p3srs.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl16p3srs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl16p3srs.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl16p3srs.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl16p3srs.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl16p3srs.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    count = 0\n\
    \    for i in arr\n        if i == 0\n            count = count\n        elseif\
    \ i < 0\n            i = -i\n            count = sum_of_digits(i)\n        else\n\
    \            count = sum_of_digits(i)\n        end\n        if count > 0\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp79n0e334.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp79n0e334.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79n0e334.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79n0e334.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp79n0e334.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp79n0e334.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79n0e334.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79n0e334.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp79n0e334.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_of_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp79n0e334.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79n0e334.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79n0e334.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp79n0e334.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_of_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp79n0"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp79n0e334.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n      \
    \  end\n        while i != 0\n            sum += i % 10\n            i = i / 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzi8e8g81.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzi8e8g81.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi8e8g81.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzi8e8g81.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi8e8g81.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi8e8g81.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzi8e8g81.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi8e8g81.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi8e8g81.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpzi8e8g81.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi8e8g81.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi8e8g81.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzi8e8g81.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    suma = 0\n    for\
    \ i in arr\n        if i < 0\n            suma += sum(x->x, abs.(digits(i)))\n\
    \        else\n            suma += sum(x->x, digits(i))\n        end\n    end\n\
    \    return suma\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzpf6o6pf.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzpf6o6pf.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpf6o6pf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzpf6o6pf.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpf6o6pf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpf6o6pf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzpf6o6pf.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpf6o6pf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpf6o6pf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzpf6o6pf.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzpf6o6pf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzpf6o6pf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzpf6o6pf.jl:31\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzpf6o6pf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n::Int64 = 0\n\
    \    for i::Int64 in arr\n        if sum(digits(abs(i))) > 0\n            n +=\
    \ 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpat4ds3w6.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpat4ds3w6.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat4ds3w6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpat4ds3w6.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat4ds3w6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat4ds3w6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpat4ds3w6.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat4ds3w6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat4ds3w6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpat4ds3w6.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat4ds3w6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat4ds3w6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpat4ds3w6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        if num == 0\n            continue\n        end\n   \
    \     if num > 0\n            count += sum(digits(num))\n        else\n      \
    \      count += sum(digits(-num))\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxj7lanx5.jl:30\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxj7lanx5.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxj7lanx5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpxj7lanx5.jl:31\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxj7lanx5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxj7lanx5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpxj7lanx5.jl:32\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxj7lanx5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxj7lanx5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpxj7lanx5.jl:33\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxj7lanx5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxj7lanx5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpxj7lanx5.jl:34\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxj7lanx5.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n_count = 0\n \
    \   for i in arr\n        if sum_digits(i) > 0\n            n_count += 1\n   \
    \     end\n    end\n    return n_count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpabyt4fcn.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpabyt4fcn.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpabyt4fcn.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpabyt4fcn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpabyt4fcn.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpabyt4fcn.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpabyt4fcn.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpabyt4fcn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpabyt4fcn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpabyt4fcn.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpabyt4fcn.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpabyt4fcn.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpabyt4fcn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpabyt4fcn.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpabyt4fcn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    N = length(arr)\n\
    \    res = 0\n    for i in 1:N\n        if sum(digits(abs(arr[i]))) > 0\n    \
    \        res += 1\n        end\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfogq4svo.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfogq4svo.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfogq4svo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfogq4svo.jl:27\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfogq4svo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfogq4svo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfogq4svo.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfogq4svo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfogq4svo.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpfogq4svo.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfogq4svo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfogq4svo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfogq4svo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    result = 0\n  \
    \  for i in arr\n        if i > 0\n            if sum(digits(i)) > 0\n       \
    \         result += 1\n            end\n        else\n            if sum(digits(-i))\
    \ > 0\n                result += 1\n            end\n        end\n    end\n  \
    \  return result\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsengno37.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsengno37.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsengno37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsengno37.jl:32\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsengno37.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsengno37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsengno37.jl:33\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsengno37.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsengno37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsengno37.jl:34\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsengno37.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsengno37.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsengno37.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    counter = 0\n \
    \   for i in arr\n        if sum(digits(abs(i))) != 0\n            counter +=\
    \ 1\n        end\n    end\n    return counter\nend\n@testset \"testing count_nums\"\
    \ begin\n    @test count_nums([]) == 0\n    @test count_nums([-1, 11, -11]) ==\
    \ 1\n    @test count_nums([1, 1, 2]) == 3\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpbwd3b9s7.jl:19\nin expression starting at /tmp/tmpbwd3b9s7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i = 1:length(arr)\n        if arr[i] > 0\n            digit_sum = sum(digits(arr[i]))\n\
    \        elseif arr[i] < 0\n            digit_sum = sum(digits(-arr[i])) + arr[i]\n\
    \        else\n            digit_sum = 0\n        end\n        if digit_sum >\
    \ 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmy3ri6uz.jl:36\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmy3ri6uz.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmy3ri6uz.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmy3ri6uz.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \n    n = 0\n \
    \   temp = 0\n    for i in arr\n        temp = 0\n        if i < 0\n         \
    \   i = i * -1\n        end\n        for j in string(i)\n            temp += parse(Int64,\
    \ j)\n        end\n        if temp > 0\n            n += 1\n        end\n    end\n\
    \    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t\
    @test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\
    \t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6,\
    \ 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1])\
    \ == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1xlh9oi1.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1xlh9oi1.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xlh9oi1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1xlh9oi1.jl:35\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xlh9oi1.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xlh9oi1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1xlh9oi1.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xlh9oi1.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xlh9oi1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1xlh9oi1.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xlh9oi1.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xlh9oi1.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1xlh9oi1.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for el in arr\n        if sum_digits(el) > 0\n            count += 1\n     \
    \   end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpegb2fl4a.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpegb2fl4a.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpegb2fl4a.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpegb2fl4a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpegb2fl4a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpegb2fl4a.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpegb2fl4a.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpegb2fl4a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpegb2fl4a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpegb2fl4a.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpegb2fl4a.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpegb2fl4a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpegb2fl4a.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpegb2fl4a.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpegb2fl4a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    if length(arr)\
    \ == 0\n        return 0\n    end\n    if arr[1] > 0\n        return 1 + count_nums(arr[2:end])\n\
    \    elseif arr[1] < 0\n        return 1 + count_nums(arr[2:end])\n    else\n\
    \        return count_nums(arr[2:end])\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe0tm1uh2.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe0tm1uh2.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0tm1uh2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe0tm1uh2.jl:29\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe0tm1uh2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0tm1uh2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe0tm1uh2.jl:30\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe0tm1uh2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0tm1uh2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe0tm1uh2.jl:31\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe0tm1uh2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0tm1uh2.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe0tm1uh2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    length(filter(s\
    \ -> sum(digits(s)) > 0, arr))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpchadadu9.jl:23\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchadadu9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchadadu9.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchadadu9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    acc = 0\n    for\
    \ x in arr\n        if abs(x) % 10 != 0 \n            acc += 1\n        end\n\
    \    end\n    return acc\nend\n@testset \"Problem 3\" begin\n    @test count_nums([])\
    \ == 0\n    @test count_nums([-1, 11, -11]) == 1\n    @test count_nums([1, 1,\
    \ 2]) == 3\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmp6g1olzfd.jl:19\nin expression starting at /tmp/tmp6g1olzfd.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    total = 0\n   \
    \ for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n      \
    \  end\n        while i > 0\n            sum += i % 10\n            i = i / 10\n\
    \        end\n        if sum > 0\n            total += 1\n        end\n    end\n\
    \    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgn35147a.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgn35147a.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn35147a.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgn35147a.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn35147a.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn35147a.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgn35147a.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn35147a.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn35147a.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgn35147a.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn35147a.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn35147a.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgn35147a.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    l=[]\n    for i\
    \ in arr\n        x=digits(abs(i))\n        if sum(x)>0\n            push!(l,i)\n\
    \        end\n    end\n    return length(l)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_z1fgqkl.jl:26\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_z1fgqkl.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_z1fgqkl.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_z1fgqkl.jl:27\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_z1fgqkl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_z1fgqkl.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_z1fgqkl.jl:28\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_z1fgqkl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_z1fgqkl.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_z1fgqkl.jl:29\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_z1fgqkl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_z1fgqkl.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_z1fgqkl.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for num in arr\n        sum = 0\n        if num < 0\n            sum = sum +\
    \ -1\n            num = num * -1\n        end\n        while num != 0\n      \
    \      sum = sum + num % 10\n            num = num \xF7 10\n        end\n    \
    \    if sum > 0\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3eaw27do.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3eaw27do.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3eaw27do.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp3eaw27do.jl:35\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3eaw27do.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3eaw27do.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp3eaw27do.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3eaw27do.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3eaw27do.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp3eaw27do.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3eaw27do.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3eaw27do.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3eaw27do.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ el in arr\n        if el > 0\n            num = el\n        else\n         \
    \   num = -el\n        end\n        while num > 0\n            sum += num % 10\n\
    \            num = num % 10\n        end\n        if sum > 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr9cvwpvq.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == 0\\n  MethodError:\
    \ Cannot `convert` an object of type typeof(count) to an object of type Int64\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:Number\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] count_nums(arr::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpr9cvwpvq.jl:26\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr9cvwpvq.jl:33 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr9cvwpvq.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6vnqpc1v.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp6vnqpc1v.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6vnqpc1v.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6vnqpc1v.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6vnqpc1v.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp6vnqpc1v.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6vnqpc1v.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6vnqpc1v.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6vnqpc1v.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp6vnqpc1v.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6vnqpc1v.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6vnqpc1v.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6vnqpc1v.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmp6vnqpc1v.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6vnqpc1v.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum_ = 0\n    for\
    \ i in arr\n        if i>=0\n            sum_ += sum(digits(i))\n        else\n\
    \            sum_ += sum(digits(-i))\n        end\n    end\n    return sum_\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpju85onqt.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpju85onqt.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju85onqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpju85onqt.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju85onqt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju85onqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpju85onqt.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju85onqt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju85onqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpju85onqt.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju85onqt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju85onqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpju85onqt.jl:31\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpju85onqt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum_digits = 0\n        while i != 0\n            sum_digits\
    \ += i % 10\n            i = i / 10\n        end\n        if sum_digits > 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv4l5ouzb.jl:34\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4l5ouzb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4l5ouzb.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv4l5ouzb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i = 1:length(arr)\n        if sum(split(string(arr[i]), \"\")...) > 0\n    \
    \        res += 1\n        end\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgnn78r6m.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  MethodError: objects of type SubString{String}\
    \ are not callable\n  Stacktrace:\n    [1] MappingRF\n      @ ./reduce.jl:95 [inlined]\n\
    \    [2] _foldl_impl(op::Base.MappingRF{SubString{String}, Base.BottomRF{typeof(Base.add_sum)}},\
    \ init::Base._InitialValue, itr::SubString{String})\n      @ Base ./reduce.jl:58\n\
    \    [3] foldl_impl(op::Base.MappingRF{SubString{String}, Base.BottomRF{typeof(Base.add_sum)}},\
    \ nt::Base._InitialValue, itr::SubString{String})\n      @ Base ./reduce.jl:48\n\
    \    [4] mapfoldl_impl(f::SubString{String}, op::typeof(Base.add_sum), nt::Base._InitialValue,\
    \ itr::SubString{String})\n      @ Base ./reduce.jl:44\n    [5] mapfoldl(f::SubString{String},\
    \ op::Function, itr::SubString{String}; init::Base._InitialValue)\n      @ Base\
    \ ./reduce.jl:162\n    [6] mapfoldl(f::SubString{String}, op::Function, itr::SubString{String})\n\
    \      @ Base ./reduce.jl:162\n    [7] mapreduce(f::SubString{String}, op::Function,\
    \ itr::SubString{String}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(),\
    \ Tuple{}}})\n      @ Base ./reduce.jl:289\n    [8] mapreduce(f::SubString{String},\
    \ op::Function, itr::SubString{String})\n      @ Base ./reduce.jl:289\n    [9]\
    \ sum(f::SubString{String}, a::SubString{String}; kw::Base.Pairs{Symbol, Union{},\
    \ Tuple{}, NamedTuple{(), Tuple{}}})\n      @ Base ./reduce.jl:503\n   [10] sum(f::SubString{String},\
    \ a::SubString{String})\n      @ Base ./reduce.jl:503\n   [11] count_nums(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpgnn78r6m.jl:13\n   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmpgnn78r6m.jl:25 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmpgnn78r6m.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpgnn78r6m.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnn78r6m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    # sum([i > 0 ?\
    \ 1 : 0 for i in arr])\n    sum([i > 0 ? i : 0 for i in arr])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxn6pewok.jl:21\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 16 == 6\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxn6pewok.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxn6pewok.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxn6pewok.jl:22\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 22 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxn6pewok.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxn6pewok.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxn6pewok.jl:23\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 200 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxn6pewok.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxn6pewok.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxn6pewok.jl:24\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 69 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxn6pewok.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxn6pewok.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxn6pewok.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if num_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvu6dgbd9.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvu6dgbd9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvu6dgbd9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvu6dgbd9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvu6dgbd9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvu6dgbd9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvu6dgbd9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvu6dgbd9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvu6dgbd9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvu6dgbd9.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvu6dgbd9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvu6dgbd9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpvu6dgbd9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: num_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpvu6dgbd9.jl:13\n\
    \ "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvu6dgbd9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    arr_filtered =\
    \ filter(arr) do i \n        count_digits(i) > 0 \n    end\n    return length(arr_filtered)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzphn_zs5.jl:22\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: count_digits not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(i::Int64)\n     @ Main /tmp/tmpzphn_zs5.jl:12\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpzphn_zs5.jl:11\n \
    \  [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzphn_zs5.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzphn_zs5.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzphn_zs5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(i::Int64)\n     @ Main /tmp/tmpzphn_zs5.jl:12\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpzphn_zs5.jl:11\n \
    \  [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzphn_zs5.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzphn_zs5.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzphn_zs5.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(i::Int64)\n     @ Main /tmp/tmpzphn_zs5.jl:12\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpzphn_zs5.jl:11\n \
    \  [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzphn_zs5.jl:24 [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzphn_zs5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if digitsum(i) > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\n@testset \"count_nums\" begin\n    @test count_nums([])\
    \ == 0\n    @test count_nums([-1, 11, -11]) == 1\n    @test count_nums([1, 1,\
    \ 2]) == 3\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpbfp8dgwz.jl:19\nin expression starting at /tmp/tmpbfp8dgwz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    ans = 0\n    i\
    \ = 1\n    while i <= length(arr)\n        sum = 0\n        if arr[i] >= 0\n \
    \           while arr[i] > 0\n                sum += arr[i] % 10\n           \
    \     arr[i] = div(arr[i], 10)\n            end\n        else\n            while\
    \ arr[i] < 0\n                sum += arr[i] % 10\n                arr[i] = div(arr[i],\
    \ 10)\n            end\n        end\n        if sum > 0\n            ans += 1\n\
    \        end\n        i += 1\n    end\n    return ans\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp58is3fpx.jl:43\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58is3fpx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58is3fpx.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp58is3fpx.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count::Int64 =\
    \ 0\n    for i in arr\n        if i < 0\n            sum::Int64 = 0\n        \
    \    str = string(i)\n            for char in str[2:end]\n                sum\
    \ += parse(Int64, char)\n            end\n            if sum > 0\n           \
    \     count += 1\n            end\n        else\n            sum::Int64 = 0\n\
    \            str = string(i)\n            for char in str\n                sum\
    \ += parse(Int64, char)\n            end\n            if sum > 0\n           \
    \     count += 1\n            end\n        end\n    end\n    return count\nend\n\
    \ \n @test count_nums([]) == 0\n @test count_nums([-1, 11, -11]) == 1\n @test\
    \ count_nums([1, 1, 2]) == 3\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"sum\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr30eq5cb.jl:1\nin expression starting at /tmp/tmpr30eq5cb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n      \
    \  end\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4qp_jini.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4qp_jini.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qp_jini.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp4qp_jini.jl:34\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qp_jini.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qp_jini.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp4qp_jini.jl:35\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qp_jini.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qp_jini.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp4qp_jini.jl:36\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4qp_jini.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4qp_jini.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4qp_jini.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum_digits(x) =\
    \ sum(digits(abs(x))) > 0\n    filter(x -> sum_digits(x), arr)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm6zqi66q.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Vector{Int64} to an object of type Int64\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm6zqi66q.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm6zqi66q.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm6zqi66q.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpm6zqi66q.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  MethodError: Cannot `convert` an object of type\
    \ Vector{Int64} to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpm6zqi66q.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm6zqi66q.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] to"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm6zqi66q.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    res = 0\n    for\
    \ i in arr\n        if i > 0\n            res += count_digits(i)\n        else\n\
    \            res += count_digits(-i)\n        end\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn_bupio0.jl:27\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: count_digits not\
    \ defined\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn_bupio0.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn_bupio0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_bupio0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpn_bupio0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn_bupio0.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn_bupio0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_bupio0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpn_bupio0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn_bupio0.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn_bupio0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_bupio0.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpn_bupio0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpn_bupio0"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_bupio0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num = 0\n    arr_digits\
    \ = [digits(a) for a in arr]\n    for i in arr_digits\n        sum_digits = 0\n\
    \        for j in i\n            sum_digits += j\n        end\n        if sum_digits\
    \ > 0\n            num += 1\n        end\n    end\n    return num\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp656ifo7f.jl:34\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp656ifo7f.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp656ifo7f.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp656ifo7f.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    @assert length(arr)>=0\n\
    \    n = 0\n    for a in arr\n        s = 0\n        if a<0\n            a=-a\n\
    \        end\n        while a>0\n            s += a%10\n            a = a//10\n\
    \        end\n        if s>0\n            n += 1\n        end\n    end\n    return\
    \ n\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgy0ci3xq.jl:34\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpgy0ci3xq.jl:19\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgy0ci3xq.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgy0ci3xq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgy0ci3xq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpgy0ci3xq.jl:19\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgy0ci3xq.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgy0ci3xq.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpgy0ci3xq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgy0ci3xq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    sum = 0\n    for\
    \ i in arr\n        if i < 0\n            i = i*-1\n        end\n        while\
    \ i > 0\n            sum += i%10\n            i = i/10\n        end\n        if\
    \ sum > 0\n            sum = 0\n            continue\n        end\n        sum\
    \ = 0\n        return 0\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdx6mf6js.jl:34\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx6mf6js.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx6mf6js.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdx6mf6js.jl:36\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 1 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx6mf6js.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx6mf6js.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdx6mf6js.jl:37\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx6mf6js.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx6mf6js.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdx6mf6js.jl:38\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdx6mf6js.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdx6mf6js.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdx6mf6js.jl:39\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdx6mf6js.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for x in arr\n        if sum(digits(abs(x))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmqds3rqk.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmqds3rqk.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqds3rqk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmqds3rqk.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqds3rqk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqds3rqk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmqds3rqk.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqds3rqk.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqds3rqk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmqds3rqk.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqds3rqk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqds3rqk.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqds3rqk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i > 0\n            sum = 0\n            while i > 0\n\
    \                sum += i % 10\n                i = i \xF7 10\n            end\n\
    \            if sum > 0\n                count += 1\n            end\n       \
    \ else\n            i = -i\n            sum = 0\n            while i > 0\n   \
    \             sum += i % 10\n                i = i \xF7 10\n            end\n\
    \            if sum > 0\n                count += 1\n            end\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptz9miee9.jl:42\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptz9miee9.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz9miee9.jl:40\ntest set: Test\
    \ Failed at /tmp/tmptz9miee9.jl:43\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptz9miee9.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz9miee9.jl:40\ntest set: Test\
    \ Failed at /tmp/tmptz9miee9.jl:44\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptz9miee9.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz9miee9.jl:40\ntest set: Test\
    \ Failed at /tmp/tmptz9miee9.jl:45\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptz9miee9.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz9miee9.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptz9miee9.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    n = length(arr)\n\
    \    count = 0\n    for i in 1:n\n        if sumdigits(arr[i]) > 0\n         \
    \   count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps2u94xkk.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmps2u94xkk.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps2u94xkk.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps2u94xkk.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps2u94xkk.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmps2u94xkk.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps2u94xkk.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps2u94xkk.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps2u94xkk.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmps2u94xkk.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps2u94xkk.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps2u94xkk.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps2u94xkk.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sumdigits not defined\n\
    \  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmps2u94xkk.jl:14\n\
    \   [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps2u94xkk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    c = 0\n    sum\
    \ = 0\n    for i in arr\n        if i < 0\n            i = i * -1\n        end\n\
    \        s = 0\n        while i > 0\n            s = s + mod(i, 10)\n        \
    \    i = i \xF7 10\n        end\n        if s > 0\n            c = c + 1\n   \
    \     end\n    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsxwgtqc5.jl:34\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsxwgtqc5.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxwgtqc5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsxwgtqc5.jl:35\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxwgtqc5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxwgtqc5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsxwgtqc5.jl:36\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxwgtqc5.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxwgtqc5.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpsxwgtqc5.jl:37\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxwgtqc5.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxwgtqc5.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsxwgtqc5.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        count += sum(abs.(digits(i))) > 0 ? 1 : 0\n    end\n \
    \   return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzdv91fsv.jl:23\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzdv91fsv.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdv91fsv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzdv91fsv.jl:24\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdv91fsv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdv91fsv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzdv91fsv.jl:25\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdv91fsv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdv91fsv.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpzdv91fsv.jl:26\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdv91fsv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdv91fsv.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzdv91fsv.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return length(filter(a\
    \ -> a > 0, [sum(digits(abs(a))) for a in arr]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\
    \t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5])\
    \ == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc21derkm.jl:19\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc21derkm.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc21derkm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc21derkm.jl:20\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc21derkm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc21derkm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc21derkm.jl:21\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc21derkm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc21derkm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc21derkm.jl:22\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc21derkm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc21derkm.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc21derkm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    \"your code here\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptyjl3v9k.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == 0\n  MethodError: Cannot `convert`\
    \ an object of type String to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmptyjl3v9k.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptyjl3v9k.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptyjl3v9k.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptyjl3v9k.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, 0]) == 0\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmptyjl3v9k.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptyjl3v9k.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptyjl3v9k.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i > 0 \n            count += sum(digits(i))\n     \
    \   else\n            count += sum(digits(-i))\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeuk10n06.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeuk10n06.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeuk10n06.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeuk10n06.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeuk10n06.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeuk10n06.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeuk10n06.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeuk10n06.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeuk10n06.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeuk10n06.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeuk10n06.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeuk10n06.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeuk10n06.jl:31\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeuk10n06.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i == 0\n            continue\n        end\n       \
    \ # count += ifelse(i<0, sum(Int.(digits(abs(i)))), sum(Int.(digits(i))))\n  \
    \      count += sum(Int.(digits(abs(i))))\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpailz5f0k.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpailz5f0k.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpailz5f0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpailz5f0k.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 18 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpailz5f0k.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpailz5f0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpailz5f0k.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 28 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpailz5f0k.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpailz5f0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpailz5f0k.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 28 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpailz5f0k.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpailz5f0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpailz5f0k.jl:31\n  Expression: candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n   Evaluated: 35 == 5\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpailz5f0k.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    num = 0\n    for\
    \ x in arr\n        if x < 0\n            l = abs(x)\n        else\n         \
    \   l = x\n        end\n        if l < 10\n            num += 1\n        else\n\
    \            while l > 0\n                num += l % 10\n                l = l\
    \ // 10\n            end\n        end\n    end\n    return num\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpasv_rlpt.jl:35\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpasv_rlpt.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasv_rlpt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpasv_rlpt.jl:36\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasv_rlpt.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasv_rlpt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpasv_rlpt.jl:37\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 7 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasv_rlpt.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasv_rlpt.jl:33\ntest set: Error\
    \ During Test at /tmp/tmpasv_rlpt.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] count_nums(arr::Vector{Int64})\n     @ Main /tmp/tmpasv_rlpt.jl:22\n \
    \  [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpasv_rlpt.jl:38 [inlined]\n\
    \   [7] macro"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpasv_rlpt.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    return length(findall(x\
    \ -> sum(digits(x)) > 0, arr))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9nwqmg7s.jl:23\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n   Evaluated: 3 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9nwqmg7s.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9nwqmg7s.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9nwqmg7s.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    nums = 0 \n   \
    \ for i in arr \n        sum = 0 \n        if i >= 0 \n            for j in string(i)\
    \ \n                sum += Int64(j) - 48 \n            end \n        else \n \
    \           for j in string(i)[2:end] \n                sum += Int64(j) - 48 \n\
    \            end \n            sum += -1*(Int64(string(i)[1]) - 48)\n        end\
    \ \n        if sum > 0 \n            nums += 1 \n        end \n    end \n    return\
    \ nums \nend\ncount_nums([])\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching count_nums(::Vector{Any})\n\
    Closest candidates are:\n  count_nums(!Matched::Vector{Int64}) at /tmp/tmp0y79w73g.jl:10\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp0y79w73g.jl:30\nin expression\
    \ starting at /tmp/tmp0y79w73g.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    val::Int64 = 0\n\
    \    for i in arr\n        if i > 0\n            val += sum(digits(i)) > 0 ? 1\
    \ : 0\n        else\n            val += sum(digits(-i)) > 0 ? 1 : 0\n        end\n\
    \    end\n    return val\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmn5h3mur.jl:27\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmn5h3mur.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn5h3mur.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmn5h3mur.jl:28\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn5h3mur.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn5h3mur.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmn5h3mur.jl:29\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn5h3mur.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn5h3mur.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmn5h3mur.jl:30\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn5h3mur.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn5h3mur.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmn5h3mur.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnyh6a1dr.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnyh6a1dr.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyh6a1dr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnyh6a1dr.jl:26\n  Expression: candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n   Evaluated: 7 == 6\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyh6a1dr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyh6a1dr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnyh6a1dr.jl:27\n  Expression: candidate([1, 6, 9, -6, 0, 1,\
    \ 5]) == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyh6a1dr.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyh6a1dr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnyh6a1dr.jl:28\n  Expression: candidate([1, 100, 98, -7, 1,\
    \ -1]) == 4\n   Evaluated: 6 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyh6a1dr.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyh6a1dr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnyh6a1dr.jl:21\n"
  exit_code: 1
  status: SyntaxError

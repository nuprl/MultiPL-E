name: HumanEval_16_count_distinct_characters
language: jl
results:
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n  chars = Set()\n  for c\
    \ in string\n    push!(chars, c)\n  end\n  return length(chars)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_f7juhgt.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_f7juhgt.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_f7juhgt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_f7juhgt.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_f7juhgt.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_f7juhgt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_f7juhgt.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_f7juhgt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_f7juhgt.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_f7juhgt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    for i in string, j in\
    \ 1:length(string)\n        if string[i] == string[j]\n            i = j\n   \
    \         return length(string)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpazvnb3jf.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpazvnb3jf.jl:1\n\
    in expression starting at /tmp/tmpazvnb3jf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    found\
    \ = Set{Char}()\n    for i in 1:length(string)\n        if !(string[i] in found)\n\
    \            count += 1\n            push!(found, string[i])\n        end\n  \
    \  end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyn_xhkhn.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyn_xhkhn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyn_xhkhn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpyn_xhkhn.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyn_xhkhn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyn_xhkhn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpyn_xhkhn.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyn_xhkhn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyn_xhkhn.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyn_xhkhn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    m = Dict{Char, Int}()\n\
    \    for char in string\n        m[lowercase(char)] = 1\n    end\n    return length(m)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    str = lowercase(string)\n\
    \    res = Set()\n    for c in str\n        push!(res, c)\n    end\n    return\
    \ length(res)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0\n    end\n    output = 0\n    for ch in string\n        if !(ch\
    \ in string[1:end])\n            output += 1\n        end\n    end\n    return\
    \ output\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkl1pxwl8.jl:25\n  Expression: candidate(\"\
    abcde\") == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkl1pxwl8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkl1pxwl8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkl1pxwl8.jl:26\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkl1pxwl8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkl1pxwl8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkl1pxwl8.jl:27\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkl1pxwl8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkl1pxwl8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkl1pxwl8.jl:28\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkl1pxwl8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkl1pxwl8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkl1pxwl8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    # We are going\
    \ to store the distinct characters in a dictionary\n    # This will ensure they\
    \ are unique\n    unique_characters = Dict{Char,Int64}()\n    \n    # Loop through\
    \ all the characters in the string\n    for c in string\n        \n        # If\
    \ the character doesn't exist in the dictionary, add it\n        if !haskey(unique_characters,\
    \ c)\n            unique_characters[c] = 1\n        end\n        \n    end\n \
    \   \n    # Return the number of characters in the dictionary\n    return length(unique_characters)\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpillj_9uq.jl:34\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpillj_9uq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpillj_9uq.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpillj_9uq.jl:35\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpillj_9uq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpillj_9uq.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpillj_9uq.jl:36\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpillj_9uq.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpillj_9uq.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpillj_9uq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \"\"\" returns count\
    \ of distinct characters in given string \"\"\"\n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ef2i43t.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ef2i43t.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ef2i43t.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp4ef2i43t.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ef2i43t.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ef2i43t.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp4ef2i43t.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ef2i43t.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ef2i43t.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ef2i43t.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    dict = Dict{String, Bool}()\n\
    \    for ch in string\n        dict[string(ch)] = true\n    end\n    return length(dict)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp17dek2ek.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp17dek2ek.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp17dek2ek.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp17dek2ek.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp17dek2ek.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp17dek2ek.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp17dek2ek.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp17dek2ek.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp17dek2ek.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp17dek2ek.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp17dek2ek.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp17dek2ek.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp17dek2ek.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Jerry jERRY JeRRRY\") == 5\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17dek2ek.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    counter = 0\n    for\
    \ i in 1:length(string)\n        if !(string[i] in string[1:i-1])\n          \
    \  counter += 1\n        end\n    end\n    return counter\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprd76qbxf.jl:23\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprd76qbxf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprd76qbxf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprd76qbxf.jl:24\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprd76qbxf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprd76qbxf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprd76qbxf.jl:25\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprd76qbxf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprd76qbxf.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprd76qbxf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters_array = [x\
    \ for x in string]\n    return length(unique(characters_array))\nend\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqlzml3m2.jl:19\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlzml3m2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlzml3m2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqlzml3m2.jl:20\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlzml3m2.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlzml3m2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqlzml3m2.jl:21\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlzml3m2.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlzml3m2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqlzml3m2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8vd5uqra.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vd5uqra.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vd5uqra.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp8vd5uqra.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vd5uqra.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vd5uqra.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp8vd5uqra.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8vd5uqra.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8vd5uqra.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8vd5uqra.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0\n    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbiuey_aq.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbiuey_aq.jl:1\n\
    in expression starting at /tmp/tmpbiuey_aq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string_dict = Dict{Char,\
    \ Bool}()\n    for c in string\n        string_dict[lowercase(c)] = true\n   \
    \ end\n    return length(string_dict)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ unique(uppercase(string))\n    return length(distinct_characters)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string_lower = lowercase(string)\n\
    \    counter = 0\n    for i = 1:length(string_lower)\n        is_found = false\n\
    \        for j = 1:counter\n            if string_lower[i] == string_lower[j]\n\
    \                is_found = true\n                break\n            end\n   \
    \     end\n        if !is_found\n            counter += 1\n        end\n    end\n\
    \    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcozaajem.jl:33\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n   Evaluated: 6 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcozaajem.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcozaajem.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcozaajem.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # your code\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpriq9gloq.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpriq9gloq.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpriq9gloq.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpriq9gloq.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpriq9gloq.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpriq9gloq.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpriq9gloq.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpriq9gloq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(string))\n\
    end\ncount_distinct_characters(\"AaBbCc\")\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6awo1ku9.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6awo1ku9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6awo1ku9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6awo1ku9.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6awo1ku9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6awo1ku9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6awo1ku9.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6awo1ku9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6awo1ku9.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6awo1ku9.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_chars = Set{Char}()\n\
    \    for c in string\n        push!(distinct_chars, c)\n    end\n    return length(distinct_chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_pnj0m7v.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pnj0m7v.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pnj0m7v.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_pnj0m7v.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pnj0m7v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pnj0m7v.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_pnj0m7v.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pnj0m7v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pnj0m7v.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_pnj0m7v.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    alpha = unique(lowercase(string))\n\
    \    return length(alpha)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char = Set()\n    for\
    \ s in string\n        include(\"stdlib.jl\")\n        push!(char, s)\n    end\n\
    \    length(char)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnz5nj_d2.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  SystemError: opening file \"/tmp/stdlib.jl\"\
    : No such file or directory\n  Stacktrace:\n    [1] systemerror(p::String, errno::Int32;\
    \ extrainfo::Nothing)\n      @ Base ./error.jl:174\n    [2] #systemerror#68\n\
    \      @ ./error.jl:173 [inlined]\n    [3] systemerror\n      @ ./error.jl:173\
    \ [inlined]\n    [4] open(fname::String; lock::Bool, read::Nothing, write::Nothing,\
    \ create::Nothing, truncate::Nothing, append::Nothing)\n      @ Base ./iostream.jl:293\n\
    \    [5] open\n      @ ./iostream.jl:282 [inlined]\n    [6] open(f::Base.var\"\
    #364#365\"{String}, args::String; kwargs::Base.Pairs{Symbol, Union{}, Tuple{},\
    \ NamedTuple{(), Tuple{}}})\n      @ Base ./io.jl:328\n    [7] open\n      @ ./io.jl:328\
    \ [inlined]\n    [8] read\n      @ ./io.jl:436 [inlined]\n    [9] _include(mapexpr::Function,\
    \ mod::Module, _path::String)\n      @ Base ./loading.jl:1249\n   [10] include\n\
    \      @ ./client.jl:451 [inlined]\n   [11] count_distinct_characters(string::String)\n\
    \      @ Main /tmp/tmpnz5nj_d2.jl:10\n   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmpnz5nj_d2.jl:21 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmpnz5nj_d2.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpnz5nj_d2.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  SystemError: opening file \"/tmp/stdlib.jl\"\
    : No such file or directory\n  Stacktrace:\n    [1] systemerror(p::String, errno::Int32;\
    \ extrainfo::Nothing)\n      @ Base ./error.jl:174\n    [2] #systemerror#68\n\
    \      @ ./error.jl:173 [inlined]\n    [3] systemerror\n      @ ./error.jl:173\
    \ [inlined]\n    [4] open(fname::String; lock::Bool, read::Nothing, write::Nothing,\
    \ create::Nothing, truncate::Nothing, append::Nothing)\n      @ Base ./iostream.jl:293\n\
    \    [5] open\n      @ ./iostream.jl:282 [inlined]\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnz5nj_d2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = Set(String[])\n\
    \    for c in string\n        push!(chars,lowercase(c))\n    end\n    return length(chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprr20xllk.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmprr20xllk.jl:10\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprr20xllk.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprr20xllk.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprr20xllk.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::St"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprr20xllk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_chars = Set{Char}()\n\
    \    for char in string\n        distinct_chars = distinct_chars \u222A Set(char)\n\
    \    end\n    return length(distinct_chars)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprtydl2fb.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtydl2fb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtydl2fb.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprtydl2fb.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtydl2fb.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtydl2fb.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprtydl2fb.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtydl2fb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtydl2fb.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprtydl2fb.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # Get all the letters\
    \ in the string\n    letters = collect(string)\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgg25pphp.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgg25pphp.jl:1\n\
    in expression starting at /tmp/tmpgg25pphp.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set()\n\
    \    for character in string\n        push!(characters, character)\n    end\n\
    \    return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk954ec4z.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk954ec4z.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk954ec4z.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpk954ec4z.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk954ec4z.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk954ec4z.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpk954ec4z.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk954ec4z.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk954ec4z.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk954ec4z.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwlhukdyu.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlhukdyu.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlhukdyu.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwlhukdyu.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlhukdyu.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlhukdyu.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwlhukdyu.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwlhukdyu.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwlhukdyu.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwlhukdyu.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{String}()\n\
    \    for character in string\n        push!(characters, character)\n    end\n\
    \    return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9p5lkfd2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmp9p5lkfd2.jl:10\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9p5lkfd2.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9p5lkfd2.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9p5lkfd2.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::St"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9p5lkfd2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    seen = []\n    for c\
    \ in string\n        if !(c in seen)\n            push!(seen, c)\n        end\n\
    \    end\n    return length(seen)\nend\n    \nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9bflhhff.jl:24\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bflhhff.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bflhhff.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9bflhhff.jl:25\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bflhhff.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bflhhff.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9bflhhff.jl:26\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bflhhff.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bflhhff.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9bflhhff.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # function letter(c::Char)\n\
    \    #     if (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')\n    #        \
    \ return Char(c)\n    #     else \n    #         return ' '\n    #     end\n \
    \   # end\n    # letters = map(string) do c\n    #     letter(c)\n    # end\n\
    \    # uniq_chars = unique(letters)\n    # return length(uniq_chars) - 1\n   \
    \ letters = unique(filter(string, c -> c in 'a':'z' || c in 'A':'Z'))\n    return\
    \ length(letters)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9o4yqrm7.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching filter(::String,\
    \ ::var\"#1#2\")\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:363\n    filter(::Any,\
    \ !Matched::Array{T, N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmp9o4yqrm7.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9o4yqrm7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9o4yqrm7.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9o4yqrm7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching filter(::String,\
    \ ::var\"#1#2\")\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:363\n    filter(::Any,\
    \ !Matched::Array{T, N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmp9o4yqrm7.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9o4yqrm7.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9o4yqrm7.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp9o4yqrm7.jl:30\n  Test threw exception\n  Expression:\
    \ candidate("
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9o4yqrm7.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    temp = uppercase(string)\n\
    \    dis_char = Set(temp)\n    return length(dis_char)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n  # We can use set() to drop\
    \ duplicate elements\n  string = String(set(string))\n  # However, the result\
    \ of set() is a vector of type Char\n  # We can use length() to get the number\
    \ of elements\n  return length(string)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbamoxtu8.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpbamoxtu8.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbamoxtu8.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbamoxtu8.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpbamoxtu8.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpbamoxtu8.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbamoxtu8.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbamoxtu8.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpbamoxtu8.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpbamoxtu8.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbamoxtu8.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbamoxtu8.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpbamoxtu8.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpbamoxtu8.jl:9\n\
    \   [2] macro expansion\n     @"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbamoxtu8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string = tolower(string)\n\
    \    num_distinct_characters = length(Set(string))\nend\n\"\"\" Given a list,\
    \ remove consecutive duplicates from the list\n    >>> remove_consecutive_duplicates([1,\
    \ 1, 1, 2, 2, 2, 1, 1, 3, 3, 3, 1, 1, 1])\n    [1, 2, 1, 3, 1]\n    >>> remove_consecutive_duplicates([1,\
    \ 1, 2, 3, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3])\n    [1, 2, 3, 1, 2, 3]\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp1ef4wafq.jl:11\nin expression starting at /tmp/tmp1ef4wafq.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    dist_chars = Set{Char}()\
    \ \n    for c in string \n        dist_chars = union(dist_chars, Set([c]))\n \
    \   end\n    length(dist_chars)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt2rus9l1.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2rus9l1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2rus9l1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpt2rus9l1.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2rus9l1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2rus9l1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpt2rus9l1.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt2rus9l1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt2rus9l1.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt2rus9l1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    for ch\
    \ in string\n        if !count(ch)\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpribo1v1y.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpribo1v1y.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpribo1v1y.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpribo1v1y.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpribo1v1y.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: objects of type Int64 are\
    \ not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpribo1v1y.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpribo1v1y.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpribo1v1y.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpribo1v1y.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  MethodError: objects of type Int64 are not\
    \ callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpribo1v1y.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpribo1v1y.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpribo1v1y.jl:20\ntest set:\
    \ E"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpribo1v1y.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string_norm = lowercase(string)\n\
    \    return length(unique(string_norm))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    no_of_distinct_characters\
    \ = length(unique(lowercase(string)))\n    return no_of_distinct_characters\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string_lowercase = lowercase(string)\n\
    \    unique_chars = unique(string_lowercase)\n    count_unique_chars = length(unique_chars)\n\
    \    return count_unique_chars\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string_set = Set{Char}()\n\
    \    for char in string\n        push!(string_set, char)\n    end\n    return\
    \ length(string_set)\nend\n    \n    \n\"\"\" Given a string, remove all the adjacent\
    \ duplicates (regardless of case)\n    >>> remove_adjacent_duplicates('yyybbbYYYBBB')\n\
    \    'ybYB'\n    >>> remove_adjacent_duplicates('xyzXYZ')\n    'xyzXYZ'\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpzwenwl22.jl:16\nin expression starting at /tmp/tmpzwenwl22.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{Char}()\n\
    \    for character in string\n        push!(characters, lowercase(character))\n\
    \    end\n    return length(characters)\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set(string)\n    return length(distinct_characters)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphhsl6n4t.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphhsl6n4t.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphhsl6n4t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmphhsl6n4t.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphhsl6n4t.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphhsl6n4t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmphhsl6n4t.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphhsl6n4t.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphhsl6n4t.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphhsl6n4t.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    dict = Dict()\n    for\
    \ char in string\n        dict[lowercase(char)] = 1\n    end\n    return length(keys(dict))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique_characters = Set{Char}()\n\
    \    for character in string\n        push!(unique_characters, character)\n  \
    \  end\n    return length(unique_characters)\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp31eubqz7.jl:22\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp31eubqz7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp31eubqz7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp31eubqz7.jl:23\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp31eubqz7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp31eubqz7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp31eubqz7.jl:24\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp31eubqz7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp31eubqz7.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp31eubqz7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    set = Set()\n    for\
    \ c in string\n        push!(set,lowercase(c))\n    end\n    return length(set)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = Set{Char}()\n\
    \    for c in string\n        push!(chars, c)\n    end\n    return length(chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdv6gda87.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdv6gda87.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdv6gda87.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpdv6gda87.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdv6gda87.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdv6gda87.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpdv6gda87.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdv6gda87.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdv6gda87.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdv6gda87.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = Dict{Char, Int64}()\n\
    \    for c in string\n        chars[lowercase(c)] = 0\n    end\n    return length(chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n  s = Set{Char}()\n  for\
    \ c in collect(string)\n    push!(s, c)\n  end\n  return length(s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpox_ovp08.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox_ovp08.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox_ovp08.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpox_ovp08.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox_ovp08.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox_ovp08.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpox_ovp08.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox_ovp08.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox_ovp08.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpox_ovp08.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set()\n\
    \    for s in string\n        push!(characters, lowercase(s))\n    end\n    return\
    \ length(characters)\nend\n \n \n\"\"\" Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpccqdttpd.jl:16\nin expression starting at /tmp/tmpccqdttpd.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    all_characters = Set()\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt2rm314p.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt2rm314p.jl:1\n\
    in expression starting at /tmp/tmpt2rm314p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique_characters = Set{Char}()\n\
    \    for character in string\n        push!(unique_characters, character)\n  \
    \  end\n    return length(unique_characters)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptlquh5gp.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlquh5gp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlquh5gp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptlquh5gp.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlquh5gp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlquh5gp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptlquh5gp.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlquh5gp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlquh5gp.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptlquh5gp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    number_of_distinct_characters\
    \ = 0\n    characters_seen = Set{Char}()\n    for i in 1:length(string)\n    \
    \    if !haskey(characters_seen, string[i])\n            number_of_distinct_characters\
    \ += 1\n            push!(characters_seen, string[i])\n        end\n    end\n\
    \    return number_of_distinct_characters\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyb8cvmku.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: no method matching haskey(::Set{Char},\
    \ ::Char)\n  Closest candidates are:\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\n\
    \    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpyb8cvmku.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyb8cvmku.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyb8cvmku.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpyb8cvmku.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching haskey(::Set{Char},\
    \ ::Char)\n  Closest candidates are:\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\n\
    \    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpyb8cvmku.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyb8cvmku.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyb8cvmku.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpyb8cvmku.jl:26\n  Test threw exception\n  Expre"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyb8cvmku.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique_characters = unique(string)\n\
    \    length(unique_characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwdqufeke.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwdqufeke.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwdqufeke.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwdqufeke.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwdqufeke.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwdqufeke.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwdqufeke.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwdqufeke.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwdqufeke.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdqufeke.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters_dict = Dict()\n\
    \    for character in string\n        characters_dict[lowercase(character)] =\
    \ true\n    end\n    return length(characters_dict)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    str = lowercase(string)\n\
    \    count = 0\n    seen = Set([])\n    for i = 1:length(str)\n        if !haskey(seen,\
    \ str[i])\n            count += 1\n            push!(seen, str[i])\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnmr6do6o.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: no method matching haskey(::Set{Any},\
    \ ::Char)\n  Closest candidates are:\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\n\
    \    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpnmr6do6o.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnmr6do6o.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnmr6do6o.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpnmr6do6o.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching haskey(::Set{Any},\
    \ ::Char)\n  Closest candidates are:\n    haskey(!Matched::Base.ImmutableDict,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:789\n    haskey(!Matched::WeakKeyDict{K},\
    \ ::Any) where K at /shared/centos7/julia/1.7.3/share/julia/base/weakkeydict.jl:179\n\
    \    haskey(!Matched::IOContext, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:339\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpnmr6do6o.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnmr6do6o.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnmr6do6o.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpnmr6do6o.jl:27\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmr6do6o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0\n    end\n    s = string[1]\n    count = 1\n    for i in 2:length(string)\n\
    \        if string[i] != s\n            count += 1\n            s = string[i]\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp43hxqemj.jl:28\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 13 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43hxqemj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hxqemj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp43hxqemj.jl:29\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43hxqemj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hxqemj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp43hxqemj.jl:30\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 14 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43hxqemj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43hxqemj.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp43hxqemj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    hash = Dict{Char,Int64}()\n    for c in string\n        if lowercase(c)\
    \ in alphabet\n            if c in hash\n                hash[c] += 1\n      \
    \      else\n                hash[c] = 1\n            end\n        end\n    end\n\
    \    return length(hash)\nend\ncount_distinct_characters(\"xyzXYZ\")\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AbstractDict collections only contain Pairs;\nEither\
    \ look for e.g. A=>B instead, or use the `keys` or `values`\nfunction if you are\
    \ looking for a key or value respectively.\nStacktrace:\n [1] error(s::String)\n\
    \   @ Base ./error.jl:33\n [2] in(p::Char, a::Dict{Char, Int64})\n   @ Base ./abstractdict.jl:28\n\
    \ [3] count_distinct_characters(string::String)\n   @ Main /tmp/tmpcxauaoov.jl:12\n\
    \ [4] top-level scope\n   @ /tmp/tmpcxauaoov.jl:21\nin expression starting at\
    \ /tmp/tmpcxauaoov.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # initialize a hash set\n\
    \    unique_chars = Set{Char}()\n    # add each character to the set\n    for\
    \ char in string\n        push!(unique_chars,char)\n    end\n    # return the\
    \ length of the set\n    return length(unique_chars)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjeg2p43k.jl:24\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjeg2p43k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjeg2p43k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjeg2p43k.jl:25\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjeg2p43k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjeg2p43k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpjeg2p43k.jl:26\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjeg2p43k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjeg2p43k.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjeg2p43k.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distict_chars = Set()\n\
    \    for c in string\n        push!(distict_chars, lowercase(c))\n    end\n  \
    \  return length(distict_chars)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char_set = Set()\n  \
    \  for c in string\n        push!(char_set, tolower(c))\n    end\n    return length(char_set)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq65pdrkz.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  UndefVarError: tolower not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpq65pdrkz.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq65pdrkz.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq65pdrkz.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpq65pdrkz.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpq65pdrkz.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq65pdrkz.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq65pdrkz.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpq65pdrkz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpq65pdrkz.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq65pdrkz.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq65pdrkz.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpq65pdrkz.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Jerry jERRY JeRRRY\") == 5\n  UndefVarError: tolower not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpq65pdr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq65pdrkz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = collect(Set{Char}(string))\n\
    \    return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk12x0u00.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk12x0u00.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk12x0u00.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpk12x0u00.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk12x0u00.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk12x0u00.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpk12x0u00.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk12x0u00.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk12x0u00.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk12x0u00.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    s = Set()\n    for c\
    \ in string\n        s = Set(s .| uppercase(c))\n    end\n    return length(s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsbwzx5g2.jl:20\n  Expression: candidate(\"\
    abcde\") == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbwzx5g2.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbwzx5g2.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsbwzx5g2.jl:21\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbwzx5g2.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbwzx5g2.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsbwzx5g2.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbwzx5g2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbwzx5g2.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsbwzx5g2.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbwzx5g2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbwzx5g2.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsbwzx5g2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    n = 0\n    for i in 1:length(string)\n\
    \        if i == 1\n            n += 1\n        else\n            if string[i]\
    \ in string[1:i-1]\n                continue\n            else\n             \
    \   n += 1\n            end\n        end\n    end\n    return n\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ja8teez.jl:29\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ja8teez.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ja8teez.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4ja8teez.jl:30\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ja8teez.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ja8teez.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4ja8teez.jl:31\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4ja8teez.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4ja8teez.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ja8teez.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpibl_sb1t.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibl_sb1t.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibl_sb1t.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpibl_sb1t.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibl_sb1t.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibl_sb1t.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpibl_sb1t.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibl_sb1t.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibl_sb1t.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibl_sb1t.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set()\n\
    \    for char in string\n        push!(characters, char)\n    end\n    return\
    \ length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3g5pj30k.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g5pj30k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g5pj30k.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp3g5pj30k.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g5pj30k.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g5pj30k.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp3g5pj30k.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3g5pj30k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3g5pj30k.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3g5pj30k.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{Char}()\n\
    \    for character in string\n        push!(characters, character)\n    end\n\
    \    return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp30jfyxxj.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp30jfyxxj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp30jfyxxj.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp30jfyxxj.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp30jfyxxj.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp30jfyxxj.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp30jfyxxj.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp30jfyxxj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp30jfyxxj.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp30jfyxxj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    character_set = Set()\n\
    \    for character in string\n        character_set = push!(character_set, lowercase(character))\n\
    \    end\n    length(character_set)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique_characters = Set{Char}()\n\
    \    for c in string\n        push!(unique_characters,c)\n    end\n    length(unique_characters)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpul0qp2ir.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpul0qp2ir.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpul0qp2ir.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpul0qp2ir.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpul0qp2ir.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpul0qp2ir.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpul0qp2ir.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpul0qp2ir.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpul0qp2ir.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpul0qp2ir.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # Create an empty set\
    \ for unique characters\n    unique = Set()\n    # Push characters to the set\n\
    \    for character in string\n        push!(unique, character)\n    end\n    #\
    \ Return the size of the set\n    return length(unique)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwcdx_32r.jl:24\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwcdx_32r.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwcdx_32r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwcdx_32r.jl:25\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwcdx_32r.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwcdx_32r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpwcdx_32r.jl:26\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwcdx_32r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwcdx_32r.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwcdx_32r.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    string_array = [x for\
    \ x in string]\n    return length(unique(map(uppercase, string_array)))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set()\n    for character in string\n        distinct_characters.add(character)\n\
    \    end\n    return distinct_characters.length\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpai_z42jm.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type Set has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpai_z42jm.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpai_z42jm.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpai_z42jm.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpai_z42jm.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type Set has no field add\n  Stacktrace:\n   [1]\
    \ getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpai_z42jm.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpai_z42jm.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpai_z42jm.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpai_z42jm.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type Set has no field add\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpai_z42jm.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpai_z42jm.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpai_z42jm.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpai_z42jm.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  type Set has no fie"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpai_z42jm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(string))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghcq1z_8.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghcq1z_8.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghcq1z_8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpghcq1z_8.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghcq1z_8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghcq1z_8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpghcq1z_8.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghcq1z_8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghcq1z_8.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghcq1z_8.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set(string[i]\
    \ for i in 1:length(string))\n    return length(characters)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa9x3c7a0.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9x3c7a0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9x3c7a0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpa9x3c7a0.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9x3c7a0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9x3c7a0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpa9x3c7a0.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9x3c7a0.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9x3c7a0.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9x3c7a0.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    for counter = Int64(0)\
    \ in string\n        # ASCII A is 65\n        # ASCII Z is 90\n        # ASCII\
    \ a is 97\n        # ASCII z is 122\n        if Int64(counter) in 65:90\n    \
    \        unique_array.push_back(counter)\n        elseif Int64(counter) in 97:122\n\
    \            unique_array.push_back(counter)\n        end\n    end\n    return\
    \ unique_array.size()\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmppqj90k55.jl:8 expected \"\
    end\", got \"string\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppqj90k55.jl:8\n\
    in expression starting at /tmp/tmppqj90k55.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0\n    end\n    string = lowercase(string)\n    count = 1\n   \
    \ for i in range(1, length(string))\n        if string[i] != string[i-1]\n   \
    \         count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe4e1uyu6.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  BoundsError: attempt to access 5-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpe4e1uyu6.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe4e1uyu6.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe4e1uyu6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe4e1uyu6.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  BoundsError: attempt to access 13-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpe4e1uyu6.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe4e1uyu6.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe4e1uyu6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe4e1uyu6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  BoundsError: attempt to access 12-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpe4e1uyu6.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4e1uyu6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char_counts = Dict{Char,\
    \ Int64}()\n    for char in string\n        char_counts[char] = get(char_counts,\
    \ char, 0) + 1\n    end\n    length(char_counts)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphcscosiy.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcscosiy.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcscosiy.jl:18\ntest set: Test\
    \ Failed at /tmp/tmphcscosiy.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcscosiy.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcscosiy.jl:18\ntest set: Test\
    \ Failed at /tmp/tmphcscosiy.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcscosiy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcscosiy.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphcscosiy.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    seen_characters = Dict{String,\
    \ Bool}()\n    for character in string\n        seen_characters[uppercase(character)]\
    \ = true\n    end\n    return length(seen_characters)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx3wrpxys.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Bool}, v0::Bool, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpx3wrpxys.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx3wrpxys.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx3wrpxys.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpx3wrpxys.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Bool}, v0::Bool, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpx3wrpxys.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3wrpxys.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    # declare an empty\
    \ array \n    distinct_chars = []\n    \n    # for each letter in the string\n\
    \    for letter in string\n        # if the letter is not in the array\n     \
    \   if !(letter in distinct_chars)\n            # then push it to the array\n\
    \            push!(distinct_chars, letter)\n        end\n    end\n    \n    #\
    \ return the length of the array\n    return length(distinct_chars)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptni_cqrj.jl:31\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptni_cqrj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptni_cqrj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmptni_cqrj.jl:32\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptni_cqrj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptni_cqrj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmptni_cqrj.jl:33\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptni_cqrj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptni_cqrj.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptni_cqrj.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{Char}()\n\
    \    for character in string\n        push!(characters, character)\n    end\n\
    \    return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxrzxs82a.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrzxs82a.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxrzxs82a.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxrzxs82a.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrzxs82a.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxrzxs82a.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxrzxs82a.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrzxs82a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxrzxs82a.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxrzxs82a.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    num_chars = 0\n    distinct_chars\
    \ = Set()\n    for char in string\n        if !in(char, distinct_chars)\n    \
    \        num_chars += 1\n            push!(distinct_chars, char)\n        end\n\
    \    end\n    return num_chars\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplh2tmv00.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh2tmv00.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh2tmv00.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplh2tmv00.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh2tmv00.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh2tmv00.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplh2tmv00.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplh2tmv00.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplh2tmv00.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplh2tmv00.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    len(Set(string))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxa66rifb.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpxa66rifb.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxa66rifb.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxa66rifb.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxa66rifb.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpxa66rifb.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxa66rifb.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxa66rifb.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxa66rifb.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpxa66rifb.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxa66rifb.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxa66rifb.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxa66rifb.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: len not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpxa66rifb.jl:8\n\
    \   [2] macro expansion\n     @"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxa66rifb.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\n# Call the function and show the result\ncount_distinct_characters(\"python\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n \n    # 1. Convert string\
    \ to lower case\n    # 2. Take out distinct characters\n    # 3. Count the number\
    \ of distinct characters\n    \n    return length(collect(Set(lowercase(string))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjvpfm1h5.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvpfm1h5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvpfm1h5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjvpfm1h5.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvpfm1h5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvpfm1h5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjvpfm1h5.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjvpfm1h5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjvpfm1h5.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjvpfm1h5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    str = lowercase(string)\n\
    \    ind_vec = Vector{Int64}()\n    for chr in str\n        push!(ind_vec,findfirst(str,chr))\n\
    \    end\n    return length(unique(ind_vec))\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp530er4c7.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmp530er4c7.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp530er4c7.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp530er4c7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp530er4c7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmp530er4c7.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp530er4c7.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp530er4c7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp530er4c7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp530er4c7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    #convert string\
    \ to list of characters\n    chars = string |> collect\n    \n    #convert list\
    \ of characters to lowercase\n    chars = [string(c)::LowercaseString for c in\
    \ chars]\n    \n    #compute number of distinct characters\n    distinct_characters\
    \ = length(unique(chars))\n    \n    return distinct_characters\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkjh9az4h.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] (::var\"#1#2\"{String})(c::Char)\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpkjh9az4h.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkjh9az4h.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkjh9az4h.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkjh9az4h.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] (::var\"#1#2\"{String})(c::Char)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpkjh9az4h.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkjh9az4h.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkjh9az4h.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpkjh9az4h.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] (::var\"#1#2\"{String})(c::Char)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n\
    \     @ ./array.jl:724 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpkjh9az4h.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkjh9az4h.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters_array = Set{Char}()\n\
    \    for c in string\n        push!(characters_array, c)\n    end\n    return\
    \ length(characters_array)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi55y177c.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi55y177c.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi55y177c.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpi55y177c.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi55y177c.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi55y177c.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpi55y177c.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi55y177c.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi55y177c.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi55y177c.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    characters\
    \ = Set([])\n    for letter in string\n        if !(letter in characters)\n  \
    \          push!(characters, letter)\n            count += 1\n        end\n  \
    \  end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfdg2w8l2.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdg2w8l2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdg2w8l2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfdg2w8l2.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdg2w8l2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdg2w8l2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfdg2w8l2.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdg2w8l2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdg2w8l2.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfdg2w8l2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\n@test count_distinct_characters(\"xyzXYZ\") == 3\n@test count_distinct_characters(\"\
    Jerry\") == 4\n \nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpm1m4lpv3.jl:10\nin expression starting at /tmp/tmpm1m4lpv3.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char_set = Set()\n  \
    \  for letter in string\n        if letter in char_set\n            continue\n\
    \        else\n            push!(char_set, letter)\n        end\n    end\n   \
    \ return length(char_set)\nend\n# 5.\n\"\"\" Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpzhtouq9_.jl:19\nin expression starting at /tmp/tmpzhtouq9_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n  s = uppercase(string)\n\
    \  return length(unique(s))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    filter!(string, isalpha)\n\
    \    distinct_chars = []\n    for char in string\n        if !(char in distinct_chars)\n\
    \            push!(distinct_chars, char)\n        end\n    end\n    return length(distinct_chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqpu5puxj.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpqpu5puxj.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqpu5puxj.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqpu5puxj.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpqpu5puxj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpqpu5puxj.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqpu5puxj.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqpu5puxj.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpqpu5puxj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpqpu5puxj.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqpu5puxj.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqpu5puxj.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpqpu5puxj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpqpu5puxj.jl:8\n\
    \   [2] macro "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqpu5puxj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique = unique(string)\n\
    \    return length(unique)\nend\n \ncount_distinct_characters(\"xyzXYZ\")\ncount_distinct_characters(\"\
    Jerry\")\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: unique not defined\nStacktrace:\n [1]\
    \ count_distinct_characters(string::String)\n   @ Main /tmp/tmpyy5k9ivw.jl:8\n\
    \ [2] top-level scope\n   @ /tmp/tmpyy5k9ivw.jl:12\nin expression starting at\
    \ /tmp/tmpyy5k9ivw.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    newstring = tolower.(string)\n\
    \    newstring = unique(newstring)\n    return length(newstring)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7h1jluwu.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp7h1jluwu.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7h1jluwu.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7h1jluwu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp7h1jluwu.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp7h1jluwu.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7h1jluwu.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7h1jluwu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp7h1jluwu.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp7h1jluwu.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7h1jluwu.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7h1jluwu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp7h1jluwu.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp7h1jluwu.jl:8\n\
    \   [2] macro "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7h1jluwu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    # initialize set\n\
    \    s = Set{Char}()\n    \n    # iterate through string characters and add to\
    \ set\n    for c in string\n        add!(s, c)\n    end\n    \n    # return length\
    \ of set\n    return length(s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpji153mgc.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  UndefVarError: add! not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpji153mgc.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpji153mgc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpji153mgc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpji153mgc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: add! not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpji153mgc.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpji153mgc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpji153mgc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpji153mgc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: add! not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpji153mgc.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpji153mgc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpji153mgc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpji153mgc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"Jerry jERRY JeRRRY\") == 5\n  UndefVarError: add! not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpji153mgc.jl:14\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpji153mgc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgi2rx2ut.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi2rx2ut.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi2rx2ut.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi2rx2ut.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi2rx2ut.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi2rx2ut.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgi2rx2ut.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgi2rx2ut.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgi2rx2ut.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgi2rx2ut.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    x = string.lowercase\n\
    \    return length(unique(x))\nend\ncount_distinct_characters(\"Jerry\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: type String has no field lowercase\nStacktrace:\n [1]\
    \ getproperty\n   @ ./Base.jl:42 [inlined]\n [2] count_distinct_characters(string::String)\n\
    \   @ Main /tmp/tmpn6ker1o1.jl:8\n [3] top-level scope\n   @ /tmp/tmpn6ker1o1.jl:11\n\
    in expression starting at /tmp/tmpn6ker1o1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    s = Set()\n    for c\
    \ in string\n        s = push!(s, c)\n    end\n    return length(s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbws9qtab.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbws9qtab.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbws9qtab.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbws9qtab.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbws9qtab.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbws9qtab.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbws9qtab.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbws9qtab.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbws9qtab.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbws9qtab.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    L = length(string)\n\
    \    s = Set{Char}()\n    for i in 1:L\n        push!(s, string[i])\n    end\n\
    \    return length(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdmwghgv9.jl:22\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmwghgv9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmwghgv9.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdmwghgv9.jl:23\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmwghgv9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmwghgv9.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdmwghgv9.jl:24\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdmwghgv9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdmwghgv9.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdmwghgv9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    letters = []\n    i =\
    \ 1\n    while i <= length(string)\n        if !(string[i] in letters)\n     \
    \       push!(letters, string[i])\n        end\n        i += 1\n    end\n    return\
    \ length(letters)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmvkyselo.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvkyselo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmvkyselo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmvkyselo.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvkyselo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmvkyselo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmvkyselo.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmvkyselo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmvkyselo.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmvkyselo.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    set_char=Set(collect(string))\n\
    \    len_set=length(set_char)\n    return len_set\nend\ncount_distinct_characters(\"\
    abcdef\")\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7dx3nh80.jl:20\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dx3nh80.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dx3nh80.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7dx3nh80.jl:21\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dx3nh80.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dx3nh80.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7dx3nh80.jl:22\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dx3nh80.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dx3nh80.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7dx3nh80.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqk0zfm8o.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqk0zfm8o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqk0zfm8o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqk0zfm8o.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqk0zfm8o.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqk0zfm8o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqk0zfm8o.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqk0zfm8o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqk0zfm8o.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqk0zfm8o.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set()\n    for character in string\n        push!(distinct_characters, lowercase(character))\n\
    \    end\n    return length(distinct_characters)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # lower_string = lowercase(string)\n\
    \    return length(unique(lowercase(string)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    new_string = lowercase(string)\n\
    \    char_vector = split(new_string, \"\")\n    char_vector = unique(char_vector)\n\
    \    return length(char_vector)\nend\ncount_distinct_characters(\"xyzXYZ\")\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz_bz0vrf.jl:19\n  Expression: candidate(\"\
    \") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz_bz0vrf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz_bz0vrf.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz_bz0vrf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(map(lowercase,\
    \ collect(string))))\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    lowercase_array = tolower.(string)\n\
    \    unique_characters = unique(lowercase_array)\n    length(unique_characters)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp18nwcdpf.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp18nwcdpf.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18nwcdpf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18nwcdpf.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp18nwcdpf.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp18nwcdpf.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18nwcdpf.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18nwcdpf.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp18nwcdpf.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp18nwcdpf.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18nwcdpf.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18nwcdpf.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp18nwcdpf.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: tolower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp18nwcdpf.jl:8\n\
    \   [2] macro "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18nwcdpf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpze86qwj9.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze86qwj9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze86qwj9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpze86qwj9.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze86qwj9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze86qwj9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpze86qwj9.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpze86qwj9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpze86qwj9.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpze86qwj9.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    dict = Dict{Char, Bool}()\n\
    \    for char in string\n        dict[lowercase(char)] = true\n    end\n    return\
    \ length(dict)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    set = Set{Char}()\n \
    \   for c in string\n        push!(set,c)\n    end\n    length(set)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp34yrsrnq.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34yrsrnq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34yrsrnq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp34yrsrnq.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34yrsrnq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34yrsrnq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp34yrsrnq.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34yrsrnq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34yrsrnq.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp34yrsrnq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set()\n    for character in string\n        push!(distinct_characters, character)\n\
    \    end\n    return length(distinct_characters)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9d84nm_2.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d84nm_2.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d84nm_2.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9d84nm_2.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d84nm_2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d84nm_2.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9d84nm_2.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d84nm_2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d84nm_2.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d84nm_2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = Set{Char}()\n\
    \    for c in string\n        push!(chars, Char(c))\n    end\n    return length(chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxvt77q1m.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvt77q1m.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvt77q1m.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxvt77q1m.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvt77q1m.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvt77q1m.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxvt77q1m.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvt77q1m.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvt77q1m.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxvt77q1m.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    n = 0\n    c = string[1]\n\
    \    for i in string\n        if(c != i)\n            n += 1\n            c =\
    \ i\n        end\n    end\n    return n + 1\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprt0c1jk9.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  BoundsError: attempt to access empty String\
    \ at index [1]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmprt0c1jk9.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmprt0c1jk9.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmprt0c1jk9.jl:22\ntest set:\
    \ Test Failed at /tmp/tmprt0c1jk9.jl:25\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 13 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt0c1jk9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprt0c1jk9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprt0c1jk9.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt0c1jk9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprt0c1jk9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprt0c1jk9.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 14 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt0c1jk9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprt0c1jk9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # TODO\nend\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphfwmx3q3.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmphfwmx3q3.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphfwmx3q3.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphfwmx3q3.jl:15\ntest set:\
    \ Error During Test at /tmp/tmphfwmx3q3.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmphfwmx3q3.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphfwmx3q3.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphfwmx3q3.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = Set()\n    for\
    \ c in string\n        push!(chars, lowercase(c))\n    end\n    return length(chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # your code here\n  \
    \  return\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbswcpbhd.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpbswcpbhd.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbswcpbhd.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbswcpbhd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpbswcpbhd.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpbswcpbhd.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbswcpbhd.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbswcpbhd.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique_chars = unique(collect(string))\n\
    \    return length(unique_chars)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprofpg9zc.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprofpg9zc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprofpg9zc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmprofpg9zc.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprofpg9zc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprofpg9zc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmprofpg9zc.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprofpg9zc.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprofpg9zc.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprofpg9zc.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique = unique(lowercase(string))\n\
    \    return length(unique)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwbw0brtj.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: unique not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpwbw0brtj.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbw0brtj.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbw0brtj.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwbw0brtj.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: unique not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpwbw0brtj.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbw0brtj.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbw0brtj.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwbw0brtj.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: unique not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpwbw0brtj.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwbw0brtj.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwbw0brtj.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwbw0brtj.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: unique not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpwbw0brtj.jl:8\n\
    \   [2] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwbw0brtj.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ []\n    for character in string\n        if !(character in distinct_characters)\n\
    \            push!(distinct_characters, character)\n        end\n    end\n   \
    \ length(distinct_characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbjjv832w.jl:23\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjjv832w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjjv832w.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbjjv832w.jl:24\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjjv832w.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjjv832w.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbjjv832w.jl:25\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjjv832w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjjv832w.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbjjv832w.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0\n    end\n    else\n        if string[1] in string[2:end]\n \
    \           return count_distinct_characters(string[2:end])\n        else\n  \
    \          return 1 + count_distinct_characters(string[2:end])\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpa5ke1wt5.jl:7 expected\
    \ \"end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa5ke1wt5.jl:11\n\
    in expression starting at /tmp/tmpa5ke1wt5.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" \n\
    \        return 0\n    end\n    upper_string = uppercase(string)\n    return length(unique(upper_string))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # count the number of\
    \ distinct characters in the string\n    # your code here\n    return length(unique(lowercase(string)))\n\
    end\n \n \n@testset \"count_distinct_characters test set\" begin\n    @test count_distinct_characters(\"\
    \") == 0\n    @test count_distinct_characters(\"a\") == 1\n    @test count_distinct_characters(\"\
    aaaa\") == 1\n    @test count_distinct_characters(\"abc\") == 3\n    @test count_distinct_characters(\"\
    abcABC\") == 3\n    @test count_distinct_characters(\"abcABC123!@#\") == 9\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpv_y6f0k8.jl:14\nin expression starting at /tmp/tmpv_y6f0k8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbv03x8u_.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbv03x8u_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbv03x8u_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpbv03x8u_.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbv03x8u_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbv03x8u_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpbv03x8u_.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbv03x8u_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbv03x8u_.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbv03x8u_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    chars = collect(Set(Array(collect(string))))\n\
    \    return length(chars)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3z6megq8.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3z6megq8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3z6megq8.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp3z6megq8.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3z6megq8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3z6megq8.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp3z6megq8.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3z6megq8.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3z6megq8.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3z6megq8.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    characters = Set()\n\
    \    for character in string\n        push!(characters, character)\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6_1j3vom.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6_1j3vom.jl:1\n\
    in expression starting at /tmp/tmp6_1j3vom.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    n = length(string)\n\
    \    distinct_chars = Set()\n    for i in 1:n\n        push!(distinct_chars, string[i])\n\
    \    end\n    return length(distinct_chars)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaz6idd5w.jl:22\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaz6idd5w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaz6idd5w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpaz6idd5w.jl:23\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaz6idd5w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaz6idd5w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpaz6idd5w.jl:24\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaz6idd5w.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaz6idd5w.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaz6idd5w.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set{Char}()\n    for char in string\n        push!(distinct_characters, char)\n\
    \    end\n    return length(distinct_characters)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2uew294l.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uew294l.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uew294l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp2uew294l.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uew294l.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uew294l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp2uew294l.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uew294l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uew294l.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2uew294l.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    char_count = countmap(lowercase(string))\n\
    \    return length(char_count)\nend\nprintln(count_distinct_characters(\"Jerry\"\
    ))\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: countmap not defined\nStacktrace:\n [1]\
    \ count_distinct_characters(string::String)\n   @ Main /tmp/tmpltff31us.jl:8\n\
    \ [2] top-level scope\n   @ /tmp/tmpltff31us.jl:11\nin expression starting at\
    \ /tmp/tmpltff31us.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplfdbirel.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmplfdbirel.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfdbirel.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfdbirel.jl:14\ntest set:\
    \ Error During Test at /tmp/tmplfdbirel.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmplfdbirel.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplfdbirel.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfdbirel.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    uniqueChars = Set{Char}()\n\
    \    for character in string\n        push!(uniqueChars, character)\n    end\n\
    \    return length(uniqueChars)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph9s81eex.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph9s81eex.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph9s81eex.jl:18\ntest set: Test\
    \ Failed at /tmp/tmph9s81eex.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph9s81eex.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph9s81eex.jl:18\ntest set: Test\
    \ Failed at /tmp/tmph9s81eex.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph9s81eex.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph9s81eex.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph9s81eex.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(split(string,\
    \ \"\")))\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpydbdcxr5.jl:15\n  Expression: candidate(\"\
    \") == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydbdcxr5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydbdcxr5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpydbdcxr5.jl:17\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydbdcxr5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydbdcxr5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpydbdcxr5.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydbdcxr5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydbdcxr5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpydbdcxr5.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydbdcxr5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydbdcxr5.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydbdcxr5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    a = Set{Char}()\n   \
    \ for i in 1:length(string)\n        push!(a, string[i])\n    end\n    return\
    \ length(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcrfc5dzq.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcrfc5dzq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcrfc5dzq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpcrfc5dzq.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcrfc5dzq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcrfc5dzq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpcrfc5dzq.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcrfc5dzq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcrfc5dzq.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcrfc5dzq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    a = split(string, \"\"\
    )\n    b = Set(a)\n    size(b)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqp09el7c.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching size(::Set{SubString{String}})\n\
    \  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\n\
    \    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\n\
    \    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:567\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpqp09el7c.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqp09el7c.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqp09el7c.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqp09el7c.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching size(::Set{SubString{String}})\n\
    \  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\n\
    \    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\n\
    \    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgeb"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqp09el7c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    array = zeros(Int64,128)\n\
    \    for c in string\n        a = Int64(c)\n        array[a] = 1\n    end\n  \
    \  return sum(array)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8i5zr4c8.jl:22\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8i5zr4c8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8i5zr4c8.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp8i5zr4c8.jl:23\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8i5zr4c8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8i5zr4c8.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp8i5zr4c8.jl:24\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8i5zr4c8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8i5zr4c8.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8i5zr4c8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n \n    str_1 = uppercase(string)\n\
    \    str_2 = lowercase(string)\n    str_3 = str_1 + str_2\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfa5gbl89.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfa5gbl89.jl:1\n\
    in expression starting at /tmp/tmpfa5gbl89.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpop3npgfy.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpop3npgfy.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpop3npgfy.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpop3npgfy.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpop3npgfy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpop3npgfy.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpop3npgfy.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpop3npgfy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpop3npgfy.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpop3npgfy.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    character_list\
    \ = Set(lowercase(string))\n    return length(character_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    s = sort(lowercase(string))\n\
    \    length(unique(s))\nend\n \ncount_distinct_characters(\"XxYxZx\")\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching sort(::String)\nClosest\
    \ candidates are:\n  sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \  sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \  sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti} at\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \  ...\nStacktrace:\n [1] count_distinct_characters(string::String)\n   @ Main\
    \ /tmp/tmpal2eguxh.jl:8\n [2] top-level scope\n   @ /tmp/tmpal2eguxh.jl:12\nin\
    \ expression starting at /tmp/tmpal2eguxh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set()\n\
    \    for c in string\n        push!(characters, lowercase(c))\n    end\n    return\
    \ length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set()\n    for c in string\n        push!(distinct_characters, c)\n    end\n\
    \    return length(distinct_characters)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpswpoxoht.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswpoxoht.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswpoxoht.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpswpoxoht.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswpoxoht.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswpoxoht.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpswpoxoht.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswpoxoht.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswpoxoht.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswpoxoht.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzdpw5eg8.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdpw5eg8.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdpw5eg8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzdpw5eg8.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdpw5eg8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdpw5eg8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzdpw5eg8.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdpw5eg8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdpw5eg8.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzdpw5eg8.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    set = Set{Char}()\n \
    \   for c in string\n        push!(set,c)\n    end\n    return length(set)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmped0b55fp.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmped0b55fp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmped0b55fp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmped0b55fp.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmped0b55fp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmped0b55fp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmped0b55fp.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmped0b55fp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmped0b55fp.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmped0b55fp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ Set{Char}()\n    for character in string\n        push!(distinct_characters,\
    \ character)\n    end\n    return length(distinct_characters)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8uwhcgn3.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8uwhcgn3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8uwhcgn3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8uwhcgn3.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8uwhcgn3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8uwhcgn3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8uwhcgn3.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8uwhcgn3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8uwhcgn3.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8uwhcgn3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    new_char = Set(String[])\n\
    \    for i in string\n        push!(new_char, i)\n    end\n    length(new_char)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9frbavw_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmp9frbavw_.jl:10\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9frbavw_.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9frbavw_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9frbavw_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Nothing}, v0::Nothing,\
    \ key0::Char)\n     @ Base ./dict.jl:373\n   [2] push!(s::Set{String}, x::Char)\n\
    \     @ Base ./set.jl:59\n   [3] count_distinct_characters(string::St"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9frbavw_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{Char}()\n\
    \    for character in string\n        push!(characters, character)\n    end\n\
    \    return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_70mdvw8.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_70mdvw8.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_70mdvw8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_70mdvw8.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_70mdvw8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_70mdvw8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_70mdvw8.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_70mdvw8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_70mdvw8.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_70mdvw8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(String(lowercase(string)))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_chars = Set(String)\n\
    \    for char in string\n        if !haskey(distinct_chars, char)\n          \
    \  push!(distinct_chars, char)\n        end\n    end\n    return length(distinct_chars)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7kg8zwfk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching length(::Type{String})\n\
    \  Closest candidates are:\n    length(!Matched::Union{Base.KeySet, Base.ValueIterator})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:58\n    length(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ S}, LinearAlgebra.Transpose{T, S}} where {T, S}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.InvasiveLinkedListSynchronized) at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:604\n\
    \    ...\n  Stacktrace:\n   [1] union!(s::Set{Char}, itr::Type)\n     @ Base ./abstractset.jl:98\n\
    \   [2] Set{Char}(itr::Type)\n     @ Base ./set.jl:10\n   [3] _Set(itr::Type,\
    \ #unused#::Base.HasEltype)\n     @ Base ./set.jl:25\n   [4] Set(itr::Type)\n\
    \     @ Base ./set.jl:23\n   [5] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmp7kg8zwfk.jl:8\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp7kg8zwfk.jl:21 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp7kg8zwfk.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp7kg8zwfk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching length(::Type{String})\n\
    \  Closest candidates are:\n    length(!Matched::Union{Base.KeySet, Base.ValueIterator})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:58\n    length(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ S}, LinearAlgebra.Transpose{T, S}} where {T, S}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\n\
    \    length(!Matched::Base.InvasiveLinkedListSynchronized) at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:604\n\
    \    ...\n  Stacktrace:\n   [1] union!(s::Set{Char}, itr::Type)\n     @ Base ./abstractset.jl:98\n\
    \  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7kg8zwfk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_chars = unique(lowercase(string))\n\
    \    return length(distinct_chars)\nend\ncount_distinct_characters('xyzXYZ')\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpy2fc6yx0.jl:11\nin expression\
    \ starting at /tmp/tmpy2fc6yx0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    unique = unique_chars(string)\n\
    \    length(unique)\nend\n@assert count_distinct_characters('xyzXYZ') == 3\n@assert\
    \ count_distinct_characters('Jerry') == 4\n@assert count_distinct_characters('')\
    \ == 0\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpl6d6au44.jl:11\nin expression\
    \ starting at /tmp/tmpl6d6au44.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return Set(string.lowercase).length\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6jr0vahe.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp6jr0vahe.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6jr0vahe.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6jr0vahe.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp6jr0vahe.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp6jr0vahe.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6jr0vahe.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6jr0vahe.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp6jr0vahe.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp6jr0vahe.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6jr0vahe.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6jr0vahe.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp6jr0vahe.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jr0vahe.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg41_yyqb.jl:17\n  Expression: candidate(\"\
    abcde\") == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg41_yyqb.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg41_yyqb.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpg41_yyqb.jl:18\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg41_yyqb.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg41_yyqb.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpg41_yyqb.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg41_yyqb.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg41_yyqb.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpg41_yyqb.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg41_yyqb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg41_yyqb.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg41_yyqb.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphmi9w60l.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmi9w60l.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmi9w60l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphmi9w60l.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmi9w60l.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmi9w60l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphmi9w60l.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmi9w60l.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmi9w60l.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphmi9w60l.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # Initialize an empty\
    \ array of length 26,\n    # one for each letter of the alphabet.\n    # We will\
    \ use this to count distinct letters.\n    # Lowercase letters will be stored\
    \ in the first\n    # 13 indices, and uppercase letters will be stored\n    #\
    \ in the last 13 indices.\n    counts = zeros(Int64, 26)\n    \n    # Loop through\
    \ the string,\n    # and add one to the appropriate index\n    # of the counts\
    \ array\n    for letter in string\n        if letter in 'abcdefghijklm'\n    \
    \        counts[letter - 'a'] += 1\n        elseif letter in 'ABCDEFGHIJKLM'\n\
    \            counts[letter - 'A' + 13] += 1\n        end\n    end\n    \n    #\
    \ Now, loop through the counts array,\n    # and count the number of non-zero\
    \ entries\n    distinct_characters = 0\n    for i in 1:26\n        if counts[i]\
    \ > 0\n            distinct_characters += 1\n        end\n    end\n    \n    return\
    \ distinct_characters\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpqacu4q8r.jl:20\nin expression\
    \ starting at /tmp/tmpqacu4q8r.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    uniqs = Set{Char}()\n\
    \    for c in string\n        push!(uniqs, c)\n    end\n    return length(uniqs)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7iy8teus.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7iy8teus.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7iy8teus.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp7iy8teus.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7iy8teus.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7iy8teus.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp7iy8teus.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7iy8teus.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7iy8teus.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7iy8teus.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n  count = 0 \n  used = Dict{Char,\
    \ Bool}()\n  for c in string\n    used[c] = true\n  end\n  return length(used)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnzc9q1tw.jl:22\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnzc9q1tw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnzc9q1tw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnzc9q1tw.jl:23\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnzc9q1tw.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnzc9q1tw.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnzc9q1tw.jl:24\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnzc9q1tw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnzc9q1tw.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzc9q1tw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(lowercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(uppercase(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    character_counter = Dict()\n\
    \    for character in collect(string)\n        character_counter[lowercase(character)]\
    \ = 1\n    end\n    return length(character_counter)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" \n\
    \        return 0\n    end\n    temp = [string[1]]\n    for i in string[2:end]\n\
    \        if !(i in temp)\n            push!(temp, i)\n        end\n    end\n \
    \   return length(temp)\nend;\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt0z_d3cv.jl:27\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0z_d3cv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0z_d3cv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpt0z_d3cv.jl:28\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0z_d3cv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0z_d3cv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpt0z_d3cv.jl:29\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0z_d3cv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0z_d3cv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt0z_d3cv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # initialize empty set\n\
    \    character_set = Set([])\n    for character in string\n        push!(character_set,\
    \ character)\n    end\n    # length of the set is the number of distinct characters\n\
    \    return length(character_set)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd1fs845d.jl:23\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1fs845d.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1fs845d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd1fs845d.jl:24\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1fs845d.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1fs845d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd1fs845d.jl:25\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1fs845d.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1fs845d.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd1fs845d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    seen = Set()\n    for\
    \ char in string\n        push!(seen, char)\n    end\n    length(seen)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6xu1z8gl.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xu1z8gl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xu1z8gl.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6xu1z8gl.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xu1z8gl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xu1z8gl.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6xu1z8gl.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xu1z8gl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xu1z8gl.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6xu1z8gl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(unique(collect(string)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbp7w96up.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp7w96up.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp7w96up.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpbp7w96up.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp7w96up.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp7w96up.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpbp7w96up.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbp7w96up.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbp7w96up.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbp7w96up.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    visited = zeros(Int64,\
    \ 256)\n    count = 0\n    for character in string\n        if visited[Int(character)]\
    \ == 0\n            count += 1\n            visited[Int(character)] = 1\n    \
    \    end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5wf1gs9x.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wf1gs9x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wf1gs9x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5wf1gs9x.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wf1gs9x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wf1gs9x.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5wf1gs9x.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5wf1gs9x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5wf1gs9x.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wf1gs9x.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    uniqs = Set(char for\
    \ char in string)\n    return length(uniqs)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp85rrt2gn.jl:18\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85rrt2gn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85rrt2gn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp85rrt2gn.jl:19\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85rrt2gn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85rrt2gn.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp85rrt2gn.jl:20\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85rrt2gn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85rrt2gn.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85rrt2gn.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    d = {}\n    for char\
    \ in string\n        d[lowercase(char)] = true\n    end\n    return length(keys(d))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: { } vector syntax is discontinued around /tmp/tmp9mocmcpc.jl:8\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp9mocmcpc.jl:1\nin expression starting\
    \ at /tmp/tmp9mocmcpc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    distinct = Set{Char}()\n\
    \    for c in string\n        add!(distinct, c)\n    end\n    return length(distinct)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpukv9sinu.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  UndefVarError: add! not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpukv9sinu.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpukv9sinu.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpukv9sinu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpukv9sinu.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: add! not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpukv9sinu.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpukv9sinu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpukv9sinu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpukv9sinu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: add! not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpukv9sinu.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpukv9sinu.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpukv9sinu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpukv9sinu.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"Jerry jERRY JeRRRY\") == 5\n  UndefVarError: add! not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpukv9sinu.jl:11\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukv9sinu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set()\n\
    \    for c in string\n        push!(characters, lowercase(c))\n    end\n    return\
    \ length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    s = Set{Char}()\n   \
    \ for c in string\n        push!(s,c)\n    end\n    return length(s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqv1qznmr.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqv1qznmr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqv1qznmr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqv1qznmr.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqv1qznmr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqv1qznmr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqv1qznmr.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqv1qznmr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqv1qznmr.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqv1qznmr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    characters = Set{Char}()\n\
    \    for character in string\n        push!(characters,character)\n    end\n \
    \   return length(characters)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb_q0wol9.jl:21\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_q0wol9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_q0wol9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb_q0wol9.jl:22\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_q0wol9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_q0wol9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb_q0wol9.jl:23\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_q0wol9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_q0wol9.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb_q0wol9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # 1. convert string to\
    \ lowercase\n    # 2. set() returns a new sorted set\n    # 3. length of the set\n\
    \    return length(set(lowercase(string)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcxza4056.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpcxza4056.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcxza4056.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcxza4056.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpcxza4056.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpcxza4056.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcxza4056.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcxza4056.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpcxza4056.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpcxza4056.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcxza4056.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcxza4056.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpcxza4056.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmpcxza4056.jl:11\n\
    \   [2] macro expansion\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxza4056.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    letters = collect(Set{Char}(string))\n\
    \    return length(letters)\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwplwtn_b.jl:19\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwplwtn_b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwplwtn_b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwplwtn_b.jl:20\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwplwtn_b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwplwtn_b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwplwtn_b.jl:21\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwplwtn_b.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwplwtn_b.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwplwtn_b.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    # loop through\
    \ characters, store them in a set\n    # set has the property of only keeping\
    \ unique values\n    # since the data structure uses hashing, the lookup complexity\
    \ of a set is O(1)\n    # return length of set\n    return length(Set(collect(ch\
    \ -> ch, string)))\n    \nend\n    \n    \nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdxkn2b63.jl:18\nin expression starting at /tmp/tmpdxkn2b63.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    for i\
    \ in string\n        is_new = true\n        for j in string[1:end]\n         \
    \   if i == j\n                is_new = false\n            end\n        end\n\
    \        if is_new == true\n            count += 1\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi04cva4z.jl:28\n  Expression: candidate(\"\
    abcde\") == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi04cva4z.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi04cva4z.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi04cva4z.jl:29\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi04cva4z.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi04cva4z.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi04cva4z.jl:30\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi04cva4z.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi04cva4z.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi04cva4z.jl:31\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi04cva4z.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi04cva4z.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi04cva4z.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    for char\
    \ in string\n        if char in string[1:end]\n            continue\n        else\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8k3b8jr6.jl:24\n  Expression: candidate(\"\
    abcde\") == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3b8jr6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3b8jr6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8k3b8jr6.jl:25\n  Expression: candidate(\"abcdecadeCADE\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3b8jr6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3b8jr6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8k3b8jr6.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3b8jr6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3b8jr6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8k3b8jr6.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k3b8jr6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k3b8jr6.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8k3b8jr6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    return length(Set(string[:]))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe24f_8ow.jl:17\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe24f_8ow.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe24f_8ow.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe24f_8ow.jl:18\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe24f_8ow.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe24f_8ow.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe24f_8ow.jl:19\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe24f_8ow.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe24f_8ow.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe24f_8ow.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count = 0\n    dist_array\
    \ = []\n    for i in string\n        if !(i in dist_array)\n            push!(dist_array,\
    \ i)\n            count = count + 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdzo3si_2.jl:25\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdzo3si_2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdzo3si_2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdzo3si_2.jl:26\n  Expression: candidate(\"aaaaAAAAaaaa\")\
    \ == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdzo3si_2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdzo3si_2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdzo3si_2.jl:27\n  Expression: candidate(\"Jerry jERRY JeRRRY\"\
    ) == 5\n   Evaluated: 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdzo3si_2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdzo3si_2.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdzo3si_2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    distinct_characters =\
    \ unique(lowercase(string))\n    number_of_distinct_characters = length(distinct_characters)\n\
    \    return number_of_distinct_characters\nend\n \n\"\"\" Given a set of strings,\
    \ find out the longest string that is a prefix of all these strings\n    >>> longest_prefix('abc',\
    \ 'abcdefg', 'abcd')\n    abc\n    >>> longest_prefix('abc', 'abd', 'abef')\n\
    \    ab\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpcn0oj6x4.jl:13\nin expression starting at /tmp/tmpcn0oj6x4.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # for loop to count characters\n\
    \    # for character in string \n    #     if character not in characterList\n\
    \    #         append character to characterList \n    characterList = []\n  \
    \  for character in string \n        if character not in characterList\n     \
    \       push!(characterList, character)\n        end\n    end\n    #return length\
    \ of characterList\n    return length(characterList)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoojtmsrz.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"abcde\") == 5\n  TypeError: non-boolean (Char) used\
    \ in boolean context\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpoojtmsrz.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoojtmsrz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoojtmsrz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoojtmsrz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmpoojtmsrz.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoojtmsrz.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoojtmsrz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoojtmsrz.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n \
    \    @ Main /tmp/tmpoojtmsrz.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoojtmsrz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoojtmsrz.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpoojtmsrz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"Jerry jERRY JeRRRY\") == 5\n  TypeError: non-boolean (Char) used\
    \ in boolean context\n  Stacktrace:"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoojtmsrz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2ejai5xv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmp2ejai5xv.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ejai5xv.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2ejai5xv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2ejai5xv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmp2ejai5xv.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ejai5xv.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ejai5xv.jl:12\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_155_even_odd_count
language: jl
results:
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    if num < 0\n        num = -num\n   \
    \ end\n    while num != 0\n        digit = num % 10\n        if digit % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    \
    \    num = num / 10\n    end\n    return even, odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_i1jezrs.jl:29\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i1jezrs.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i1jezrs.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_i1jezrs.jl:30\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 325) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i1jezrs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i1jezrs.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_i1jezrs.jl:31\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i1jezrs.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i1jezrs.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_i1jezrs.jl:32\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_i1jezrs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_i1jezrs.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_i1jezrs.jl:33\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_i1jezrs.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    while num > 0\n      \
    \  if (num % 10) % 2 == 0\n            even += 1\n        else\n            odd\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    return (even, odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8mvzddc8.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8mvzddc8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8mvzddc8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8mvzddc8.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8mvzddc8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8mvzddc8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8mvzddc8.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8mvzddc8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8mvzddc8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8mvzddc8.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8mvzddc8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8mvzddc8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8mvzddc8.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8mvzddc8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i\
    \ % 2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    even = 0\n   \
    \ odd = 0\n    for i in abs(num)\n        if i % 2 == 0\n            even += 1\n\
    \        else\n            odd += 1\n        end\n    end\n    return (even, odd)\n\
    end\neven_odd_count(-12) ==> (1, 1)\neven_odd_count(123) ==> (1, 2)\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: space before \"(\" not allowed in \"> (\" at\
    \ /tmp/tmppjjty8rt.jl:22\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppjjty8rt.jl:22\n\
    in expression starting at /tmp/tmppjjty8rt.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    is_even(n) = n % 2 == 0\n\
    \    is_odd(n) = n % 2 != 0\n    if num == 0\n        return (1, 0)\n    end\n\
    \    while num != 0\n        if is_even(num % 10)\n            even_count += 1\n\
    \        elseif is_odd(num % 10)\n            odd_count += 1\n        end\n  \
    \      num = div(num, 10)\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_count += 1\n        else\n      \
    \      odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # Initialize the counters\n    oddCount = 0\n    evenCount = 0\n\
    \    \n    # Assign number to positive number to get positive numbers\n    if\
    \ num < 0\n        num = -1 * num\n    end\n    \n    # Create a string of the\
    \ numbers\n    numString = string(num)\n    \n    # If a character is odd, add\
    \ one to oddCount\n    # If a character is even, add one to evenCount\n    for\
    \ char in numString\n        if isodd(parse(Int64, char))\n            oddCount\
    \ += 1\n        else\n            evenCount += 1\n        end\n    end\n    \n\
    \    # Return a tuple of oddCount and evenCount\n    return (oddCount, evenCount)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9llr9amg.jl:38\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (1, 0) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9llr9amg.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9llr9amg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9llr9amg.jl:43\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9llr9amg.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9llr9amg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9llr9amg.jl:44\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (3, 2) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9llr9amg.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9llr9amg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp9llr9amg.jl:45\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9llr9amg.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9llr9amg.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9llr9amg.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"Even Odd Counter\n    \n    :param num: int\n    :return:\
    \ Tuple{Int64, Int64}\n    \"\"\"\n    @assert typeof(num) == Int64 \"Parameter\
    \ num must be an integer.\"\n    even::Int64 = 0\n    odd::Int64 = 0\n    for\
    \ d in string(num)\n        if parse(Int64, d) % 2 == 0\n            even += 1\n\
    \        else\n            odd += 1\n        end\n    end\n    return even, odd\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpw0zpibat.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpw0zpibat.jl:17\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpw0zpibat.jl:31 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpw0zpibat.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpw0zpibat.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpw0zpibat.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpw0zpibat.jl:34 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpw0zpibat.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpw0zpibat.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpw0zpibat.jl:17\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpw0zpibat.jl:35 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i = 0:length(num) -\
    \ 1\n        if num[i] % 2 == 0\n            even_count += 1\n        else\n \
    \           odd_count += 1\n        end\n    end\n    (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpexp43vx3.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  BoundsError\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./number.jl:98 [inlined]\\n   [2] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpexp43vx3.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpexp43vx3.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpexp43vx3.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpexp43vx3.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  BoundsError\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./number.jl:98 [inlined]\\n   [2] even_odd_count(num::Int64)\\n     @\
    \ Main /tmp/tmpexp43vx3.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpexp43vx3.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpexp43vx3.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpexp43vx3.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  BoundsError\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./number.jl:98 [inlined]\\n   [2] even_odd_count(num::Int64)\\n     @\
    \ Main /tmp/tmpexp43vx3.jl:11\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpexp43vx3.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpexp43vx3.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpexp43vx3.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  BoundsError\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./number"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for i in digits(num)\n        if i%2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i\
    \ % 2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = []\n    odds = []\n    if num < 0\n        num = abs(num)\n\
    \    end\n    for i in digits(num)\n        if i % 2 == 0\n            push!(evens,\
    \ i)\n        else\n            push!(odds, i)\n        end\n    end\n    return\
    \ (length(evens), length(odds))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    while num > 0\n        num %\
    \ 2 == 0 ? even_count += 1 : odd_count += 1\n        num \xF7= 10\n    end\n \
    \   return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprhy8lkvf.jl:21\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhy8lkvf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhy8lkvf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprhy8lkvf.jl:24\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhy8lkvf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhy8lkvf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprhy8lkvf.jl:25\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhy8lkvf.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhy8lkvf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprhy8lkvf.jl:26\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhy8lkvf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhy8lkvf.jl:19\ntest set: Test\
    \ Failed at /tmp/tmprhy8lkvf.jl:27\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhy8lkvf.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    for i in num\n       \
    \ if isodd(i)\n            odd += 1\n        elseif iseven(i)\n            even\
    \ += 1\n        end\n    end\n    return even, odd\nend\neven_odd_count(-12)\n\
    even_odd_count(123)\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9eitt3fl.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eitt3fl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eitt3fl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9eitt3fl.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eitt3fl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eitt3fl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9eitt3fl.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eitt3fl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eitt3fl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9eitt3fl.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eitt3fl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eitt3fl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9eitt3fl.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9eitt3fl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in num:\n        if i in [0, 2,\
    \ 4, 6, 8]\n            even = even + 1\n        else\n            odd = odd +\
    \ 1\n        end\n    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1zj2thv4.jl:11\nin expression starting at\
    \ /tmp/tmp1zj2thv4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in string(num)\n        if i ==\
    \ \"-\"\n            continue\n        end\n        if parse(Int64, i) % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpuoimj0rl.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpuoimj0rl.jl:14\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpuoimj0rl.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpuoimj0rl.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpuoimj0rl.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpuoimj0rl.jl:14\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpuoimj0rl.jl:31 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpuoimj0rl.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpuoimj0rl.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpuoimj0rl.jl:14\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpuoimj0rl.jl:32 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # Your code here\n    even = 0\n    odd = 0\n    for d in digits(num)\n\
    \        if d % 2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    num = abs(num)\n    while\
    \ num != 0\n        if num % 2 == 0\n            even += 1\n        else\n   \
    \         odd += 1\n        end\n        num = num \xF7 10\n    end\n    return\
    \ (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpknmwcmww.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpknmwcmww.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpknmwcmww.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknmwcmww.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # your code here\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    while num > 0\n        if mod(num,\
    \ 10) % 2 == 0\n            evens += 1\n        else\n            odds += 1\n\
    \        end\n        num = div(num, 10)\n    end\n    return evens, odds\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8f0ntfvk.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8f0ntfvk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8f0ntfvk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8f0ntfvk.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8f0ntfvk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8f0ntfvk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8f0ntfvk.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8f0ntfvk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8f0ntfvk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8f0ntfvk.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8f0ntfvk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8f0ntfvk.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8f0ntfvk.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8f0ntfvk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            even_count += 1\n        else\n      \
    \      odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    if num == 0\n        return (1, 0)\n    end\n    \n    even\
    \ = 0\n    odd = 0\n    \n    for i in digits(num)\n        if iseven(i)\n   \
    \         even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    \n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    negative = false\n    if\
    \ num < 0\n        negative = true\n        num = -num\n    end\n    while num\
    \ > 0\n        digit = num % 10\n        if digit % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = num\
    \ // 10\n    end\n    if negative\n        even_count += 1\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzw4275ib.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzw4275ib.jl:16\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpzw4275ib.jl:34 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpzw4275ib.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpzw4275ib.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzw4275ib.jl:16\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpzw4275ib.jl:35 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpzw4275ib.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpzw4275ib.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num > 0\n        if mod(num, 10)\
    \ % 2 == 0\n            even += 1\n        else\n            odd += 1\n      \
    \  end\n        num = div(num, 10)\n    end\n    return (even, odd)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpis9g6igu.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis9g6igu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis9g6igu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpis9g6igu.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis9g6igu.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis9g6igu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpis9g6igu.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis9g6igu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis9g6igu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpis9g6igu.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis9g6igu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis9g6igu.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpis9g6igu.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpis9g6igu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    while num != 0\n        if num % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    \
    \    num = div(num, 10)\n    end\n    return even, odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzwibcy7_.jl:31\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwibcy7_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwibcy7_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwibcy7_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    for i in num\n        if\
    \ (i%2 == 0)\n            even_count += 1\n        else \n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxpbbbzlu.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpbbbzlu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpbbbzlu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxpbbbzlu.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpbbbzlu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpbbbzlu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxpbbbzlu.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpbbbzlu.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpbbbzlu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxpbbbzlu.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpbbbzlu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpbbbzlu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxpbbbzlu.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpbbbzlu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for i in string(num)\n        if parse(Int64,\
    \ i) % 2 == 0\n            even += 1\n        else\n            odd += 1\n   \
    \     end\n    end\n    (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpbb1ptsh4.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpbb1ptsh4.jl:10\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbb1ptsh4.jl:24 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbb1ptsh4.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpbb1ptsh4.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpbb1ptsh4.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbb1ptsh4.jl:27 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbb1ptsh4.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpbb1ptsh4.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpbb1ptsh4.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbb1ptsh4.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    abs_num = abs(num)\n   \
    \ while abs_num != 0\n        if abs_num % 2 == 0\n            even_count += 1\n\
    \        else\n            odd_count += 1\n        end\n        abs_num = floor(abs_num\
    \ / 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2fi1bt4j.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fi1bt4j.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fi1bt4j.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2fi1bt4j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    while num != 0\n       \
    \ if num % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n        num = num/10\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkd0og49p.jl:25\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd0og49p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd0og49p.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd0og49p.jl:26\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 325) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd0og49p.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd0og49p.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd0og49p.jl:27\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd0og49p.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd0og49p.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd0og49p.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd0og49p.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd0og49p.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd0og49p.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkd0og49p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in string(num)\n\
    \        if iseven(parse(Int64, digit))\n            even_count += 1\n       \
    \ else\n            odd_count += 1\n        end\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmp20mjhqyl.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp20mjhqyl.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp20mjhqyl.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp20mjhqyl.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp20mjhqyl.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp20mjhqyl.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp20mjhqyl.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp20mjhqyl.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp20mjhqyl.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp20mjhqyl.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp20mjhqyl.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in num:\n        if i % 2 ==\
    \ 0:\n            evens += 1\n        else:\n            odds += 1\n    end\n\
    \    return evens, odds\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprn_jl7f8.jl:11\nin expression starting at\
    \ /tmp/tmprn_jl7f8.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"\n    number of even and odd digits of a given number\n \
    \   \"\"\"\n    even, odd = 0, 0\n    n = abs(num)\n    while n > 0\n        if\
    \ rem(n,10) % 2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n        n = div(n,10)\n    end\n    return (even, odd)\nend\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7avtn71t.jl:36\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7avtn71t.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7avtn71t.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7avtn71t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for digit in string(num)\n  \
    \      digit = parse(Int64, digit)\n        if mod(digit, 2) == 0\n          \
    \  even_count += 1\n        else\n            odd_count += 1\n        end\n  \
    \  end\n    return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpbykczpo3.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpbykczpo3.jl:10\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbykczpo3.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbykczpo3.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpbykczpo3.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpbykczpo3.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbykczpo3.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbykczpo3.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpbykczpo3.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpbykczpo3.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbykczpo3.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num < 0\n        num\
    \ = -num\n    end\n    while num != 0\n        digit = num % 10\n        if digit\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num = num // 10\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8n5bzd6i.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp8n5bzd6i.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp8n5bzd6i.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp8n5bzd6i.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8n5bzd6i.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp8n5bzd6i.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp8n5bzd6i.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp8n5bzd6i.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8n5bzd6i.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0;\n    odds = 0;\n    for i in digits(num)\n        if\
    \ i%2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (even_count, odd_count) = (0, 0)\n    if num == 0\n        return\
    \ (1, 0)\n    end\n    if num < 0\n        num = abs(num)\n    end\n    while\
    \ num != 0\n        if num % 2 == 0\n            even_count += 1\n        else\n\
    \            odd_count += 1\n        end\n        num = num \xF7 10\n    end\n\
    \    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for c in num |> abs |> Int64 |> digits\n\
    \        if c % 2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0 \n        num = -num\n    end\n    even_count = 0\n\
    \    odd_count = 0\n    for digit in int2digits(num)\n        if digit % 2 ==\
    \ 0\n            even_count += 1\n        else\n            odd_count += 1\n \
    \       end\n    end\n    return even_count, odd_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2om5rqcg.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: int2digits\
    \ not defined\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main\
    \ /tmp/tmp2om5rqcg.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2om5rqcg.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2om5rqcg.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2om5rqcg.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: int2digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp2om5rqcg.jl:13\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2om5rqcg.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2om5rqcg.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2om5rqcg.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: int2digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp2om5rqcg.jl:13\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2om5rqcg.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2om5rqcg.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp2om5rqcg.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  UndefVarError: int2digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp2om5rqcg.jl:13\\n   [2] "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n     if num == 0\n        return (1, 0)\n    end\n    even_count =\
    \ 0\n    odd_count = 0\n    if num < 0\n        num = -num\n    end\n    while\
    \ num > 0\n        digit = num % 10\n        if digit % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = num\
    \ // 10\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpckq16_s0.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpckq16_s0.jl:17\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpckq16_s0.jl:32 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpckq16_s0.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpckq16_s0.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpckq16_s0.jl:17\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpckq16_s0.jl:33 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpckq16_s0.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpckq16_s0.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    ecount::Int64 = 0;\n    ocount::Int64 = 0;\n    for i in 1:length(string(num))\n\
    \        if parse(Int64,string(num)[i]) % 2 == 0\n            ecount += 1\n  \
    \      else\n            ocount += 1\n        end\n    end\n    return (ecount,\
    \ ocount)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmp_ialjx_l.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp_ialjx_l.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp_ialjx_l.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp_ialjx_l.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp_ialjx_l.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp_ialjx_l.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp_ialjx_l.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp_ialjx_l.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp_ialjx_l.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp_ialjx_l.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp_ialjx_l.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for digit in digits(num)\n        if digit\
    \ % 2 == 0\n            even += 1\n        else\n            odd += 1\n      \
    \  end\n    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    count_even, count_odd = 0, 0\n    for i in num.digits(base=10)\n\
    \        if i % 2 == 0\n            count_even += 1\n        else\n          \
    \  count_odd += 1\n        end\n    end\n    return count_even, count_odd\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg6lmdkfs.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  type Int64 has no field\
    \ digits\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpg6lmdkfs.jl:9\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpg6lmdkfs.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpg6lmdkfs.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg6lmdkfs.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  type Int64 has no field digits\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpg6lmdkfs.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpg6lmdkfs.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpg6lmdkfs.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg6lmdkfs.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  type Int64 has no field digits\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpg6lmdkfs.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpg6lmdkfs.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpg6lmdkfs.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg6lmdkfs.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  typ"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in string(num)\n        if parse(Int64,\
    \ i) % 2 == 0\n            even += 1\n        else\n            odd += 1\n   \
    \     end\n    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpuykc8a0o.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpuykc8a0o.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpuykc8a0o.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpuykc8a0o.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpuykc8a0o.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpuykc8a0o.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpuykc8a0o.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpuykc8a0o.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpuykc8a0o.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpuykc8a0o.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpuykc8a0o.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return (num2digits(abs(num)).count(x -> x % 2 == 0), num2digits(abs(num)).count(x\
    \ -> x % 2 != 0))\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxrf5wf54.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: num2digits\
    \ not defined\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main\
    \ /tmp/tmpxrf5wf54.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxrf5wf54.jl:15 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxrf5wf54.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpxrf5wf54.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: num2digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpxrf5wf54.jl:8\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxrf5wf54.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxrf5wf54.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpxrf5wf54.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: num2digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpxrf5wf54.jl:8\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpxrf5wf54.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxrf5wf54.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpxrf5wf54.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  UndefVarError: num2digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpxrf5wf54.jl:8\\n   [2]\
    \ macr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    if num > 0\n        for i in num\n\
    \            if mod(i, 2) == 0\n                evens += 1\n            else\n\
    \                odds += 1\n            end\n        end\n    elseif num < 0\n\
    \        for i in num*-1\n            if mod(i, 2) == 0\n                evens\
    \ += 1\n            else\n                odds += 1\n            end\n       \
    \ end\n    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpu7lstsnt.jl:35\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu7lstsnt.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu7lstsnt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpu7lstsnt.jl:36\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu7lstsnt.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu7lstsnt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpu7lstsnt.jl:37\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu7lstsnt.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu7lstsnt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpu7lstsnt.jl:38\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu7lstsnt.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu7lstsnt.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpu7lstsnt.jl:40\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu7lstsnt.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in num\n        if\
    \ (i % 2 == 0)\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxowhlo30.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxowhlo30.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxowhlo30.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxowhlo30.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxowhlo30.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxowhlo30.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxowhlo30.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxowhlo30.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxowhlo30.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxowhlo30.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxowhlo30.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxowhlo30.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxowhlo30.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxowhlo30.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    x = 0\n    y = 0\n    for i = 1:length(string(num))\n        x\
    \ += iseven(parse(Int64, string(num)[i]))\n        y += isodd(parse(Int64, string(num)[i]))\n\
    \    end\n    return (x, y)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmp8wbelqd3.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp8wbelqd3.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp8wbelqd3.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp8wbelqd3.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp8wbelqd3.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp8wbelqd3.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp8wbelqd3.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp8wbelqd3.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp8wbelqd3.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp8wbelqd3.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp8wbelqd3.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    evens = 0\n  \
    \  odds = 0\n    while num != 0\n        rem = num % 10\n        if rem % 2 ==\
    \ 0\n            evens += 1\n        else\n            odds += 1\n        end\n\
    \        num = num / 10\n    end\n    return (evens, odds)\nend\nprintln(even_odd_count(-12))\n\
    println(even_odd_count(123))\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "(1, 324)\n(0, 326)\ntest set: Test Failed at /tmp/tmpt7cgdu4z.jl:31\n \
    \ Expression: candidate(7) == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7cgdu4z.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7cgdu4z.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpt7cgdu4z.jl:32\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 325) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7cgdu4z.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7cgdu4z.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpt7cgdu4z.jl:33\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7cgdu4z.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7cgdu4z.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpt7cgdu4z.jl:34\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt7cgdu4z.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt7cgdu4z.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpt7cgdu4z.jl:35\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt7cgdu4z.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for number in numbers(num)\n\
    \        if number % 2 == 0\n            even_count += 1\n        else\n     \
    \       odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1d1_6ox5.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: numbers\
    \ not defined\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main\
    \ /tmp/tmp1d1_6ox5.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1d1_6ox5.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1d1_6ox5.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp1d1_6ox5.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: numbers not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp1d1_6ox5.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1d1_6ox5.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1d1_6ox5.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp1d1_6ox5.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: numbers not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp1d1_6ox5.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1d1_6ox5.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1d1_6ox5.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp1d1_6ox5.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  UndefVarError: numbers not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp1d1_6ox5.jl:10\\n   [2]\
    \ macro expans"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odds, evens = 0, 0\n    for n in collect(1:abs(num))\n        if\
    \ mod(n, 2) == 0\n            evens += 1\n        else\n            odds += 1\n\
    \        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqbvii87r.jl:23\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (3, 4) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbvii87r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbvii87r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqbvii87r.jl:24\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (39, 39) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbvii87r.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbvii87r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqbvii87r.jl:25\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1726, 1726) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqbvii87r.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbvii87r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqbvii87r.jl:26\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (173105, 173106) == (3, 3)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqbvii87r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqbvii87r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqbvii87r.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (172910, 172911) == (3, 3)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbvii87r.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    even_count = 0\n\
    \    odd_count = 0\n    while num != 0\n        if num % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens, odds = 0, 0\n    for digit in digits(num)\n        if mod(digit,\
    \ 2) == 0\n            evens += 1\n        else\n            odds += 1\n     \
    \   end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for digit in digits(num)\n\
    \        if mod(digit, 2) == 0\n            even_count += 1\n        else\n  \
    \          odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    function __even_odd_count(num::Int64, even::Int64, odd::Int64)::Tuple{Int64,\
    \ Int64}\n        if num == 0\n            return (even, odd)\n        else\n\
    \            digit = num % 10\n            if digit % 2 == 0\n               \
    \ return __even_odd_count(num//10, even+1, odd)\n            else\n          \
    \      return __even_odd_count(num//10, even, odd+1)\n            end\n      \
    \  end\n    end\n    return __even_odd_count(num, 0, 0)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evencount = 0\n    oddcount = 0\n    while num > 0\n        if\
    \ num % 2 == 0\n            evencount += 1\n        else\n            oddcount\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    return (evencount,\
    \ oddcount)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8g47nq5m.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g47nq5m.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g47nq5m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8g47nq5m.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g47nq5m.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g47nq5m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8g47nq5m.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g47nq5m.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g47nq5m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8g47nq5m.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g47nq5m.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g47nq5m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp8g47nq5m.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8g47nq5m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # calculate the number of even and odd digits\n    # return a tuple\
    \ with number of even and odd digits respectively\n    even::Int64 = 0\n    odd::Int64\
    \ = 0\n    while num > 0\n        if num % 2 == 0\n            even += 1\n   \
    \     else\n            odd += 1\n        end\n        num /= 10\n    end\n  \
    \  return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq22c09uk.jl:27\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq22c09uk.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq22c09uk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq22c09uk.jl:28\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq22c09uk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq22c09uk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq22c09uk.jl:29\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq22c09uk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq22c09uk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq22c09uk.jl:30\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq22c09uk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq22c09uk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq22c09uk.jl:31\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq22c09uk.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_str = string(num)\n    even_count = 0\n    odd_count = 0\n\
    \    for x in num_str\n        if parse(Int64, x) % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n    end\n    return\
    \ (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmp1_u14p1u.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp1_u14p1u.jl:12\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp1_u14p1u.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp1_u14p1u.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp1_u14p1u.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp1_u14p1u.jl:12\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp1_u14p1u.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp1_u14p1u.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp1_u14p1u.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp1_u14p1u.jl:12\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp1_u14p1u.jl:30 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odds = 0\n    evens = 0\n    while num != 0\n        #get the remainder\
    \ of dividing num by 10 and add the absolute value to either evens or odds\n \
    \       #update num by dividing it by 10\n        odds += abs(rem(num, 10)) %\
    \ 2\n        evens += abs(rem(num, 10)) % 2 == 0\n        num = floor(Int64, num\
    \ / 10)\n    end\n    return evens, odds\nend\neven_odd_count(-12)\neven_odd_count(123)\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in digits(num)\n       \
    \ if digit % 2 == 0\n            evens += 1\n        else\n            odds +=\
    \ 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n   \n    return (sum([1 for i in digits(num) if rem(i, 2) == 0]), \n\
    \        sum([1 for i in digits(num) if rem(i, 2) == 1]))\n    \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr8gt1nfh.jl:19\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8gt1nfh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8gt1nfh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpr8gt1nfh.jl:22\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (3, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8gt1nfh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8gt1nfh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpr8gt1nfh.jl:24\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (2, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8gt1nfh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8gt1nfh.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr8gt1nfh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return (length(filter(x -> x % 2 == 0, digits(num))), \n      \
    \      length(filter(x -> x % 2 != 0, digits(num))))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = abs(num)\n    end\n    e, o = 0, 0\n\
    \    while num > 0\n        if num % 2 == 0\n            e += 1\n        else\n\
    \            o += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (e, o)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0tvz1ozo.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0tvz1ozo.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0tvz1ozo.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0tvz1ozo.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for digit in num:\n        if digit % 2 ==\
    \ 0:\n            even += 1\n        else:\n            odd += 1\n    end\n  \
    \  return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_p043e9s.jl:10\nin expression starting at\
    \ /tmp/tmp_p043e9s.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = odds = 0\n    for i in string(num)\n        if i in ['0',\
    \ '2', '4', '6', '8']\n            evens += 1\n        else\n            odds\
    \ += 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzl2k2gf3.jl:24\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 2) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzl2k2gf3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzl2k2gf3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzl2k2gf3.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (3, 4) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzl2k2gf3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzl2k2gf3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzl2k2gf3.jl:28\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (1, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzl2k2gf3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzl2k2gf3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzl2k2gf3.jl:29\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (2, 4) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzl2k2gf3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzl2k2gf3.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzl2k2gf3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0 \n    for i in digits(num)\n        if i % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odds = 0\n    evens = 0\n    while num > 0\n        digit = num\
    \ % 10\n        if digit % 2 == 0\n            evens += 1\n        else\n    \
    \        odds += 1\n        end\n        num = num / 10\n    end\n    return evens,\
    \ odds\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6hsl1br7.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hsl1br7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hsl1br7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6hsl1br7.jl:27\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hsl1br7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hsl1br7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6hsl1br7.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hsl1br7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hsl1br7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6hsl1br7.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6hsl1br7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6hsl1br7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6hsl1br7.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6hsl1br7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_list = []\n    odd_list = []\n    \n    for i in collect(digits(num))\n\
    \        if i % 2 == 0\n            push!(even_list, i)\n        else\n      \
    \      push!(odd_list, i)\n        end\n    end\n    \n    return (length(even_list),\
    \ length(odd_list))\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_num = 0\n    odd_num = 0\n    while num > 0\n        remainder\
    \ = num % 10\n        if remainder % 2 == 0\n            even_num += 1\n     \
    \   else\n            odd_num += 1\n        end\n        num = num / 10\n    end\n\
    \    return (even_num, odd_num)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpikx73sld.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikx73sld.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikx73sld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpikx73sld.jl:27\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikx73sld.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikx73sld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpikx73sld.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikx73sld.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikx73sld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpikx73sld.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikx73sld.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikx73sld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpikx73sld.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpikx73sld.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd = 0\n    even = 0\n    for nums in abs(num)\n        if nums%2\
    \ == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpugg3sskp.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpugg3sskp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpugg3sskp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpugg3sskp.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpugg3sskp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpugg3sskp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpugg3sskp.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpugg3sskp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpugg3sskp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpugg3sskp.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpugg3sskp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpugg3sskp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpugg3sskp.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugg3sskp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    if num == 0\n        return 0,\
    \ 0\n    end\n    while num != 0\n        curr_digit = num % 10\n        if curr_digit\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num = num \xF7 10\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo1561q5q.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1561q5q.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1561q5q.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo1561q5q.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for digit in digits(num)\n        if\
    \ digit % 2 == 0\n            even += 1\n        else\n            odd += 1\n\
    \        end\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return length(filter(x -> x % 2 == 0, digits(num))), length(filter(x\
    \ -> x % 2 != 0, digits(num)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for c in string(num)\n \
    \       c = parse(Int64, c)\n        if c % 2 == 0\n            even_count +=\
    \ 1\n        else\n            odd_count += 1\n        end\n    end\n    return\
    \ (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmppgkbuag3.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmppgkbuag3.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppgkbuag3.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmppgkbuag3.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmppgkbuag3.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmppgkbuag3.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppgkbuag3.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmppgkbuag3.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmppgkbuag3.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmppgkbuag3.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppgkbuag3.jl:30 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    x, y = 0, 0\n    for i in num\n        if i % 2 == 0\n        \
    \    x += 1\n        else\n            y += 1\n        end\n    end\n    return\
    \ x, y\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb81oekf0.jl:24\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb81oekf0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb81oekf0.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb81oekf0.jl:25\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb81oekf0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb81oekf0.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb81oekf0.jl:26\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb81oekf0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb81oekf0.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb81oekf0.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb81oekf0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb81oekf0.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb81oekf0.jl:29\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb81oekf0.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = odds = 0\n    for i in string(num)\n        if i in \"\
    02468\"\n            evens += 1\n        else\n            odds += 1\n       \
    \ end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\n\
    candidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgwh79ff7.jl:24\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 2) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwh79ff7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwh79ff7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgwh79ff7.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (3, 4) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwh79ff7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwh79ff7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgwh79ff7.jl:28\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (1, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwh79ff7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwh79ff7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgwh79ff7.jl:29\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (2, 4) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwh79ff7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwh79ff7.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgwh79ff7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num = abs(num)\n    while\
    \ num > 0\n        dig = num % 10\n        if dig % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1quhtwdn.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1quhtwdn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1quhtwdn.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1quhtwdn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    num = abs(num)\n\
    \    even = 0\n    odd = 0\n    while num > 0\n        even += 1*isodd(num%10)\n\
    \        odd += 1*iseven(num%10)\n        num = num \xF7 10\n    end\n    return\
    \ (even, odd)\nend\neven_odd_count(-12)\neven_odd_count(123)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5tg7rn7o.jl:28\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (1, 0) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tg7rn7o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tg7rn7o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp5tg7rn7o.jl:33\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tg7rn7o.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tg7rn7o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp5tg7rn7o.jl:34\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (3, 2) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tg7rn7o.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tg7rn7o.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5tg7rn7o.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in digits(num)\n \
    \       if i % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    odd = 0\n    even = 0\n    while num >= 1\n\
    \        digit = num % 10\n        if digit % 2 == 0\n            even += 1\n\
    \        else\n            odd += 1\n        end\n        num = num \xF7 10\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpubpxxiec.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpubpxxiec.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpubpxxiec.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubpxxiec.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i\
    \ % 2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    @assert num \u2264 99999999 & num \u2265 -99999999  \"num must\
    \ be within the specified range\"\n    even, odd = 0, 0\n    abs_num = abs(num)\n\
    \    while abs_num > 0\n        if abs_num % 2 == 0\n            even += 1\n \
    \       else\n            odd += 1\n        end\n        abs_num = abs_num \xF7\
    \ 10\n    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv91611vf.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(3452) == (2, 2)\\n  AssertionError: num\
    \ must be within the specified range\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpv91611vf.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv91611vf.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv91611vf.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpv91611vf.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  AssertionError: num must be within the specified\
    \ range\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpv91611vf.jl:8\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv91611vf.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv91611vf.jl:25\\ntest set:\
    \ Test Failed at /tmp/tmpv91611vf.jl:33\\n  Expression: candidate(0) == (1, 0)\\\
    n   Evaluated: (0, 0) == (1, 0)'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i\
    \ % 2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_digits = 0\n    even_digits = 0\n    num::Int64 = abs(num)\n\
    \    while num > 0\n        digit = num % 10\n        if digit % 2 == 0\n    \
    \        even_digits += 1\n        else\n            odd_digits += 1\n       \
    \ end\n        num = num \xF7 10\n    end\n    return (even_digits, odd_digits)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0vb_8b_u.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0vb_8b_u.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0vb_8b_u.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0vb_8b_u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    while num != 0\n        remainder\
    \ = num % 10\n        if remainder % 2 == 0\n            even_count += 1\n   \
    \     else\n            odd_count += 1\n        end\n        num = num \xF7 10\n\
    \    end\n    return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3l_hg2gd.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3l_hg2gd.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3l_hg2gd.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3l_hg2gd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    n_even = 0\n \
    \   n_odd = 0\n    if num > 0\n        while num > 0\n            if rem(num,\
    \ 10) % 2 == 0\n                n_even += 1\n            else\n              \
    \  n_odd += 1\n            end\n            num = div(num, 10)\n        end\n\
    \    else\n        return even_odd_count(-num)\n    end\n    return (n_even, n_odd)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    while num > 0\n        digit = num\
    \ % 10\n        if digit % 2 == 0\n            evens += 1\n        else\n    \
    \        odds += 1\n        end\n        num = num / 10\n    end\n    return evens,\
    \ odds\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjyoanav0.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjyoanav0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjyoanav0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjyoanav0.jl:27\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjyoanav0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjyoanav0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjyoanav0.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjyoanav0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjyoanav0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjyoanav0.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjyoanav0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjyoanav0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjyoanav0.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjyoanav0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_counter = 0\n    odd_counter = 0\n    for c in str(num)\n\
    \        if c == '-'\n            continue\n        end\n        if parse(Int64,\
    \ c) % 2 == 0\n            even_counter += 1\n        else\n            odd_counter\
    \ += 1\n        end\n    end\n    return (even_counter, odd_counter)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprwa4ke5c.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: str not\
    \ defined\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmprwa4ke5c.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprwa4ke5c.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprwa4ke5c.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmprwa4ke5c.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: str not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmprwa4ke5c.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprwa4ke5c.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprwa4ke5c.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmprwa4ke5c.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: str not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmprwa4ke5c.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprwa4ke5c.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprwa4ke5c.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmprwa4ke5c.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  UndefVarError: str not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmprwa4ke5c.jl:10\\n   [2]\
    \ macro expansion\\n     @ /sha"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in string(num)\n \
    \       if i == '-'\n            continue\n        end\n        if parse(Int64,\
    \ i) % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0;\n    odd_count = 0;\n    while num != 0\n     \
    \   rem = num % 10\n        if rem % 2 == 0\n            even_count += 1\n   \
    \     else\n            odd_count += 1\n        end\n        num = floor(num /\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in 1:length(num)\n        if num[i]\
    \ % 2 == 0\n            even += 1\n        else\n            odd += 1\n      \
    \  end\n    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe5fkydok.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5fkydok.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5fkydok.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5fkydok.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5fkydok.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5fkydok.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5fkydok.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5fkydok.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5fkydok.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5fkydok.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5fkydok.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5fkydok.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5fkydok.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5fkydok.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    if num == 0\n        return (0, 0)\n\
    \    end\n    for digit in digits(num)\n        if digit % 2 == 0\n          \
    \  evens += 1\n        else\n            odds += 1\n        end\n    end\n   \
    \ return (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdelmre00.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdelmre00.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdelmre00.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdelmre00.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    e=0\n    o=0\n    x=0\n    while num!=0\n        x=num%10\n   \
    \     if x%2==0\n            e+=1\n        else\n            o+=1\n        end\n\
    \        num=div(num,10)\n    end\n    return (e,o)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp82syyo4_.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82syyo4_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82syyo4_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82syyo4_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"\n    Purpose: Number of even and odd digits respectively.\n\
    \    \"\"\"\n    even = 0\n    odd = 0\n    if num < 0\n        num = -num\n \
    \   end\n    while num > 0\n        if num % 2 == 0\n            even += 1\n \
    \       else\n            odd += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcrz__zpq.jl:38\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcrz__zpq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcrz__zpq.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcrz__zpq.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num != 0\n        if num % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = num // 10\n    end\n    return (even, odd)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjwl0aei4.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] //(x::Rational{Int64}, y::Int64)\\\
    n     @ Base ./rational.jl:66\\n   [4] even_odd_count(num::Int64)\\n     @ Main\
    \ /tmp/tmpjwl0aei4.jl:16\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpjwl0aei4.jl:25 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpjwl0aei4.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpjwl0aei4.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 2 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpjwl0aei4.jl:11\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpjwl0aei4.jl:26 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpjwl0aei4.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpjwl0aei4.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inline"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num, even_count, odd_count = abs(num), 0, 0\n    while num > 0\n\
    \        r = rem(num, 10)\n        if r % 2 == 0\n            even_count += 1\n\
    \        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return even_count, odd_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_d96ckww.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_d96ckww.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_d96ckww.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_d96ckww.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num == 0\n        return\
    \ (1, 0)\n    end\n    for n in string(abs(num))\n        if n == '0' || n ==\
    \ '2' || n == '4' || n == '6' || n == '8'\n            even_count += 1\n     \
    \   elseif n == '1' || n == '3' || n == '5' || n == '7' || n == '9'\n        \
    \    odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in digits(num)\n        if i %\
    \ 2 == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    for dig in digits(num)\n\
    \        dig % 2 == 0 ? even += 1 : odd += 1\n    end\n    (even, odd)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    ndigits = floor(log10(abs(num))) + 1\n    even_count, odd_count\
    \ = 0, 0\n    for i = 0:ndigits-1\n        digit = abs(num) % 10\n        if digit\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num = div(num, 10)\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqgr0973a.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgr0973a.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgr0973a.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqgr0973a.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_even, num_odd = 0, 0\n    while num != 0\n        r = num %\
    \ 10\n        if r % 2 == 0\n            num_even += 1\n        else\n       \
    \     num_odd += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (num_even, num_odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe8uqp_ql.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe8uqp_ql.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe8uqp_ql.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe8uqp_ql.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num >= 1\n        if num % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = div(num, 10)\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpf8vtzkjj.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf8vtzkjj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf8vtzkjj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf8vtzkjj.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf8vtzkjj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf8vtzkjj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf8vtzkjj.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf8vtzkjj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf8vtzkjj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf8vtzkjj.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf8vtzkjj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf8vtzkjj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf8vtzkjj.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf8vtzkjj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    e, o = 0, 0\n    while num != 0\n        if num % 2 == 0\n    \
    \        e += 1\n        else\n            o += 1\n        end\n        num =\
    \ floor(num / 10)\n    end\n    return (e, o)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_num = 0\n    odd_num = 0\n    for digit in digits(num)\n \
    \       if digit % 2 == 0\n            even_num += 1\n        else\n         \
    \   odd_num += 1\n        end\n    end\n    return (even_num, odd_num)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    oddCount = 0\n    evenCount = 0\n    for i = 1:length(num)\n  \
    \      if(num[i] % 2 == 0)\n            evenCount = evenCount + 1\n        else\n\
    \            oddCount = oddCount + 1\n        end\n    end\n    return (evenCount,\
    \ oddCount)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjgj_mhr8.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgj_mhr8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgj_mhr8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjgj_mhr8.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgj_mhr8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgj_mhr8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjgj_mhr8.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgj_mhr8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgj_mhr8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjgj_mhr8.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgj_mhr8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgj_mhr8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjgj_mhr8.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjgj_mhr8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  even, odd = 0, 0\n  while num != 0\n    digit = num % 10\n    if\
    \ digit % 2 == 0\n      even += 1\n    else\n      odd += 1\n    end\n    num\
    \ = div(num, 10)\n  end\n  return even, odd\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmjqttfhu.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmjqttfhu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmjqttfhu.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmjqttfhu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for elem in string(num)\n        if\
    \ parse(Int64, elem) % 2 == 0\n            even += 1\n        else\n         \
    \   odd += 1\n        end\n    end\n    return (even, odd)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b\"test set: Error During Test at /tmp/tmps3y4r_8j.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmps3y4r_8j.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmps3y4r_8j.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmps3y4r_8j.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmps3y4r_8j.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmps3y4r_8j.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmps3y4r_8j.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmps3y4r_8j.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmps3y4r_8j.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmps3y4r_8j.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmps3y4r_8j.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_digit_counter = 0\n    odd_digit_counter = 0\n    tmp = abs(num)\n\
    \    while tmp > 0\n        if (mod(tmp, 10) % 2) == 0\n            even_digit_counter\
    \ += 1\n        else\n            odd_digit_counter += 1\n        end\n      \
    \  tmp = div(tmp, 10)\n    end\n    return (even_digit_counter, odd_digit_counter)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplujgkl44.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplujgkl44.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplujgkl44.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplujgkl44.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_count = 0\n    odd_count = 0\n    \n    if num < 0\n\
    \        num = -num\n    end\n    while num > 0\n        digit = num % 10\n  \
    \      if digit % 2 == 0\n            even_count += 1\n        else\n        \
    \    odd_count += 1\n        end\n        num = floor(Int64, num / 10)\n    end\n\
    \    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgb1su5s_.jl:38\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgb1su5s_.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgb1su5s_.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgb1su5s_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:1:string(num).length\n\
    \        if num % 2 == 0\n            even_count = even_count + 1\n        else\n\
    \            odd_count = odd_count + 1\n        end\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsmanb90w.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  type String has no field\
    \ length\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpsmanb90w.jl:10\\n   [3]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsmanb90w.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsmanb90w.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpsmanb90w.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  type String has no field length\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpsmanb90w.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsmanb90w.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsmanb90w.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpsmanb90w.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  type String has no field length\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpsmanb90w.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsmanb90w.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsmanb90w.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpsmanb90w.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in num ==> abs(num)\n      \
    \  if i % 2 == 0\n            evens += 1\n        else\n            odds += 1\n\
    \        end\n    end\n    return (evens, odds)\nend\n    \n    \n    \nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"==\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ga2anvz.jl:10\nin expression starting at\
    \ /tmp/tmp_ga2anvz.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_digits = 0\n    odd_digits = 0\n    for digit in string(num)\n\
    \        if(digit != \"-\" && parse(Int64, digit) % 2 == 0)\n            even_digits\
    \ += 1\n        elseif(digit != \"-\")\n            odd_digits += 1\n        end\n\
    \    end\n    return (even_digits, odd_digits)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpl_2oddfh.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpl_2oddfh.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpl_2oddfh.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpl_2oddfh.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpl_2oddfh.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpl_2oddfh.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpl_2oddfh.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpl_2oddfh.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpl_2oddfh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpl_2oddfh.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpl_2oddfh.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0 \n        num = -num\n    end\n    e_num = 0\n    o_num\
    \ = 0\n    for i in num:to_s()\n        if i == '2' || i == '4' || i == '6' ||\
    \ i == '8' || i == '0'\n            e_num += 1\n        else\n            o_num\
    \ += 1\n        end\n    end\n    return (e_num, o_num)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzmam5n2t.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: to_s not\
    \ defined\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzmam5n2t.jl:13\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzmam5n2t.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzmam5n2t.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzmam5n2t.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: to_s not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzmam5n2t.jl:13\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzmam5n2t.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzmam5n2t.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzmam5n2t.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: to_s not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzmam5n2t.jl:13\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzmam5n2t.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzmam5n2t.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzmam5n2t.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  UndefVarError: to_s not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzmam5n2t.jl:13\\n   [2]\
    \ macro expansion\\n     @ "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even, odd = 0, 0\n    \n    for i in range(0, num, 10)\n\
    \        if i%2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n    end\n    \n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp626yczu2.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (1, 9) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp626yczu2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp626yczu2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp626yczu2.jl:27\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (4, 6) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp626yczu2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp626yczu2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp626yczu2.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (2, 8) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp626yczu2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp626yczu2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp626yczu2.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (1, 9) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp626yczu2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp626yczu2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp626yczu2.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (1, 9) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp626yczu2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num_odd = 0\n    num_even = 0\n    for i = 1:length(string(num))\n\
    \        if (parse(Int64, string(num)[i]) % 2 == 0)\n            num_even += 1\n\
    \        else\n            num_odd += 1\n        end\n    end\n    return (num_even,\
    \ num_odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpnpo6pw91.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpnpo6pw91.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpnpo6pw91.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpnpo6pw91.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpnpo6pw91.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpnpo6pw91.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpnpo6pw91.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpnpo6pw91.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpnpo6pw91.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpnpo6pw91.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpnpo6pw91.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i%2\
    \ == 0\n            evens += 1\n        else\n            odds += 1\n        end\n\
    \    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (sum(map(x -> (mod(x, 2) == 0) ? 1 : 0, digits(num))),\n    sum(map(x\
    \ -> (mod(x, 2) == 0) ? 0 : 1, digits(num))))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_count = 0\n    odd_count = 0\n    \n    for i = 1:length(num)\n\
    \        \n        digit = num[i]\n        \n        if mod(digit, 2) == 0\n \
    \           even_count += 1\n        else\n            odd_count += 1\n      \
    \  end\n    end\n    \n    return even_count, odd_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpl9_fpzvn.jl:31\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9_fpzvn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9_fpzvn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl9_fpzvn.jl:32\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9_fpzvn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9_fpzvn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl9_fpzvn.jl:33\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9_fpzvn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9_fpzvn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl9_fpzvn.jl:34\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl9_fpzvn.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl9_fpzvn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpl9_fpzvn.jl:36\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9_fpzvn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = odd = 0\n    for i in string(num)\n        if i in (\"0\"\
    , \"2\", \"4\", \"6\", \"8\")\n            even += 1\n        elseif i in (\"\
    1\", \"3\", \"5\", \"7\", \"9\")\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\neven_odd_count(-12)\neven_odd_count(123)\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp95eeajix.jl:25\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 0) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95eeajix.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95eeajix.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp95eeajix.jl:26\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95eeajix.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95eeajix.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp95eeajix.jl:27\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (0, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95eeajix.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95eeajix.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp95eeajix.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95eeajix.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95eeajix.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp95eeajix.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp95eeajix.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for digit in string(num)\n        if digit\
    \ == '-'\n            next\n        end\n        if digit % 2 == 0\n         \
    \   even += 1\n        else\n            odd += 1\n        end\n    end\n    return\
    \ even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu0m2t67r.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  MethodError: no method\
    \ matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpu0m2t67r.jl:13\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpu0m2t67r.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu0m2t67r.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    evens = 0\n    odds = 0\n    \n    for i in num \n      \
    \  rem = i % 2\n        if rem == 0\n            evens += 1\n        else\n  \
    \          odds += 1\n        end\n    end\n    \n    return evens, odds\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7aryr12s.jl:29\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aryr12s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aryr12s.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp7aryr12s.jl:30\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aryr12s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aryr12s.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp7aryr12s.jl:31\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aryr12s.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aryr12s.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp7aryr12s.jl:32\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7aryr12s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7aryr12s.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp7aryr12s.jl:34\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7aryr12s.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evencount = 0\n    oddcount = 0\n    digits = digits(num)\n   \
    \ for digit in digits\n        digit % 2 == 0 ? evencount += 1 : oddcount += 1\n\
    \    end\n    (evencount, oddcount)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzj87u4fn.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: digits not\
    \ defined\\n  Stacktrace:\\n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzj87u4fn.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzj87u4fn.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzj87u4fn.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzj87u4fn.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzj87u4fn.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzj87u4fn.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzj87u4fn.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzj87u4fn.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzj87u4fn.jl:10\\n   [2]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpzj87u4fn.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpzj87u4fn.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzj87u4fn.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(346211) == (3, 3)\\n  UndefVarError: digits not defined\\n  Stacktrace:\\\
    n   [1] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpzj87u4fn.jl:10\\n   [2]\
    \ macro expansion\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in num\n        if i % 2 ==\
    \ 0\n            evens += 1\n        else\n            odds += 1\n        end\n\
    \    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1a56cna2.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a56cna2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a56cna2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1a56cna2.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a56cna2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a56cna2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1a56cna2.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a56cna2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a56cna2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1a56cna2.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a56cna2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a56cna2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1a56cna2.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1a56cna2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # TODO: Fill in the details of your implementation here\n    if\
    \ num < 0\n        num = -num\n    end\n    even, odd = 0, 0\n    while num >\
    \ 0\n        if num % 2 == 0\n            even += 1\n        else\n          \
    \  odd += 1\n        end\n        num = num // 10\n    end\n    return even, odd\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_7sa3yu0.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] //(x::Rational{Int64}, y::Int64)\\\
    n     @ Base ./rational.jl:66\\n   [4] even_odd_count(num::Int64)\\n     @ Main\
    \ /tmp/tmp_7sa3yu0.jl:19\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp_7sa3yu0.jl:28 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp_7sa3yu0.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp_7sa3yu0.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 2 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp_7sa3yu0.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp_7sa3yu0.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp_7sa3yu0.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp_7sa3yu0.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inline"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    while num != 0\n       \
    \ if abs(num) % 2 == 0\n            even_count += 1\n        else\n          \
    \  odd_count += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm31p630m.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm31p630m.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm31p630m.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm31p630m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (even, odd) = (0, 0)\n    while num != 0\n        digit = num %\
    \ 10\n        num = div(num, 10)\n        if digit % 2 == 0\n            even\
    \ += 1\n        else\n            odd += 1\n        end\n    end\n    return (even,\
    \ odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnso7zavh.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnso7zavh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnso7zavh.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnso7zavh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    num = abs(num)\n    while\
    \ num > 0\n        if (num % 10) % 2 == 0\n            even_count += 1\n     \
    \   else\n            odd_count += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzqvd2xvg.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqvd2xvg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqvd2xvg.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqvd2xvg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in 1:log10(abs(num))+1\n   \
    \     n = (num % 10^i) // 10^(i-1)\n        if n % 2 == 0\n            evens +=\
    \ 1\n        else\n            odds += 1\n        end\n    end\n    return (evens,\
    \ odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd = 0\n    even = 0\n    while num > 0\n        if num % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = trunc(Int64, num / 10)\n    end\n    return (even, odd)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpto9oxcl9.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpto9oxcl9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpto9oxcl9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpto9oxcl9.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpto9oxcl9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpto9oxcl9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpto9oxcl9.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpto9oxcl9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpto9oxcl9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpto9oxcl9.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpto9oxcl9.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpto9oxcl9.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpto9oxcl9.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpto9oxcl9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    if num == 0\n        return (1, 0)\n    end\n    evens =\
    \ 0\n    odds = 0\n    is_neg = false\n    if num < 0\n        is_neg = true\n\
    \        num = abs(num)\n    end\n    while num > 0\n        if num % 2 == 0\n\
    \            evens += 1\n        else\n            odds += 1\n        end\n  \
    \      num = div(num, 10)\n    end\n    return (evens, odds)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  odd_count = even_count = 0\n  for s in string(num)\n    if isodd(parse(Int64,\
    \ s))\n      odd_count += 1\n    else\n      even_count += 1\n    end\n  end\n\
    \  (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmpk9w1lb0j.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpk9w1lb0j.jl:10\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpk9w1lb0j.jl:24 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpk9w1lb0j.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpk9w1lb0j.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpk9w1lb0j.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpk9w1lb0j.jl:27 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpk9w1lb0j.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpk9w1lb0j.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmpk9w1lb0j.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpk9w1lb0j.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    if num < 0\n        num = -num\n    end\n\
    \    while num > 0\n        if num % 2 == 0\n            even += 1\n        else\n\
    \            odd += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp930kq3c6.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp930kq3c6.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp930kq3c6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp930kq3c6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in 1:length(string(num))\n \
    \       if parse(Int64,string(num)[i]) % 2 == 0\n            evens += 1\n    \
    \    else\n            odds += 1\n        end\n    end\n    return (evens, odds)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmput0onj3g.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmput0onj3g.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmput0onj3g.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmput0onj3g.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmput0onj3g.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmput0onj3g.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmput0onj3g.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmput0onj3g.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmput0onj3g.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmput0onj3g.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmput0onj3g.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    num_even, num_odd = 0, 0\n    \n    while num != 0\n    \
    \    if num % 2 == 0\n            num_even += 1\n        else\n            num_odd\
    \ += 1\n        end\n        num = num \xF7 10\n    end\n    return (num_even,\
    \ num_odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpur5o8yha.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpur5o8yha.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpur5o8yha.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpur5o8yha.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    while num != 0\n        if num\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num = div(num, 10)\n    end\n    return even_count,\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3uw6erxa.jl:31\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3uw6erxa.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3uw6erxa.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3uw6erxa.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count = 0\n    even_count = 0\n    abs_num = abs(num)\n   \
    \ while abs_num != 0\n        if mod(abs_num, 10) % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        abs_num\
    \ = div(abs_num, 10)\n    end\n    return (even_count, odd_count)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52vi4ccx.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52vi4ccx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52vi4ccx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52vi4ccx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens, odds = 0, 0\n    for i in digits(num)\n        if i%2 ==\
    \ 0\n            evens += 1\n        else\n            odds += 1\n        end\n\
    \    end\n    (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # Base case: \n    if num == 0\n        return (0, 0)\n    end\n\
    \    \n    # Recursive case:\n    last_digit = mod(num, 10)\n    even_odd_count_so_far\
    \ = even_odd_count(div(num, 10))\n    if last_digit % 2 == 0\n        new_even_count\
    \ = even_odd_count_so_far[1] + 1\n        new_odd_count = even_odd_count_so_far[2]\n\
    \    else\n        new_even_count = even_odd_count_so_far[1]\n        new_odd_count\
    \ = even_odd_count_so_far[2] + 1\n    end\n    return (new_even_count, new_odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr3o_h8og.jl:37\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr3o_h8og.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr3o_h8og.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr3o_h8og.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    while num > 0\n        n\
    \ = mod(num, 10)\n        if mod(n, 2) == 0\n            even_count += 1\n   \
    \     else\n            odd_count += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp45iki6ff.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45iki6ff.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45iki6ff.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45iki6ff.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45iki6ff.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45iki6ff.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45iki6ff.jl:31\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45iki6ff.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45iki6ff.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45iki6ff.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45iki6ff.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45iki6ff.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp45iki6ff.jl:33\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45iki6ff.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64, odd::Int64 = 0, 0\n    if num < 0\n        num = -num\n\
    \    end\n    while num != 0\n        num % 2 == 0 ? even += 1 : odd += 1\n  \
    \      num = div(num, 10)\n    end\n    return even, odd\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp675upf0u.jl:30\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp675upf0u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp675upf0u.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp675upf0u.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num == 0\n        return (1, 0)\n    end\n    even_digit = 0\n\
    \    odd_digit = 0\n    while num != 0\n        remain = mod(num, 10)\n      \
    \  if mod(remain, 2) == 0\n            even_digit += 1\n        else\n       \
    \     odd_digit += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (even_digit, odd_digit)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in digits(num)\n        if i\
    \ % 2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n    end\n    (evens, odds)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    @scan num (n) begin\n  \
    \      if n % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @scan not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n\
    \   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode, mod::Module,\
    \ meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n\
    \ [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n   @ Core\
    \ ./boot.jl:517\nin expression starting at /tmp/tmpsxj_au3f.jl:1\nin expression\
    \ starting at /tmp/tmpsxj_au3f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in num |> digits |> reverse\
    \ \n        if digit % 2 == 0\n            evens += 1\n        else\n        \
    \    odds += 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64, odd::Int64 = 0, 0\n    for d in digits(num)\n    \
    \    if mod(d, 2) == 0 \n            even += 1\n        else\n            odd\
    \ += 1\n        end\n    end\n    return even, odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    return (sum([int(i) % 2 == 0 for i in string(num)]), sum([int(i)\
    \ % 2 == 1 for i in string(num)]))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptq1d1a1a.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  UndefVarError: int not\
    \ defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(i::Char)\\n     @ Main ./none:0\\\
    n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmptq1d1a1a.jl:8\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmptq1d1a1a.jl:15 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmptq1d1a1a.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmptq1d1a1a.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#3\")(i::Char)\\n     @ Main ./none:0\\n   [2] iterate\\n  \
    \   @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmptq1d1a1a.jl:8\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmptq1d1a1a.jl:16 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmptq1d1a1a.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmptq1d1a1a.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  UndefVarError: int not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#1#3\")(i::Char)\\n     @ Main ./none:0\\n   [2] iterate\\n  \
    \   @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmptq1d1a1a.jl:8\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evencount = 0\n    oddcount = 0\n    if num < 0\n        num =\
    \ -num\n    end\n    while num > 0\n        digit = num % 10\n        if digit\
    \ % 2 == 0\n            evencount += 1\n        else\n            oddcount +=\
    \ 1\n        end\n        num = num // 10\n    end\n    return (evencount, oddcount)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpthtoucrj.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpthtoucrj.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpthtoucrj.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpthtoucrj.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpthtoucrj.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpthtoucrj.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpthtoucrj.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpthtoucrj.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpthtoucrj.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    if num < 0\n        num = -num\n   \
    \ end\n    while num > 0\n        if mod(num, 10) % 2 == 0\n            even +=\
    \ 1\n        else\n            odd += 1\n        end\n        num = div(num, 10)\n\
    \    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qyzly73.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qyzly73.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qyzly73.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qyzly73.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # counter for odd and even\n    even = 0\n    odd = 0\n    # if\
    \ the number is negative, multiply by -1\n    num = abs(num)\n    # until the\
    \ number is not zero\n    while num != 0\n        # get the last digit\n     \
    \   last_digit = num % 10\n        # if the last digit is even\n        if last_digit\
    \ % 2 == 0\n            # increment the even counter\n            even += 1\n\
    \        else\n            # otherwise increment the odd counter\n           \
    \ odd += 1\n        end\n        # now divide by 10 to remove the last digit\n\
    \        num = num \xF7 10\n    end\n    # return the counters in a tuple\n  \
    \  return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpebx6to2q.jl:43\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpebx6to2q.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpebx6to2q.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpebx6to2q.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    nums = string(num)\n    nums = split(nums, \"\")\n    nums = parse.(Int64,\
    \ nums)\n    even = 0\n    odd = 0\n    for i in nums\n        if rem(i, 2) ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd60al8lh.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: input\
    \ string is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:670 [inlined]\\\
    n    [5] _broadcast_getindex\\n      @ ./broadcast.jl:653 [inlined]\\n    [6]\
    \ getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [7] macro expansion\\\
    n      @ ./broadcast.jl:961 [inlined]\\n    [8] macro expansion\\n      @ ./simdloop.jl:77\
    \ [inlined]\\n    [9] copyto!\\n      @ ./broadcast.jl:960 [inlined]\\n   [10]\
    \ copyto!\\n      @ ./broadcast.jl:913 [inlined]\\n   [11] copy\\n      @ ./broadcast.jl:885\
    \ [inlined]\\n   [12] materialize\\n      @ ./broadcast.jl:860 [inlined]\\n  \
    \ [13] even_odd_count(num::Int64)\\n      @ Main /tmp/tmpd60al8lh.jl:10\\n   [14]\
    \ macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [15] macro expansion\\n      @ /tmp/tmpd60al8lh.jl:28 [inlined]\\\
    n   [16] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [17] top-level scope\\n      @ /tmp/tmpd60al8lh.jl:26\\ntest\
    \ set: Error During Test at /tmp/tmpd60al8lh.jl:31\\n  Test threw exception\\\
    n  Expression: candidate(-345821) == (3, 3)\\n  ArgumentError: input string is\
    \ empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broadcast."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_counter = 0\n    odd_counter = 0\n    for i in 1:length(string(num))\n\
    \        if  iseven(parse(Int64, string(num)[i]))\n            even_counter +=\
    \ 1\n        else\n            odd_counter += 1\n        end\n    end\n    return\
    \ (even_counter, odd_counter)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmphazxiw6t.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmphazxiw6t.jl:11\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmphazxiw6t.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmphazxiw6t.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmphazxiw6t.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmphazxiw6t.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmphazxiw6t.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmphazxiw6t.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmphazxiw6t.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmphazxiw6t.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmphazxiw6t.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    if num < 0\n        num\
    \ = -num\n    end\n    while num > 0\n        digit = num % 10\n        if digit\
    \ % 2 == 0\n            even_count += 1\n        else\n            odd_count +=\
    \ 1\n        end\n        num = num // 10\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8weeufoq.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp8weeufoq.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp8weeufoq.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp8weeufoq.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8weeufoq.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp8weeufoq.jl:14\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp8weeufoq.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp8weeufoq.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8weeufoq.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in string(num)\n       \
    \ if digit == '.'\n            continue\n        end\n        digit = parse(Int64,\
    \ digit)\n        if digit % 2 == 0\n            evens += 1\n        else\n  \
    \          odds += 1\n        end\n    end\n    return evens, odds\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b\"test set: Error During Test at /tmp/tmphfh72i5_.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: invalid\
    \ digit: '-'\\n  Stacktrace:\\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\\
    n     @ Base ./parse.jl:43\\n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n\
    \   [3] even_odd_count(num::Int64)\\n     @ Main /tmp/tmphfh72i5_.jl:14\\n   [4]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmphfh72i5_.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmphfh72i5_.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmphfh72i5_.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmphfh72i5_.jl:14\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmphfh72i5_.jl:32 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmphfh72i5_.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmphfh72i5_.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: invalid digit: '-'\\n  Stacktrace:\\\
    n   [1] parse(::Type{Int64}, c::Char; base::Int64)\\n     @ Base ./parse.jl:43\\\
    n   [2] parse\\n     @ ./parse.jl:41 [inlined]\\n   [3] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmphfh72i5_.jl:14\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmphfh72i5_.jl:33 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    is_negative = num < 0\n\
    \    num = abs(num)\n    while num != 0\n        last_digit = num % 10\n     \
    \   num = num // 10\n        if last_digit % 2 == 0\n            even_count +=\
    \ 1\n        else\n            odd_count += 1\n        end\n    end\n    return\
    \ (even_count, odd_count)\nend\n@test even_odd_count(-12) == (1, 1)\n@test even_odd_count(123)\
    \ == (1, 2)\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmph4ncsh8a.jl:23\nin expression starting at /tmp/tmph4ncsh8a.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = abs(num)\n    end\n    evens = 0\n  \
    \  odds = 0\n    while num != 0\n        remain = num % 10\n        if remain\
    \ % 2 == 0\n            evens += 1\n        else\n            odds += 1\n    \
    \    end\n        num = num / 10\n    end\n    return evens, odds\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfos1yat2.jl:29\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos1yat2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos1yat2.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfos1yat2.jl:30\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 325) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos1yat2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos1yat2.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfos1yat2.jl:31\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos1yat2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos1yat2.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfos1yat2.jl:32\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos1yat2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos1yat2.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfos1yat2.jl:33\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfos1yat2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in num\n        if i % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    end\n\
    \    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdi260yqv.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi260yqv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi260yqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdi260yqv.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi260yqv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi260yqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdi260yqv.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi260yqv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi260yqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdi260yqv.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdi260yqv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdi260yqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdi260yqv.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdi260yqv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    neg_bit = 0\n    if num < 0\n        neg_bit = 1\n        num =\
    \ abs(num)\n    end\n    even_count = 0\n    odd_count = 0\n    while num > 0\n\
    \        if mod(num, 2) == 0\n            even_count += 1\n        else\n    \
    \        odd_count += 1\n        end\n        num = num / 10\n    end\n    return\
    \ (even_count, odd_count + neg_bit)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps413isvh.jl:30\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps413isvh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps413isvh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmps413isvh.jl:31\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 326) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps413isvh.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps413isvh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmps413isvh.jl:32\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps413isvh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps413isvh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmps413isvh.jl:33\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps413isvh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps413isvh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmps413isvh.jl:34\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 331) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps413isvh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num > 0\n        if rem(num, 2)\
    \ == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = num \xF7 10\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsuzqfrnc.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuzqfrnc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuzqfrnc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsuzqfrnc.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuzqfrnc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuzqfrnc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsuzqfrnc.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuzqfrnc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuzqfrnc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsuzqfrnc.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuzqfrnc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuzqfrnc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsuzqfrnc.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsuzqfrnc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for d in digits(num)\n \
    \       if d % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    n = abs(num)\n    while\
    \ n != 0\n        r = n % 10\n        if r % 2 == 0\n            even_count +=\
    \ 1\n        else\n            odd_count += 1\n        end\n        n = div(n,\
    \ 10)\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpf16gheqf.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf16gheqf.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf16gheqf.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf16gheqf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in digits(num)\n        if i %\
    \ 2 == 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \    end\n    return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num != 0\n        r = mod(num,\
    \ 10)\n        if r % 2 == 0\n            even += 1\n        else\n          \
    \  odd += 1\n        end\n        num = div(num, 10)\n    end\n    return (even,\
    \ odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo_y9rj4m.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_y9rj4m.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_y9rj4m.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo_y9rj4m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # even_count = 0\n    # odd_count = 0\n    # for i in digits(num)\n\
    \    #     if i % 2 == 0\n    #         even_count += 1\n    #     else\n    #\
    \         odd_count += 1\n    #     end\n    # end\n    # return (even_count,\
    \ odd_count)\n    # return (length(filter(x -> x % 2 == 0, digits(num))), length(filter(x\
    \ -> x % 2 != 0, digits(num))))\n    return (length(filter(x -> x % 2 == 0, [abs(i)\
    \ for i in digits(num)])), length(filter(x -> x % 2 != 0, [abs(i) for i in digits(num)])))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    countEven = 0\n    countOdd = 0\n    for digit in digits(num)\n\
    \        if digit % 2 == 0\n            countEven += 1\n        else\n       \
    \     countOdd += 1\n        end\n    end\n    return (countEven, countOdd)\n\
    end\n    \n    \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in string(num)\n        if i=='0'\
    \ || i=='2' || i=='4' || i=='6' || i=='8'\n            even += 1\n        else\n\
    \            odd += 1\n        end\n    end\n    return (even, odd)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1modnu1j.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 2) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1modnu1j.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1modnu1j.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1modnu1j.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (3, 4) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1modnu1j.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1modnu1j.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1modnu1j.jl:29\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (1, 1) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1modnu1j.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1modnu1j.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1modnu1j.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (2, 4) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1modnu1j.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1modnu1j.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1modnu1j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    e_count = 0\n    o_count = 0\n    for i in 1:length(num)\n    \
    \    if (num[i] % 2 == 0)\n            e_count += 1\n        else\n          \
    \  o_count += 1\n        end\n    end\n    return e_count, o_count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprl5w_uep.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl5w_uep.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl5w_uep.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprl5w_uep.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl5w_uep.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl5w_uep.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprl5w_uep.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl5w_uep.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl5w_uep.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprl5w_uep.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl5w_uep.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl5w_uep.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprl5w_uep.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprl5w_uep.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_num, odd_num = 0, 0\n    num = abs(num)\n    while num !=\
    \ 0\n        digit = num % 10\n        if digit % 2 == 0\n            even_num\
    \ += 1\n        else\n            odd_num += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return even_num, odd_num\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpy6opf9ru.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6opf9ru.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6opf9ru.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6opf9ru.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num != 0\n        if num % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = num \xF7 10\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp11mk47p6.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11mk47p6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11mk47p6.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp11mk47p6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    @assert num >= -10^18 && num <= 10^18\n    even = 0\n    odd =\
    \ 0\n    num = abs(num)\n    while num > 0\n        if num % 2 == 0\n        \
    \    even += 1\n        else\n            odd += 1\n        end\n        num =\
    \ div(num, 10)\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp46zoa4q3.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp46zoa4q3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp46zoa4q3.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp46zoa4q3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = -num\n    end\n    even = 0\n    odd\
    \ = 0\n    while num > 0\n        if num % 2 == 0\n            even += 1\n   \
    \     else\n            odd += 1\n        end\n        num = div(num, 10)\n  \
    \  end\n    return (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6pjj1pg7.jl:35\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6pjj1pg7.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6pjj1pg7.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6pjj1pg7.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    while num != 0\n     \
    \   if num % 2 == 0\n            even += 1\n        else\n            odd += 1\n\
    \        end\n        num /= 10\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpouf88flm.jl:25\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouf88flm.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouf88flm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpouf88flm.jl:26\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 325) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouf88flm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouf88flm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpouf88flm.jl:27\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouf88flm.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouf88flm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpouf88flm.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouf88flm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouf88flm.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpouf88flm.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpouf88flm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    while num > 0\n        d = num % 10\n\
    \        if d % 2 == 0\n            evens += 1\n        else\n            odds\
    \ += 1\n        end\n        num = div(num, 10)\n    end\n    return (evens, odds)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfe6zu4cy.jl:27\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfe6zu4cy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfe6zu4cy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfe6zu4cy.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfe6zu4cy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfe6zu4cy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfe6zu4cy.jl:31\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfe6zu4cy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfe6zu4cy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfe6zu4cy.jl:32\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfe6zu4cy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfe6zu4cy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfe6zu4cy.jl:33\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfe6zu4cy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    n_even = 0\n    n_odd = 0\n    while num !=\
    \ 0\n        m = num % 10\n        if m == 0 || m % 2 == 0\n            n_even\
    \ += 1\n        else\n            n_odd += 1\n        end\n        num = (num\
    \ - m) / 10\n    end\n    return (n_even, n_odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwdopme3e.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwdopme3e.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwdopme3e.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdopme3e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in split(digits(num))\n\
    \        if i % 2 == 0\n            even_count += 1\n        else\n          \
    \  odd_count += 1\n        end\n    end\n    (even_count, odd_count)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    _even = 0\n    _odd = 0\n    if num == 0\n        return (1, 0)\n\
    \    end\n    if num < 0\n        num = -num\n    end\n    while num > 0\n   \
    \     if num % 2 == 0\n            _even += 1\n        else\n            _odd\
    \ += 1\n        end\n        num = trunc(Int64, num / 10)\n    end\n    return\
    \ (_even, _odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  even_count, odd_count = 0, 0\n  for d in digits(num)\n    if d %\
    \ 2 == 0\n      even_count += 1\n    else\n      odd_count += 1\n    end\n  end\n\
    \  return even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    if num < 0\n        num = -num\n    end\n    even_count, odd_count\
    \ = 0, 0\n    while num > 0\n        if mod(num, 2) == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        num = div(num,\
    \ 10)\n    end\n    return even_count, odd_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8e8s24db.jl:34\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e8s24db.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e8s24db.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8e8s24db.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:length(string(num))\n\
    \        if num < 0\n            num = -num\n        end\n        if parse(Int64,\
    \ string(num)[i]) % 2 == 0\n            even_count += 1\n        else\n      \
    \      odd_count += 1\n        end\n    end\n    return even_count, odd_count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5i7nlgog.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  BoundsError: attempt\
    \ to access 2-codeunit String at index [3]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmp5i7nlgog.jl:13\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp5i7nlgog.jl:27 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp5i7nlgog.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5i7nlgog.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  BoundsError: attempt to access 6-codeunit String\
    \ at index [7]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp5i7nlgog.jl:13\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp5i7nlgog.jl:30 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp5i7nlgog.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp5i7nlgog.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  BoundsError: attempt to access 1-codeunit String\
    \ at index [2]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] even_odd_count(num::Int64)\\\
    n     @ Main /tmp/tmp5i7nlgog.j"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    arr = split(string(num), \"\")\n    even, odd = 0, 0\n    for i\
    \ in arr\n        if parse(Int64, i) % 2 == 0\n            even += 1\n       \
    \ else\n            odd += 1\n        end\n    end\n    return even, odd\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoz3m2qz2.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(-78) == (1, 1)\\n  ArgumentError: input\
    \ string is empty or only contains whitespace\\n  Stacktrace:\\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n     @ Base ./parse.jl:109\\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n     @ Base ./parse.jl:241\\n   [3] parse\\n     @ ./parse.jl:241\
    \ [inlined]\\n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpoz3m2qz2.jl:11\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpoz3m2qz2.jl:25 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpoz3m2qz2.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpoz3m2qz2.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(-345821) == (3, 3)\\n  ArgumentError: input string is empty or only\
    \ contains whitespace\\n  Stacktrace:\\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n     @ Base ./parse.jl:109\\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n     @ Base ./parse.jl:241\\n   [3] parse\\n     @ ./parse.jl:241\
    \ [inlined]\\n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmpoz3m2qz2.jl:11\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpoz3m2qz2.jl:28 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpoz3m2qz2.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpoz3m2qz2.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(-2) == (1, 0)\\n  ArgumentError: input string is empty or only contains\
    \ whitespace\\n  Stacktra"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_cnt, odd_cnt = 0, 0\n    for i in 1:abs(num) \n        if\
    \ num % 2 == 0\n            even_cnt += 1\n        else\n            odd_cnt +=\
    \ 1\n        end\n    end\n    return even_cnt, odd_cnt\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpowdifut9.jl:23\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 7) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpowdifut9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpowdifut9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpowdifut9.jl:24\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (78, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpowdifut9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpowdifut9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpowdifut9.jl:25\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (3452, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpowdifut9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpowdifut9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpowdifut9.jl:26\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 346211) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpowdifut9.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpowdifut9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpowdifut9.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 345821) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdl"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpowdifut9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    while num != 0\n        if num % 2 == 0\n\
    \            even += 1\n        else\n            odd += 1\n        end\n    \
    \    num = div(num, 10)\n    end\n    return even, odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpz17ckdci.jl:31\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz17ckdci.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz17ckdci.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz17ckdci.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even::Int64 = 0\n    odd::Int64 = 0\n    num::Int64 = abs(num)\n\
    \    while num != 0\n        if num % 2 == 0\n            even += 1\n        else\n\
    \            odd += 1\n        end\n        num = div(num, 10)\n    end\n    return\
    \ (even, odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwazjsj3x.jl:33\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwazjsj3x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwazjsj3x.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwazjsj3x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    while(num != 0)\n      \
    \  if(mod(num, 10) % 2 == 0)\n            even_count += 1\n        else\n    \
    \        odd_count += 1\n        end\n        num = div(num, 10)\n    end\n  \
    \  return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) ==\
    \ (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) == (3,\
    \ 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\
    \t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn2cdghyj.jl:32\n  Expression: candidate(0)\
    \ == (1, 0)\n   Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2cdghyj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2cdghyj.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn2cdghyj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for x in digits(num)\n \
    \       if x % 2 == 0\n            even_count += 1\n        else\n           \
    \ odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num > 0\n        if num % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = num \xF7 10\n    end\n    return (even, odd)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpazcmupue.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazcmupue.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazcmupue.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpazcmupue.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazcmupue.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazcmupue.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpazcmupue.jl:30\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazcmupue.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazcmupue.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpazcmupue.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpazcmupue.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpazcmupue.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpazcmupue.jl:32\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazcmupue.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for n in digits(num)\n \
    \       if n%2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    return (even_count, odd_count)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    (even_digits, odd_digits) = (0, 0)\n    \n    for i in abs(num)\n\
    \        if i%2 == 0\n            even_digits += 1\n        else\n           \
    \ odd_digits += 1\n        end\n    end\n    \n    return (even_digits, odd_digits)\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqtj0b1cl.jl:28\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtj0b1cl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtj0b1cl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqtj0b1cl.jl:29\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtj0b1cl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtj0b1cl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqtj0b1cl.jl:30\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtj0b1cl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtj0b1cl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqtj0b1cl.jl:31\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqtj0b1cl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqtj0b1cl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqtj0b1cl.jl:33\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtj0b1cl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for i in string(num)\n        if parse(Int64,\
    \ i) % 2 == 0\n            evens += 1\n        else\n            odds += 1\n \
    \       end\n    end\n    return (evens, odds)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyo5le_xs.jl:25\n  Test threw exception\n\
    \  Expression: candidate(-78) == (1, 1)\n  ArgumentError: invalid digit: '-'\n\
    \  Stacktrace:\n   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base\
    \ ./parse.jl:43\n   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpyo5le_xs.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyo5le_xs.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyo5le_xs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyo5le_xs.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(-345821) == (3, 3)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpyo5le_xs.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyo5le_xs.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyo5le_xs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyo5le_xs.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(-2) == (1, 0)\n  ArgumentError: invalid digit: '-'\n  Stacktrace:\n\
    \   [1] parse(::Type{Int64}, c::Char; base::Int64)\n     @ Base ./parse.jl:43\n\
    \   [2] parse\n     @ ./parse.jl:41 [inlined]\n   [3] even_odd_count(num::Int64)\n\
    \     @ Main /tmp/tmpyo5le_xs.jl:11\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyo5le_xs.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   ["
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyo5le_xs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    (odds, evens) = (0, 0)\n    for i in digits(num)\n        (odds,\
    \ evens) = (odds + (i % 2 != 0), evens + (i % 2 == 0))\n    end\n    return (evens,\
    \ odds)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t\
    @test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    while num != 0\n        if num % 2 ==\
    \ 0\n            even += 1\n        else\n            odd += 1\n        end\n\
    \        num = num//10\n    end\n    return (even, odd)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmps3hdxwq1.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(7) == (0, 1)\\n  OverflowError: 1000000000000000000\
    \ * 10 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] //(x::Rational{Int64}, y::Int64)\\\
    n     @ Base ./rational.jl:66\\n   [4] even_odd_count(num::Int64)\\n     @ Main\
    \ /tmp/tmps3hdxwq1.jl:16\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmps3hdxwq1.jl:25 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmps3hdxwq1.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmps3hdxwq1.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(-78) == (1, 1)\\n  OverflowError: 5000000000000000000 * 2 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inlined]\\n   [3] rem\\n     @ ./rational.jl:312 [inlined]\\\
    n   [4] even_odd_count(num::Int64)\\n     @ Main /tmp/tmps3hdxwq1.jl:11\\n   [5]\
    \ macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmps3hdxwq1.jl:26 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmps3hdxwq1.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmps3hdxwq1.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(3452) == (2, 2)\\n  OverflowError: 2500000000000000000 * 10 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\\n     @ Base.Checked ./checked.jl:154\\n   [2] checked_mul\\\
    n     @ ./checked.jl:288 [inline"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in num\n        if\
    \ i % 2 == 0\n            even_count += 1\n        else\n            odd_count\
    \ += 1\n        end\n    end\n    (even_count, odd_count)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpyugxh01d.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyugxh01d.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyugxh01d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyugxh01d.jl:26\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyugxh01d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyugxh01d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyugxh01d.jl:27\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyugxh01d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyugxh01d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyugxh01d.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyugxh01d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyugxh01d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyugxh01d.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyugxh01d.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for numchar in string(num)\n     \
    \   if numchar in \"13579\"\n            odds += 1\n        else\n           \
    \ evens += 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpe5aq61uy.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (2, 1) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5aq61uy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5aq61uy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5aq61uy.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (4, 3) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5aq61uy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5aq61uy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5aq61uy.jl:29\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (2, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5aq61uy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5aq61uy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe5aq61uy.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (3, 3) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe5aq61uy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe5aq61uy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5aq61uy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    e, o = 0, 0\n    if num < 0 \n        num = -num\n    end\n   \
    \ for i in 0:num\n        if i % 2 == 0\n            e += 1\n        else \n \
    \           o += 1\n        end\n    end\n    return e, o\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp18uvdfcf.jl:26\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (4, 4) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18uvdfcf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18uvdfcf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp18uvdfcf.jl:27\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (40, 39) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18uvdfcf.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18uvdfcf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp18uvdfcf.jl:28\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1727, 1726) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp18uvdfcf.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18uvdfcf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp18uvdfcf.jl:29\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (173106, 173106) == (3, 3)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18uvdfcf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18uvdfcf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp18uvdfcf.jl:30\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (172911, 172911) == (3, 3)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18uvdfcf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # Create an array that stores the even and odd count digits\n \
    \   even_count = odd_count = 0\n    # Get the absolute value of the integer\n\
    \    num = abs(num)\n    # Iterate over the input number\n    while num != 0\n\
    \        # Get the current digit\n        digit = num % 10\n        # Check if\
    \ the digit is even or odd\n        if digit % 2 == 0\n            even_count\
    \ += 1\n        else\n            odd_count += 1\n        end\n        # Shift\
    \ the number to the right\n        num = num / 10\n    end\n    # Return the even\
    \ and odd count\n    return even_count, odd_count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm60hloyb.jl:33\n  Expression: candidate(7)\
    \ == (0, 1)\n   Evaluated: (0, 325) == (0, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60hloyb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60hloyb.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm60hloyb.jl:34\n  Expression: candidate(-78) == (1, 1)\n \
    \  Evaluated: (1, 325) == (1, 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60hloyb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60hloyb.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm60hloyb.jl:35\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 327) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60hloyb.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60hloyb.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm60hloyb.jl:36\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60hloyb.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60hloyb.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm60hloyb.jl:37\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 330) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm60hloyb.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    \n    even_count = 0\n    odd_count = 0\n    \n    for i in num:\n\
    \        if iseven(abs(i)) == true:\n            even_count += 1\n        else\n\
    \            odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    \    \nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp22ivloxz.jl:13\nin expression starting at\
    \ /tmp/tmp22ivloxz.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n  even = 0\n  odd = 0\n  for c in string(num)\n    c = int(c)\n   \
    \ if c % 2 == 0\n      even += 1\n    else\n      odd += 1\n    end\n  end\n \
    \ return even, odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\
    \t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452)\
    \ == (2, 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821)\
    \ == (3, 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2,\
    \ 3))\n\t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr6jn5www.jl:25\n  Test threw exception\n\
    \  Expression: candidate(7) == (0, 1)\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpr6jn5www.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6jn5www.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6jn5www.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpr6jn5www.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(-78) == (1, 1)\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpr6jn5www.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6jn5www.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6jn5www.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpr6jn5www.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(3452) == (2, 2)\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpr6jn5www.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6jn5www.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6jn5www.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpr6jn5www.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(346211) == (3, 3)\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] even_odd_count(num::Int64)\n     @ Main /tmp/tmpr6jn5www.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6jn5www.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    evens = 0\n    odds = 0\n    for digit in digits(num)\n       \
    \ if digit % 2 == 0\n            evens += 1\n        else\n            odds +=\
    \ 1\n        end\n    end\n    return evens, odds\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0 \n    while num > 0 \n        if num % 2 == 0\
    \ \n            even += 1 \n        else \n            odd += 1 \n        end\
    \ \n        num = div(num, 10) \n    end \n    return even, odd \nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb6dlhopu.jl:25\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (0, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6dlhopu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6dlhopu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb6dlhopu.jl:28\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 0) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6dlhopu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6dlhopu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb6dlhopu.jl:29\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6dlhopu.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6dlhopu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb6dlhopu.jl:30\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 0) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6dlhopu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6dlhopu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb6dlhopu.jl:31\n  Expression: candidate(0) == (1, 0)\n   Evaluated:\
    \ (0, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6dlhopu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    num = abs(num)\n    even = 0\n    odd = 0\n    for i in digits(num)\n\
    \        if i % 2 == 0\n            even += 1\n        else\n            odd +=\
    \ 1\n        end\n    end\n    (even, odd)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\t@test(candidate(-78)\
    \ == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211) ==\
    \ (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) == (1,\
    \ 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    # Your code here\n    even_count = 0\n    odd_count = 0\n    for\
    \ c in num\n        if c % 2 == 0\n            even_count += 1\n        else\n\
    \            odd_count += 1\n        end\n    end\n    return (even_count, odd_count)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7)\
    \ == (0, 1))\n\t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2,\
    \ 2))\n\t@test(candidate(346211) == (3, 3))\n\t@test(candidate(-345821) == (3,\
    \ 3))\n\t@test(candidate(-2) == (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\
    \t@test(candidate(0) == (1, 0))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpweytj9gq.jl:26\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (1, 0) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpweytj9gq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpweytj9gq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpweytj9gq.jl:27\n  Expression: candidate(3452) == (2, 2)\n\
    \   Evaluated: (1, 0) == (2, 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpweytj9gq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpweytj9gq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpweytj9gq.jl:28\n  Expression: candidate(346211) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpweytj9gq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpweytj9gq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpweytj9gq.jl:29\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (0, 1) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpweytj9gq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpweytj9gq.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpweytj9gq.jl:31\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (0, 1) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpweytj9gq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1,\
    \ 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\nfunction even_odd_count(num::Int64)::Tuple{Int64,\
    \ Int64} \n    odd_count, even_count = 0, 0\n    for i in string(num)\n      \
    \  if i in \"13579\"\n            odd_count += 1\n        else\n            even_count\
    \ += 1\n        end\n    end\n    return even_count, odd_count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = even_odd_count;\n\t@test(candidate(7) == (0, 1))\n\
    \t@test(candidate(-78) == (1, 1))\n\t@test(candidate(3452) == (2, 2))\n\t@test(candidate(346211)\
    \ == (3, 3))\n\t@test(candidate(-345821) == (3, 3))\n\t@test(candidate(-2) ==\
    \ (1, 0))\n\t@test(candidate(-45347) == (2, 3))\n\t@test(candidate(0) == (1, 0))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmsf342cu.jl:24\n  Expression: candidate(-78)\
    \ == (1, 1)\n   Evaluated: (2, 1) == (1, 1)\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsf342cu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsf342cu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmsf342cu.jl:27\n  Expression: candidate(-345821) == (3, 3)\n\
    \   Evaluated: (4, 3) == (3, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsf342cu.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsf342cu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmsf342cu.jl:28\n  Expression: candidate(-2) == (1, 0)\n  \
    \ Evaluated: (2, 0) == (1, 0)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsf342cu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsf342cu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmsf342cu.jl:29\n  Expression: candidate(-45347) == (2, 3)\n\
    \   Evaluated: (3, 3) == (2, 3)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmsf342cu.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmsf342cu.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsf342cu.jl:20\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_100_make_a_pile
language: jl
results:
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    a = [n]\n    for i in\
    \ 1:1000 \n        if a[i] % 2 == 0 \n            push!(a,a[i]+2)\n        else\n\
    \            push!(a,a[i]+1)\n        end\n    end\n    return a\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpym_rjgzh.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6, 8, 10, 12, 14, 16, 18, 20  \u2026  1984,\
    \ 1986, 1988, 1990, 1992, 1994, 1996, 1998, 2000, 2002] == [3, 5, 7]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym_rjgzh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym_rjgzh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpym_rjgzh.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8, 10, 12, 14, 16, 18, 20, 22  \u2026  1986, 1988, 1990,\
    \ 1992, 1994, 1996, 1998, 2000, 2002, 2004] == [4, 6, 8, 10]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym_rjgzh.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym_rjgzh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpym_rjgzh.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12, 14, 16, 18, 20, 22  \u2026  1986, 1988,\
    \ 1990, 1992, 1994, 1996, 1998, 2000, 2002, 2004] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym_rjgzh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym_rjgzh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpym_rjgzh.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10, 12, 14, 16, 18, 20, 22, 24  \u2026  1988,\
    \ 1990, 1992, 1994, 1996, 1998, 2000, 2002, 2004, 2006] == [6, 8, 10, 12, 14,\
    \ 16]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpym_rjgzh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    n_stones = [n]\n   \
    \ for i in 2:n\n        if n_stones[i-1] % 2 == 0\n            n_stones = push!(n_stones,\
    \ n_stones[i-1] + 2)\n        else\n            n_stones = push!(n_stones, n_stones[i-1]\
    \ + 1)\n        end\n    end\n    return n_stones\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8zqpw79a.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zqpw79a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zqpw79a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8zqpw79a.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zqpw79a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zqpw79a.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8zqpw79a.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    level = n\n    stones\
    \ = [n]\n    while level > 1\n        level -= 1\n        if level % 2 == 0\n\
    \            push!(stones, level)\n        else\n            push!(stones, level\
    \ - 1)\n        end\n    end\n    reverse(stones)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqqq8uie1.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [0, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqqq8uie1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqqq8uie1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqqq8uie1.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [0, 2, 2, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqqq8uie1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqqq8uie1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqqq8uie1.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [0, 2, 2, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqqq8uie1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqqq8uie1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqqq8uie1.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [0, 2, 2, 4, 4, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqqq8uie1.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqqq8uie1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqqq8uie1.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqqq8uie1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    d = [n]\n    next_element\
    \ = n + 2*Int64(isodd(n)) - 1\n    \n    while next_element != d[end]\n      \
    \  push!(d, next_element)\n        next_element = next_element + 2*Int64(isodd(next_element))\
    \ - 1\n    end\n    \n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    list = Vector{Int64}(undef,\
    \ n)\n    list[1] = n\n    for i in 2:n\n        if i % 2 == 0\n            list[i]\
    \ = list[i-1] + 2\n        else\n            list[i] = list[i-1] + 1\n       \
    \ end\n    end\n    return list\nend\n@time make_a_pile(100000)\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "  0.000512 seconds (2 allocations: 781.297 KiB)\ntest set: Test Failed\
    \ at /tmp/tmpa28hk6ow.jl:32\n  Expression: candidate(3) == [3, 5, 7]\n   Evaluated:\
    \ [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa28hk6ow.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa28hk6ow.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa28hk6ow.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa28hk6ow.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa28hk6ow.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa28hk6ow.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa28hk6ow.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa28hk6ow.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa28hk6ow.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa28hk6ow.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa28hk6ow.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa28hk6ow.jl:36\n  Expression: candidate"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa28hk6ow.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"\n    Make a pile\
    \ of stones of size n.\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpme9nu25m.jl:1\nin expression starting at /tmp/tmpme9nu25m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    v = zeros(Int64,\
    \ n)\n    v[1] = n\n    \n    for i in 2:n\n        if isodd(v[i-1])\n       \
    \     v[i] = v[i-1] + 2\n        else\n            v[i] = v[i-1] + 1\n       \
    \ end\n    end\n    \n    return v\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8bf19u0c.jl:35\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bf19u0c.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bf19u0c.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp8bf19u0c.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bf19u0c.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bf19u0c.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp8bf19u0c.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bf19u0c.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bf19u0c.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8bf19u0c.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    L = []\n    for i =\
    \ 1:n\n        push!(L, n + 2*i)\n    end\n    return L\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy8xd9nbj.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 7, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8xd9nbj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8xd9nbj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8xd9nbj.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 8, 10, 12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8xd9nbj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8xd9nbj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8xd9nbj.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 9, 11, 13, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8xd9nbj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8xd9nbj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8xd9nbj.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 10, 12, 14, 16, 18] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy8xd9nbj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy8xd9nbj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy8xd9nbj.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy8xd9nbj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        stones = push!(stones, next_stone(stones[end]))\n \
    \   end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpunz6grw9.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_stone not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpunz6grw9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpunz6grw9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpunz6grw9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpunz6grw9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_stone not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpunz6grw9.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpunz6grw9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpunz6grw9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpunz6grw9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_stone not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpunz6grw9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpunz6grw9.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpunz6grw9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpunz6grw9.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_stone not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpunz6grw9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpunz6grw9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Vector{Int64}(undef,n)\n\
    \    pile[1] = n\n    for i in 2:n\n        pile[i] = n+2*(i-1)\n    end\n   \
    \ return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Int64[]\n \
    \   next_number = n\n    for i = 1:n\n        push!(result, next_number)\n   \
    \     if next_number % 2 == 0\n            next_number += 1\n        else\n  \
    \          next_number += 2\n        end\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_i3jiph.jl:33\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_i3jiph.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_i3jiph.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa_i3jiph.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_i3jiph.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_i3jiph.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa_i3jiph.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_i3jiph.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_i3jiph.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_i3jiph.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = []\n    for i\
    \ in 1:n\n        isodd(n) ? push!(res, next_even(n)) : push!(res, next_odd(n))\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpndxive4c.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_even not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpndxive4c.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpndxive4c.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpndxive4c.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpndxive4c.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_odd not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpndxive4c.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpndxive4c.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpndxive4c.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpndxive4c.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_even not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpndxive4c.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpndxive4c.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpndxive4c.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpndxive4c.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpndxive4c.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpndxive4c.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n <= 0\n        throw(ArgumentError(\"\
    n must be positive.\"))\n    end\n    stone_list = Array{Int64}(undef, n)\n  \
    \  for i in 1:n\n        stone_list[i] = n + 2*i\n    end\n    return stone_list\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9n9159a7.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 7, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n9159a7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n9159a7.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9n9159a7.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 8, 10, 12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n9159a7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n9159a7.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9n9159a7.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 9, 11, 13, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n9159a7.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n9159a7.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9n9159a7.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 10, 12, 14, 16, 18] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n9159a7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n9159a7.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9n9159a7.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9n9159a7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"Build up a vector\
    \ with the # of stones in each level, given the # of levels.\"\n    s = Vector{Int64}(undef,\
    \ n)\n    s[1] = n\n    for i in 2:n\n        n = n % 2 == 0 ? n + 1 : n + 2\n\
    \        s[i] = n\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3j5_4f71.jl:30\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3j5_4f71.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3j5_4f71.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3j5_4f71.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3j5_4f71.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3j5_4f71.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3j5_4f71.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3j5_4f71.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3j5_4f71.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3j5_4f71.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n <= 0\n        error(\"\
    Make sure the height of the pile (n) is positive.\")\n    end\n    is_even(x)\
    \ = x % 2 == 0\n    if is_even(n)\n        n_next = n + 2\n    else\n        n_next\
    \ = n + 1\n    end\n    return [n, n_next, n_next + 2]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkdiwholy.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkdiwholy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkdiwholy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkdiwholy.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkdiwholy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkdiwholy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkdiwholy.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkdiwholy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkdiwholy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkdiwholy.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkdiwholy.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkdiwholy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkdiwholy.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkdiwholy.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    next_level = n\n   \
    \ levels = [n]\n    for i in 1:3\n        if next_level % 2 == 0\n           \
    \ next_level += 2\n        else\n            next_level += 1\n        end\n  \
    \      push!(levels, next_level)\n    end\n    return levels\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0cwvpv2f.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6, 8] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cwvpv2f.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cwvpv2f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0cwvpv2f.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cwvpv2f.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cwvpv2f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0cwvpv2f.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cwvpv2f.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cwvpv2f.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0cwvpv2f.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12, 14] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0cwvpv2f.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0cwvpv2f.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0cwvpv2f.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = Int64[]\n    while\
    \ n > 0\n        push!(v, n)\n        if n % 2 == 0\n            n -= 1\n    \
    \    else\n            n -= 2\n        end\n    end\n    return v\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpegv814rq.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpegv814rq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpegv814rq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpegv814rq.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpegv814rq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpegv814rq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpegv814rq.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpegv814rq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpegv814rq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpegv814rq.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpegv814rq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpegv814rq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpegv814rq.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpegv814rq.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    number_of_stones_in_level\
    \ = [n]\n    \n    while n > 1\n        n = n - 1\n        append!(number_of_stones_in_level,\
    \ n)\n    end\n    \n    return number_of_stones_in_level\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx283q13w.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx283q13w.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx283q13w.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx283q13w.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx283q13w.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx283q13w.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx283q13w.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx283q13w.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx283q13w.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx283q13w.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 4, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx283q13w.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx283q13w.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx283q13w.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx283q13w.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    return [n:1:n+(2*(n-1))]\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppbrwrc16.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type StepRange{Int64, Int64} to an object of type Int64\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{Int64}, x::StepRange{Int64,\
    \ Int64}, i1::Int64)\n      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vector{StepRange{Int64, Int64}}, soffs::Int64, n::Int64)\n\
    \      @ Base ./array.jl:253\n    [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n\
    \    [4] _copyto_impl!\n      @ ./array.jl:331 [inlined]\n    [5] copyto!\n  \
    \    @ ./array.jl:317 [inlined]\n    [6] copyto!\n      @ ./array.jl:343 [inlined]\n\
    \    [7] copyto_axcheck!\n      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{Int64}(x::Vector{StepRange{Int64,\
    \ Int64}})\n      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554\
    \ [inlined]\n   [10] make_a_pile(n::Int64)\n      @ Main /tmp/tmppbrwrc16.jl:15\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmppbrwrc16.jl:23 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmppbrwrc16.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppbrwrc16.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type StepRange{Int64, Int64} to an object of type Int64\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbrwrc16.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1 return [1]\
    \ end\n    @assert n>1 \"Input must be positive integer.\"\n    return n .+ cumsum([1:n...])[1:end-1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi4ev4mmd.jl:24\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4ev4mmd.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4ev4mmd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi4ev4mmd.jl:25\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 7, 10] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4ev4mmd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4ev4mmd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi4ev4mmd.jl:26\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 8, 11, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4ev4mmd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4ev4mmd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi4ev4mmd.jl:27\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 9, 12, 16, 21] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi4ev4mmd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi4ev4mmd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi4ev4mmd.jl:28\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [9, 11"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi4ev4mmd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    n_values = [n]\n   \
    \ while n != 1\n        if n % 2 == 0\n            n = n / 2\n        else\n \
    \           n = (n - 1) / 2\n        end\n        push!(n_values, n)\n    end\n\
    \    return n_values\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnksgzgff.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnksgzgff.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnksgzgff.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnksgzgff.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnksgzgff.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnksgzgff.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnksgzgff.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnksgzgff.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnksgzgff.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnksgzgff.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnksgzgff.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnksgzgff.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnksgzgff.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnksgzgff.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,n)\n\
    \    stones[1] = n\n    for i in 2:n\n        if stones[i-1] % 2 == 0\n      \
    \      stones[i] = stones[i-1] + 2\n        else\n            stones[i] = stones[i-1]\
    \ + 1\n        end\n    end\n    return stones\nend\n# The first level has 9 stones.\
    \ The next level has an odd number of stones. The next level has an even number\
    \ of stones.\nmake_a_pile(3)\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpewtcqh25.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpewtcqh25.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpewtcqh25.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpewtcqh25.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpewtcqh25.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpewtcqh25.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpewtcqh25.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    make_a_pile(n, n, [n])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9q2m4jrw.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Int64,\
    \ ::Int64, ::Vector{Int64})\n  Closest candidates are:\n    make_a_pile(::Int64)\
    \ at /tmp/tmp9q2m4jrw.jl:14\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n   \
    \  @ Main /tmp/tmp9q2m4jrw.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9q2m4jrw.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9q2m4jrw.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp9q2m4jrw.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Int64,\
    \ ::Int64, ::Vector{Int64})\n  Closest candidates are:\n    make_a_pile(::Int64)\
    \ at /tmp/tmp9q2m4jrw.jl:14\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n   \
    \  @ Main /tmp/tmp9q2m4jrw.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9q2m4jrw.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9q2m4jrw.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp9q2m4jrw.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Int64,\
    \ ::Int64, ::Vector{Int64})\n  Closest candidates are:\n    make_a_pile(::Int64)\
    \ at /tmp/tmp9q2m4jrw.jl:14\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n   \
    \  @ Main /tmp/tmp9q2m4jrw.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9q2m4jrw.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9q2m4jrw.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    function get_next_number(number::Int64)::Int64\n\
    \        if number % 2 == 0\n            return number + 2\n        else\n   \
    \         return number + 1\n        end\n    end\n    \n    total_stones = [n]\n\
    \    while total_stones[end] != 1\n        push!(total_stones, get_next_number(total_stones[end]))\n\
    \    end\n    return total_stones\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    odds = [2i-1 for i in\
    \ 2:n]\n    evens = [2i for i in 2:n]\n    [1] .+ [odds[i] for i in 1:n-1]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsto5915s.jl:24\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsto5915s.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsto5915s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsto5915s.jl:25\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsto5915s.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsto5915s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsto5915s.jl:26\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [4, 6, 8, 10] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsto5915s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsto5915s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsto5915s.jl:27\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [4, 6, 8, 10, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsto5915s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsto5915s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsto5915s.jl:28\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [4, 6, 8,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsto5915s.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n <= 0\n        return\
    \ []\n    end\n    n_next = n % 2 == 0 ? n + 2 : n + 1\n    [n; make_a_pile(n_next)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    s = [n]\n    for i =\
    \ 2:n\n        push!(s, (s[i-1] + (isodd(s[i-1]) ? 2 : 1)))\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppj9ch6a6.jl:27\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppj9ch6a6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppj9ch6a6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppj9ch6a6.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppj9ch6a6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppj9ch6a6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppj9ch6a6.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppj9ch6a6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppj9ch6a6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppj9ch6a6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Check if the input\
    \ is positive\n    if n <= 0\n        error(\"Input should be a positive integer\"\
    )\n    end\n    # Base case\n    if n == 1\n        return [1]\n    end\n    #\
    \ Otherwise\n    if n % 2 == 0\n        return [n] .+ make_a_pile(n+1)\n    else\n\
    \        return [n] .+ make_a_pile(n+2)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Vector{Int64}(undef,n)\n\
    \    pile[1] = n\n    for i in 2:n\n        if mod(pile[i-1],2) == 0\n       \
    \     pile[i] = pile[i-1] + 1\n        else\n            pile[i] = pile[i-1] +\
    \ 2\n        end\n    end\n    return pile\nend\n\"\"\"\n    Given a positive\
    \ integer n, return the nth number of the Fibonacci sequence.\n    Examples:\n\
    \    >>> fibonacci(5)\n    5\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpstjlovr1.jl:26\nin expression starting at /tmp/tmpstjlovr1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 0\n        throw(ArgumentError(\"\
    n should be a positive integer!\"))\n    end\n    res = Vector{Int64}(n)\n   \
    \ for i in 1:n\n        res[i] = n + 2*i - 1\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp31pqftbx.jl:29\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp31pqftbx.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31pqftbx.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31pqftbx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp31pqftbx.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp31pqftbx.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp31pqftbx.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp31pqftbx.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp31pqftbx.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp31pqftbx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    Pile = [n]\n    while\
    \ Pile[end] > 1\n        if Pile[end] % 2 == 0\n            Pile = [Pile; Pile[end]\
    \ / 2]\n        else\n            Pile = [Pile; (Pile[end] + 1) / 2]\n       \
    \ end\n    end\n    return Pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd4qx6uy8.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4qx6uy8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4qx6uy8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd4qx6uy8.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4qx6uy8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4qx6uy8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd4qx6uy8.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4qx6uy8.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4qx6uy8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd4qx6uy8.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4qx6uy8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4qx6uy8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd4qx6uy8.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4qx6uy8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    A = Vector{Int64}(undef,\
    \ n)\n    A[1] = n\n    for i in 2:n\n        A[i] = A[i-1] + next_number(A[i-1])\n\
    \    end\n    return A\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkq7kfzy4.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_number not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpkq7kfzy4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq7kfzy4.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq7kfzy4.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpkq7kfzy4.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_number not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpkq7kfzy4.jl:18\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq7kfzy4.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq7kfzy4.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpkq7kfzy4.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_number not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpkq7kfzy4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkq7kfzy4.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkq7kfzy4.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpkq7kfzy4.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_number not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpkq7kfzy4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/juli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkq7kfzy4.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"\n    The first\
    \ level has n stones.\n    The number of stones in the next level is:\n      \
    \  - the next odd number if n is odd.\n        - the next even number if n is\
    \ even.\n    \"\"\"\n    l = [n]\n    while l[end] > 1\n        if l[end] % 2\
    \ == 0\n            push!(l, l[end] - 1)\n        else\n            push!(l, l[end]\
    \ - 2)\n        end\n    end\n    return l\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppyd108rz.jl:36\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyd108rz.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyd108rz.jl:35\ntest set: Test\
    \ Failed at /tmp/tmppyd108rz.jl:37\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyd108rz.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyd108rz.jl:35\ntest set: Test\
    \ Failed at /tmp/tmppyd108rz.jl:38\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyd108rz.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyd108rz.jl:35\ntest set: Test\
    \ Failed at /tmp/tmppyd108rz.jl:39\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyd108rz.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyd108rz.jl:35\ntest set: Test\
    \ Failed at /tmp/tmppyd108rz.jl:40\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppyd108rz.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    vec = Vector{Int64}(undef,n)\n\
    \    vec[1] = n\n    for i in 2:n\n        if n % 2 == 0\n            vec[i] =\
    \ n + 2\n        else\n            vec[i] = n + 1\n        end\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz1tlk_5x.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1tlk_5x.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1tlk_5x.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz1tlk_5x.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 6, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1tlk_5x.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1tlk_5x.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz1tlk_5x.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 6, 6, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1tlk_5x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1tlk_5x.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz1tlk_5x.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 8, 8, 8, 8] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1tlk_5x.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1tlk_5x.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz1tlk_5x.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz1tlk_5x.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    @assert n > 0 \"n must\
    \ be positive\"\n    if iseven(n)\n        return [n, n+2, n+4]\n    else\n  \
    \      return [n, n+1, n+3]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfq_q6ccd.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfq_q6ccd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfq_q6ccd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfq_q6ccd.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfq_q6ccd.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfq_q6ccd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfq_q6ccd.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfq_q6ccd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfq_q6ccd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfq_q6ccd.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfq_q6ccd.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfq_q6ccd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfq_q6ccd.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfq_q6ccd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    a = Vector{Int64}()\n\
    \    push!(a, n)\n    if n % 2 == 0\n        for i = n + 2:2:n + n * 2\n     \
    \       push!(a, i)\n        end\n    else\n        for i = n + 2:2:n + n * 2\
    \ - 1\n            push!(a, i)\n        end\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm5cby9e_.jl:34\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 6, 8, 10, 12] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5cby9e_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5cby9e_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm5cby9e_.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10, 12, 14, 16, 18] == [6, 8, 10, 12, 14, 16]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5cby9e_.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5cby9e_.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpm5cby9e_.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12, 14, 16, 18, 20, 22, 24] == [8,\
    \ 10, 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5cby9e_.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5cby9e_.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm5cby9e_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if mod(stones[end], 2) == 0\n            push!(stones,\
    \ stones[end]/2)\n        else\n            push!(stones, (stones[end] + 1)/2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmbmy3rjn.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbmy3rjn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbmy3rjn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmbmy3rjn.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbmy3rjn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbmy3rjn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmbmy3rjn.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbmy3rjn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbmy3rjn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmbmy3rjn.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbmy3rjn.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbmy3rjn.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmbmy3rjn.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmbmy3rjn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ levels[end] != 1\n        levels = [levels;next(levels[end])]\n    end\n   \
    \ return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph6_1yls6.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmph6_1yls6.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph6_1yls6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph6_1yls6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmph6_1yls6.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmph6_1yls6.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph6_1yls6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph6_1yls6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmph6_1yls6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmph6_1yls6.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph6_1yls6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph6_1yls6.jl:25\ntest set:\
    \ Error During Test at /tmp/tmph6_1yls6.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmph6_1yls6.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph6_1yls6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = fill(n, n)\n\
    \    for i in 1:n-1\n        if i % 2 == 0\n            levels[i+1] = levels[i]\
    \ + 2\n        else\n            levels[i+1] = levels[i] + 1\n        end\n  \
    \  end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp9rndoko.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp9rndoko.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp9rndoko.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp9rndoko.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 5, 7, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp9rndoko.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp9rndoko.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp9rndoko.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 9, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp9rndoko.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp9rndoko.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp9rndoko.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 10, 12, 13] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp9rndoko.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp9rndoko.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp9rndoko.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluat"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp9rndoko.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    build_pile = [n]\n \
    \   while n != 1\n        if n % 2 == 0\n            n = n/2\n        else\n \
    \           n = (n-1)/2\n        end\n        push!(build_pile, n)\n    end\n\
    \    build_pile\nend\nmake_a_pile(3)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpde10xnh1.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpde10xnh1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpde10xnh1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpde10xnh1.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpde10xnh1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpde10xnh1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpde10xnh1.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpde10xnh1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpde10xnh1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpde10xnh1.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpde10xnh1.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpde10xnh1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpde10xnh1.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpde10xnh1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    return make_a_pile(n-1) .+ next_level(n)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1u2uucn0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_level not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64) (repeats 2 times)\n     @ Main /tmp/tmp1u2uucn0.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1u2uucn0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1u2uucn0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1u2uucn0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_level not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp1u2uucn0.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1u2uucn0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1u2uucn0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1u2uucn0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_level not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64) (repeats 4 times)\n     @ Main /tmp/tmp1u2uucn0.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1u2uucn0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1u2uucn0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp1u2uucn0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_level not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64) (repeats 5 times)\n     @ Main /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1u2uucn0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ pile[end] != 1\n        if isodd(pile[end])\n            push!(pile, pile[end]\
    \ + 2)\n        else\n            push!(pile, pile[end] + 1)\n        end\n  \
    \  end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    a = []\n    push!(a,\
    \ n)\n    for i = 1:n-1\n        if a[i] % 2 == 0\n            push!(a, a[i] +\
    \ 2)\n        else\n            push!(a, a[i] + 1)\n        end\n    end\n   \
    \ return a\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t\
    @test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7g9fdbe3.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7g9fdbe3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7g9fdbe3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp7g9fdbe3.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7g9fdbe3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7g9fdbe3.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7g9fdbe3.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # First, create a range\
    \ of integers of length n\n    levels = 1:n\n    # Then, map over the range and\
    \ apply the function to each element.\n    # The function is an anonymous function\
    \ (lambda) that takes an integer\n    # x and adds the next odd number if x is\
    \ odd and the next even number\n    # if x is even.\n    map(x -> x + Int64(ifelse(x\
    \ % 2 == 0, 2, 1)), levels)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpah_wutrf.jl:28\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [2, 4, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah_wutrf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah_wutrf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpah_wutrf.jl:29\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [2, 4, 4, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah_wutrf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah_wutrf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpah_wutrf.jl:30\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [2, 4, 4, 6, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah_wutrf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah_wutrf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpah_wutrf.jl:31\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [2, 4, 4, 6, 6, 8] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpah_wutrf.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpah_wutrf.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpah_wutrf.jl:32\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpah_wutrf.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    T = Int64[]\n    while\
    \ n > 0\n        push!(T, n)\n        if n % 2 == 0\n            n = n/2\n   \
    \     else\n            n = (n+1)/2\n        end\n    end\n    return reverse(T)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    i = [n]\n    for j =\
    \ 1:n-1\n        k = i[j]\n        if iseven(k)\n            push!(i, k+2)\n \
    \       else\n            push!(i, k+1)\n        end\n    end\n    return i\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprveirc8k.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprveirc8k.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprveirc8k.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprveirc8k.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprveirc8k.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprveirc8k.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprveirc8k.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    answer = zeros(Int64,\
    \ n)\n    for i in 1:n\n        answer[i] = n + (i-1)*2\n    end\n    return answer\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return push!(make_a_pile(n-1), n+1)\n\
    \    else\n        return push!(make_a_pile(n-1), n+2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3bqsjfq5.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bqsjfq5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bqsjfq5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3bqsjfq5.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bqsjfq5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bqsjfq5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3bqsjfq5.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bqsjfq5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bqsjfq5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3bqsjfq5.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bqsjfq5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bqsjfq5.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3bqsjfq5.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3bqsjfq5.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n != 1\n        if n % 2 == 0\n            n = n/2\n        else\n         \
    \   n = (n-1)/2\n        end\n        push!(result, n)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvrrkniqc.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrrkniqc.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrrkniqc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvrrkniqc.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrrkniqc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrrkniqc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvrrkniqc.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrrkniqc.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrrkniqc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvrrkniqc.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvrrkniqc.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvrrkniqc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvrrkniqc.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvrrkniqc.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    stones = Vector{Int64}(undef,n)\n    next_level = n\n    for\
    \ i in 1:n\n        stones[i] = next_level\n        if next_level % 2 == 0\n \
    \           next_level += 1\n        else\n            next_level += 2\n     \
    \   end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplv1hrsul.jl:36\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplv1hrsul.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplv1hrsul.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplv1hrsul.jl:38\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplv1hrsul.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplv1hrsul.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplv1hrsul.jl:39\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplv1hrsul.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplv1hrsul.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplv1hrsul.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    ns = fill(n, n)\n  \
    \  cumsum(ns,dims=1)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv9k_4uia.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 6, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9k_4uia.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9k_4uia.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv9k_4uia.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 8, 12, 16] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9k_4uia.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9k_4uia.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv9k_4uia.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 10, 15, 20, 25] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9k_4uia.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9k_4uia.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv9k_4uia.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 12, 18, 24, 30, 36] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv9k_4uia.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv9k_4uia.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv9k_4uia.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9k_4uia.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    l = fill(n, n)\n   \
    \ for i in 2:n\n        if l[i-1] % 2 == 0\n            l[i] = l[i-1] + 2\n  \
    \      else\n            l[i] = l[i-1] + 1\n        end\n    end\n    return l\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkui0787a.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkui0787a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkui0787a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpkui0787a.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkui0787a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkui0787a.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkui0787a.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    output = [n]\n    counter\
    \ = n\n    while counter > 1\n        if counter % 2 == 0\n            counter\
    \ = counter - 1\n        else\n            counter = counter - 2\n        end\n\
    \        append!(output, counter)\n    end\n    return output\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuf419g6t.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuf419g6t.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuf419g6t.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuf419g6t.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuf419g6t.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuf419g6t.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuf419g6t.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuf419g6t.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuf419g6t.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuf419g6t.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuf419g6t.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuf419g6t.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpuf419g6t.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuf419g6t.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    st = [(1, 1)]\n    result = []\n    while length(st) > 0\n\
    \        tup = pop!(st)\n        if tup[1] == n\n            push!(result, tup[2])\n\
    \        else\n            if tup[1] % 2 == 0\n                push!(st, (tup[1]\
    \ + 1, tup[2] + tup[1] + 1))\n                push!(st, (tup[1] + 2, tup[2] +\
    \ tup[1] + 2))\n            else\n                push!(st, (tup[1] + 2, tup[2]\
    \ + tup[1] + 2))\n                push!(st, (tup[1] + 1, tup[2] + tup[1] + 1))\n\
    \            end\n        end\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = []\n    counter\
    \ = n\n    while counter > 0\n        push!(levels, counter)\n        counter\
    \ = counter % 2 == 0 ? counter+2 : counter+1\n    end\n    levels\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        return\
    \ error(\"n must be greater than 0\")\n    end\n    i = 1\n    stones = n\n  \
    \  levels = [stones]\n    while stones > 0\n        stones = (n % 2 == 0) ? n\
    \ + i : n + i + 1\n        push!(levels, stones)\n        i += 2\n        n =\
    \ stones\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    s = n\n    L = [s]\n\
    \    while s > 0\n        push!(L, s)\n        if s % 2 == 0\n            s -=\
    \ 1\n        else\n            s -= 2\n        end\n    end\n    return L\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphg3rqzjx.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg3rqzjx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg3rqzjx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmphg3rqzjx.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg3rqzjx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg3rqzjx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmphg3rqzjx.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg3rqzjx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg3rqzjx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmphg3rqzjx.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphg3rqzjx.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphg3rqzjx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmphg3rqzjx.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 8,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphg3rqzjx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(n)\n\
    \    stones[1] = n\n    for i in 2:n\n        if stones[i-1] % 2 == 0\n      \
    \      stones[i] = stones[i-1] + 2\n        else\n            stones[i] = stones[i-1]\
    \ + 1\n        end\n    end\n    return stones\nend\nmake_a_pile(3)\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching Vector{Int64}(::Int64)\\\
    nClosest candidates are:\\n  Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\\\
    n  Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\\\
    n  Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\\\
    n  ...\\nStacktrace:\\n [1] make_a_pile(n::Int64)\\n   @ '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    arr = Vector{Int64}(undef,\
    \ n)\n    arr[1] = n\n    for i = 2:n\n        if isodd(n)\n            arr[i]\
    \ = n+2*(i-1)\n        else\n            arr[i] = n+2*(i-1)+1\n        end\n \
    \   end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_7j3kptr.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 7, 9, 11] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7j3kptr.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7j3kptr.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_7j3kptr.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 9, 11, 13, 15, 17] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7j3kptr.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7j3kptr.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_7j3kptr.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 11, 13, 15, 17, 19, 21, 23] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7j3kptr.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7j3kptr.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_7j3kptr.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    p = Vector{Int64}(undef,\
    \ n) \n    for i in 1:n \n        p[i] = i * n + 1\n    end\n    return p\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptdeoi6zp.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 7, 10] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdeoi6zp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdeoi6zp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptdeoi6zp.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 9, 13, 17] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdeoi6zp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdeoi6zp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptdeoi6zp.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 11, 16, 21, 26] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdeoi6zp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdeoi6zp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptdeoi6zp.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 13, 19, 25, 31, 37] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdeoi6zp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdeoi6zp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptdeoi6zp.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptdeoi6zp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"\n    Given a\
    \ positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnhhssta2.jl:1\nin expression starting at /tmp/tmpnhhssta2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    next_odd(x) = 2x+1\n\
    \    next_even(x) = 2x\n    return map(i -> i,\n           recurse(n, n, [next_odd,\
    \ next_even]))\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptzw8_rkd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: recurse not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptzw8_rkd.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzw8_rkd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptzw8_rkd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptzw8_rkd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: recurse not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptzw8_rkd.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzw8_rkd.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptzw8_rkd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptzw8_rkd.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: recurse not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptzw8_rkd.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzw8_rkd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptzw8_rkd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmptzw8_rkd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: recurse not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmptzw8_rkd.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptzw8_rkd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   for x in n:1:-1\n        push!(levels, x)\n    end\n    return levels\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgspghorn.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: Int64[] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgspghorn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgspghorn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgspghorn.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: Int64[] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgspghorn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgspghorn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgspghorn.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: Int64[] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgspghorn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgspghorn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgspghorn.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: Int64[] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgspghorn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgspghorn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgspghorn.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: Int64[] == [8, 10, 12, 14,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgspghorn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = zeros(Int64, n)\n\
    \    res[1] = n\n    for i in 2:n\n        res[i] = res[i-1] + (res[i-1]%2 ==\
    \ 0 ? 2 : 1)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp90tmc4o5.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90tmc4o5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90tmc4o5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp90tmc4o5.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90tmc4o5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90tmc4o5.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp90tmc4o5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    l = [n]\n    for i in\
    \ 1:4\n        if n%2 == 0\n            n += 2\n        else\n            n +=\
    \ 1\n        end\n        push!(l, n)\n    end\n    return l\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6rlf8_ji.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6, 8, 10] == [3, 5, 7]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rlf8_ji.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rlf8_ji.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6rlf8_ji.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8, 10, 12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rlf8_ji.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rlf8_ji.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6rlf8_ji.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rlf8_ji.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rlf8_ji.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6rlf8_ji.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6rlf8_ji.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6rlf8_ji.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6rlf8_ji.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6rlf8_ji.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,n)\n\
    \    stones[1] = n\n    for i = 2:n\n        if (n % 2 == 0)\n            stones[i]\
    \ = stones[i-1] + 2\n        else\n            stones[i] = stones[i-1] + 1\n \
    \       end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0mw5wn4m.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mw5wn4m.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mw5wn4m.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp0mw5wn4m.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mw5wn4m.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mw5wn4m.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0mw5wn4m.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    @assert n >= 1 \"n should\
    \ be positive.\"\n    result = fill(n, n)\n    for i = 1:n-1\n        result[i+1]\
    \ = (n+i)%2 == 0 ? n+i+1 : n+i\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa2x4_f9q.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2x4_f9q.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2x4_f9q.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa2x4_f9q.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 5, 7, 7] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2x4_f9q.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2x4_f9q.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa2x4_f9q.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 7, 9, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2x4_f9q.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2x4_f9q.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa2x4_f9q.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 9, 11, 11] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2x4_f9q.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2x4_f9q.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa2x4_f9q.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2x4_f9q.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = zeros(n)\n\
    \    stones[1] = n\n    is_odd = n % 2 == 1\n    for i in 2:n\n        if is_odd\n\
    \            stones[i] = stones[i-1] + 2\n            is_odd = false\n       \
    \ else\n            stones[i] = stones[i-1] + 3\n            is_odd = true\n \
    \       end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1gn9xh6a.jl:34\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 8] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gn9xh6a.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gn9xh6a.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp1gn9xh6a.jl:35\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 7, 9, 12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gn9xh6a.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gn9xh6a.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp1gn9xh6a.jl:36\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 10, 12, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gn9xh6a.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gn9xh6a.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp1gn9xh6a.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 9, 11, 14, 16, 19] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1gn9xh6a.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1gn9xh6a.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp1gn9xh6a.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Eva"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1gn9xh6a.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    vec = [n]\n    for i\
    \ = 1:n-1\n        if n % 2 == 0\n            vec = push!(vec, n + i*2)\n    \
    \    else\n            vec = push!(vec, n + i*2 - 1)\n        end\n    end\n \
    \   return vec\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7tzrt3b_.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tzrt3b_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tzrt3b_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp7tzrt3b_.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tzrt3b_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tzrt3b_.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7tzrt3b_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Vector{Int64}(undef,\
    \ n)\n    for i in eachindex(levels)\n        levels[i] = n + (2i+1)\n    end\n\
    \    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4dfzux0w.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6, 8, 10] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dfzux0w.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dfzux0w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4dfzux0w.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [7, 9, 11, 13] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dfzux0w.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dfzux0w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4dfzux0w.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [8, 10, 12, 14, 16] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dfzux0w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dfzux0w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4dfzux0w.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [9, 11, 13, 15, 17, 19] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dfzux0w.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dfzux0w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4dfzux0w.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dfzux0w.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    return make_a_pile(n-1) .* [n, n+1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsv4hlyyv.jl:25\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6, 12] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsv4hlyyv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsv4hlyyv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsv4hlyyv.jl:26\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [24, 60] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsv4hlyyv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsv4hlyyv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsv4hlyyv.jl:27\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [120, 360] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsv4hlyyv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsv4hlyyv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsv4hlyyv.jl:28\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [720, 2520] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsv4hlyyv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsv4hlyyv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpsv4hlyyv.jl:29\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [40320, 181440] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsv4hlyyv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   level = n\n    while level > 0\n        push!(levels, level)\n        if iseven(level)\n\
    \            level -= 2\n        else\n            level -= 1\n        end\n \
    \   end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr9dgg5e6.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr9dgg5e6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9dgg5e6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr9dgg5e6.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpr9dgg5e6.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9dgg5e6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr9dgg5e6.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 2] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr9dgg5e6.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9dgg5e6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr9dgg5e6.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 4, 2] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr9dgg5e6.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr9dgg5e6.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr9dgg5e6.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 6, 4, 2] == [8, 10, "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9dgg5e6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 0\n        error(\"\
    n should be positive.\")\n    end\n    vec = [n]\n    while n > 1\n        if\
    \ n % 2 == 0\n            n = n - 1\n        else\n            n = n + 1\n   \
    \     end\n        push!(vec, n)\n    end\n    return vec\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = Vector{Int64}(n)\n\
    \    for i in 0:n-1\n        if i==0\n            res[i+1] = n\n        elseif\
    \ res[i]%2==0\n            res[i+1] = res[i]+2\n        else\n            res[i+1]\
    \ = res[i]+1\n        end\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp64jee3ji.jl:32\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp64jee3ji.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp64jee3ji.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp64jee3ji.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp64jee3ji.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp64jee3ji.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp64jee3ji.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp64jee3ji.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp64jee3ji.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64jee3ji.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    assert(n > 0, \"The\
    \ number of stones should be positive.\")\n    my_pile = Vector{Int64}(undef,\
    \ n)\n    my_pile[1] = n\n    for i in 2:n\n        if isodd(my_pile[i-1])\n \
    \           my_pile[i] = my_pile[i-1] + 2\n        else\n            my_pile[i]\
    \ = my_pile[i-1] + 1\n        end\n    end\n    return my_pile\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpngw3uujy.jl:32\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: assert not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpngw3uujy.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngw3uujy.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngw3uujy.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpngw3uujy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpngw3uujy.jl:15\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngw3uujy.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngw3uujy.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpngw3uujy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: assert not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpngw3uujy.jl:15\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngw3uujy.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngw3uujy.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpngw3uujy.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: assert not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpngw3uujy.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpngw3uujy.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1 return [1]\
    \ end\n    if n == 2 return [2, 3] end\n    if n % 2 == 0\n        return [n,\
    \ n+2, n+4]\n    else\n        return [n, n+1, n+3]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ohf527g.jl:28\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ohf527g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ohf527g.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp0ohf527g.jl:29\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ohf527g.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ohf527g.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp0ohf527g.jl:30\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ohf527g.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ohf527g.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp0ohf527g.jl:31\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ohf527g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ohf527g.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp0ohf527g.jl:32\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ohf527g.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Enter your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuiwvddhc.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpuiwvddhc.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuiwvddhc.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuiwvddhc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpuiwvddhc.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpuiwvddhc.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuiwvddhc.jl:23 [inlined]\n\
    \   [4] macro expansion\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuiwvddhc.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    output = []\n    for\
    \ i in 1:n\n        push!(output, n)\n        n = n + 2\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"returns the number\
    \ of stones in each level in a list\"\"\"\n    stones = [n]\n    while n > 0\n\
    \        if isodd(n)\n            n = n - 1\n        else\n            n = n -\
    \ 2\n        end\n        push!(stones, n)\n    end\n    return stones\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwpxc74v0.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 0] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpxc74v0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpxc74v0.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwpxc74v0.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 0] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpxc74v0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpxc74v0.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwpxc74v0.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 2, 0] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpxc74v0.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpxc74v0.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwpxc74v0.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 4, 2, 0] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpxc74v0.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpxc74v0.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwpxc74v0.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 6, 4, 2,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpxc74v0.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # WRITE YOUR CODE HERE\n\
    \    if n <= 0\n        return []\n    end\n    out = zeros(Int64, n)\n    out[1]\
    \ = n\n    for i in 2:n\n        if mod(out[i-1], 2) == 0\n            out[i]\
    \ = out[i-1] + 1\n        else\n            out[i] = out[i-1] + 2\n        end\n\
    \    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl68v0ckc.jl:36\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl68v0ckc.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl68v0ckc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl68v0ckc.jl:38\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl68v0ckc.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl68v0ckc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl68v0ckc.jl:39\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl68v0ckc.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl68v0ckc.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl68v0ckc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    level = n\n    pile\
    \ = [n]\n    for _ in 1:n-1\n        level += (isodd(level) ? 2 : 1)\n       \
    \ push!(pile, level)\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi1a7mc66.jl:29\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1a7mc66.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1a7mc66.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpi1a7mc66.jl:31\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1a7mc66.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1a7mc66.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpi1a7mc66.jl:32\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1a7mc66.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1a7mc66.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi1a7mc66.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    list = [n]\n    m =\
    \ n\n    if n % 2 == 0 \n        m = n + 1\n    end\n    for i in 1:100\n    \
    \    push!(list, m + i)\n        m = m + 2\n    end\n    return list\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp46_f83xg.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 7, 10, 13, 16, 19, 22, 25, 28  \u2026  274,\
    \ 277, 280, 283, 286, 289, 292, 295, 298, 301] == [3, 5, 7]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp46_f83xg.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp46_f83xg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp46_f83xg.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 9, 12, 15, 18, 21, 24, 27, 30  \u2026  276, 279, 282, 285,\
    \ 288, 291, 294, 297, 300, 303] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp46_f83xg.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp46_f83xg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp46_f83xg.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 9, 12, 15, 18, 21, 24, 27, 30  \u2026  276, 279, 282,\
    \ 285, 288, 291, 294, 297, 300, 303] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp46_f83xg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp46_f83xg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp46_f83xg.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 11, 14, 17, 20, 23, 26, 29, 32  \u2026  278, 281,\
    \ 284, 287, 290, 293, 296, 299, 302, 305] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp46_f83xg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    end\n \n#\n# Tests\n\
    #\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnrt83cr1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpnrt83cr1.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnrt83cr1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnrt83cr1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpnrt83cr1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpnrt83cr1.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnrt83cr1.jl:26 [inlined]\n\
    \   [4] macro expansion\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrt83cr1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # initialize the vector\n\
    \    V = zeros(Int64,n)\n    V[1] = n\n    # fill the vector\n    for i in 2:n\n\
    \        if V[i-1] % 2 == 0\n            V[i] = V[i-1] + 1\n        else\n   \
    \         V[i] = V[i-1] + 2\n        end\n    end\n    # return the vector\n \
    \   return V\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t\
    @test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpei_34fux.jl:35\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpei_34fux.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpei_34fux.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpei_34fux.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpei_34fux.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpei_34fux.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpei_34fux.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpei_34fux.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpei_34fux.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpei_34fux.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    out = Int64[]\n    while\
    \ n > 0\n        push!(out, n)\n        if n % 2 == 0\n            n = n + 1\n\
    \        else\n            n = n + 2\n        end\n    end\n    return out\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    for\
    \ i in 2:64\n        n = n % 2 == 0 ? n + 2 : n + 1\n        push!(levels, n)\n\
    \    end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbehnnie5.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6, 8, 10, 12, 14, 16, 18, 20  \u2026  110,\
    \ 112, 114, 116, 118, 120, 122, 124, 126, 128] == [3, 5, 7]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbehnnie5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbehnnie5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbehnnie5.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8, 10, 12, 14, 16, 18, 20, 22  \u2026  112, 114, 116, 118,\
    \ 120, 122, 124, 126, 128, 130] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbehnnie5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbehnnie5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbehnnie5.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12, 14, 16, 18, 20, 22  \u2026  112, 114, 116,\
    \ 118, 120, 122, 124, 126, 128, 130] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbehnnie5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbehnnie5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpbehnnie5.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10, 12, 14, 16, 18, 20, 22, 24  \u2026  114, 116,\
    \ 118, 120, 122, 124, 126, 128, 130, 132] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbe"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbehnnie5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = n\n    levels\
    \ = [stones]\n    while stones > 1\n        if stones % 2 == 0\n            stones\
    \ = stones / 2\n        else\n            stones = stones - 1\n        end\n \
    \       push!(levels, stones)\n    end\n    return levels\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn80izgox.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80izgox.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80izgox.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn80izgox.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80izgox.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80izgox.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn80izgox.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80izgox.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80izgox.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn80izgox.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80izgox.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80izgox.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn80izgox.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn80izgox.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = zeros(Int64, n)\n\
    \    v[1] = n\n    for i in 2:n\n        if v[i-1] % 2 == 0\n            v[i]\
    \ = v[i-1] + 1\n        else\n            v[i] = v[i-1] + 2\n        end\n   \
    \ end\n    return v\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprjw_uxgl.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjw_uxgl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjw_uxgl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprjw_uxgl.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjw_uxgl.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjw_uxgl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprjw_uxgl.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjw_uxgl.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjw_uxgl.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprjw_uxgl.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(n)\n\
    \    v[1] = n\n    for i in 2:n\n        if v[i-1] % 2 == 0\n            v[i]\
    \ = v[i-1] + 2\n        else\n            v[i] = v[i-1] + 1\n        end\n   \
    \ end\n    return v\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgwjappz1.jl:31\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpgwjappz1.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgwjappz1.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgwjappz1.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgwjappz1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpgwjappz1.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgwjappz1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgwjappz1.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpgwjappz1.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgwjappz1.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    next(x) = isodd(x) ?\
    \ x+2 : x+1\n    return [ next(n) for i=1:n-1 ]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppm2i0tmh.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 5] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm2i0tmh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm2i0tmh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppm2i0tmh.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm2i0tmh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm2i0tmh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppm2i0tmh.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 7, 7, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm2i0tmh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm2i0tmh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppm2i0tmh.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 7, 7, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm2i0tmh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm2i0tmh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppm2i0tmh.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [9, 9, 9, 9,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm2i0tmh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1 return [1]\
    \ end\n    [n, next_even_or_odd(n)]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzmo3zl4g.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_even_or_odd not\
    \ defined\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpzmo3zl4g.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmo3zl4g.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmo3zl4g.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpzmo3zl4g.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_even_or_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpzmo3zl4g.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmo3zl4g.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmo3zl4g.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpzmo3zl4g.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_even_or_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpzmo3zl4g.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzmo3zl4g.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzmo3zl4g.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpzmo3zl4g.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_even_or_odd not\
    \ defined\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpzmo3zl4g.jl:16\n\
    \   [2] macro expansion\n     @ "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzmo3zl4g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    # Initialize vector\n\
    \    stones = zeros(Int64, n)\n    \n    # Outer loop over each level\n    for\
    \ i in 0:n-1\n        \n        # If 0 or 1, number of stones = 1\n        if\
    \ i == 0 || i == 1\n            stones[i+1] = 1\n        elseif i % 2 == 0\n \
    \           stones[i+1] = stones[i] + 2\n        elseif i % 2 == 1\n         \
    \   stones[i+1] = stones[i] + 1\n        end\n    end\n    return stones\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmdiv3v13.jl:38\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 1, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdiv3v13.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdiv3v13.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpmdiv3v13.jl:39\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 1, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdiv3v13.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdiv3v13.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpmdiv3v13.jl:40\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 1, 3, 4, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdiv3v13.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdiv3v13.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpmdiv3v13.jl:41\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 1, 3, 4, 6, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdiv3v13.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdiv3v13.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpmdiv3v13.jl:42\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmdiv3v13.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        throw(ArgumentError(\"\
    The number of levels must be positive\"))\n    end\n    nlevels = []\n    for\
    \ level in 1:n\n        if level % 2 == 0 \n            push!(nlevels, n + level)\n\
    \        else\n            push!(nlevels, n + level + 1)\n        end\n    end\n\
    \    return nlevels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ywve13n.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 5, 7] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ywve13n.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ywve13n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1ywve13n.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 6, 8, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ywve13n.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ywve13n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1ywve13n.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 7, 9, 9, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ywve13n.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ywve13n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1ywve13n.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 8, 10, 10, 12, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ywve13n.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ywve13n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1ywve13n.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ywve13n.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = [n]\n    while v[end]\
    \ > 0\n        if isodd(v[end])\n            push!(v, v[end] - 1)\n        else\n\
    \            push!(v, v[end] - 2)\n        end\n    end\n    return v[1:end-1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgjsshjyz.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjsshjyz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjsshjyz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgjsshjyz.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgjsshjyz.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjsshjyz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgjsshjyz.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 2] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjsshjyz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjsshjyz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgjsshjyz.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 4, 2] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjsshjyz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjsshjyz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgjsshjyz.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 6, 4, 2] == [8, 10, "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgjsshjyz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        return\
    \ []\n    end\n    res = Vector{Int64}(n)\n    res[1] = n\n    i = 1\n    while\
    \ true\n        i += 1\n        res[i] = res[i-1] + ifelse(res[i-1] % 2 == 0,\
    \ 2, 1)\n        if i == n\n            break\n        end\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4t1obc8x.jl:35\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp4t1obc8x.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4t1obc8x.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4t1obc8x.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp4t1obc8x.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp4t1obc8x.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4t1obc8x.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4t1obc8x.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp4t1obc8x.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4t1obc8x.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    v[1] = n\n    for i in 2:n\n        v[i] = ifelse(v[i-1] % 2 == 0, v[i-1]\
    \ + 2, v[i-1] + 1)\n    end\n    return v\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjrhahs_u.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrhahs_u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrhahs_u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjrhahs_u.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrhahs_u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrhahs_u.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjrhahs_u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    level_num_stones = zeros(Int64,\
    \ n)\n    for i in 1:n\n        level_num_stones[i] = n + i\n    end\n    return\
    \ level_num_stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9d0dk03x.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0dk03x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0dk03x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9d0dk03x.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 6, 7, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0dk03x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0dk03x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9d0dk03x.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 7, 8, 9, 10] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0dk03x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0dk03x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9d0dk03x.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 8, 9, 10, 11, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0dk03x.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0dk03x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9d0dk03x.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluat"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d0dk03x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    ans = Vector{Int64}(undef,\
    \ n)\n    ans[1] = n\n    for i in 2:n\n        if n % 2 == 0\n            ans[i]\
    \ = ans[i-1] + 2\n        else\n            ans[i] = ans[i-1] + 1\n        end\n\
    \    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6uij6dqf.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6uij6dqf.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6uij6dqf.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6uij6dqf.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6uij6dqf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6uij6dqf.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6uij6dqf.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    for\
    \ level in n:n+1\n        if level % 2 == 0\n            push!(levels, level +\
    \ 2)\n        else\n            push!(levels, level + 1)\n        end\n    end\n\
    \    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiedeti64.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiedeti64.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiedeti64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiedeti64.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiedeti64.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiedeti64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiedeti64.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiedeti64.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiedeti64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiedeti64.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 8] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiedeti64.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiedeti64.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiedeti64.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 10] == [8,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiedeti64.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = zeros(Int64,\
    \ n)\n    for i in 1:n\n        stones[i] = n + 1 + 2*(i-1)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuxllqbpp.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 6, 8] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxllqbpp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxllqbpp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxllqbpp.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 7, 9, 11] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxllqbpp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxllqbpp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxllqbpp.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 8, 10, 12, 14] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxllqbpp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxllqbpp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxllqbpp.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 9, 11, 13, 15, 17] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxllqbpp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxllqbpp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxllqbpp.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Eva"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuxllqbpp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = zeros(Int64,\
    \ n)\n    pile[1] = n\n    for i in 2:n\n        if pile[i-1] % 2 == 0\n     \
    \       pile[i] = pile[i-1] + 1\n        else\n            pile[i] = pile[i-1]\
    \ + 2\n        end\n    end\n    return pile\nend\nmake_a_pile(3)\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxc2cii9j.jl:33\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxc2cii9j.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxc2cii9j.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxc2cii9j.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxc2cii9j.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxc2cii9j.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxc2cii9j.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxc2cii9j.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxc2cii9j.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxc2cii9j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    n_stones = [n]\n   \
    \ while n_stones[end] > 1\n        n_stones = [n_stones..., n_stones[end] % 2\
    \ == 0 ? (n_stones[end] + 2) : (n_stones[end] + 1)]\n    end\n    return n_stones\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    m = n\n    r = [n]\n\
    \    for i in 1:n\n        if mod(m,2) == 0\n            m += 1\n        else\n\
    \            m += 2\n        end\n        push!(r,m)\n    end\n    return r\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd11ehozl.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 7, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11ehozl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11ehozl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpd11ehozl.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 5, 7, 9, 11] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11ehozl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11ehozl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpd11ehozl.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 9, 11, 13, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11ehozl.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11ehozl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpd11ehozl.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15, 17] == [6, 8, 10, 12, 14, 16]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11ehozl.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11ehozl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpd11ehozl.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd11ehozl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Write your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps07ier7_.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmps07ier7_.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps07ier7_.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps07ier7_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmps07ier7_.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmps07ier7_.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps07ier7_.jl:23 [inlined]\n\
    \   [4] macro expansion\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps07ier7_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    vec = [n]\n    while\
    \ n != 0\n        if n % 2 == 0\n            n = n / 2\n        else\n       \
    \     n = (n - 1) / 2\n        end\n        push!(vec, n)\n    end\n    return\
    \ vec\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_bcsoxlx.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1, 0] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_bcsoxlx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_bcsoxlx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_bcsoxlx.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1, 0] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_bcsoxlx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_bcsoxlx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_bcsoxlx.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 1, 0] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_bcsoxlx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_bcsoxlx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_bcsoxlx.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 1, 0] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_bcsoxlx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_bcsoxlx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp_bcsoxlx.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_bcsoxlx.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones_level = zeros(n)\n\
    \    stones_level[1] = n\n    if n != 1\n        for i in 2:n\n            stones_level[i]\
    \ = stones_level[i-1] + (i % 2) + (1 - i % 2)\n        end\n    end\n    return\
    \ stones_level\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprdyqo20s.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdyqo20s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdyqo20s.jl:28\ntest set: Test\
    \ Failed at /tmp/tmprdyqo20s.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 5, 6, 7] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdyqo20s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdyqo20s.jl:28\ntest set: Test\
    \ Failed at /tmp/tmprdyqo20s.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdyqo20s.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdyqo20s.jl:28\ntest set: Test\
    \ Failed at /tmp/tmprdyqo20s.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 8, 9, 10, 11] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprdyqo20s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprdyqo20s.jl:28\ntest set: Test\
    \ Failed at /tmp/tmprdyqo20s.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdyqo20s.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    x = make_a_pile(n-1)\n    y = x[end]\n    y = ifelse(y % 2\
    \ == 0, y+2, y+1)\n    append!(x, y)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplp7deft4.jl:28\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 2, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp7deft4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp7deft4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplp7deft4.jl:29\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 2, 4, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp7deft4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp7deft4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplp7deft4.jl:30\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 2, 4, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp7deft4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp7deft4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplp7deft4.jl:31\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 2, 4, 6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp7deft4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp7deft4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmplp7deft4.jl:32\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplp7deft4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\n \
    \   vec = []\n    if n == 1\n        return [1]\n    end\n    if n%2 == 0\n  \
    \      vec = push!(vec,n,n+2)\n        for i in 3:n-1\n            if i%2 == 0\n\
    \                push!(vec,vec[end]+2)\n            else\n                push!(vec,vec[end]+1)\n\
    \            end\n        end\n    else\n        vec = push!(vec,n,n+1)\n    \
    \    for i in 3:n-1\n            if i%2 == 0\n                push!(vec,vec[end]+2)\n\
    \            else\n                push!(vec,vec[end]+1)\n            end\n  \
    \      end\n    end\n    return vec\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1lkbct_y.jl:46\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1lkbct_y.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1lkbct_y.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp1lkbct_y.jl:47\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1lkbct_y.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1lkbct_y.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp1lkbct_y.jl:48\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1lkbct_y.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1lkbct_y.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp1lkbct_y.jl:49\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1lkbct_y.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1lkbct_y.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp1lkbct_y.jl:50\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 11"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1lkbct_y.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"\n    Make a stone\
    \ pile given the number of levels as n.\n    \"\"\"\n    if n < 1\n        error(\"\
    n must be positive.\")\n    end\n    stones_in_level = []\n    for level in 1:n\n\
    \        stones_in_level[end+1] = ifelse(level%2 == 0, level-1, level+1)\n   \
    \ end\n    return stones_in_level\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb3utertf.jl:32\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  BoundsError: attempt to access 0-element\
    \ Vector{Any} at index [1]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmpb3utertf.jl:23\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb3utertf.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb3utertf.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpb3utertf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  BoundsError: attempt to access 0-element Vector{Any}\
    \ at index [1]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479 [inlined]\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmpb3utertf.jl:23\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb3utertf.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb3utertf.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpb3utertf.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  BoundsError: attempt to access 0-element\
    \ Vector{Any} at index [1]\n  Stacktrace:\n   [1] setindex!\n     @ ./essentials.jl:479\
    \ [inlined]\n   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmpb3utertf.jl:23\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb3utertf.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb3utertf.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpb3utertf.jl:35\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb3utertf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Array{Int64}(n)\n\
    \    for i in 1:n\n        n += 1 - n % 2\n        levels[i] = n\n    end\n  \
    \  return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxacjvaf9.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpxacjvaf9.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxacjvaf9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxacjvaf9.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpxacjvaf9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpxacjvaf9.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxacjvaf9.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    this_level = [n]\n \
    \   for i in 2:n\n        if isodd(n)\n            push!(this_level, next_odd(this_level[end]))\n\
    \        else\n            push!(this_level, next_even(this_level[end]))\n   \
    \     end\n    end\n    return this_level\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv4y90s98.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpv4y90s98.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv4y90s98.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv4y90s98.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv4y90s98.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_even not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpv4y90s98.jl:20\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv4y90s98.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv4y90s98.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv4y90s98.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_odd not defined\n \
    \ Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpv4y90s98.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv4y90s98.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv4y90s98.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv4y90s98.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_even not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpv4y90s98.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv4y90s98.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    b = []\n    for i in\
    \ 1:n\n        push!(b, i)\n    end\n    for j in 1:n\n        if j % 2 == 0\n\
    \            b[j] = b[j] + 1\n        else\n            b[j] = b[j] + 2\n    \
    \    end\n    end\n    return b\nend\nmake_a_pile(5)\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2d1_9j6v.jl:34\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d1_9j6v.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d1_9j6v.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2d1_9j6v.jl:35\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [3, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d1_9j6v.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d1_9j6v.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2d1_9j6v.jl:36\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [3, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d1_9j6v.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d1_9j6v.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2d1_9j6v.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [3, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d1_9j6v.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d1_9j6v.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp2d1_9j6v.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2d1_9j6v.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"\n    >>> make_a_pile(3)\n\
    \    [3, 5, 7]\n    \"\"\"\n    levels = []\n    for level in 1:n\n        level_stones\
    \ = n - level + 1\n        if level_stones % 2 == 0\n            level_stones\
    \ += 1\n        else\n            level_stones += 2\n        end\n        push!(levels,\
    \ level_stones)\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp65gnk01x.jl:36\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 3, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65gnk01x.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65gnk01x.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp65gnk01x.jl:37\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 5, 3, 3] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65gnk01x.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65gnk01x.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp65gnk01x.jl:38\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 5, 5, 3, 3] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65gnk01x.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65gnk01x.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp65gnk01x.jl:39\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 7, 5, 5, 3, 3] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65gnk01x.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65gnk01x.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp65gnk01x.jl:40\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp65gnk01x.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones_in_pile = [n]\n\
    \    while stones_in_pile[end] != 1\n        if stones_in_pile[end] % 2 == 0\n\
    \            push!(stones_in_pile, stones_in_pile[end]/2)\n        else\n    \
    \        push!(stones_in_pile, stones_in_pile[end]*3 + 1)\n        end\n    end\n\
    \    return stones_in_pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxr9f7_n9.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 10, 5, 16, 8, 4, 2, 1] == [3, 5, 7]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxr9f7_n9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxr9f7_n9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxr9f7_n9.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxr9f7_n9.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxr9f7_n9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxr9f7_n9.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 16, 8, 4, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxr9f7_n9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxr9f7_n9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxr9f7_n9.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 10, 5, 16, 8, 4, 2, 1] == [6, 8, 10, 12, 14, 16]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxr9f7_n9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxr9f7_n9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxr9f7_n9.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxr9f7_n9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if !(n > 0)\n      \
    \  error(\"Please enter a positive integer!\")\n    end\n    if n == 1\n     \
    \   return [1]\n    end\n    if n % 2 == 0\n        return [n; make_a_pile(n+2)]\n\
    \    else\n        return [n; make_a_pile(n+1)]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Array{Int64}(n)\
    \ \n    for i = 1:n \n        pile[i] = i*2 + 1 \n    end \n    return pile \n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphfik5rek.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmphfik5rek.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphfik5rek.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphfik5rek.jl:25\ntest set:\
    \ Error During Test at /tmp/tmphfik5rek.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmphfik5rek.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphfik5rek.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   while n > 0\n        push!(levels, n)\n        n = n + 2*Int64(isodd(n)) -\
    \ 1\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    l = [n]\n    while l[end]\
    \ != 1\n        l = append!(l, next_num(l[end]))\n    end\n    return l\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpho9gtu4h.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_num not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpho9gtu4h.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpho9gtu4h.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpho9gtu4h.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpho9gtu4h.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_num not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpho9gtu4h.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpho9gtu4h.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpho9gtu4h.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpho9gtu4h.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_num not defined\n \
    \ Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpho9gtu4h.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpho9gtu4h.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpho9gtu4h.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpho9gtu4h.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_num not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpho9gtu4h.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/shar"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpho9gtu4h.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = Vector{Int64}(undef,\
    \ 0)\n    for i in 1:n\n        if i % 2 == 0\n            push!(res, n+i)\n \
    \       else\n            push!(res, n+i+1)\n        end\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9nwl09hq.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 5, 7] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9nwl09hq.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9nwl09hq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9nwl09hq.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 6, 8, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9nwl09hq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9nwl09hq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9nwl09hq.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 7, 9, 9, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9nwl09hq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9nwl09hq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9nwl09hq.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 8, 10, 10, 12, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9nwl09hq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9nwl09hq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9nwl09hq.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9nwl09hq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    a,i=Int64[],1\n    for\
    \ b in 0:n\n        a=push!(a,b)\n    end\n    for c in 1:length(a)\n        if\
    \ c%2==0\n            a[c]=a[c]+i\n            i+=1\n        else\n          \
    \  a[c]=a[c]+i\n            i+=1\n        end\n    end\n    return a\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8un2tzln.jl:35\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5, 7] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8un2tzln.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8un2tzln.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8un2tzln.jl:36\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8un2tzln.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8un2tzln.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8un2tzln.jl:37\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 7, 9, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8un2tzln.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8un2tzln.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8un2tzln.jl:38\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 7, 9, 11, 13] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8un2tzln.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8un2tzln.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8un2tzln.jl:39\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8un2tzln.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = []\n    for\
    \ i in 1:n\n        if n%2==0\n            push!(levels, n+i)\n        else\n\
    \            push!(levels, n+i+1)\n        end\n    end\n    return levels\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9eqo6apa.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 6, 7] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eqo6apa.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eqo6apa.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9eqo6apa.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [5, 6, 7, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eqo6apa.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eqo6apa.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9eqo6apa.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 8, 9, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eqo6apa.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eqo6apa.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9eqo6apa.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [7, 8, 9, 10, 11, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9eqo6apa.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9eqo6apa.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9eqo6apa.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9eqo6apa.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    counter = 1\n    result[1] = n\n    while counter < n\n        if result[counter]\
    \ % 2 == 0\n            result[counter+1] = result[counter] + 2\n        else\n\
    \            result[counter+1] = result[counter] + 1\n        end\n        counter\
    \ += 1\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5k7e8h8w.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5k7e8h8w.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5k7e8h8w.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5k7e8h8w.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5k7e8h8w.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5k7e8h8w.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5k7e8h8w.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n \
    \   x=[]\n    while n>=1\n        push!(x,n)\n        if n%2==0\n            n=n+1\n\
    \        else\n            n=n+2\n        end\n    end\n    x\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = []\n    while\
    \ n > 0\n        push!(result, n)\n        if n % 2 == 0\n            n -= 1\n\
    \        else\n            n -= 2\n        end\n    end\n    reverse(result)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxoz0bs7s.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoz0bs7s.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoz0bs7s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxoz0bs7s.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoz0bs7s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoz0bs7s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxoz0bs7s.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoz0bs7s.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoz0bs7s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxoz0bs7s.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxoz0bs7s.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxoz0bs7s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxoz0bs7s.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 7, 8] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxoz0bs7s.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        println(\"\
    Error, n must be at least 1\")\n        return\n    end\n    # initialize an array\
    \ to store pile info\n    pile = zeros(Int64, n)\n    pile[1] = n\n    for i in\
    \ 2:n\n        if isodd(pile[i-1])\n            pile[i] = pile[i-1] + 2\n    \
    \    else\n            pile[i] = pile[i-1] + 1\n        end\n    end\n    return\
    \ pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_pl_ctdp.jl:37\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pl_ctdp.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pl_ctdp.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp_pl_ctdp.jl:39\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pl_ctdp.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pl_ctdp.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp_pl_ctdp.jl:40\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_pl_ctdp.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_pl_ctdp.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_pl_ctdp.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        stones[i] = 2i - 1\n    end\n\
    \    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3cmjocgs.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cmjocgs.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cmjocgs.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3cmjocgs.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 5, 7] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cmjocgs.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cmjocgs.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3cmjocgs.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 5, 7, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cmjocgs.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cmjocgs.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3cmjocgs.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 5, 7, 9, 11] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cmjocgs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cmjocgs.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3cmjocgs.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cmjocgs.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ 0) \n    while n != 0 \n        push!(v, n) \n        if n % 2 == 0 \n     \
    \       n = n + 1 \n        else \n            n = n + 2 \n        end \n    end\
    \ \n    return v \nend \nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    output = Array{Int64}(n)\n\
    \    output[1] = n\n    for i in 2:n\n        output[i] = ifelse(n % 2 == 0, output[i-1]\
    \ + 2, output[i-1] + 1)\n    end\n    return output\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo4rner5e.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpo4rner5e.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo4rner5e.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo4rner5e.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpo4rner5e.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching (Array{Int64})(::Int64)\n\
    \  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpo4rner5e.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4rner5e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n==1\n        [1]\n\
    \    else\n        if mod(n,2)==0\n            vcat(n, make_a_pile(n+1))\n   \
    \     else\n            vcat(n, make_a_pile(n+2))\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] * n\n    else\n        return\
    \ [n] * (n - 1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp16esw6dm.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16esw6dm.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16esw6dm.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp16esw6dm.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [16] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp16esw6dm.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16esw6dm.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp16esw6dm.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [20] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16esw6dm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16esw6dm.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp16esw6dm.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [36] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp16esw6dm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp16esw6dm.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp16esw6dm.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [64] == [8, 10, 12, 14, 16, 18, 20, 22]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp16esw6dm.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    s = [n]\n    while\
    \ s[end] > 1\n        if s[end] % 2 == 0\n            s = [s; s[end] - 1]\n  \
    \      else\n            s = [s; s[end] - 2]\n        end\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnmbnb7bi.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmbnb7bi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmbnb7bi.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnmbnb7bi.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmbnb7bi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmbnb7bi.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnmbnb7bi.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmbnb7bi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmbnb7bi.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnmbnb7bi.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmbnb7bi.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmbnb7bi.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnmbnb7bi.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmbnb7bi.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    z = zeros(Int64, n)\n\
    \    z[1] = n\n    for i in 2:n\n        if iseven(z[i-1])\n            z[i] =\
    \ z[i-1] + 2\n        else\n            z[i] = z[i-1] + 1\n        end\n    end\n\
    \    return z\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ftqrr3m.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ftqrr3m.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ftqrr3m.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9ftqrr3m.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ftqrr3m.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ftqrr3m.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ftqrr3m.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    stones = n\n    for i in 1:n\n        result[i] = stones\n        if\
    \ stones % 2 == 0\n            stones += 1\n        else\n            stones +=\
    \ 2\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpydeg5905.jl:33\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydeg5905.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydeg5905.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpydeg5905.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydeg5905.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydeg5905.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpydeg5905.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpydeg5905.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpydeg5905.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydeg5905.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = Int64[]\n    append!(res,\
    \ n)\n    while true\n        if res[end]%2 == 0\n            append!(res, res[end]+2)\n\
    \        else\n            append!(res, res[end]+1)\n        end\n        if length(res)\
    \ == n\n            break\n        end\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvp75oepw.jl:34\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp75oepw.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp75oepw.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpvp75oepw.jl:36\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp75oepw.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp75oepw.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvp75oepw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] != 1\n        if isodd(stones[end])\n            push!(stones, stones[end]\
    \ + 2)\n        else\n            push!(stones, stones[end] + 1)\n        end\n\
    \    end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    list = []\n  \
    \  for i in 1:n \n        list = push!(list, n)\n        if n%2 == 0\n       \
    \     n = n+2\n        else\n            n = n+1\n        end\n    end \n    return\
    \ list\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmp9fvky7.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmp9fvky7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmp9fvky7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpmp9fvky7.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmp9fvky7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmp9fvky7.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmp9fvky7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = fill(1, n)\n\
    \    pile[1] = n\n    for i in 2:n\n        pile[i] = pile[i-1] + 1 + Int64(isodd(pile[i-1]))\n\
    \    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp65rip1lk.jl:28\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65rip1lk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65rip1lk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp65rip1lk.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65rip1lk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65rip1lk.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp65rip1lk.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp65rip1lk.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp65rip1lk.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp65rip1lk.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,n)\n\
    \    stones[1] = n\n    for i in 2:n\n        if i % 2 == 0\n            stones[i]\
    \ = stones[i-1] + 2\n        else\n            stones[i] = stones[i-1] + 1\n \
    \       end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzocrpgd_.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzocrpgd_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzocrpgd_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpzocrpgd_.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzocrpgd_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzocrpgd_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpzocrpgd_.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzocrpgd_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzocrpgd_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpzocrpgd_.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzocrpgd_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzocrpgd_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpzocrpgd_.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzocrpgd_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    s = Vector{Int64}(undef,n)\n\
    \    s[1] = n\n    for i in 2:n\n        s[i] = ifelse(s[i-1]%2==0,s[i-1]+2,s[i-1]+1)\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1jz6s1zv.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1jz6s1zv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1jz6s1zv.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1jz6s1zv.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1jz6s1zv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1jz6s1zv.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1jz6s1zv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    list = [n]\n    while\
    \ length(list) < n\n        if n % 2 == 0\n            push!(list, (list[end]\
    \ + 2))\n        else\n            push!(list, (list[end] + 1))\n        end\n\
    \    end\n    return list\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpieerdjpt.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpieerdjpt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpieerdjpt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpieerdjpt.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpieerdjpt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpieerdjpt.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpieerdjpt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    next_level = n % 2 == 0 ? n + 2 : n + 1\n    return [n] .+\
    \ make_a_pile(next_level)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stone_array = Vector{Int64}()\n\
    \    push!(stone_array, n)\n    for i = 1:n-1\n        push!(stone_array, n+i)\n\
    \    end\n    return stone_array\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3nul4vnl.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nul4vnl.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nul4vnl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3nul4vnl.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 5, 6, 7] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nul4vnl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nul4vnl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3nul4vnl.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nul4vnl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nul4vnl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3nul4vnl.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 8, 9, 10, 11] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3nul4vnl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3nul4vnl.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp3nul4vnl.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3nul4vnl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    ns = []\n    while n\
    \ > 0\n        push!(ns, n)\n        if n % 2 == 0\n            n -= 1\n     \
    \   else\n            n -= 2\n        end\n    end\n    reverse(ns)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyy0krxnh.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyy0krxnh.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyy0krxnh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpyy0krxnh.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyy0krxnh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyy0krxnh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpyy0krxnh.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyy0krxnh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyy0krxnh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpyy0krxnh.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyy0krxnh.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyy0krxnh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpyy0krxnh.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 7, 8] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyy0krxnh.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = fill(0, n)\n   \
    \ v[1] = n\n    for i in 2:n\n        v[i] = v[i-1] + next_even_odd(v[i-1])\n\
    \    end\n    return v\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvm7jqnwb.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpvm7jqnwb.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvm7jqnwb.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvm7jqnwb.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvm7jqnwb.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpvm7jqnwb.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvm7jqnwb.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvm7jqnwb.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvm7jqnwb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpvm7jqnwb.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvm7jqnwb.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvm7jqnwb.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvm7jqnwb.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpvm7jqnwb.jl:18\n\
    \   [2] macro expansion\n     @ /shared/cent"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvm7jqnwb.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = zeros(Int64, n)\n\
    \    for i in 1:n\n        n = n + 2i\n        res[i] = n\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdm8ae8bt.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 9, 15] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm8ae8bt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm8ae8bt.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm8ae8bt.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 10, 16, 24] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm8ae8bt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm8ae8bt.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm8ae8bt.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 11, 17, 25, 35] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm8ae8bt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm8ae8bt.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm8ae8bt.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 12, 18, 26, 36, 48] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm8ae8bt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm8ae8bt.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm8ae8bt.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdm8ae8bt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    if n\
    \ >= 1\n        for i in 2:n\n            if pile[i-1] % 2 == 0\n            \
    \    push!(pile, pile[i-1] + 2)\n            else\n                push!(pile,\
    \ pile[i-1] + 1)\n            end\n        end\n    end\n    return pile\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdu62hkzl.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdu62hkzl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdu62hkzl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpdu62hkzl.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdu62hkzl.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdu62hkzl.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdu62hkzl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # we need to determine\
    \ if n is odd or even \n    # so that we know what to add to the first number\n\
    \    # to create the next level\n    n%2 == 0 ? next_number = n+2 : next_number\
    \ = n+1 \n    return vcat(n, make_a_pile(next_number))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    l = [n]\n    while l[end]\
    \ != 1\n        l = [l..., (l[end]%2==0)? l[end]+1 : l[end]+2]\n    end\n    return\
    \ l\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn6slxnee.jl:17\nin expression starting at\
    \ /tmp/tmpn6slxnee.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   i = n\n    while i > 0\n        push!(levels, i)\n        if i % 2 == 0\n\
    \            i += 1\n        else\n            i += 2\n        end\n    end\n\
    \    reverse(levels)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = Int64[]\n    push!(res,\
    \ n)\n    while n != 1\n        if n % 2 == 0\n            n = n / 2\n       \
    \ else\n            n = (n + 1) / 2\n        end\n        push!(res, n)\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7zofpc1j.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zofpc1j.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zofpc1j.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp7zofpc1j.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zofpc1j.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zofpc1j.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp7zofpc1j.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zofpc1j.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zofpc1j.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp7zofpc1j.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zofpc1j.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zofpc1j.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp7zofpc1j.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7zofpc1j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        stones = [stones; next_stone(stones[end])]\n    end\n\
    \    stones[1:end-1]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwiz19a1s.jl:26\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_stone not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwiz19a1s.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwiz19a1s.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwiz19a1s.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwiz19a1s.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_stone not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwiz19a1s.jl:17\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwiz19a1s.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwiz19a1s.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwiz19a1s.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_stone not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwiz19a1s.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwiz19a1s.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwiz19a1s.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwiz19a1s.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_stone not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpwiz19a1s.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwiz19a1s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n == 2\n        return [2,4]\n    end\n    if n == 3\n\
    \        return [3,5,7]\n    end\n    if n % 2 == 0\n        return make_a_pile(n-1)\
    \ .* [1, 2]\n    else\n        return make_a_pile(n-1) .* [1, 2] .- [1, 2]\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf35eephp.jl:36\n  Test threw exception\n\
    \  Expression: candidate(4) == [4, 6, 8, 10]\n  DimensionMismatch(\"arrays could\
    \ not be broadcast to a common size; got a dimension with lengths 3 and 2\")\n\
    \  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n\
    \      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504\
    \ [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5]\
    \ instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n   \
    \   @ ./broadcast.jl:860 [inlined]\n    [7] make_a_pile(n::Int64)\n      @ Main\
    \ /tmp/tmpf35eephp.jl:25\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf35eephp.jl:36 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf35eephp.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpf35eephp.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  DimensionMismatch(\"arrays could not be\
    \ broadcast to a common size; got a dimension with lengths 3 and 2\")\n  Stacktrace:\n\
    \    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510\
    \ [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n \
    \   [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n\
    \      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860\
    \ [inlined]\n    [7] make_a_pile(n::Int64)\n      @ Main /tmp/tmpf35eephp.jl:25\n\
    \    [8] make_a_pile(n::Int64)\n      @ Main /tmp/tmpf35eephp.jl:0\n    [9] macro\
    \ expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpf35eephp.jl:37 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpf35eep"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf35eephp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    values = zeros(Int64,\
    \ n)\n    values[1] = n\n    for i in 2:n\n        values[i] = values[i-1] + (1\
    \ - 2*mod(values[i-1], 2))\n    end\n    return values\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9npjgj7w.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9npjgj7w.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9npjgj7w.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9npjgj7w.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 5, 4, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9npjgj7w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9npjgj7w.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9npjgj7w.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 5, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9npjgj7w.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9npjgj7w.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9npjgj7w.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 6, 7, 6, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9npjgj7w.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9npjgj7w.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9npjgj7w.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9npjgj7w.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    s = Vector{Int64}(undef,\
    \ n)\n    s[1] = n\n    for i in 2:n\n        if mod(n, 2) == 0 \n           \
    \ s[i] = s[i-1] + 2\n        else\n            s[i] = s[i-1] + 1\n        end\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptgmr0vxy.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgmr0vxy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgmr0vxy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptgmr0vxy.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgmr0vxy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgmr0vxy.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptgmr0vxy.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1 return [1]\
    \ end\n    function _make_a_pile(n::Int64)::Vector{Int64}\n        if n == 1 return\
    \ [1] end\n        if n%2 == 0 next_level = n + 2\n        else next_level = n\
    \ + 1 end\n        return vcat([n], _make_a_pile(next_level))\n    end\n    return\
    \ _make_a_pile(n)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    n < 1 && error(\"n must\
    \ be a positive integer\")\n    level = n\n    pile = Vector{Int64}(undef, n)\n\
    \    for i in 1:n\n        push!(pile, level)\n        level = (level % 2 == 0\
    \ ? level+2 : level+1)\n    end\n    return pile\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjhkathdl.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [0, 0, 0, 3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjhkathdl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjhkathdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjhkathdl.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [46917389752848, 9521, -1, 0, 4, 6, 8, 10] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjhkathdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjhkathdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjhkathdl.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [46917362255544, 46917361785440, 46917361704272, 46917361687512,\
    \ 46917361680336, 5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjhkathdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjhkathdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjhkathdl.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [46917470672400, 46917470672400, 46917470672400, 46917470672400,\
    \ 46917470672400, 46917470672400, 6, 8, 10, 12, 14, 16] == [6, 8, 10, 12, 14,\
    \ 16]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjhkathdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjhkathdl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    result[1] = n\n    for k in 2:n\n        result[k] = result[k-1] + 2*(k\
    \ % 2 == 1)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0zm6a0jh.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zm6a0jh.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zm6a0jh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0zm6a0jh.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 4, 6, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zm6a0jh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zm6a0jh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0zm6a0jh.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 5, 7, 7, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zm6a0jh.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zm6a0jh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0zm6a0jh.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 6, 8, 8, 10, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zm6a0jh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zm6a0jh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0zm6a0jh.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0zm6a0jh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    n > 0 || error(\"n must\
    \ be positive\")\n    if n == 1\n        return [1]\n    end\n    @assert n >\
    \ 1\n    v = Vector{Int64}(undef, n)\n    v[1] = n\n    for i in 2:n\n       \
    \ v[i] = v[i-1] + 2*(v[i-1] % 2 - 1)\n    end\n    return v\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwa6cm3uu.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwa6cm3uu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwa6cm3uu.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwa6cm3uu.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 0, -2] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwa6cm3uu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwa6cm3uu.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwa6cm3uu.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 5, 5, 5, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwa6cm3uu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwa6cm3uu.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwa6cm3uu.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 4, 2, 0, -2, -4] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwa6cm3uu.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwa6cm3uu.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwa6cm3uu.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluate"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwa6cm3uu.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 0\n        if n % 2 == 0\n            n += 1\n        else\n           \
    \ n += 2\n        end\n        push!(result, n)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    next_level = []\n  \
    \  while n > 0\n        push!(next_level, n)\n        if n % 2 == 0\n        \
    \    n = n + 1\n        else\n            n = n + 2\n        end\n    end\n  \
    \  return next_level\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ pile[end] > 1\n        if isodd(pile[end])\n            push!(pile, (pile[end]\
    \ - 1) / 2)\n        else\n            push!(pile, (pile[end] - 2) / 2)\n    \
    \    end\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnqi4qohy.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqi4qohy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqi4qohy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqi4qohy.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpnqi4qohy.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqi4qohy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqi4qohy.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 0] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqi4qohy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqi4qohy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqi4qohy.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 2, 0] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqi4qohy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqi4qohy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqi4qohy.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 3, 1] == [8, 10, 12,"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqi4qohy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    a = [n]\n    for i in\
    \ n:n+1:2n\n        push!(a, i)\n    end\n    return a\nend\n \nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdm46ehz8.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm46ehz8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm46ehz8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm46ehz8.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdm46ehz8.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm46ehz8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm46ehz8.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm46ehz8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm46ehz8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm46ehz8.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdm46ehz8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdm46ehz8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdm46ehz8.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 8] == [8, 10, 12, 14, 16, "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdm46ehz8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    r = [n]\n    for i in\
    \ n:n+4\n        if n % 2 == 0\n            r = [r, i+2]\n        else\n     \
    \       r = [r, i+2]\n        end\n    end\n    return r\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxfpxzhq9.jl:30\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Any} to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{Int64}, x::Vector{Any}, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{Int64}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{Int64}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] make_a_pile(n::Int64)\n      @ Main /tmp/tmpxfpxzhq9.jl:23\n   [11] macro\
    \ expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpxfpxzhq9.jl:30 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpxfpxzhq9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxfpxzhq9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Vector{Any} to an object of type Int64\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxfpxzhq9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    @assert n >= 1 \"n should\
    \ be positive\"\n    steps = Vector{Int64}(undef, n)\n    steps[1] = n\n    for\
    \ i in 2:n\n        steps[i] = ifelse(i%2==0, steps[i-1]+2, steps[i-1]+1)\n  \
    \  end\n    return steps\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpagbaas97.jl:28\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagbaas97.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagbaas97.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpagbaas97.jl:29\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagbaas97.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagbaas97.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpagbaas97.jl:30\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagbaas97.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagbaas97.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpagbaas97.jl:31\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagbaas97.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagbaas97.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpagbaas97.jl:32\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpagbaas97.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \n    # initialize a\
    \ vector to store the number of stones in each level\n    v = Vector{Int64}(n)\n\
    \    \n    # add the first number to the vector\n    v[1] = n\n    \n    # loop\
    \ through each level and add the number of stones to the vector\n    for i in\
    \ 2:n\n        if v[i-1] % 2 == 0\n            v[i] = v[i-1] + 2\n        else\n\
    \            v[i] = v[i-1] + 1\n        end\n    end\n    \n    return v\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5mjvjzlb.jl:38\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp5mjvjzlb.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5mjvjzlb.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5mjvjzlb.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp5mjvjzlb.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching Vector{Int64}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmp5mjvjzlb.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5mjvjzlb.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5mjvjzlb.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp5mjvjzlb.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mjvjzlb.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n != 1\n        if n % 2 == 0 \n            n = n/2\n        else \n       \
    \     n = (n-1)/2\n        end\n        push!(pile, n)\n    end\n    return pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcxex1i_g.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxex1i_g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxex1i_g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcxex1i_g.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxex1i_g.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxex1i_g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcxex1i_g.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxex1i_g.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxex1i_g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcxex1i_g.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcxex1i_g.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcxex1i_g.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpcxex1i_g.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxex1i_g.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    dp = Vector{Int64}(undef,\
    \ n)\n    dp[1] = n\n    for i in 2:n\n        dp[i] = 2*i-1 if dp[i-1] % 2 ==\
    \ 1 else 2*i\n    end\n    return dp\nend\n\"\"\"\n    Given an array of integers\
    \ (negative values, positive values and zero),\n    change the sign of all the\
    \ negative numbers of the array to positive.\n    Return the array with changed\
    \ signs.\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp6a6qgcpg.jl:17 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6a6qgcpg.jl:18\n\
    in expression starting at /tmp/tmp6a6qgcpg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 0\n        error(\"\
    Input must be positive\")\n    end\n    s = Vector{Int64}(undef, n)\n    s[1]\
    \ = n\n    for i = 2:n\n        if s[i-1] % 2 == 0\n            s[i] = s[i-1]\
    \ + 1\n        else\n            s[i] = s[i-1] + 2\n        end\n    end\n   \
    \ return s\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t\
    @test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnesjahlw.jl:35\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnesjahlw.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnesjahlw.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpnesjahlw.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnesjahlw.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnesjahlw.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpnesjahlw.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnesjahlw.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnesjahlw.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnesjahlw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    result[1] = n\n    for i in 2:n\n        if n % 2 == 0\n           \
    \ result[i] = n + 1\n        else\n            result[i] = n + 2\n        end\n\
    \        n = result[i]\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1f9sn66s.jl:33\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1f9sn66s.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1f9sn66s.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1f9sn66s.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1f9sn66s.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1f9sn66s.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1f9sn66s.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1f9sn66s.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1f9sn66s.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1f9sn66s.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        throw(ArgumentError(\"\
    n must be greater than zero\"))\n    end\n    pile = []\n    for i in 0:n-1\n\
    \        if i % 2 == 0\n            push!(pile, n+i)\n        else\n         \
    \   push!(pile, n+i+1)\n        end\n    end\n    return pile\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9hz9a8yy.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hz9a8yy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hz9a8yy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9hz9a8yy.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hz9a8yy.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hz9a8yy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9hz9a8yy.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 7, 9, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hz9a8yy.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hz9a8yy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9hz9a8yy.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 8, 10, 10, 12] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hz9a8yy.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hz9a8yy.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9hz9a8yy.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluate"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9hz9a8yy.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = n\n    start\
    \  = n%2 == 0 ? n+1 : n+2\n    add_stones = start\n    stone_list = [stones]\n\
    \    for i in 1:n-1\n        stones += add_stones\n        push!(stone_list, add_stones)\n\
    \        add_stones += 2\n    end\n    return stone_list\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp79i2jzsb.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79i2jzsb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79i2jzsb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp79i2jzsb.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79i2jzsb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79i2jzsb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp79i2jzsb.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79i2jzsb.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79i2jzsb.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp79i2jzsb.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    array = make_a_pile(n-1)\n    push!(array, array[end] + (1-n%2)*2\
    \ + n%2)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgx5h_xk3.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 4] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgx5h_xk3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgx5h_xk3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgx5h_xk3.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 4, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgx5h_xk3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgx5h_xk3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgx5h_xk3.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 4, 6, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgx5h_xk3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgx5h_xk3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgx5h_xk3.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 4, 6, 7, 9] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgx5h_xk3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgx5h_xk3.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgx5h_xk3.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgx5h_xk3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Int64[]\n \
    \   for i in 1:n\n        if i == 1\n            push!(stones, n)\n        elseif\
    \ i % 2 == 0\n            push!(stones, stones[end] + 2)\n        else\n     \
    \       push!(stones, stones[end] + 1)\n        end\n    end\n    return stones\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbtwtt1hg.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbtwtt1hg.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbtwtt1hg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpbtwtt1hg.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbtwtt1hg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbtwtt1hg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpbtwtt1hg.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbtwtt1hg.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbtwtt1hg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpbtwtt1hg.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbtwtt1hg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbtwtt1hg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpbtwtt1hg.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbtwtt1hg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n != 1\n        if n % 2 == 0\n            n = n / 2\n        else\n       \
    \     n = (n + 1) / 2\n        end\n        push!(pile, n)\n    end\n    return\
    \ pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpif1pkzo7.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpif1pkzo7.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpif1pkzo7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpif1pkzo7.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpif1pkzo7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpif1pkzo7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpif1pkzo7.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpif1pkzo7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpif1pkzo7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpif1pkzo7.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpif1pkzo7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpif1pkzo7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpif1pkzo7.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpif1pkzo7.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # this function returns\
    \ a list/vector of integers\n    # it starts with an empty list/vector (called\
    \ out)\n    out = []\n    # it iterates over each level and appends the number\
    \ of stones at that level\n    # to the list/vector (called out)\n    for i in\
    \ 1:n\n        # if the level number is odd, we append the next odd number\n \
    \       if i % 2 == 1\n            push!(out, i + 2)\n        # if the level number\
    \ is even, we append the next even number\n        else\n            push!(out,\
    \ i + 1)\n        end\n    end\n    # once the list/vector (called out) is complete,\
    \ we return it\n    return out\nend\n@assert make_a_pile(3) == [3, 5, 7]\n@assert\
    \ make_a_pile(4) == [4, 6, 8, 10]\n \n \n \n \n@doc \"\"\"\n    Given a list of\
    \ integers and a threshold, return True if the sum of\n    all integers in the\
    \ list is greater than the threshold and False otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: make_a_pile(3) == [3, 5, 7]\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfbbqj87a.jl:32\nin expression starting at\
    \ /tmp/tmpfbbqj87a.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    r = fill(Int64, n)\n\
    \    r[1] = n\n    for i in 2:n\n        if r[i-1] % 2 == 0\n            r[i]\
    \ = r[i-1] + 1\n        else\n            r[i] = r[i-1] + 2\n        end\n   \
    \ end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp564g7w5f.jl:31\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type DataType\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \  Stacktrace:\n   [1] setindex!(A::Vector{DataType}, x::Int64, i1::Int64)\n \
    \    @ Base ./array.jl:903\n   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmp564g7w5f.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp564g7w5f.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp564g7w5f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp564g7w5f.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Int64 to an object of type DataType\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \  Stacktrace:\n   [1] setindex!(A::Vector{DataType}, x::Int64, i1::Int64)\n \
    \    @ Base ./array.jl:903\n   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmp564g7w5f.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp564g7w5f.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp564g7w5f.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp564g7w5f.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type DataType\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \  Sta"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp564g7w5f.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # TODO: fill me out\n\
    \    x = [n]\n    for i in 1:2\n        if n % 2 == 0\n            n = n+2\n \
    \       else\n            n = n+1\n        end\n        push!(x,n)\n    end\n\
    \    return x\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm3smbdh8.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3smbdh8.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3smbdh8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpm3smbdh8.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3smbdh8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3smbdh8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpm3smbdh8.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3smbdh8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3smbdh8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpm3smbdh8.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3smbdh8.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3smbdh8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpm3smbdh8.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3smbdh8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n] # initialize\
    \ first level\n    while stones[end] > 1 # continue to build until 1 stone left\n\
    \        # add next odd or even number to list\n        stones = append!(stones,\
    \ stones[end] % 2 == 0 ? stones[end] + 2 : stones[end] + 1)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    vec = [n]\n    i = 1\n    while n >= 1\n        if n % 2 ==\
    \ 0\n            push!(vec, n+i)\n            n = n + i\n        else\n      \
    \      push!(vec, n+i)\n            n = n + i\n        end\n        i += 2\n \
    \   end\n    return vec\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Vector{Int64}()\n\
    \    i = 1\n    while true\n        n = n + 2*i - 1\n        if n == 0\n     \
    \       break\n        end\n        push!(pile, n)\n        i += 1\n    end\n\
    \    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = []\n    while\
    \ n > 0\n        push!(res, n)\n        if n % 2 == 0\n            n = n + 1\n\
    \        else\n            n = n + 2\n        end\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        return\
    \ Vector()\n    end\n    v = [n]\n    for i = 1:floor(Int64,log2(n))\n       \
    \ push!(v,v[end]*2 + 1)\n    end\n    return v\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe6t8p0bb.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 7] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6t8p0bb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6t8p0bb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpe6t8p0bb.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 9, 19] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6t8p0bb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6t8p0bb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpe6t8p0bb.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 11, 23] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6t8p0bb.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6t8p0bb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpe6t8p0bb.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 13, 27] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6t8p0bb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6t8p0bb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpe6t8p0bb.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 17, 35, 71] "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6t8p0bb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    results = [n]\n    for\
    \ i in 1:n-1\n        number = results[end] + (1 * i * 2)\n        push!(results,\
    \ number)\n    end\n    return results\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfhdie79a.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhdie79a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhdie79a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfhdie79a.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 10, 16] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhdie79a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhdie79a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfhdie79a.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 11, 17, 25] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhdie79a.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhdie79a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfhdie79a.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 12, 18, 26, 36] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhdie79a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhdie79a.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpfhdie79a.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Ev"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfhdie79a.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ (make_a_pile(n-1) .-\
    \ make_a_pile(n-2))\n    else\n        return [n] .+ (make_a_pile(n-1) .- make_a_pile(n-2))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = zeros(n)\n\
    \    levels[1] = n\n    odd = true\n    for i = 2:n\n        levels[i] = if odd\n\
    \            levels[i-1] + 2\n        else\n            levels[i-1] + 1\n    \
    \    end\n        odd = !odd\n    end\n    return levels\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdp3t93bj.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp3t93bj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp3t93bj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpdp3t93bj.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp3t93bj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp3t93bj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpdp3t93bj.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp3t93bj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp3t93bj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpdp3t93bj.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp3t93bj.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp3t93bj.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpdp3t93bj.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evalua"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdp3t93bj.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    level = [n]\n    if\
    \ n == 1\n        return level\n    end\n    first_level = n\n    function make_a_level(n::Int64)\n\
    \        return 2 * first_level + 1\n    end\n    function make_even_level(n::Int64)\n\
    \        return 2 * first_level + 2\n    end\n    for i = 1:first_level - 1\n\
    \        if i == 1\n            level = push!(level, make_a_level(n))\n      \
    \  elseif i % 2 == 0\n            level = push!(level, make_even_level(n))\n \
    \       else\n            level = push!(level, make_a_level(n))\n        end\n\
    \    end\n    return level\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwz08h6pg.jl:42\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 7, 8] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz08h6pg.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz08h6pg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpwz08h6pg.jl:43\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 9, 10, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz08h6pg.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz08h6pg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpwz08h6pg.jl:44\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 11, 12, 11, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz08h6pg.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz08h6pg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpwz08h6pg.jl:45\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 13, 14, 13, 14, 13] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz08h6pg.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz08h6pg.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpwz08h6pg.jl:46\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwz08h6pg.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv2_dgpd7.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpv2_dgpd7.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv2_dgpd7.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv2_dgpd7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpv2_dgpd7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpv2_dgpd7.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv2_dgpd7.jl:23 [inlined]\n\
    \   [4] macro expansion\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv2_dgpd7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Vector{Int64}(undef,\
    \ n)\n    levels[1] = n\n    for i in 2:n\n        levels[i] = next_even_odd(levels[i-1])\n\
    \    end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqmjqu40o.jl:27\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpqmjqu40o.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqmjqu40o.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqmjqu40o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqmjqu40o.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpqmjqu40o.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqmjqu40o.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqmjqu40o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqmjqu40o.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpqmjqu40o.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqmjqu40o.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqmjqu40o.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqmjqu40o.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_even_odd not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpqmjqu40o.jl:18\n\
    \   [2] macro expansion\n     @ /shared/cent"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqmjqu40o.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    v = Vector{Int64}(undef,\
    \ n)\n    for i in 1:n\n        v[i] = (i-1)*2 + n\n    end\n    return v\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = Vector{Int64}(undef,n)\n\
    \    res[1] = n\n    for i = 2:n\n        res[i] = res[i-1] + 2 * ((res[i-1] %\
    \ 2 == 0) ? 1 : -1)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkvr7iq23.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1, -1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7iq23.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7iq23.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpkvr7iq23.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1, -1, -3] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7iq23.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7iq23.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkvr7iq23.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = []\n    for\
    \ i in 1:n\n        if i == 1\n            push!(stones, n)\n        elseif (stones[i-1]\
    \ % 2 == 0) \n            push!(stones, stones[i-1] + 2)\n        else \n    \
    \        push!(stones, stones[i-1] + 1)\n        end\n    end\n    return stones\n\
    end\nprintln(make_a_pile(3))\nprintln(make_a_pile(5))\nprintln(make_a_pile(10))\n\
    println(make_a_pile(30))\nprintln(make_a_pile(50))\nprintln(make_a_pile(100))\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "[3, 4, 6]\n[5, 6, 8, 10, 12]\n[10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\n\
    [30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68,\
    \ 70, 72, 74, 76, 78, 80, 82, 84, 86, 88]\n[50, 52, 54, 56, 58, 60, 62, 64, 66,\
    \ 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104,\
    \ 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136,\
    \ 138, 140, 142, 144, 146, 148]\n[100, 102, 104, 106, 108, 110, 112, 114, 116,\
    \ 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148,\
    \ 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180,\
    \ 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,\
    \ 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244,\
    \ 246, 248, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274, 276,\
    \ 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298]\ntest set: Test Failed\
    \ at /tmp/tmpm2l38nm4.jl:38\n  Expression: candidate(3) == [3, 5, 7]\n   Evaluated:\
    \ [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm2l38nm4.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm2l38nm4.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpm2l38nm4.jl:40\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm2l38nm4.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm2l38nm4.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm2l38nm4.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    lvl = n\n    stack =\
    \ [n]\n    while lvl != 1\n        if isodd(lvl)\n            lvl -= 1\n     \
    \   else\n            lvl /= 2\n        end\n        push!(stack, lvl)\n    end\n\
    \    reverse(stack)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw72mgkmg.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw72mgkmg.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw72mgkmg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpw72mgkmg.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 2, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw72mgkmg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw72mgkmg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpw72mgkmg.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 2, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw72mgkmg.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw72mgkmg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpw72mgkmg.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 2, 3, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw72mgkmg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw72mgkmg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpw72mgkmg.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 2, 4, 8]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw72mgkmg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   while n >= 1\n        push!(levels, n)\n        if n % 2 == 0\n          \
    \  n -= 1\n        else\n            n -= 2\n        end\n    end\n    return\
    \ levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfarj_l58.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfarj_l58.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfarj_l58.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfarj_l58.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfarj_l58.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfarj_l58.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfarj_l58.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfarj_l58.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfarj_l58.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfarj_l58.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfarj_l58.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfarj_l58.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfarj_l58.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfarj_l58.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # First level has n\
    \ stones\n    pile = [n]\n    # Count starts at 1\n    i = 1\n    # Pile while\
    \ the count is less than n\n    while i < n\n        # If n is odd, the next level\
    \ is the next odd number\n        if n % 2 == 1\n            n += 2\n        #\
    \ If n is even, the next level is the next even number\n        else\n       \
    \     n += 1\n        end\n        # Append to the pile\n        push!(pile, n)\n\
    \        # Increment the count\n        i += 1\n    end\n    # Return the pile\
    \ of stones\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4,\
    \ 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    level = n\n    pile\
    \ = [n]\n    while level > 1\n        level = next_number(level)\n        push!(pile,\
    \ level)\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnqd4klc5.jl:28\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  UndefVarError: next_number not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpnqd4klc5.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqd4klc5.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqd4klc5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpnqd4klc5.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  UndefVarError: next_number not defined\n  Stacktrace:\n\
    \   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpnqd4klc5.jl:18\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqd4klc5.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqd4klc5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpnqd4klc5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  UndefVarError: next_number not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpnqd4klc5.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqd4klc5.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqd4klc5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpnqd4klc5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  UndefVarError: next_number not defined\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpnqd4klc5.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/juli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqd4klc5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    vec = []\n    while\
    \ n > 0\n        push!(vec, n)\n        if iseven(n)\n            n = n - 1\n\
    \        else\n            n = n - 2\n        end\n    end\n    reverse(vec)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9bi56uj1.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bi56uj1.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bi56uj1.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9bi56uj1.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bi56uj1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bi56uj1.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9bi56uj1.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bi56uj1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bi56uj1.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9bi56uj1.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9bi56uj1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9bi56uj1.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9bi56uj1.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 7, 8] =="
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9bi56uj1.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    m=n\n    levels=[]\n\
    \    while n>0\n        push!(levels,m)\n        if mod(m,2)==0\n            m+=1\n\
    \        else\n            m+=2\n        end\n    end\n    return levels\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n <= 0\n        return\
    \ []\n    end\n    [make_a_pile(n-1); ((n%2==0 ? n+1 : n))::Int64]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp272t3x4n.jl:25\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp272t3x4n.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp272t3x4n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp272t3x4n.jl:26\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 3, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp272t3x4n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp272t3x4n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp272t3x4n.jl:27\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 3, 5, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp272t3x4n.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp272t3x4n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp272t3x4n.jl:28\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 3, 5, 5, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp272t3x4n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp272t3x4n.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp272t3x4n.jl:29\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp272t3x4n.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = zeros(Int64,\
    \ n)\n    for i = 1:n\n        levels[i] = n\n        if n % 2 == 0\n        \
    \    n += 1\n        else\n            n += 2\n        end\n    end\n    return\
    \ levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23yzulfv.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23yzulfv.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23yzulfv.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp23yzulfv.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23yzulfv.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23yzulfv.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp23yzulfv.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23yzulfv.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23yzulfv.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23yzulfv.jl:28\n"
  exit_code: 1
  status: SyntaxError

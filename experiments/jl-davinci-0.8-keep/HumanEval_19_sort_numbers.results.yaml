name: HumanEval_19_sort_numbers
language: jl
results:
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # do something\
    \ with numbers here\n    return sorted(numbers.split(\" \"))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9kfl9gbb.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp9kfl9gbb.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9kfl9gbb.jl:16 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9kfl9gbb.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp9kfl9gbb.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp9kfl9gbb.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9kfl9gbb.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9kfl9gbb.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp9kfl9gbb.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp9kfl9gbb.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp9kfl9gbb.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp9kfl9gbb.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp9kfl9gbb.jl:19\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmph0h91tvz.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph0h91tvz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph0h91tvz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmph0h91tvz.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph0h91tvz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph0h91tvz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmph0h91tvz.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph0h91tvz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph0h91tvz.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph0h91tvz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numdict = Dict{String,Int}()\n\
    \    numdict[\"zero\"] = 0\n    numdict[\"one\"] = 1\n    numdict[\"two\"] = 2\n\
    \    numdict[\"three\"] = 3\n    numdict[\"four\"] = 4\n    numdict[\"five\"]\
    \ = 5\n    numdict[\"six\"] = 6\n    numdict[\"seven\"] = 7\n    numdict[\"eight\"\
    ] = 8\n    numdict[\"nine\"] = 9\n    # parse string\n    num_str = split(numbers,\
    \ \" \")\n    # sort numbers\n    num_int = map(x -> numdict[x], num_str)\n  \
    \  sort_num_int = sort(num_int)\n    # put back into string\n    sort_num_str\
    \ = map(x -> findall(i -> i == x, numdict)[1], sort_num_int)\n    return join(sort_num_str,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpidimnh07.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpidimnh07.jl:22 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#4\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpidimnh07.jl:22\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpidimnh07.jl:33 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpidimnh07.jl:32\\nTest\
    \ Summary: | Pass  Error  Total\\ntest set      |    4      1      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n  word_to_num = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n  num_to_word\
    \ = Dict(0 => \"zero\", 1 => \"one\", 2 => \"two\", 3 => \"three\", 4 => \"four\"\
    , 5 => \"five\", 6 => \"six\", 7 => \"seven\", 8 => \"eight\", 9 => \"nine\")\n\
    \  num_list = []\n  for num in split(numbers)\n    num_list = append!(num_list,\
    \ word_to_num[num])\n  end\n  num_list = sort(num_list)\n  result = num_to_word[num_list[1]]\n\
    \  for i in 2:length(num_list)\n    result = result * \" \" * num_to_word[num_list[i]]\n\
    \  end\n  return result\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc94vcvh6.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  BoundsError: attempt to\
    \ access 0-element Vector{Any} at index [1]\\n  Stacktrace:\\n   [1] getindex\\\
    n     @ ./array.jl:861 [inlined]\\n   [2] sort_numbers(numbers::String)\\n   \
    \  @ Main /tmp/tmpc94vcvh6.jl:15\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpc94vcvh6.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpc94vcvh6.jl:25\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    4      1      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    # iterate\
    \ over all the numbers\n    for number in split(numbers)\n        \n        #\
    \ hold each number in a list\n        numberlist = []\n        # iterate over\
    \ each list item\n        for number in numbers\n            # create list of\
    \ numbers\n            push!(numberlist, number)\n        end\n    end\n    #\
    \ return sorted list\n    sort(numberlist)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm7oargr5.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: numberlist\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpm7oargr5.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm7oargr5.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm7oargr5.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpm7oargr5.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: numberlist not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpm7oargr5.jl:21\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm7oargr5.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm7oargr5.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpm7oargr5.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: numberlist\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpm7oargr5.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpm7oargr5.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm7oargr5.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpm7oargr5.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: numberlist not defined\\n  St"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers,\
    \ \" \") # Split the string into an array of words\n    numbers = [word2num(word)\
    \ for word in words] # Convert the words to numbers\n    sorted_numbers = sort(numbers)\
    \ # Sort the numbers\n    numbers_as_words = [num2word(num) for num in sorted_numbers]\
    \ # Convert the numbers to words\n    return join(numbers_as_words, \" \") # Join\
    \ the words together with spaces\nend\n \n\"\"\" Convert a word like 'zero' to\
    \ the corresponding number\n    Valid choices are 'zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    >>> word2num(\"zero\"\
    )\n    0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp2rk4vhvx.jl:15\nin expression starting at /tmp/tmp2rk4vhvx.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdxzlub8c.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxzlub8c.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxzlub8c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdxzlub8c.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxzlub8c.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxzlub8c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdxzlub8c.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxzlub8c.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxzlub8c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdxzlub8c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_split\
    \ = split(numbers, \" \")\n    nums = Array{Int}(length(numbers_split))\n    for\
    \ i in 1:length(numbers_split)\n        nums[i] = parse(Int, numbers_split[i])\n\
    \    end\n    sort!(nums)\n    sorted_string = \"\"\n    for i in 1:length(nums)\n\
    \        sorted_string = string(sorted_string, \" \", nums[i])\n    end\n    return\
    \ sorted_string\nend\n \nsort_numbers(\"three one five\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return \" \"\
    .join(sort(split(numbers)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5h6es6ib.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp5h6es6ib.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp5h6es6ib.jl:15 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp5h6es6ib.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp5h6es6ib.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field join\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp5h6es6ib.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp5h6es6ib.jl:16 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp5h6es6ib.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp5h6es6ib.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp5h6es6ib.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp5h6es6ib.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp5h6es6ib.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp5h6es6ib.jl:18\\n  Test threw exception\\n  Expression:\
    \ ca"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Beginner: \n\
    \    # Your code goes here\n    # Intermediate:\n    # Your code goes here\n \
    \   # Advanced:\n    # Your code goes here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjxjg72pz.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpjxjg72pz.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjxjg72pz.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjxjg72pz.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpjxjg72pz.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpjxjg72pz.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpjxjg72pz.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    non_words = replace(numbers,\
    \ r\"\\b\\w+\\b\" => \"\")\n    if non_words != \"\"\n        return \"invalid\
    \ input\"\n    end\n    words = split(numbers)\n    for i in 1:length(words)\n\
    \        if words[i] != \"zero\" && words[i] != \"one\" && words[i] != \"two\"\
    \ && words[i] != \"three\" && words[i] != \"four\" && words[i] != \"five\" &&\
    \ words[i] != \"six\" && words[i] != \"seven\" && words[i] != \"eight\" && words[i]\
    \ != \"nine\"\n            return \"invalid input\"\n        end\n    end\n  \
    \  sorted_words = sort(words)\n    sorted_numbers = join(sorted_words, \" \")\n\
    \    return sorted_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpouvo22q8.jl:29\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"invalid input\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouvo22q8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouvo22q8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpouvo22q8.jl:30\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"invalid\
    \ input\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouvo22q8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouvo22q8.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpouvo22q8.jl:31\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"invalid\
    \ input\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpouvo22q8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpouvo22q8.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpouvo22q8.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = numbers\
    \ |> split(' ')\n    numbers = [word_to_num(word) for word in words]\n    sort!(numbers)\n\
    \    return join(num_to_word.(numbers), ' ')\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqaswko07.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching split(::Char)\\n  Closest candidates are:\\n    split(!Matched::AbstractString;\
    \ limit, keepempty) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:459\\\
    n    split(!Matched::T, !Matched::Union{Tuple{Vararg{AbstractChar}}, Set{<:AbstractChar},\
    \ AbstractVector{<:AbstractChar}}; limit, keepempty) where T<:AbstractString at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:421\\n    split(!Matched::T,\
    \ !Matched::AbstractChar; limit, keepempty) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:425\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpqaswko07.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpqaswko07.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpqaswko07.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpqaswko07.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: no method matching split(::Char)\\\
    n  Closest candidates are:\\n    split(!Matched::AbstractString; limit, keepempty)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:459\\n    split(!Matched::T,\
    \ !Matched::Union{Tuple{Vararg{AbstractChar}}, Set{<:AbstractChar}, AbstractVector{<:AbstractChar}};\
    \ limit, keepempty) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:421\\\
    n    split(!Matched::T, !Matched::AbstractChar; limit, keepempty) where T<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:425\\n    ...\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpqaswko07.jl:8\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n  # split the input\
    \ into a vector of words, then convert to a vector of numbers using `parse`\n\
    \  n = [parse(Int, x) for x in split(numbers)]\n  # sort the vector in place\n\
    \  sort!(n)\n  # convert back to a vector of strings\n  n = [string(i) for i in\
    \ n]\n  # join the vector of strings with a space between them\n  string(join(n,\
    \ \" \"))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyja55nfj.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpyja55nfj.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpyja55nfj.jl:23 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpyja55nfj.jl:21\\ntest\
    \ set: Error During Test at /tmp/tmpyja55nfj.jl:24\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpyja55nfj.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_dict =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    numbers_list = split(numbers)\n    for i = 1:length(numbers_list)\n\
    \        numbers_list[i] = number_dict[numbers_list[i]]\n    end\n    sorted_numbers\
    \ = sort(numbers_list)\n    for i = 1:length(sorted_numbers)\n        sorted_numbers[i]\
    \ = string(sorted_numbers[i])\n    end\n    return join(sorted_numbers, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    input_numbers\
    \ = numbers.split()\n    output_numbers = []\n    for num in input_numbers\n \
    \       val = word_to_int(num)\n        push!(output_numbers,val)\n    end\n \
    \   sort!(output_numbers)\n    output_string = \"\"\n    for num in output_numbers\n\
    \        append!(output_string, int_to_word(num))\n        append!(output_string,\
    \ \" \")\n    end\n    strip(output_string)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzowe_xxh.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpzowe_xxh.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpzowe_xxh.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpzowe_xxh.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzowe_xxh.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpzowe_xxh.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpzowe_xxh.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpzowe_xxh.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzowe_xxh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpzowe_xxh.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpzowe_xxh.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpzowe_xxh.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzowe_xxh.jl:30\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_words\
    \ = split(numbers, \" \")\n    numbers_dict = Dict(\"zero\" => 0, \"one\" => 1,\
    \ \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"\
    seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    numbers_int = map(x -> numbers_dict[x],\
    \ numbers_words)\n    numbers_int_sorted = sort(numbers_int)\n    numbers_str_sorted\
    \ = map(x -> numbers_dict[x], numbers_int_sorted)\n    return join(numbers_str_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdj73yc3l.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpdj73yc3l.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpdj73yc3l.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpdj73yc3l.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpdj73yc3l.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpdj73yc3l.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key 3 not found\\\
    n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::Int64)\\n     \
    \ @ Base ./dict.jl:481\\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\\
    n      @ Main /tmp/tmpdj73yc3l.jl:12\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect\\n      @ ./array.jl:744 [inlined]\\n    [5] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [6] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpdj73yc3l.jl:12\\\
    n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpdj73yc3l.jl:21 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n   "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = split(numbers)\n    number_to_numeral = Dict(\n        \"zero\" => 0, \"one\"\
    \ => 1, \"two\" => 2, \"three\" => 3,\n        \"four\" => 4, \"five\" => 5, \"\
    six\" => 6, \"seven\" => 7,\n        \"eight\" => 8, \"nine\" => 9)\n    numeral_to_number\
    \ = Dict(\n        0 => \"zero\", 1 => \"one\", 2 => \"two\", 3 => \"three\",\n\
    \        4 => \"four\", 5 => \"five\", 6 => \"six\", 7 => \"seven\",\n       \
    \ 8 => \"eight\", 9 => \"nine\")\n    sort(numbers_array, by=x->number_to_numeral[x])\
    \ |> x->join(numeral_to_number[x] for x in x)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpthg96qj7.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  KeyError: key\
    \ \"three\" not found\\n  Stacktrace:\\n    [1] getindex(h::Dict{Int64, String},\
    \ key::SubString{String})\\n      @ Base ./dict.jl:481\\n    [2] (::var\"#3#6\"\
    {Dict{Int64, String}})(x::SubString{String})\\n      @ Main ./none:0\\n    [3]\
    \ iterate\\n      @ ./generator.jl:47 [inlined]\\n    [4] join\\n      @ ./strings/io.jl:346\
    \ [inlined]\\n    [5] join(io::IOBuffer, iterator::Base.Generator{Vector{SubString{String}},\
    \ var\"#3#6\"{Dict{Int64, String}}})\\n      @ Base ./strings/io.jl:345\\n   \
    \ [6] sprint(f::Function, args::Base.Generator{Vector{SubString{String}}, var\"\
    #3#6\"{Dict{Int64, String}}}; context::Nothing, sizehint::Int64)\\n      @ Base\
    \ ./strings/io.jl:114\\n    [7] sprint\\n      @ ./strings/io.jl:108 [inlined]\\\
    n    [8] join\\n      @ ./strings/io.jl:352 [inlined]\\n    [9] #2\\n      @ /tmp/tmpthg96qj7.jl:17\
    \ [inlined]\\n   [10] |>\\n      @ ./operators.jl:966 [inlined]\\n   [11] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpthg96qj7.jl:17\\n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [13] macro expansion\\n      @ /tmp/tmpthg96qj7.jl:25 [inlined]\\\
    n   [14] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [15] top-level scope\\n      @ /tmp/tmpthg96qj7.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmpthg96qj7.jl:26\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  KeyError:\
    \ key \"three\" not found\\n  Stacktrace:\\n    [1] getindex(h::Dict{Int64, String},\
    \ key::SubString{String})\\n      @ Base ./dict.jl:481\\n    [2] (::var\"#3#6\"\
    {Dict{Int64, String}})(x::SubString{String})\\n      @ Main ./none:0\\n    [3]\
    \ iterate\\n      @ ./generator.jl:47 [inlined]\\n    [4] join\\n      @ ./strings/io.jl:346\
    \ [inlined]\\n    [5] join(io::IOBuffer, iterator::Base.Generator{Vector{SubString{String}},\
    \ var\"#3#6\"{Dict{Int64, String}}})\\n      @ Base"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    num_dict = {\"zero\":0, \"one\":1, \"two\":2, \"three\":3, \"four\"\
    :4, \"five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"nine\":9}\n    nums_int\
    \ = []\n    for num in nums \n        push!(nums_int, num_dict[num])\n    end\n\
    \    sort!(nums_int)\n    nums_list = []\n    for num in nums_int\n        for\
    \ key in num_dict\n            if num_dict[key] == num\n                push!(nums_list,\
    \ key)\n            end\n        end\n    end\n    nums_string = join(nums_list,\
    \ \" \")\n    return nums_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: { } vector syntax is discontinued around /tmp/tmpib0dt0bp.jl:9\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpib0dt0bp.jl:1\nin expression starting\
    \ at /tmp/tmpib0dt0bp.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \"\"\"sort numbers\
    \ in the input string\n    \"\"\"\n    num_dict = Dict{String, Int}()\n    num_dict[\"\
    zero\"] = 0\n    num_dict[\"one\"] = 1\n    num_dict[\"two\"] = 2\n    num_dict[\"\
    three\"] = 3\n    num_dict[\"four\"] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"\
    six\"] = 6\n    num_dict[\"seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"\
    nine\"] = 9\n    nums = numbers.split(\" \")\n    nums_sort = sort(nums, by=x->num_dict[x])\n\
    \    return join(nums_sort, \" \")\nend\nsort_numbers(\"one two eight three\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: type String has no field split\nStacktrace:\n [1] getproperty\n\
    \   @ ./Base.jl:42 [inlined]\n [2] sort_numbers(numbers::String)\n   @ Main /tmp/tmpi6crmz26.jl:21\n\
    \ [3] top-level scope\n   @ /tmp/tmpi6crmz26.jl:25\nin expression starting at\
    \ /tmp/tmpi6crmz26.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_sort\
    \ = sort(numbers)\n    return numbers_sort\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd74ar_w1.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching sort(::String)\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\\n    sort(!Matched::AbstractRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\\n    sort(!Matched::SparseArrays.SparseVector{Tv,\
    \ Ti}; kws...) where {Tv, Ti} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpd74ar_w1.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd74ar_w1.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd74ar_w1.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpd74ar_w1.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: no method matching sort(::String)\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\\\
    n    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\\\
    n    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpd74ar_w1.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd74ar_w1.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd74ar_w1.jl:15\\ntest set:\
    \ Error Duri"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    list_of_num =\
    \ parse(numbers)\n    word_list = [to_num(word) for word in list_of_num]\n   \
    \ word_list.sort()\n    word_list = [word_to_str(word) for word in word_list]\n\
    \    return \" \".join(word_list)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkffbg54b.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching parse(::String)\\n  Closest candidates are:\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString) where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\\\
    n    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpkffbg54b.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkffbg54b.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkffbg54b.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpkffbg54b.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: no method matching parse(::String)\\\
    n  Closest candidates are:\\n    parse(!Matched::Type{T}, !Matched::AbstractString)\
    \ where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\\\
    n    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpkffbg54b.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpkffbg54b.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # convert the\
    \ numbers to a list of strings\n    numbers = split(numbers)\n    # create a dictionary\
    \ that maps the strings to numbers\n    number_dict = Dict(\"zero\" => 0, \"one\"\
    \ => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\" => 5, \"six\" =>\
    \ 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    # create a vector of\
    \ numbers by converting the string representation of numbers to numbers\n    numbers\
    \ = [number_dict[i] for i in numbers]\n    # sort the numbers in ascending order\n\
    \    sort!(numbers)\n    # create a vector of strings by converting the numbers\
    \ to strings\n    numbers = [key for key in keys(number_dict) if number_dict[key]\
    \ == value for value in numbers]\n    # convert the list to a string\n    numbers\
    \ = join(numbers)\n    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptwn_lmrs.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: value not\
    \ defined\\n  Stacktrace:\\n    [1] (::var\"#4#8\"{Dict{String, Int64}})(key::String)\\\
    n      @ Main ./none:0\\n    [2] iterate(::Base.Iterators.Filter{var\"#4#8\"{Dict{String,\
    \ Int64}}, Base.KeySet{String, Dict{String, Int64}}})\\n      @ Base.Iterators\
    \ ./iterators.jl:447\\n    [3] iterate\\n      @ ./generator.jl:44 [inlined]\\\
    n    [4] iterate\\n      @ ./iterators.jl:1118 [inlined]\\n    [5] iterate\\n\
    \      @ ./iterators.jl:1114 [inlined]\\n    [6] grow_to!(dest::Vector{String},\
    \ itr::Base.Iterators.Flatten{Base.Generator{Base.Iterators.Filter{var\"#4#8\"\
    {Dict{String, Int64}}, Base.KeySet{String, Dict{String, Int64}}}, var\"#3#6\"\
    }})\\n      @ Base ./array.jl:797\\n    [7] _collect\\n      @ ./array.jl:701\
    \ [inlined]\\n    [8] collect\\n      @ ./array.jl:649 [inlined]\\n    [9] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmptwn_lmrs.jl:17\\n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmptwn_lmrs.jl:27 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmptwn_lmrs.jl:26\\ntest\
    \ set: Error During Test at /tmp/tmptwn_lmrs.jl:28\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError: value not\
    \ defined\\n  Stacktrace:\\n    [1] (::var\"#4#8\"{Dict{String, Int64}})(key::String)\\\
    n      @ Main ./none:0\\n    [2] iterate(::Base.Iterators.Filter{var\"#4#8\"{Dict{String,\
    \ Int64}}, Base.KeySet{String, Dict{String, Int64}}})\\n      @ Base.Iterators\
    \ ./iterators.jl:447\\n    [3] iterate\\n      @ ./generator.jl:44 [inlined]\\\
    n    [4] iterate\\n      @ ./iterators.jl:1118 [inlined]\\n    [5] iterate\\n\
    \      @ ./iterators.jl:1114 [inlined]\\n    [6] grow_to!(dest::Vector{String},\
    \ itr::Base.Iterators.Flatten{Base.Generator{Base.Iterators.Filter{var\"#4#8\"\
    {Dict{String, Int64}}, "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # TODO: Parse\
    \ numbers\n    # TODO: Convert words to numbers\n    # TODO: Sort numbers\n  \
    \  # TODO: Convert sorted numbers to words\n    # TODO: Return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnr8bmoqz.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpnr8bmoqz.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnr8bmoqz.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnr8bmoqz.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpnr8bmoqz.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpnr8bmoqz.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnr8bmoqz.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = replace(numbers,\
    \ r\"zero\", \"0\")\n    numbers = replace(numbers, r\"one\", \"1\")\n    numbers\
    \ = replace(numbers, r\"two\", \"2\")\n    numbers = replace(numbers, r\"three\"\
    , \"3\")\n    numbers = replace(numbers, r\"four\", \"4\")\n    numbers = replace(numbers,\
    \ r\"five\", \"5\")\n    numbers = replace(numbers, r\"six\", \"6\")\n    numbers\
    \ = replace(numbers, r\"seven\", \"7\")\n    numbers = replace(numbers, r\"eight\"\
    , \"8\")\n    numbers = replace(numbers, r\"nine\", \"9\")\n    nums = sort(split(numbers))\n\
    \    #print(nums)\n    numbers = join(nums)\n    numbers = replace(numbers, r\"\
    0\", \"zero\")\n    numbers = replace(numbers, r\"1\", \"one\")\n    numbers =\
    \ replace(numbers, r\"2\", \"two\")\n    numbers = replace(numbers, r\"3\", \"\
    three\")\n    numbers = replace(numbers, r\"4\", \"four\")\n    numbers = replace(numbers,\
    \ r\"5\", \"five\")\n    numbers = replace(numbers, r\"6\", \"six\")\n    numbers\
    \ = replace(numbers, r\"7\", \"seven\")\n    numbers = replace(numbers, r\"8\"\
    , \"eight\")\n    numbers = replace(numbers, r\"9\", \"nine\")\n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmprn38vzeb.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmprn38vzeb.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprn38vzeb.jl:38 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprn38vzeb.jl:37\\ntest set:\
    \ Error During Test at /tmp/tmprn38vzeb.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmprn38vzeb.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprn38vzeb.jl:39 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = numbers.split()\n\
    \    numbers = sort(numbers)\n    return \" \".join(numbers)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpeh7fq46w.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpeh7fq46w.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpeh7fq46w.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpeh7fq46w.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpeh7fq46w.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpeh7fq46w.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpeh7fq46w.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpeh7fq46w.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpeh7fq46w.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpeh7fq46w.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpeh7fq46w.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpeh7fq46w.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpeh7fq46w.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_sort\
    \ = split(numbers, ' ')\n    sort!(numbers_sort)\n    return join(numbers_sort,\
    \ ' ')\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpik0uk594.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpik0uk594.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpik0uk594.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpik0uk594.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpik0uk594.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpik0uk594.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpik0uk594.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpik0uk594.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpik0uk594.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpik0uk594.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict{String, Int}()\n    nums_dict[\"zero\"] = 0\n    nums_dict[\"\
    one\"] = 1\n    nums_dict[\"two\"] = 2\n    nums_dict[\"three\"] = 3\n    nums_dict[\"\
    four\"] = 4\n    nums_dict[\"five\"] = 5\n    nums_dict[\"six\"] = 6\n    nums_dict[\"\
    seven\"] = 7\n    nums_dict[\"eight\"] = 8\n    nums_dict[\"nine\"] = 9\n    nums_num\
    \ = []\n    for i in nums\n        push!(nums_num, nums_dict[i])\n    end\n  \
    \  @assert any(nums_num .< 0) == false\n    nums_num = sort(nums_num)\n    nums_str\
    \ = String[]\n    for i in nums_num\n        if i == 0\n            push!(nums_str,\
    \ \"zero\")\n        elseif i == 1\n            push!(nums_str, \"one\")\n   \
    \     elseif i == 2\n            push!(nums_str, \"two\")\n        elseif i ==\
    \ 3\n            push!(nums_str, \"three\")\n        elseif i == 4\n         \
    \   push!(nums_str, \"four\")\n        elseif i == 5\n            push!(nums_str,\
    \ \"five\")\n        elseif i == 6\n            push!(nums_str, \"six\")\n   \
    \     elseif i == 7\n            push!(nums_str, \"seven\")\n        elseif i\
    \ == 8\n            push!(nums_str, \"eight\")\n        elseif i == 9\n      \
    \      push!(nums_str, \"nine\")\n        end\n    end\n    str = \"\"\n    for\
    \ i in nums_str\n        str = str * i * \" \"\n    end\n    str = strip(str)\n\
    \    return str\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \") # convert string to array of strings\n    num_sort = sort(num_list) #\
    \ sort array\n    num_sort = join(num_sort, \" \") # convert back to string\n\
    \    return num_sort\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8o68tlw.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8o68tlw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8o68tlw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpq8o68tlw.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8o68tlw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8o68tlw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpq8o68tlw.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8o68tlw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8o68tlw.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8o68tlw.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num = split(numbers)\n\
    \    sorted_str = sort(num)\n    return join(sorted_str, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqawjwsdy.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqawjwsdy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqawjwsdy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqawjwsdy.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqawjwsdy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqawjwsdy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqawjwsdy.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqawjwsdy.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqawjwsdy.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqawjwsdy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    sorted_numbers\
    \ = sort(split(numbers, ' '), by=x->number_for_name(x))\n    return string(sorted_numbers...)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgv7w4lc8.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three five nine\") == \"three five nine\"\
    \\n  UndefVarError: number_for_name not defined\\n  Stacktrace:\\n    [1] (::var\"\
    #1#2\")(x::SubString{String})\\n      @ Main /tmp/tmpgv7w4lc8.jl:8\\n    [2] lt(o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering}, a::SubString{String}, b::SubString{String})\\\
    n      @ Base.Order ./ordering.jl:111\\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\\n      @ Base.Sort ./sort.jl:507\\n    [4]\
    \ sort!(v::Vector{SubString{String}}, lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, t::Vector{SubString{String}})\\\
    n      @ Base.Sort ./sort.jl:592\\n    [5] sort!\\n      @ ./sort.jl:591 [inlined]\\\
    n    [6] sort!\\n      @ ./sort.jl:664 [inlined]\\n    [7] #sort!#8\\n      @\
    \ ./sort.jl:725 [inlined]\\n    [8] #sort#9\\n      @ ./sort.jl:772 [inlined]\\\
    n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpgv7w4lc8.jl:8\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpgv7w4lc8.jl:18 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpgv7w4lc8.jl:15\\ntest\
    \ set: Error During Test at /tmp/tmpgv7w4lc8.jl:19\\n  Test threw exception\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n  UndefVarError: number_for_name not defined\\n  Stacktrace:\\\
    n    [1] (::var\"#1#2\")(x::SubString{String})\\n      @ Main /tmp/tmpgv7w4lc8.jl:8\\\
    n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::SubString{String},\
    \ b::SubString{String})\\n      @ Base.Order ./ordering.jl:111\\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortA"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nnumbers = [int(n)\
    \ for n in split(numbers)]\n    # nnumbers = nnumbers.sort()  # This is broken\
    \ with strings!\n    nnumbers = sort(nnumbers)\n    # nnumbers = [numbers[i] for\
    \ i in nnumbers]\n    nnumbers = [string(n) for n in nnumbers]\n    return join(nnumbers,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp47b_gdmw.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ int not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp47b_gdmw.jl:8\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp47b_gdmw.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp47b_gdmw.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp47b_gdmw.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp47b_gdmw.jl:8\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp47b_gdmw.jl:22 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp47b_gdmw.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp47b_gdmw.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\n   [1] (::var\"\
    #1#3\")(n::SubString{String})\\n     @ Main ./none:0\\n   [2] iterate\\n     @\
    \ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubSt"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # your code here\n\
    \    return \"\"\nend\nprintln(sort_numbers(\"three one five\"))\nprintln(sort_numbers(\"\
    one two four five nine three six seven zero eight\"))\nprintln(sort_numbers(\"\
    zero one two three four five six seven eight nine\"))\n \n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "\n\n\ntest set: Test Failed at /tmp/tmpm8o5tcuj.jl:22\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8o5tcuj.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8o5tcuj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpm8o5tcuj.jl:23\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8o5tcuj.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8o5tcuj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpm8o5tcuj.jl:24\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"\" ==\
    \ \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm8o5tcuj.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8o5tcuj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpm8o5tcuj.jl:25\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8o5tcuj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8o5tcuj.jl:20\nTest Summary:\
    \ | Pass"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm8o5tcuj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers)\n\
    \    idx_number = [findfirst(x -> x == word, words) for word in [\"zero\", \"\
    one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",\
    \ \"nine\"]]\n    return string(join(words[idx_number]))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpygxcc7kb.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: unable\
    \ to check bounds for indices of type Nothing\\n  Stacktrace:\\n    [1] checkindex(#unused#::Type{Bool},\
    \ inds::Base.OneTo{Int64}, i::Nothing)\\n      @ Base ./abstractarray.jl:713\\\
    n    [2] checkindex\\n      @ ./abstractarray.jl:728 [inlined]\\n    [3] checkbounds\\\
    n      @ ./abstractarray.jl:641 [inlined]\\n    [4] checkbounds\\n      @ ./abstractarray.jl:656\
    \ [inlined]\\n    [5] _getindex\\n      @ ./multidimensional.jl:838 [inlined]\\\
    n    [6] getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpygxcc7kb.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpygxcc7kb.jl:17 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpygxcc7kb.jl:16\\ntest\
    \ set: Error During Test at /tmp/tmpygxcc7kb.jl:18\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: unable to\
    \ check bounds for indices of type Nothing\\n  Stacktrace:\\n    [1] checkindex(#unused#::Type{Bool},\
    \ inds::Base.OneTo{Int64}, i::Nothing)\\n      @ Base ./abstractarray.jl:713\\\
    n    [2] checkindex\\n      @ ./abstractarray.jl:728 [inlined]\\n    [3] checkbounds\\\
    n      @ ./abstractarray.jl:641 [inlined]\\n    [4] checkbounds\\n      @ ./abstractarray.jl:656\
    \ [inlined]\\n    [5] _getindex\\n      @ ./multidimensional.jl:838 [inlined]\\\
    n    [6] getindex\\n      @ ./abstractarray.jl:1218 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpygxcc7kb.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpygxcc7kb.jl:18 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Te"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    word_numbers\
    \ = split(numbers, r\"\\s+\")\n    word_numbers_dict = Dict()\n    word_numbers_dict[\"\
    zero\"] = 0\n    word_numbers_dict[\"one\"] = 1\n    word_numbers_dict[\"two\"\
    ] = 2\n    word_numbers_dict[\"three\"] = 3\n    word_numbers_dict[\"four\"] =\
    \ 4\n    word_numbers_dict[\"five\"] = 5\n    word_numbers_dict[\"six\"] = 6\n\
    \    word_numbers_dict[\"seven\"] = 7\n    word_numbers_dict[\"eight\"] = 8\n\
    \    word_numbers_dict[\"nine\"] = 9\n    digit_numbers = []\n    for word in\
    \ word_numbers\n        push!(digit_numbers, word_numbers_dict[word])\n    end\n\
    \    sorted_numbers = sort(digit_numbers)\n    sorted_word_numbers = []\n    for\
    \ number in sorted_numbers\n        for word in keys(word_numbers_dict)\n    \
    \        if word_numbers_dict[word] == number\n                push!(sorted_word_numbers,\
    \ word)\n            end\n        end\n    end\n    return(join(sorted_word_numbers,\
    \ \" \"))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr3__qwyz.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:481 [inlined]\\n\
    \   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpr3__qwyz.jl:22\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpr3__qwyz.jl:40 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpr3__qwyz.jl:39\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    4      1      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpr3__qwyz.jl:37\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    split_numbers\
    \ = split(numbers)\n    dictionary = Dict{String, Int}()\n    for number in split_numbers\n\
    \        if haskey(dictionary, number)\n            dictionary[number] += 1\n\
    \        else\n            dictionary[number] = 1\n        end\n    end\n    reverse_dictionary\
    \ = reverse(dictionary)\n    sorted_numbers = collect(keys(reverse_dictionary))\n\
    \    sorted_numbers = sort(sorted_numbers)\n    final_string = \"\"\n    for number\
    \ in sorted_numbers\n        final_string = final_string * number * \" \"\n  \
    \  end\n    return rstrip(final_string)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcy6y3jcu.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching reverse(::Dict{String, Int64})\\n  Closest candidates are:\\n    reverse(!Matched::Tuple)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\n    reverse(!Matched::Pair{A,\
    \ B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpcy6y3jcu.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcy6y3jcu.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcy6y3jcu.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpcy6y3jcu.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: no method matching reverse(::Dict{String,\
    \ Int64})\\n  Closest candidates are:\\n    reverse(!Matched::Tuple) at /shared/centos7/julia/1.7.3/share/julia/base/tuple.jl:485\\\
    n    reverse(!Matched::Pair{A, B}) where {A, B} at /shared/centos7/julia/1.7.3/share/julia/base/pair.jl:48\\\
    n    reverse(!Matched::Union{SubString{String}, String}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/substring.jl:166\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpcy6y3jcu.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcy6y3jcu.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcy6y3jcu.jl:30\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return sort(numbers.split(\"\
    \ \"), by=x->number_to_index(x))*\" \"\nend\n \nsort_numbers(\"three one five\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: type String has no field split\nStacktrace:\n [1] getproperty\n\
    \   @ ./Base.jl:42 [inlined]\n [2] sort_numbers(numbers::String)\n   @ Main /tmp/tmp9luc_sur.jl:8\n\
    \ [3] top-level scope\n   @ /tmp/tmp9luc_sur.jl:11\nin expression starting at\
    \ /tmp/tmp9luc_sur.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_tokens\
    \ = tokenize(numbers)\n    numbers_tokens_sorted = sorted(numbers_tokens, key=lambda\
    \ k: NUMS[k])\n    return \" \".join(numbers_tokens_sorted)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw5chfwb8.jl:9\nin expression starting at /tmp/tmpw5chfwb8.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_split\
    \ = split(numbers, \" \")\n    numbers_int = [parse(Int, i) for i in numbers_split]\n\
    \    sorted_numbers = sort(numbers_int)\n    sorted_numbers_string = \"\"\n  \
    \  for i in sorted_numbers\n        sorted_numbers_string = string(sorted_numbers_string,\
    \ \" \", i)\n    end\n    return sorted_numbers_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptmve_yp6.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmptmve_yp6.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmptmve_yp6.jl:22 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmptmve_yp6.jl:21\\ntest\
    \ set: Error During Test at /tmp/tmptmve_yp6.jl:23\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmptmve_yp6.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expan"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the numbers\
    \ string into a vector\n    number_vector = split(numbers)\n    # Convert each\
    \ string into an int, and sort the vector\n    number_vector = sort(parse.(Int,\
    \ number_vector))\n    # Join the vector into a string\n    return join(number_vector,\
    \ \" \")\nend\n@test sort_numbers(\"three one five\") == \"one three five\"\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmp5h2rlw03.jl:15\nin expression starting at /tmp/tmp5h2rlw03.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    x = split(numbers,\
    \ r\"\\s+\")\n    Int_list = []\n    String_list = []\n    numbers_string = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]\n    numbers_int = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    for\
    \ (index, value) in enumerate(x)\n        if value in numbers_string\n       \
    \     Int_list = append!(Int_list, numbers_int[index])\n        end\n    end\n\
    \    for (index, value) in enumerate(sort(Int_list))\n        String_list = append!(String_list,\
    \ numbers_string[value])\n    end\n    return join(String_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxl6765z2.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  BoundsError:\
    \ attempt to access 10-element Vector{String} at index [0]\\n  Stacktrace:\\n\
    \   [1] getindex(A::Vector{String}, i1::Int64)\\n     @ Base ./array.jl:861\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpxl6765z2.jl:19\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxl6765z2.jl:29 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxl6765z2.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpxl6765z2.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  BoundsError: attempt\
    \ to access 10-element Vector{String} at index [0]\\n  Stacktrace:\\n   [1] getindex(A::Vector{String},\
    \ i1::Int64)\\n     @ Base ./array.jl:861\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpxl6765z2.jl:19\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxl6765z2.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpxl6765z2.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpxl6765z2.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  BoundsError: attempt to access 10-element Vector{String} at index\
    \ [0]\\n  Stacktrace:\\n   [1] getindex(A::Vector{String}, i1::Int64)\\n     @\
    \ Base ./array.jl:861\\n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpxl6765z2.jl:19\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpxl6765z2.jl:31 [inlined]\\\
    n   [5] ma"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_dict\
    \ = Dict( \"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\"\
    \ => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\"\
    \ => 9 )\n    numbers_arr = split(numbers, ' ')\n    numbers_arr = map(x -> numbers_dict[x],\
    \ numbers_arr)\n    sorted_numbers = sort(numbers_arr)\n    words_sorted_numbers\
    \ = map(x -> key(numbers_dict, x), sorted_numbers)\n    return(join(words_sorted_numbers,\
    \ ' '))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuorxavnt.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex\\n      @ ./dict.jl:481 [inlined]\\\
    n    [2] #1\\n      @ /tmp/tmpuorxavnt.jl:10 [inlined]\\n    [3] iterate\\n  \
    \    @ ./generator.jl:47 [inlined]\\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\\
    n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\n    [6] map\\n \
    \     @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpuorxavnt.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpuorxavnt.jl:20 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpuorxavnt.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmpuorxavnt.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError: key not defined\\\
    n  Stacktrace:\\n    [1] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\\n   \
    \   @ Main /tmp/tmpuorxavnt.jl:12\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64},\
    \ var\"#2#4\"{Dict{String, Int64}}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\\
    n      @ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653\
    \ [inlined]\\n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6]\
    \ sort_numbers(numbers::String)\\n      @ Main /tmp/tmpuorxavnt.jl:12\\n    [7]\
    \ macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpuorxavnt.jl:21 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_mapping\
    \ = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    numbers_array = split(numbers, \" \")\n    numbers_array = sort(numbers_array)\
    \ do a, b\n        if number_mapping[a] < number_mapping[b]\n            return\
    \ true\n        else\n            return false\n        end\n    end\n    return\
    \ join(numbers_array, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqsbq2714.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsbq2714.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsbq2714.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqsbq2714.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsbq2714.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsbq2714.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqsbq2714.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsbq2714.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsbq2714.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsbq2714.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n \n    # store each\
    \ number in the string as an Int\n    number_list = [parse(Int, number) for number\
    \ in split(numbers, \" \")]\n    \n    # sort the number list\n    sorted_numbers\
    \ = sort(number_list)\n    \n    # map the sorted list to their numberal names\n\
    \    to_word = Dict(0 => \"zero\", 1 => \"one\", 2 => \"two\", 3 => \"three\"\
    , 4 => \"four\", 5 => \"five\", 6 => \"six\", 7 => \"seven\", 8 => \"eight\",\
    \ 9 => \"nine\")\n    sorted_words = [to_word[num] for num in sorted_numbers]\n\
    \    \n    # return a string of the numberal names\n    return join(sorted_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvwi9ef3r.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpvwi9ef3r.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpvwi9ef3r.jl:27 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpvwi9ef3r.jl:26\\ntest\
    \ set: Error During Test at /tmp/tmpvwi9ef3r.jl:28\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpvwi9ef3r.jl:10\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro exp"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n \n    parts = numbers.split(\"\
    \ \")\n    new_parts = sort(parts)\n    return join(new_parts, \" \")\n    \n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfsz4pd9b.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpfsz4pd9b.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpfsz4pd9b.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpfsz4pd9b.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpfsz4pd9b.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpfsz4pd9b.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpfsz4pd9b.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpfsz4pd9b.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpfsz4pd9b.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpfsz4pd9b.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpfsz4pd9b.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpfsz4pd9b.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpfsz4pd9b.jl:22\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numlist = split(numbers)\n\
    \    sort(numlist)\n    return join(numlist, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfiny9adm.jl:20\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  \
    \ Evaluated: \"five zero four seven nine eight\" == \"zero four five seven eight\
    \ nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiny9adm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiny9adm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfiny9adm.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"six\
    \ five four three two one zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfiny9adm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfiny9adm.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfiny9adm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_list =\
    \ [x for x in numbers.split(\" \")]\n    numbers_dict = Dict(\"zero\" => 0, \"\
    one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\" => 5, \"six\"\
    \ => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    numbers_list = [numbers_dict[x]\
    \ for x in number_list]\n    sort!(numbers_list)\n    #numbers_str = [str(x) for\
    \ x in numbers_list]\n    return \" \".join(sort(number_list, by=numbers_dict))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjapmuijf.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpjapmuijf.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjapmuijf.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjapmuijf.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjapmuijf.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpjapmuijf.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjapmuijf.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjapmuijf.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjapmuijf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpjapmuijf.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjapmuijf.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjapmuijf.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjapmuijf.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjapmuijf.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\n\
    \        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three'\
    \ => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n   \
    \     'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    )\n    split_numbers\
    \ = split(numbers)\n    vals = map(num_dict, split_numbers)\n    sorted_inds =\
    \ sortperm(vals)\n    return join(split_numbers[sorted_inds], ' ')\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp5tgjhwzo.jl:9\nin expression starting\
    \ at /tmp/tmp5tgjhwzo.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    split_numbers\
    \ = split(numbers, \" \")\n    for i in 1:length(split_numbers)\n        split_numbers[i]\
    \ = numeral_to_num(split_numbers[i])\n    end\n    sorted_numbers = sort(split_numbers)\n\
    \    for i in 1:length(sorted_numbers)\n        sorted_numbers[i] = num_to_numeral(sorted_numbers[i])\n\
    \    end\n    return sorted_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8oo72gke.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: numeral_to_num\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp8oo72gke.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8oo72gke.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8oo72gke.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp8oo72gke.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: numeral_to_num not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp8oo72gke.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8oo72gke.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8oo72gke.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp8oo72gke.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: numeral_to_num\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp8oo72gke.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8oo72gke.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8oo72gke.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp8oo72gke.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: numeral_to_num n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = set(nums)\n    nums = Array(nums)\n    sort!(nums)\n    ordered\
    \ = join(nums, \" \")\n    return ordered\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprj6ste37.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmprj6ste37.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprj6ste37.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprj6ste37.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmprj6ste37.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmprj6ste37.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprj6ste37.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprj6ste37.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmprj6ste37.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmprj6ste37.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmprj6ste37.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmprj6ste37.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmprj6ste37.jl:23\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = [parse(Int,\
    \ to_numeral(n)) for n in split(numbers)]\n    sort!(nums)\n    [to_numeral(n)\
    \ for n in nums]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    words =\
    \ split(numbers)\n    nums = map(x -> parse(Int,x), words)\n    sort(nums)\n \
    \   words = map(x -> string(x), nums)\n    join(words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_nliifdo.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmp_nliifdo.jl:10 [inlined]\\n    [5]\
    \ iterate\\n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp_nliifdo.jl:10\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmp_nliifdo.jl:21 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmp_nliifdo.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp_nliifdo.jl:22\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmp_nliifdo.jl:10 [inlined]\\n    [5]\
    \ iterate\\n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Ve"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_keys =\
    \ String[]\n    number_values = String[]\n    number_keys = [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ]\n    number_values = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"\
    , \"8\", \"9\"]\n    d = Dict(zip(number_keys, number_values))\n    d[\"ten\"\
    ] = \"10\"\n    n = numbers |> split(\" \")\n    v = map(x -> d[x], n)\n    map(x\
    \ -> d[x], sort(v)) |> join(\" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkxtesdwc.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Vector{SubString{String}} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmpkxtesdwc.jl:14\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkxtesdwc.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkxtesdwc.jl:22\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split()\n\
    \    num_list.sort()\n    #num_list = [int(num) for num in num_list]\n    #num_list.sort()\n\
    \    num_list = [str(num) for num in num_list]\n    return \" \".join(num_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbahdl4qs.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpbahdl4qs.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbahdl4qs.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbahdl4qs.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpbahdl4qs.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpbahdl4qs.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbahdl4qs.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbahdl4qs.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpbahdl4qs.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpbahdl4qs.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpbahdl4qs.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbahdl4qs.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpbahdl4qs.jl:23\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    # Split\
    \ the string into individual numbers, sort them, and then join them into a string.\n\
    \    return \" \".join(sort(split(numbers)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvpvx3vnw.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpvpvx3vnw.jl:10\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvpvx3vnw.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvpvx3vnw.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpvpvx3vnw.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field join\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpvpvx3vnw.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvpvx3vnw.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvpvx3vnw.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpvpvx3vnw.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpvpvx3vnw.jl:10\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvpvx3vnw.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvpvx3vnw.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpvpvx3vnw.jl:20\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdnmc7ccn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdnmc7ccn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdnmc7ccn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdnmc7ccn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdnmc7ccn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdnmc7ccn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdnmc7ccn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdnmc7ccn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdnmc7ccn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdnmc7ccn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.lower().split(\"\
    \ \")\n    numdict = Dict()\n    for num in nums\n        numdict[num] = 0\n \
    \   for num in nums\n        numdict[num] += 1\n    keylist = keys(numdict)\n\
    \    sort!(keylist)\n    output = \"\"\n    for key in keylist\n        for x\
    \ in 1:numdict[key]\n            output = output * key * \" \"\n        end\n\
    \    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmdrf6bge.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmdrf6bge.jl:1\n\
    in expression starting at /tmp/tmpmdrf6bge.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the words,\
    \ convert them to numbers and sort them\n    nums = split(numbers, \" \")\n  \
    \  sort!(nums)\n    # convert the number to words\n    for i in 1:length(nums)\n\
    \        if nums[i] == \"0\"\n            nums[i] = \"zero\"\n        elseif nums[i]\
    \ == \"1\"\n            nums[i] = \"one\"\n        elseif nums[i] == \"2\"\n \
    \           nums[i] = \"two\"\n        elseif nums[i] == \"3\"\n            nums[i]\
    \ = \"three\"\n        elseif nums[i] == \"4\"\n            nums[i] = \"four\"\
    \n        elseif nums[i] == \"5\"\n            nums[i] = \"five\"\n        elseif\
    \ nums[i] == \"6\"\n            nums[i] = \"six\"\n        elseif nums[i] == \"\
    7\"\n            nums[i] = \"seven\"\n        elseif nums[i] == \"8\"\n      \
    \      nums[i] = \"eight\"\n        elseif nums[i] == \"9\"\n            nums[i]\
    \ = \"nine\"\n        end\n    end\n    # join the words into a string\n    return\
    \ join(nums, \" \")\nend\n \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd7l92hx_.jl:46\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd7l92hx_.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7l92hx_.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpd7l92hx_.jl:47\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd7l92hx_.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7l92hx_.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpd7l92hx_.jl:48\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd7l92hx_.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd7l92hx_.jl:43\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd7l92hx_.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \"\"\" Make a\
    \ list of the numbers \n    \"\"\"\n    num_list = numbers.split(\" \")\n    \"\
    \"\" Make a dict of the number names and their corresponding values\n    \"\"\"\
    \n    number_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n   \
    \     \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n       \
    \ \"five\" => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\"\
    \ => 8,\n        \"nine\" => 9,\n    )\n    \"\"\" Use list comprehension to translate\
    \ the number names into their corresponding integer values\n    \"\"\"\n    num_list\
    \ = [number_dict[x] for x in num_list]\n    \"\"\" Sort the list from smallest\
    \ to largest\n    \"\"\"\n    sort!(num_list)\n    \"\"\" Make a list of the numerical\
    \ keys of the number_dict\n    \"\"\"\n    num_keys = keys(number_dict)\n    \"\
    \"\" Make a list of the numerical values of the number_dict\n    \"\"\"\n    num_values\
    \ = values(number_dict)\n    \"\"\" Make a dict of the numerical keys and values\
    \ \n    \"\"\"\n    num_dict = Dict(zip(num_values, num_keys))\n    \"\"\" Use\
    \ list comprehension to translate the integer values into their corresponding\
    \ number names\n    \"\"\"\n    num_list = [num_dict[x] for x in num_list]\n \
    \   \"\"\" Return a string of the translated numbers joined by a space\n    \"\
    \"\"\n    return \" \".join(num_list)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt4qxrk_b.jl:52\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpt4qxrk_b.jl:10\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt4qxrk_b.jl:52 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt4qxrk_b.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpt4qxrk_b.jl:53\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpt4qxrk_b.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt4qxrk_b.jl:53 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt4qxrk_b.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpt4qxrk_b.jl:54\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpt4qxrk_b.jl:10\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpt4qxrk_b.jl:54 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpt4qxrk_b.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpt4qxrk_b.jl:55\\n  Test threw exception\\n  Expressi"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n = map(x ->\
    \ NUMS[x], split(numbers))\n    sort!(n)\n    return join(map(x -> x[1], n), \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpeeb97s4h.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ NUMS not defined\\n  Stacktrace:\\n    [1] (::var\"#1#3\")(x::SubString{String})\\\
    n      @ Main /tmp/tmpeeb97s4h.jl:8\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpeeb97s4h.jl:8\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpeeb97s4h.jl:18 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpeeb97s4h.jl:16\\ntest\
    \ set: Error During Test at /tmp/tmpeeb97s4h.jl:19\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError:\
    \ NUMS not defined\\n  Stacktrace:\\n    [1] (::var\"#1#3\")(x::SubString{String})\\\
    n      @ Main /tmp/tmpeeb97s4h.jl:8\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpeeb97s4h.jl:8\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpeeb97s4h.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(string(sort(parse.(Int,\
    \ split(numbers))), ' '))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwpjdgbkx.jl:15\\n  Expression: candidate(\"\
    \") == \"\"\\n   Evaluated: \"Int64[] \" == \"\"\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpwpjdgbkx.jl:15 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpwpjdgbkx.jl:14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    for i in 1:length(nums)\n        for j in 1:length(nums)\n            if\
    \ str2int(nums[i]) < str2int(nums[j])\n                temp = nums[i]\n      \
    \          nums[i] = nums[j]\n                nums[j] = temp\n            end\n\
    \        end\n    end\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkpqofi4z.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpkpqofi4z.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkpqofi4z.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkpqofi4z.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpkpqofi4z.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpkpqofi4z.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkpqofi4z.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkpqofi4z.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpkpqofi4z.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpkpqofi4z.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpkpqofi4z.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkpqofi4z.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpkpqofi4z.jl:28\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_split\
    \ = split(numbers, \" \")\n    numbers_ints = [numeral_to_int(x) for x in numbers_split]\n\
    \    numbers_ints_sorted = sort(numbers_ints)\n    numbers_sorted = [int_to_numeral(x)\
    \ for x in numbers_ints_sorted]\n    return(join(numbers_sorted, \" \"))\nend\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfgrpuice.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: numeral_to_int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpfgrpuice.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpfgrpuice.jl:20 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpfgrpuice.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpfgrpuice.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: numeral_to_int not defined\\\
    n  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\n     @ Main ./none:0\\\
    n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpfgrpuice.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpfgrpuice.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpfgrpuice.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpfgrpuice.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: numeral_to_int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n = convert(Array{Int,1},\
    \ numbers)\n    sort!(n)\n    join(n, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb_9zdem1.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: Cannot `convert`\
    \ an object of type String to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpb_9zdem1.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb_9zdem1.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb_9zdem1.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpb_9zdem1.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: Cannot `convert` an object\
    \ of type String to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpb_9zdem1.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb_9zd"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]\n    num_mapping = Dict(num[i] => i for i in 1:10)\n    num_list =\
    \ [num_mapping[x] for x in split(numbers)]\n    return join(sort(num[num_list]))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjbl3i911.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbl3i911.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbl3i911.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjbl3i911.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbl3i911.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbl3i911.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjbl3i911.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbl3i911.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbl3i911.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbl3i911.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n_lst = []\n\
    \    for number in split(numbers)\n        n_lst.append(get_numerals(number))\n\
    \    end\n    return join(n_lst)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy5_cpyv9.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  type Array has\
    \ no field append\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpy5_cpyv9.jl:10\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpy5_cpyv9.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy5_cpyv9.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpy5_cpyv9.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type Array has no\
    \ field append\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpy5_cpyv9.jl:10\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpy5_cpyv9.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy5_cpyv9.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpy5_cpyv9.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  type Array has no field append\\n  Stacktrace:\\n   [1] getproperty\\\
    n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpy5_cpyv9.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpy5_cpyv9.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy5_cpyv9.jl:18\\ntest set:\
    \ Error During Test"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    tosort = map(numbers_to_ints, nums)\n    sort!(tosort)\n    toreturn\
    \ = map(ints_to_numbers, tosort)\n    return join(toreturn, \" \")\nend\nsort_numbers(\"\
    zero five three one\")\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: numbers_to_ints not defined\nStacktrace:\n\
    \ [1] sort_numbers(numbers::String)\n   @ Main /tmp/tmp4762z823.jl:9\n [2] top-level\
    \ scope\n   @ /tmp/tmp4762z823.jl:14\nin expression starting at /tmp/tmp4762z823.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    #numbers.split()\n\
    \    # numbers is a string:\n    # 'three one five'\n    # split to get a list:\n\
    \    #['three', 'one', 'five']\n    # map string to numbers\n    # [3, 1, 5]\n\
    \    # sort numbers\n    # [1, 3, 5]\n    # map numbers to string\n    # ['one',\
    \ 'three', 'five']\n    # join list\n    # 'one three five'\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6mdjie4p.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp6mdjie4p.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6mdjie4p.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6mdjie4p.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp6mdjie4p.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp6mdjie4p.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6mdjie4p.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\n\
    \        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\" => 2,\n      \
    \  \"three\" => 3,\n        \"four\" => 4,\n        \"five\" => 5,\n        \"\
    six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n        \"nine\"\
    \ => 9\n    )\n    words = split(numbers, \" \")\n    ints = [num_dict[x] for\
    \ x in words]\n    sort!(ints)\n    num_dict_rev = Dict(value => key for (key,\
    \ value) in num_dict)\n    words = [num_dict_rev[x] for x in ints]\n    return\
    \ join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfhhzbeym.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] #1\n     @ ./none:0 [inlined]\n\
    \   [3] iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#4\"{Dict{String, Int64}}})\n     @ Base ./array.jl:724\n   [5] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpfhhzbeym.jl:21\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpfhhzbeym.jl:32 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpfhhzbeym.jl:31\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    4      1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfhhzbeym.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers)\n\
    \    numbers = [numbers[word] for word in words]\n    sort!(numbers)\n    return\
    \ \" \".join(word(number) for number in numbers)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphn5bz7mt.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmphn5bz7mt.jl:11\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmphn5bz7mt.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmphn5bz7mt.jl:17\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n  # Split string\
    \ into array\n  split_numbers = split(numbers)\n  # Create dictionary of numberal\
    \ replacements\n  num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"\
    three\" => 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\"\
    \ => 8, \"nine\" => 9)\n  # Convert numbers to numeric and sort\n  sort_numbers\
    \ = sort(map(x -> num_dict[x], split_numbers))\n  # Convert numbers back to numberals\n\
    \  convert_to_numberals = map(x -> findfirst(y -> y == x, num_dict)[1], sort_numbers)\n\
    \  # Convert to string\n  join(convert_to_numberals, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwil741w1.jl:25\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"t\" == \"three\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwil741w1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwil741w1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwil741w1.jl:26\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"t f n\" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwil741w1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwil741w1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwil741w1.jl:27\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"z f f\
    \ s e n\" == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwil741w1.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwil741w1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwil741w1.jl:28\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"z o\
    \ t t f f s\" == \"zero one two three four five six\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwil741w1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwil741w1"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwil741w1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_of_numbers\
    \ = length(split(numbers))\n    number_string = \"\"\n    while number_of_numbers\
    \ > 0\n        min_number = minimum(number_of_numbers)\n        if min_number\
    \ == 0\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"zero \")\n            else\n                number_string\
    \ = string(number_string, \"zero\")\n            end\n        elseif min_number\
    \ == 1\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"one \")\n            else\n                number_string\
    \ = string(number_string, \"one\")\n            end\n        elseif min_number\
    \ == 2\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"two \")\n            else\n                number_string\
    \ = string(number_string, \"two\")\n            end\n        elseif min_number\
    \ == 3\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"three \")\n            else\n                number_string\
    \ = string(number_string, \"three\")\n            end\n        elseif min_number\
    \ == 4\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"four \")\n            else\n                number_string\
    \ = string(number_string, \"four\")\n            end\n        elseif min_number\
    \ == 5\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"five \")\n            else\n                number_string\
    \ = string(number_string, \"five\")\n            end\n        elseif min_number\
    \ == 6\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"six \")\n            else\n                number_string\
    \ = string(number_string, \"six\")\n            end\n        elseif min_number\
    \ == 7\n            if number_of_numbers > 1\n                number_string =\
    \ string(number_string, \"seven \")\n            else\n                number_string\
    \ = string(number_string, \"seven\")\n            end\n        elseif min_number\
    \ ==\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp41zcpuar.jl:1\nin expression starting at /tmp/tmp41zcpuar.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \"\"\" Convert\
    \ the number words to their numeric value and sort.\n    \"\"\"\n    if numbers\
    \ == \"\": return \"\"\n    nums = [str(word_to_number(word)) for word in numbers.split(\"\
    \ \")]\n    nums.sort()\n    return \" \".join(nums)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3bl1wb50.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3bl1wb50.jl:1\n\
    in expression starting at /tmp/tmp3bl1wb50.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    @assert length(nums) >= 2\n    word_to_num = Dict(\"zero\" => 0,\
    \ \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\" => 5, \"\
    six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    nums_int = [word_to_num[x]\
    \ for x in nums]\n    sort!(nums_int)\n    nums_word = [key for (key, value) in\
    \ word_to_num if value in nums_int]\n    return join(nums_word, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmxdfbsdw.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  AssertionError: length(nums)\
    \ >= 2\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpmxdfbsdw.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmxdfbsdw.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmxdfbsdw.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpmxdfbsdw.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  AssertionError: length(nums) >= 2\\n \
    \ Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpmxdfbsdw.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmxdfbsdw.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmxdfbsdw.jl:20\\ntest set:\
    \ Test Failed at /tmp/tmpmxdfbsdw.jl:23\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = lowercase(numbers)\n\
    \    if contains(numbers, r\"^\\s*$\")\n        return \"\"\n    end\n    words\
    \ = split(numbers)\n    if !all(contains(numbers_dict, w) for w in words)\n  \
    \      throw(DomainError(\"The input string contains words other than 'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\"\
    ))\n    end\n    return join(sort(numbers_dict[w] for w in words))\nend\nsort_numbers(\"\
    three one five\")\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: numbers_dict not defined\nStacktrace:\n\
    \ [1] (::var\"#1#3\")(w::SubString{String})\n   @ Main ./none:0\n [2] iterate\n\
    \   @ ./generator.jl:47 [inlined]\n [3] _all(f::typeof(identity), itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Colon)\n   @ Base ./reduce.jl:1156\n [4] all\n   @ ./reduce.jl:1152\
    \ [inlined]\n [5] all\n   @ ./reduce.jl:1070 [inlined]\n [6] sort_numbers(numbers::String)\n\
    \   @ Main /tmp/tmpat_rmgq0.jl:13\n [7] top-level scope\n   @ /tmp/tmpat_rmgq0.jl:18\n\
    in expression starting at /tmp/tmpat_rmgq0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return \" \"\
    .join(sort(split(numbers)))\nend\n@interact\ndef _(numbers=\"three one five\"\
    ):\n    println(sort_numbers(numbers))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @interact not defined\nin expression starting\
    \ at /tmp/tmp3l1p34x9.jl:10\nin expression starting at /tmp/tmp3l1p34x9.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    s = split(numbers,\
    \ \" \")\n    order = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    @show sortperm(s, o = order)\n\
    \    return \" \".join(s[i] for i in sortperm(s, o = order))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numeral_map =\
    \ Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" =>\
    \ 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" =>\
    \ 9)\n    sorted_numbers = sort(map(x -> numeral_map[x], split(numbers)))\n  \
    \  string_numbers = []\n    for i in sorted_numbers\n        string_numbers =\
    \ append!(string_numbers, keys(numeral_map)[values(numeral_map) .== i])\n    end\n\
    \    return join(string_numbers, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    for i in 1:length(nums)\n        nums[i] = parse(Int, nums[i])\n    end\n\
    \    sort!(nums)\n    for i in 1:length(nums)\n        nums[i] = nums[i] - 1\n\
    \    end\n    for i in 1:length(nums)\n        nums[i] = NUMBERS[nums[i]]\n  \
    \  end\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmqy142ip.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n     @ Base ./parse.jl:137\\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n     @ Base ./parse.jl:241\\n   [3] parse\\n     @ ./parse.jl:241\
    \ [inlined]\\n   [4] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpmqy142ip.jl:10\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpmqy142ip.jl:27 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpmqy142ip.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmqy142ip.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError: invalid\
    \ base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n     @ Base ./parse.jl:137\\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n     @ Base ./parse.jl:241\\n   [3] parse\\n     @ ./parse.jl:241\
    \ [inlined]\\n   [4] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpmqy142ip.jl:10\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpmqy142ip.jl:28 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpmqy142ip.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpmqy142ip.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  Argument"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_map = Dict('zero'\
    \ => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six'\
    \ => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    num_str = split(numbers,\
    \ ' ')\n    num_vec = []\n    for i in num_str\n        num_vec = push!(num_vec,\
    \ num_map[i])\n    end\n    num_sorted = sort(num_vec)\n    num_sorted_str = []\n\
    \    for i in num_sorted\n        num_sorted_str = push!(num_sorted_str, num_map[i])\n\
    \    end\n    out = join(num_sorted_str, ' ')\n    return out\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpnn6m9fma.jl:8\nin expression starting\
    \ at /tmp/tmpnn6m9fma.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    split_numbers\
    \ = split(numbers)\n    for num in split_numbers\n        num_to_int(num)\n  \
    \  end\n    sort(split_numbers)\n    join(split_numbers)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb7cuvonm.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ num_to_int not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpb7cuvonm.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb7cuvonm.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb7cuvonm.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpb7cuvonm.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: num_to_int\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpb7cuvonm.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb7cuvonm.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb7cuvonm.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpb7cuvonm.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: num_to_int not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpb7cuvonm.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpb7cuvonm.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpb7cuvonm.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpb7cuvonm.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"six five four three two one zero\") == \"zero one two thr"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_sorted = sort(nums)\n    out = join(nums_sorted, \" \")\n    return\
    \ out\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_m2k793t.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_m2k793t.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_m2k793t.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_m2k793t.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_m2k793t.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_m2k793t.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_m2k793t.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_m2k793t.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_m2k793t.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_m2k793t.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    sorted_nums = sort(nums)\n    sorted_nums[1] = sorted_nums[1][1:end]\n\
    \    return join(sorted_nums, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqxaajyio.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpqxaajyio.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpqxaajyio.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpqxaajyio.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpqxaajyio.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpqxaajyio.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpqxaajyio.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpqxaajyio.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpqxaajyio.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpqxaajyio.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpqxaajyio.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpqxaajyio.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpqxaajyio.jl:21\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split string\
    \ on whitespace.\n    numbers_list = split(numbers)\n    # sort the list by number\n\
    \    sort!(numbers_list, by=number_to_number)\n    # join the list back into a\
    \ string\n    return join(numbers_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnhhbbm5y.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: number_to_number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpnhhbbm5y.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnhhbbm5y.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnhhbbm5y.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpnhhbbm5y.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: number_to_number not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpnhhbbm5y.jl:11\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnhhbbm5y.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnhhbbm5y.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpnhhbbm5y.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: number_to_number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpnhhbbm5y.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnhhbbm5y.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnhhbbm5y.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpnhhbbm5y.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: number_to_"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    unsorted_numbers\
    \ = split(numbers)\n    sorted_numbers = []\n    for i in 1:size(unsorted_numbers)[1]\n\
    \        j = size(sorted_numbers)[1]\n        while j > 0 && unsorted_numbers[i]\
    \ < sorted_numbers[j]\n            j -= 1\n        end\n        push!(sorted_numbers,\
    \ unsorted_numbers[i], j+1)\n    end\n    join(sorted_numbers, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmptjg7c218.jl:25\\n  Expression: candidate(\"\
    three\") == \"three\"\\n   Evaluated: \"three 1\" == \"three\"\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmptjg7c218.jl:25 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmptjg7c218.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n  s = split(numbers)\n\
    \  numbers = [dictionary[s[i]] for i=1:length(s)]\n  a = sort(numbers)\n  return\
    \ join(reverse(a))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6d3d1y2l.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ dictionary not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\"{Vector{SubString{String}}})(i::Int64)\\\
    n     @ Main ./array.jl:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"{Vector{SubString{String}}}})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp6d3d1y2l.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp6d3d1y2l.jl:19 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp6d3d1y2l.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmp6d3d1y2l.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: dictionary\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#2\"{Vector{SubString{String}}})(i::Int64)\\\
    n     @ Main ./array.jl:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"{Vector{SubString{String}}}})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp6d3d1y2l.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmp6d3d1y2l.jl:20 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmp6d3d1y2l.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmp6d3d1y2l.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: dictionary not defined\\n  Stacktrace:\\n   [1] (::var\"\
    #1#2\"{Vector{SubString{String}}})(i::Int64)\\n     @ Main"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Convert string\
    \ to array of words\n    words = split(numbers)\n    # Convert each word to integer\n\
    \    convert_to_number = [Dict(word => i) for (i, word) in enumerate([\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"])]\n    numbers = [j for i in convert_to_number for (k, j) in i if\
    \ k in words]\n    # Sort the numbers\n    sort!(numbers)\n    # Convert numbers\
    \ back to words\n    convert_to_word = [Dict(i => word) for (i, word) in enumerate([\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"])]\n    words = [j for i in convert_to_word for (k, j) in i\
    \ if k in numbers]\n    # Return space-delimited string\n    return join(words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    numbers\
    \ = numbers.replace(\" \",\"\")\n    words = []\n    for j in 1:length(numbers)\n\
    \        if numbers[j] != ' '\n            push!(words,numbers[j])\n        end\n\
    \    end\n    output = []\n    for i in sort(collect(num_dict[x] for x in words))\n\
    \        for (k,v) in num_dict\n            if i == v\n                push!(output,k)\n\
    \            end\n        end\n    end\n    return join(output,\" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz581ohym.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ replace\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpz581ohym.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz581ohym.jl:31 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz581ohym.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpz581ohym.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field replace\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpz581ohym.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz581ohym.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz581ohym.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpz581ohym.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field replace\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpz581ohym.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz581ohym.jl:33 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz581ohym.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpz581ohym.jl:34\\n  Test threw exception\\n  Expre"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    # convert\
    \ the input into a vector of digit values\n    # code adapted from https://docs.julialang.org/en/v1/base/strings/#Base.split\n\
    \    digit_values = split(numbers)\n    for i in 1:length(digit_values)\n    \
    \    digit_values[i] = get_number_value(digit_values[i])\n    end\n    \n    #\
    \ sort the vector in place\n    sort!(digit_values)\n    \n    # build the output\
    \ string\n    # code adapted from https://stackoverflow.com/questions/46575536/julia-join-concatenate-strings-with-or-without-separator\n\
    \    answer = \"\"\n    for i in 1:length(digit_values)\n        answer = join([answer,\
    \ get_number_string(digit_values[i])])\n    end\n    \n    return answer\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfxqogkdg.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ get_number_value not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpfxqogkdg.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfxqogkdg.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfxqogkdg.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpfxqogkdg.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: get_number_value\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpfxqogkdg.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfxqogkdg.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfxqogkdg.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpfxqogkdg.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: get_number_value not defined\\n  Stacktrace:\\n  \
    \ [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpfxqogkdg.jl:13\\n  \
    \ [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfxqogkdg.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfxqogkdg.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpfxqogkdg.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(\"six five four three two one zero\") =="
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    a = split(numbers)\n\
    \    sort!(a)\n    join(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcbh5hfap.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcbh5hfap.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcbh5hfap.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcbh5hfap.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcbh5hfap.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcbh5hfap.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcbh5hfap.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcbh5hfap.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcbh5hfap.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcbh5hfap.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq242y5bg.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq242y5bg.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq242y5bg.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpq242y5bg.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq242y5bg.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq242y5bg.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpq242y5bg.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq242y5bg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq242y5bg.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq242y5bg.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = split(numbers, \" \")\n    sort!(numbers_array)\n    return join(numbers_array,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpar_3eod2.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar_3eod2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar_3eod2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpar_3eod2.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar_3eod2.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar_3eod2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpar_3eod2.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpar_3eod2.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpar_3eod2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpar_3eod2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # numbers2 =\
    \ numbers.replace('zero', '0').replace('one', '1').replace('two', '2').replace('three',\
    \ '3').replace('four', '4').replace('five', '5').replace('six', '6').replace('seven',\
    \ '7').replace('eight', '8').replace('nine', '9')\n    numbers2 = convert(Array{Int64},\
    \ numbers)\n    numbers3 = sort(numbers2)\n    numbers4 = IntToWord(numbers3)\n\
    \    numbers5 = string(numbers4)\n    return numbers5\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn02uohao.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    String to an object of type \\n    Array{Int64}\\n\
    \  Closest candidates are:\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpn02uohao.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpn02uohao.jl:20 [inlined]\\\
    n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    string_to_num\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9}\n    number_list = numbers.split()\n    number_dict\
    \ = Dict()\n    for num in number_list\n        number_dict[num] = string_to_num[num]\n\
    \    end\n    sorted_keys = sort(collect(keys(number_dict)))\n    return join(sorted_keys)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpx83_4koe.jl:8\nin expression starting\
    \ at /tmp/tmpx83_4koe.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(map(x\
    \ -> int(x), split(numbers, \" \"))), \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_5nef67d.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: int not\
    \ defined\\n  Stacktrace:\\n    [1] (::var\"#1#2\")(x::SubString{String})\\n \
    \     @ Main /tmp/tmp_5nef67d.jl:8\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp_5nef67d.jl:8\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp_5nef67d.jl:15 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp_5nef67d.jl:14\\ntest\
    \ set: Error During Test at /tmp/tmp_5nef67d.jl:16\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError: int not defined\\\
    n  Stacktrace:\\n    [1] (::var\"#1#2\")(x::SubString{String})\\n      @ Main\
    \ /tmp/tmp_5nef67d.jl:8\\n    [2] iterate\\n      @ ./generator.jl:47 [inlined]\\\
    n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp_5nef67d.jl:8\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp_5nef67d.jl:16 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level sco"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    a = split(numbers)\n\
    \    sort!(a)\n    return join(a)\nend\nsort_numbers(\"three one five\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprfybfpxk.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfybfpxk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfybfpxk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmprfybfpxk.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfybfpxk.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfybfpxk.jl:17\ntest set: Test\
    \ Failed at /tmp/tmprfybfpxk.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfybfpxk.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfybfpxk.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprfybfpxk.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n = split(numbers)\n\
    \    sort!(n)\n    return join(n, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrkyzr_c.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrkyzr_c.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrkyzr_c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptrkyzr_c.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrkyzr_c.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrkyzr_c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptrkyzr_c.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrkyzr_c.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrkyzr_c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrkyzr_c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    list = zeros(Int, length(nums))\n    for (i, num) in enumerate(nums)\n  \
    \      list[i] = parse(Int, num)\n    end\n    return join(sort(list), \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl9jlj_vf.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n     @ Base ./parse.jl:137\\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n     @ Base ./parse.jl:241\\n   [3] parse\\n     @ ./parse.jl:241\
    \ [inlined]\\n   [4] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpl9jlj_vf.jl:11\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpl9jlj_vf.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpl9jlj_vf.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpl9jlj_vf.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError: invalid\
    \ base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n   [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n     @ Base ./parse.jl:137\\n   [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n     @ Base ./parse.jl:241\\n   [3] parse\\n     @ ./parse.jl:241\
    \ [inlined]\\n   [4] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpl9jlj_vf.jl:11\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpl9jlj_vf.jl:22 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpl9jlj_vf.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpl9jlj_vf.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  Argument"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \") # split string into list of numeral strings\n    num_dict = {\"zero\":0,\
    \ \"one\":1, \"two\":2, \"three\":3, \"four\":4, \"five\":5, \"six\":6, \"seven\"\
    :7, \"eight\":8, \"nine\":9} # dictionary to convert numeral strings to numerals\n\
    \    num_array = [] # list to convert numeral strings to numerals\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzk5gpso1.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzk5gpso1.jl:1\n\
    in expression starting at /tmp/tmpzk5gpso1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    parts = split(numbers)\n\
    \    indices = map(string_to_numeral, parts)\n    sort!(indices)\n    parts =\
    \ map(numeral_to_string, indices)\n    return join(parts, \" \")\nend\nsort_numbers(\"\
    three one five\")\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: string_to_numeral not defined\nStacktrace:\n\
    \ [1] sort_numbers(numbers::String)\n   @ Main /tmp/tmp0n2fw6dd.jl:9\n [2] top-level\
    \ scope\n   @ /tmp/tmp0n2fw6dd.jl:14\nin expression starting at /tmp/tmp0n2fw6dd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return sort(split(numbers,\
    \ \" \")) * \" \"\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers)\n\
    \    words_sorted = sort(words)\n    return join(words_sorted)\nend\nsort_numbers(\"\
    three one five\")\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptk9_zxld.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptk9_zxld.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptk9_zxld.jl:17\ntest set: Test\
    \ Failed at /tmp/tmptk9_zxld.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptk9_zxld.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptk9_zxld.jl:17\ntest set: Test\
    \ Failed at /tmp/tmptk9_zxld.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptk9_zxld.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptk9_zxld.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptk9_zxld.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    sorted = sort(split(numbers))\n\
    \    return join(sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjjtuyznz.jl:18\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjtuyznz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjtuyznz.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpjjtuyznz.jl:19\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjtuyznz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjtuyznz.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpjjtuyznz.jl:20\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjtuyznz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjtuyznz.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjtuyznz.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp789iu7j2.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp789iu7j2.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp789iu7j2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp789iu7j2.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp789iu7j2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp789iu7j2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp789iu7j2.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp789iu7j2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp789iu7j2.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp789iu7j2.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return sort(split(numbers)).join('\
    \ ')\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp97fiyn1c.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type Array has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp97fiyn1c.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp97fiyn1c.jl:15 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp97fiyn1c.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp97fiyn1c.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type Array has no field join\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp97fiyn1c.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp97fiyn1c.jl:16 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp97fiyn1c.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp97fiyn1c.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type Array has no\
    \ field join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp97fiyn1c.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp97fiyn1c.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp97fiyn1c.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmp97fiyn1c.jl:18\\n  Test threw exception\\n  Expression:\
    \ candi"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_to_sort\
    \ = []\n    words = split(numbers, \" \")\n    for word in words\n        if word\
    \ == \"zero\"\n            push!(number_to_sort, 0)\n        elseif word == \"\
    one\"\n            push!(number_to_sort, 1)\n        elseif word == \"two\"\n\
    \            push!(number_to_sort, 2)\n        elseif word == \"three\"\n    \
    \        push!(number_to_sort, 3)\n        elseif word == \"four\"\n         \
    \   push!(number_to_sort, 4)\n        elseif word == \"five\"\n            push!(number_to_sort,\
    \ 5)\n        elseif word == \"six\"\n            push!(number_to_sort, 6)\n \
    \       elseif word == \"seven\"\n            push!(number_to_sort, 7)\n     \
    \   elseif word == \"eight\"\n            push!(number_to_sort, 8)\n        elseif\
    \ word == \"nine\"\n            push!(number_to_sort, 9)\n        end\n    end\n\
    \    number_to_sort = sort(number_to_sort)\n    sorted_words = []\n    for i in\
    \ number_to_sort\n        if i == 0\n            push!(sorted_words, \"zero\"\
    )\n        elseif i == 1\n            push!(sorted_words, \"one\")\n        elseif\
    \ i == 2\n            push!(sorted_words, \"two\")\n        elseif i == 3\n  \
    \          push!(sorted_words, \"three\")\n        elseif i == 4\n           \
    \ push!(sorted_words, \"four\")\n        elseif i == 5\n            push!(sorted_words,\
    \ \"five\")\n        elseif i == 6\n            push!(sorted_words, \"six\")\n\
    \        elseif i == 7\n            push!(sorted_words, \"seven\")\n        elseif\
    \ i == 8\n            push!(sorted_words, \"eight\")\n        elseif i == 9\n\
    \            push!(sorted_words, \"nine\")\n        end\n    end\n    joined_words\
    \ = join(sorted_words, \" \")\n    return joined_words\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo0roshvs.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo0roshvs.jl:1\n\
    in expression starting at /tmp/tmpo0roshvs.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    nums\
    \ = [parse(Int,num_dict[x]) for x in split(numbers)]\n    sort!(nums)\n    return\
    \ join([key for (key,value) in num_dict if value in nums], \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2q5n_41_.jl:19\\n  Test threw\
    \ exception\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict('zero'\
    \ => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six'\
    \ => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    return join(sort(split(numbers,\
    \ \" \"), by=num_dict), ' ')\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp9mwwx7kt.jl:8\nin expression starting\
    \ at /tmp/tmp9mwwx7kt.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    # Splitting\
    \ the string at white spaces and putting the values in a list (numbers_list)\n\
    \    numbers_list = split(numbers, \" \")\n    \n    # Converting the numberals\
    \ to numerals\n    dict_numbers = Dict(\"zero\" => 0, \"one\" => 1, \"two\" =>\
    \ 2, \"three\" => 3, \"four\" => 4,\n    \"five\" => 5, \"six\" => 6, \"seven\"\
    \ => 7, \"eight\" => 8, \"nine\" => 9)\n    \n    numeral_list = map(x -> dict_numbers[x],\
    \ numbers_list)\n    \n    # Sorting the numerals\n    numeral_list = sort(numeral_list)\n\
    \    \n    # converting the numerals back to numberals\n    dict_numbers = Dict(0\
    \ => \"zero\", 1 => \"one\", 2 => \"two\", 3 => \"three\", 4 => \"four\",\n  \
    \  5 => \"five\", 6 => \"six\", 7 => \"seven\", 8 => \"eight\", 9 => \"nine\"\
    )\n    \n    numbers_list = map(x -> dict_numbers[x], numeral_list)\n    \n  \
    \  # Concatenating the values in the list\n    num_string = \"\"\n    for num\
    \ in numbers_list\n        num_string = string(num_string, \" \", num)\n    end\n\
    \    \n    # Removing the extra space at the begining\n    num_string = num_string[2:end]\n\
    \    \n    return num_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2vwld0hy.jl:43\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n    [1] getindex(h::Dict{String, Int64}, key::SubString{String})\\\
    n      @ Base ./dict.jl:481\\n    [2] (::var\"#1#3\")(x::SubString{String})\\\
    n      @ Main /tmp/tmp2vwld0hy.jl:16\\n    [3] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [4] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [5] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [6] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp2vwld0hy.jl:16\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp2vwld0hy.jl:43 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp2vwld0hy.jl:42\\nTest\
    \ Summary: | Pass  Error  Total\\ntest set      |    4      1      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    numbers_list\
    \ = split(numbers, \" \")\n    list_of_numbers = []\n    for x in numbers_list\n\
    \        if x == \"zero\"\n            push!(list_of_numbers, 0)\n        elseif\
    \ x == \"one\"\n            push!(list_of_numbers, 1)\n        elseif x == \"\
    two\"\n            push!(list_of_numbers, 2)\n        elseif x == \"three\"\n\
    \            push!(list_of_numbers, 3)\n        elseif x == \"four\"\n       \
    \     push!(list_of_numbers, 4)\n        elseif x == \"five\"\n            push!(list_of_numbers,\
    \ 5)\n        elseif x == \"six\"\n            push!(list_of_numbers, 6)\n   \
    \     elseif x == \"seven\"\n            push!(list_of_numbers, 7)\n        elseif\
    \ x == \"eight\"\n            push!(list_of_numbers, 8)\n        elseif x == \"\
    nine\"\n            push!(list_of_numbers, 9)\n        end\n    end\n    sort!(list_of_numbers)\n\
    \    return_string = \"\"\n    for y in list_of_numbers\n        if y == 0\n \
    \           return_string = return_string * \"zero \"\n        elseif y == 1\n\
    \            return_string = return_string * \"one \"\n        elseif y == 2\n\
    \            return_string = return_string * \"two \"\n        elseif y == 3\n\
    \            return_string = return_string * \"three \"\n        elseif y == 4\n\
    \            return_string = return_string * \"four \"\n        elseif y == 5\n\
    \            return_string = return_string * \"five \"\n        elseif y == 6\n\
    \            return_string = return_string * \"six \"\n        elseif y == 7\n\
    \            return_string = return_string * \"seven \"\n        elseif y == 8\n\
    \            return_string = return_string * \"eight \"\n        elseif y == 9\n\
    \            return_string = return_string * \"nine \"\n        end\n    end\n\
    \    return_string = return_\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps29ojov9.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps29ojov9.jl:1\n\
    in expression starting at /tmp/tmps29ojov9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_int = [parse(Int,n) for n in num_list]\n    sort!(num_int)\n    return\
    \ \" \".join(string(n) for n in num_int)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4or7xndv.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ join\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp4or7xndv.jl:11\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp4or7xndv.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp4or7xndv.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmp4or7xndv.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base 10 digit \\\
    't\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmp4or7xndv.jl:9\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmp4or7xndv.jl:19 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmp4or7xndv.jl:17\\ntest\
    \ set: Error During Test at /tmp/tmp4or7xndv.jl:20\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubStr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    names = split(numbers)\n\
    \    nums = map(name2num, names)\n    snums = sort(nums)\n    sortnames = map(num2name,\
    \ snums)\n    return join(sortnames, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplhao6eaj.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: name2num\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmplhao6eaj.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplhao6eaj.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplhao6eaj.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmplhao6eaj.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: name2num not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmplhao6eaj.jl:9\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplhao6eaj.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplhao6eaj.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmplhao6eaj.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: name2num\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmplhao6eaj.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplhao6eaj.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplhao6eaj.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmplhao6eaj.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: name2num not defined\\n  Stacktrace:\\n"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, ' ')\n    return join(sort(numbers_list), ' ')\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxsgxj18v.jl:18\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsgxj18v.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsgxj18v.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxsgxj18v.jl:19\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsgxj18v.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsgxj18v.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxsgxj18v.jl:20\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsgxj18v.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsgxj18v.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxsgxj18v.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_order\
    \ = Dict('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five'\
    \ => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    numbers_as_nums\
    \ = [number_order[word] for word in numbers.split()]\n    return \" \".join([key\
    \ for key, val in number_order if val in sorted(numbers_as_nums)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp3q7_1k8n.jl:8\nin expression starting\
    \ at /tmp/tmp3q7_1k8n.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return(join(sort(split(numbers)),\
    \ \" \"))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphcna8w3b.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcna8w3b.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcna8w3b.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphcna8w3b.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcna8w3b.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcna8w3b.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphcna8w3b.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphcna8w3b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphcna8w3b.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphcna8w3b.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    parsed_numbers\
    \ = []\n    for n in numbers.split()\n        push!(parsed_numbers, number_to_int(n))\n\
    \    end\n    @assert all(x -> x != -1, parsed_numbers) \"Invalid number string\"\
    \n    sorted_numbers = sort(parsed_numbers)\n    formatted_numbers = []\n    for\
    \ n in sorted_numbers\n        push!(formatted_numbers, int_to_number(n))\n  \
    \  end\n    return join(formatted_numbers, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpejy179n0.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpejy179n0.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpejy179n0.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpejy179n0.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpejy179n0.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpejy179n0.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpejy179n0.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpejy179n0.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpejy179n0.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpejy179n0.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpejy179n0.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpejy179n0.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpejy179n0.jl:28\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n \n    split_numbers\
    \ = split(numbers)\n    sorted_numbers = []\n    for number in split_numbers\n\
    \        push!(sorted_numbers, number)\n    end\n    sorted_numbers = sort(sorted_numbers)\n\
    \    return join(sorted_numbers, \" \")\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi3a0u99p.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi3a0u99p.jl:1\n\
    in expression starting at /tmp/tmpi3a0u99p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int,x), nums)\n    sort!(nums)\n    nums = map(x ->\
    \ string(x), nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt958ho07.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpt958ho07.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpt958ho07.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmpt958ho07.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmpt958ho07.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpt958ho07.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmpt958ho07.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    values = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]\n    nums = numbers |> split\n    num_ints = nums |> map(value\
    \ -> findfirst(x -> x == value, values) - 1)\n    sorted_ints = sort(num_ints)\n\
    \    sorted_nums = sorted_ints |> map(x -> values[x+1])\n    sorted_nums |> join\n\
    end\n@assert sort_numbers(\"three one five\") == \"one three five\"\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_words\
    \ = split(numbers)\n    number_values = Int64[]\n    for n in number_words\n \
    \       number_values = push!(number_values, read(n, Int64))\n    end\n    number_values\
    \ = sort(number_values)\n    return join(number_values, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4m3v266h.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  SystemError:\
    \ opening file \"three\": No such file or directory\\n  Stacktrace:\\n    [1]\
    \ systemerror(p::String, errno::Int32; extrainfo::Nothing)\\n      @ Base ./error.jl:174\\\
    n    [2] #systemerror#68\\n      @ ./error.jl:173 [inlined]\\n    [3] systemerror\\\
    n      @ ./error.jl:173 [inlined]\\n    [4] open(fname::SubString{String}; lock::Bool,\
    \ read::Nothing, write::Nothing, create::Nothing, truncate::Nothing, append::Nothing)\\\
    n      @ Base ./iostream.jl:293\\n    [5] open\\n      @ ./iostream.jl:282 [inlined]\\\
    n    [6] open(f::Base.var\"#364#365\"{Int64}, args::SubString{String}; kwargs::Base.Pairs{Symbol,\
    \ Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\\n      @ Base ./io.jl:328\\n  \
    \  [7] open\\n      @ ./io.jl:328 [inlined]\\n    [8] read\\n      @ ./io.jl:436\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp4m3v266h.jl:11\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmp4m3v266h.jl:22 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmp4m3v266h.jl:20\\ntest\
    \ set: Error During Test at /tmp/tmp4m3v266h.jl:23\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  SystemError:\
    \ opening file \"three\": No such file or directory\\n  Stacktrace:\\n    [1]\
    \ systemerror(p::String, errno::Int32; extrainfo::Nothing)\\n      @ Base ./error.jl:174\\\
    n    [2] #systemerror#68\\n      @ ./error.jl:173 [inlined]\\n    [3] systemerror\\\
    n      @ ./error.jl:173 [inlined]\\n    [4] open(fname::SubString{String}; lock::Bool,\
    \ read::Nothing, write::Nothing, create::Nothing, truncate::Nothing, append::Nothing)\\\
    n      @ Base ./iostream.jl:293\\n    [5] open\\n      @ ./iostream.jl:282 [inlined]\\\
    n    [6] open(f::Base.var\"#364#365\"{Int64}, args::SubString{String}; kwarg"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_array = split(numbers,\
    \ \" \")\n    for i in 1:length(num_array)\n        num_array[i] = number_to_int(num_array[i])\n\
    \    end\n    num_array = sort(num_array)\n    for i in 1:length(num_array)\n\
    \        num_array[i] = int_to_number(num_array[i])\n    end\n    return join(num_array,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi1e55xpe.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: number_to_int\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpi1e55xpe.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi1e55xpe.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi1e55xpe.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpi1e55xpe.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: number_to_int not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpi1e55xpe.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi1e55xpe.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi1e55xpe.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpi1e55xpe.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: number_to_int\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpi1e55xpe.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpi1e55xpe.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpi1e55xpe.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpi1e55xpe.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: number_to_int not d"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_arr =\
    \ split(numbers)\n    for i in 1:length(numbers_arr)\n        numbers_arr[i] =\
    \ string2int(numbers_arr[i])\n    end\n    return join(sort(numbers_arr), \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnodwu5n8.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ string2int not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpnodwu5n8.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnodwu5n8.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnodwu5n8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpnodwu5n8.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: string2int\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpnodwu5n8.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnodwu5n8.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnodwu5n8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpnodwu5n8.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: string2int not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpnodwu5n8.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpnodwu5n8.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnodwu5n8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpnodwu5n8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"six five four three two one zero\") == \"zero one two thr"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n = length(numbers)\n\
    \    numbers_split = split(numbers, \" \")\n    to_compare = []\n    for i = 1:n\n\
    \        if numbers_split[i] == \"zero\"\n            push!(to_compare, 0)\n \
    \       elseif numbers_split[i] == \"one\"\n            push!(to_compare, 1)\n\
    \        elseif numbers_split[i] == \"two\"\n            push!(to_compare, 2)\n\
    \        elseif numbers_split[i] == \"three\"\n            push!(to_compare, 3)\n\
    \        elseif numbers_split[i] == \"four\"\n            push!(to_compare, 4)\n\
    \        elseif numbers_split[i] == \"five\"\n            push!(to_compare, 5)\n\
    \        elseif numbers_split[i] == \"six\"\n            push!(to_compare, 6)\n\
    \        elseif numbers_split[i] == \"seven\"\n            push!(to_compare, 7)\n\
    \        elseif numbers_split[i] == \"eight\"\n            push!(to_compare, 8)\n\
    \        elseif numbers_split[i] == \"nine\"\n            push!(to_compare, 9)\n\
    \        end\n    end\n    sorted_indices = sortperm(to_compare)\n    answer =\
    \ \"\"\n    for i = 1:n\n        if sorted_indices[i] == 0\n            answer\
    \ = answer * \"zero \"\n        elseif sorted_indices[i] == 1\n            answer\
    \ = answer * \"one \"\n        elseif sorted_indices[i] == 2\n            answer\
    \ = answer * \"two \"\n        elseif sorted_indices[i] == 3\n            answer\
    \ = answer * \"three \"\n        elseif sorted_indices[i] == 4\n            answer\
    \ = answer * \"four \"\n        elseif sorted_indices[i] == 5\n            answer\
    \ = answer * \"five \"\n        elseif sorted_indices[i] == 6\n            answer\
    \ = answer * \"six \"\n        elseif sorted_indices[i] == 7\n            answer\
    \ = answer * \"seven \"\n        elseif sorted\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvm0c1jg2.jl:1\nin expression starting at /tmp/tmpvm0c1jg2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    letters = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]\n    output = []\n    for n in split(numbers)\n        if n\
    \ in letters\n            output.append(n)\n        end\n    end\n    output.sort()\n\
    \    return \" \".join(output)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm_375ywa.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type Array has no field\
    \ sort\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpm_375ywa.jl:15\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm_375ywa.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm_375ywa.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpm_375ywa.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type Array has no field append\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpm_375ywa.jl:12\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm_375ywa.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm_375ywa.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpm_375ywa.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type Array has no\
    \ field append\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpm_375ywa.jl:12\\n\
    \   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm_375ywa.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm_375ywa.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpm_375ywa.jl:26\\n  Test threw exception\\n  Expression"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = map(parse,\
    \ split(numbers)) # split numbers by space and turn each number into int\n   \
    \ return join(sort(nums), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppjvwk13n.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  MethodError:\
    \ no method matching parse(::SubString{String})\\n  Closest candidates are:\\\
    n    parse(!Matched::Type{T}, !Matched::AbstractString) where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\\\
    n    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [2] _collect\\n     @ ./array.jl:744 [inlined]\\n   [3] collect_similar\\\
    n     @ ./array.jl:653 [inlined]\\n   [4] map\\n     @ ./abstractarray.jl:2867\
    \ [inlined]\\n   [5] sort_numbers(numbers::String)\\n     @ Main /tmp/tmppjvwk13n.jl:8\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [7] macro expansion\\n     @ /tmp/tmppjvwk13n.jl:17 [inlined]\\\
    n   [8] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmppjvwk13n.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmppjvwk13n.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  MethodError: no method\
    \ matching parse(::SubString{String})\\n  Closest candidates are:\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString) where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\\\
    n    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [2] _collect\\n     @ ./array.jl:744 [i"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    split(numbers)\n\
    \    s = Array{Int64}(length(numbers))\n    for (i,x) in enumerate(numbers)\n\
    \        s[i] = num_to_int(x)\n    end\n    sort(s)\n    sorted_numbers = string()\n\
    \    for i in s\n        push!(sorted_numbers,int_to_num(i))\n    end\n    sorted_numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6yoq805q.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching (Array{Int64})(::Int64)\\n  Closest candidates are:\\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp6yoq805q.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6yoq805q.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6yoq805q.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp6yoq805q.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: no method matching (Array{Int64})(::Int64)\\\
    n  Closest candidates are:\\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\\\
    n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp6yoq805q.jl:9\\n   [2] macro expansion\\n     @ /s"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    sort!(numbers)\n    numbers = join(numbers, \" \")\n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3zivhehr.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3zivhehr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3zivhehr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp3zivhehr.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3zivhehr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3zivhehr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp3zivhehr.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3zivhehr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3zivhehr.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3zivhehr.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers,\
    \ \" \")), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj0n49nmo.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0n49nmo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0n49nmo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpj0n49nmo.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0n49nmo.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0n49nmo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpj0n49nmo.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0n49nmo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0n49nmo.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0n49nmo.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    for i in 1:length(numbers)\n        if numbers[i] == \"zero\"\n\
    \            numbers[i] = \"0\"\n        elseif numbers[i] == \"one\"\n      \
    \      numbers[i] = \"1\"\n        elseif numbers[i] == \"two\"\n            numbers[i]\
    \ = \"2\"\n        elseif numbers[i] == \"three\"\n            numbers[i] = \"\
    3\"\n        elseif numbers[i] == \"four\"\n            numbers[i] = \"4\"\n \
    \       elseif numbers[i] == \"five\"\n            numbers[i] = \"5\"\n      \
    \  elseif numbers[i] == \"six\"\n            numbers[i] = \"6\"\n        elseif\
    \ numbers[i] == \"seven\"\n            numbers[i] = \"7\"\n        elseif numbers[i]\
    \ == \"eight\"\n            numbers[i] = \"8\"\n        elseif numbers[i] == \"\
    nine\"\n            numbers[i] = \"9\"\n        end\n    end\n    sort!(numbers)\n\
    \    for i in 1:length(numbers)\n        if numbers[i] == \"0\"\n            numbers[i]\
    \ = \"zero\"\n        elseif numbers[i] == \"1\"\n            numbers[i] = \"\
    one\"\n        elseif numbers[i] == \"2\"\n            numbers[i] = \"two\"\n\
    \        elseif numbers[i] == \"3\"\n            numbers[i] = \"three\"\n    \
    \    elseif numbers[i] == \"4\"\n            numbers[i] = \"four\"\n        elseif\
    \ numbers[i] == \"5\"\n            numbers[i] = \"five\"\n        elseif numbers[i]\
    \ == \"6\"\n            numbers[i] = \"six\"\n        elseif numbers[i] == \"\
    7\"\n            numbers[i] = \"seven\"\n        elseif numbers[i] == \"8\"\n\
    \            numbers[i] = \"eight\"\n        elseif numbers[i] == \"9\"\n    \
    \        numbers[i] = \"nine\"\n        end\n    end\n    sorted_numbers = \"\"\
    \n    for i in 1:length(n\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmnzi5aj.jl:58\nin expression starting at\
    \ /tmp/tmphmnzi5aj.jl:58\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return sort(split(numbers)).*\"\
    \ \"\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = numbers.split()\n    sorted_list = []\n    for i in numbers_list\n       \
    \ x = findfirst([\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"],i)\n        push!(sorted_list,x)\n    end\n\
    \    return join(sort(sorted_list, by=identity), \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsski9w2v.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpsski9w2v.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsski9w2v.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsski9w2v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpsski9w2v.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpsski9w2v.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsski9w2v.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsski9w2v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpsski9w2v.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpsski9w2v.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsski9w2v.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsski9w2v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpsski9w2v.jl:24\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num = split(numbers)\n\
    \    for i in 1:length(num)\n        num[i] = number_to_ordinal(num[i])\n    end\n\
    \    num = sort(num)\n    for i in 1:length(num)\n        num[i] = ordinal_to_number(num[i])\n\
    \    end\n    num = join(num)\n    return num\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3zsf5kbz.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ number_to_ordinal not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp3zsf5kbz.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3zsf5kbz.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3zsf5kbz.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp3zsf5kbz.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: number_to_ordinal\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp3zsf5kbz.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3zsf5kbz.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3zsf5kbz.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp3zsf5kbz.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: number_to_ordinal not defined\\n  Stacktrace:\\n \
    \  [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp3zsf5kbz.jl:10\\n \
    \  [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp3zsf5kbz.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp3zsf5kbz.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp3zsf5kbz.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"six five four three two one zero\")"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    v = [i for i\
    \ in split(numbers)]\n    sort!(v)\n    return join(v, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6tdrv4tn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6tdrv4tn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6tdrv4tn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6tdrv4tn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6tdrv4tn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6tdrv4tn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6tdrv4tn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6tdrv4tn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6tdrv4tn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6tdrv4tn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_words\
    \ = split(numbers) # split the string into an array of words\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdcpe0quu.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdcpe0quu.jl:1\n\
    in expression starting at /tmp/tmpdcpe0quu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = words(numbers)\n    sorted_numbers = sort(numbers_list)\n    return(join(sorted_numbers,\
    \ \" \"))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t\
    @test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj2hvrizn.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: words not\
    \ defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpj2hvrizn.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj2hvrizn.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj2hvrizn.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpj2hvrizn.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: words not defined\\n  Stacktrace:\\\
    n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpj2hvrizn.jl:8\\n \
    \  [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj2hvrizn.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj2hvrizn.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpj2hvrizn.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: words\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpj2hvrizn.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj2hvrizn.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj2hvrizn.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpj2hvrizn.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: words not defined\\n  Stacktrace:\\n   [1] sort_"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list_int = [numeral_to_num(n) for n in\
    \ numbers_list]\n    sort!(numbers_list_int)\n    return \" \".join([num_to_numeral(n)\
    \ for n in numbers_list_int])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgfhlgdn3.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: numeral_to_num\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpgfhlgdn3.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpgfhlgdn3.jl:18 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpgfhlgdn3.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpgfhlgdn3.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: numeral_to_num not defined\\\
    n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\n     @ Main ./none:0\\\
    n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpgfhlgdn3.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpgfhlgdn3.jl:19 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpgfhlgdn3.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpgfhlgdn3.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: numeral_to_num\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(n::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = numbers |> split(\" \")\n    numbers_array = map(x -> numberal_to_int(x),\
    \ numbers_array)\n    numbers_array = sort(numbers_array)\n    numbers_array =\
    \ map(x -> int_to_numberal(x), numbers_array)\n    return join(numbers_array,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmple5_gvxm.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Vector{SubString{String}} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmple5_gvxm.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmple5_gvxm.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmple5_gvxm.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmple5_gvxm.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\\n  Use square brackets [] for indexing an Array.\\n  Stacktrace:\\\
    n   [1] |>(x::String, f::Vector{SubString{String}})\\n     @ Base ./operators.jl:966\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmple5_gvxm.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmple5_gvxm.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmple5_gvxm.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return(\" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5ymu5m83.jl:15\n  Expression: candidate(\"\
    \") == \"\"\n   Evaluated: \" \" == \"\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ymu5m83.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ymu5m83.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5ymu5m83.jl:16\n  Expression: candidate(\"three\") == \"three\"\
    \n   Evaluated: \" \" == \"three\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ymu5m83.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ymu5m83.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5ymu5m83.jl:17\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \" \" == \"three five nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5ymu5m83.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ymu5m83.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5ymu5m83.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \" \" ==\
    \ \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5ymu5m83.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5ymu5m83.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5ymu5m83.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zer"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ymu5m83.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    str = \"\
    \"\n    for i = 1:length(numbers_list)\n        str = str * numbers_list[i] *\
    \ \" \"\n    end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp28lwy3je.jl:21\n  Expression: candidate(\"\
    \") == \"\"\n   Evaluated: \" \" == \"\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28lwy3je.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28lwy3je.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp28lwy3je.jl:22\n  Expression: candidate(\"three\") == \"three\"\
    \n   Evaluated: \"three \" == \"three\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28lwy3je.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28lwy3je.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp28lwy3je.jl:23\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"five nine three \" == \"three five nine\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28lwy3je.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28lwy3je.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp28lwy3je.jl:24\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero \" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28lwy3je.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28lwy3je.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp28lwy3je.jl:25\n  Expression: ca"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp28lwy3je.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    join(numbers_list, \" \")\nend\n\
    # 1.4.6\n\"\"\" Input is a string with zero or more spaces.\n    Return the string\
    \ without any leading or trailing spaces.\n    >>> strip_spaces('   test   ')\n\
    \    'test'\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpbo4z5tgs.jl:13\nin expression starting at /tmp/tmpbo4z5tgs.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = map(numbers) do num\n        word2num(num)\n    end\n    sort!(numbers)\n\
    \    numbers = map(numbers) do num\n        num2word(num)\n    end\n    join(numbers,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwgjz2pa2.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ word2num not defined\\n  Stacktrace:\\n    [1] (::var\"#1#3\")(num::SubString{String})\\\
    n      @ Main /tmp/tmpwgjz2pa2.jl:10\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpwgjz2pa2.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpwgjz2pa2.jl:24 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpwgjz2pa2.jl:22\\ntest\
    \ set: Error During Test at /tmp/tmpwgjz2pa2.jl:25\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError:\
    \ word2num not defined\\n  Stacktrace:\\n    [1] (::var\"#1#3\")(num::SubString{String})\\\
    n      @ Main /tmp/tmpwgjz2pa2.jl:10\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpwgjz2pa2.jl:9\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpwgjz2pa2.jl:25 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numeral_list\
    \ = numbers.split()\n    number_list = [numeral_to_number(n) for n in numeral_list]\n\
    \    number_list.sort()\n    numeral_list = [number_to_numeral(n) for n in number_list]\n\
    \    return \" \".join(numeral_list)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7vhxo07j.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp7vhxo07j.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp7vhxo07j.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp7vhxo07j.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp7vhxo07j.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp7vhxo07j.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp7vhxo07j.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp7vhxo07j.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp7vhxo07j.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp7vhxo07j.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp7vhxo07j.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp7vhxo07j.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp7vhxo07j.jl:22\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_words = split(numbers)\n\
    \    num_nums = [word2num(num_word) for num_word in num_words]\n    num_sorted\
    \ = sort(num_nums)\n    num_sorted_words = [num2word(num_num) for num_num in num_sorted]\n\
    \    sorted_string = join(num_sorted_words, \" \")\n    return sorted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpujaktnt5.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ word2num not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(num_word::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpujaktnt5.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpujaktnt5.jl:21 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpujaktnt5.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpujaktnt5.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: word2num\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(num_word::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpujaktnt5.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpujaktnt5.jl:22 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpujaktnt5.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpujaktnt5.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: word2num not defined\\n  Stacktrace:\\n   [1] (::var\"\
    #1#3\")(num_word::SubString{String})\\n     @ Main ./none:0\\n   [2] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [3] coll"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ ' ')\n    nums = sort(nums)\n    return join(nums, ' ')\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_vxx99ny.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vxx99ny.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vxx99ny.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_vxx99ny.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vxx99ny.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vxx99ny.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_vxx99ny.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vxx99ny.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vxx99ny.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_vxx99ny.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = numbers.split(\" \")\n    let dict = Dict{String, Int}()\n    dict[\"zero\"\
    ] = 0\n    dict[\"one\"] = 1\n    dict[\"two\"] = 2\n    dict[\"three\"] = 3\n\
    \    dict[\"four\"] = 4\n    dict[\"five\"] = 5\n    dict[\"six\"] = 6\n    dict[\"\
    seven\"] = 7\n    dict[\"eight\"] = 8\n    dict[\"nine\"] = 9\n    dict[\"ten\"\
    ] = 10\n    dict[\"eleven\"] = 11\n    dict[\"twelve\"] = 12\n    dict[\"thirteen\"\
    ] = 13\n    dict[\"fourteen\"] = 14\n    dict[\"fifteen\"] = 15\n    dict[\"sixteen\"\
    ] = 16\n    dict[\"seventeen\"] = 17\n    dict[\"eighteen\"] = 18\n    dict[\"\
    nineteen\"] = 19\n    dict[\"twenty\"] = 20\n    return join(sort(numbers_array,\
    \ by=x->dict[x]))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgh3cdg86.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgh3cdg86.jl:1\n\
    in expression starting at /tmp/tmpgh3cdg86.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ ' ')\nend\nsort_numbers('three one five')\n@assert sort_numbers('three one five')\
    \ == 'one three five'\n@assert sort_numbers('one nine seven three five') == 'one\
    \ three five seven nine'\n@assert sort_numbers('one two three four five six seven\
    \ eight nine') == 'one two three four five six seven eight nine'\n \n\"\"\" Input\
    \ is a string with words that may or may not be capitalized.\n    Return the input\
    \ string with all words capitalized.\n    >>> make_title('this is a title')\n\
    \    'This Is A Title'\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp_0bwkg37.jl:10\nin expression\
    \ starting at /tmp/tmp_0bwkg37.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ ' ')\n    number_words = Dict{String, Int}('zero' => 0, 'one' => 1, 'two' =>\
    \ 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight'\
    \ => 8, 'nine' => 9)\n    @show number_words\n    numbers = [number_words[number]\
    \ for number in numbers]\n    @show numbers\n    sort!(numbers)\n    numbers =\
    \ [number_words[number] for number in numbers]\n    @show numbers\n    return\
    \ join(numbers, ' ')\nend\n@show sort_numbers('one two three')\n# sort_numbers('one\
    \ two three')\n@test sort_numbers('one two three') == 'one two three'\n@test sort_numbers('three\
    \ one five') == 'one three five'\n@test sort_numbers('three two six five seven\
    \ one four') == 'one two three four five six seven'\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpvm9ar1nb.jl:9\nin expression starting\
    \ at /tmp/tmpvm9ar1nb.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers,\
    \ \" \")\n    numbers = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    numbers_index = []\n    for word\
    \ in words\n        push!(numbers_index, findfirst(numbers, word))\n    end\n\
    \    sort!(numbers_index)\n    numbers_sorted = []\n    for index in numbers_index\n\
    \        push!(numbers_sorted, numbers[index])\n    end\n    join(numbers_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6rat19bb.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    tokens = split(numbers,\
    \ \" \")\n    for i in 1:length(tokens)\n        tokens[i] = number2numeral(numeral2number(tokens[i]))\n\
    \    end\n    sort!(tokens)\n    join(tokens, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpflqd3yjf.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: numeral2number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpflqd3yjf.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpflqd3yjf.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpflqd3yjf.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpflqd3yjf.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: numeral2number not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpflqd3yjf.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpflqd3yjf.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpflqd3yjf.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpflqd3yjf.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: numeral2number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpflqd3yjf.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpflqd3yjf.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpflqd3yjf.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpflqd3yjf.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: numeral2number n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    d = Dict()\n    for n in nums\n        d[n] = sort_dict[n]\n   \
    \ end\n    s = sort(collect(keys(d)), by=x->d[x])\n    return join(s, \" \")\n\
    end\nsort_numbers(\"three one five\")\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: sort_dict not defined\nStacktrace:\n [1]\
    \ sort_numbers(numbers::String)\n   @ Main /tmp/tmp7rn2v5j_.jl:11\n [2] top-level\
    \ scope\n   @ /tmp/tmp7rn2v5j_.jl:16\nin expression starting at /tmp/tmp7rn2v5j_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = lowercase(numbers)\n\
    \    words = split(numbers)\n    word_numbers = []\n    for n in words\n     \
    \   word_numbers = append!(word_numbers, number(n))\n    end\n    sorted_numbers\
    \ = sort(word_numbers)\n    result = \"\"\n    for n in sorted_numbers\n     \
    \   result = result * word(n) * \" \"\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_mvp2cdd.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ number not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp_mvp2cdd.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_mvp2cdd.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_mvp2cdd.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp_mvp2cdd.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp_mvp2cdd.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_mvp2cdd.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_mvp2cdd.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp_mvp2cdd.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: number not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp_mvp2cdd.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_mvp2cdd.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_mvp2cdd.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp_mvp2cdd.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"six five four three two one zero\") == \"zero one two three four\
    \ five"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nsort_numbers(\"zero one two three four five six seven eight nine\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7bi4nfnf.jl:18\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7bi4nfnf.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7bi4nfnf.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp7bi4nfnf.jl:19\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7bi4nfnf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7bi4nfnf.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp7bi4nfnf.jl:20\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7bi4nfnf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7bi4nfnf.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7bi4nfnf.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n = split(numbers,\
    \ \" \")\n    index = findfirst(e -> e == \"one\", n)\n    n[1] = \"zero\"\n \
    \   n[index] = \"one\"\n    return join(sort(n), \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq4hn2mcl.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: invalid\
    \ index: nothing of type Nothing\\n  Stacktrace:\\n    [1] to_index(i::Nothing)\\\
    n      @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{SubString{String}},\
    \ i::Nothing)\\n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ setindex!\\n      @ ./abstractarray.jl:1315 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpq4hn2mcl.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpq4hn2mcl.jl:19 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpq4hn2mcl.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpq4hn2mcl.jl:20\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid index:\
    \ nothing of type Nothing\\n  Stacktrace:\\n    [1] to_index(i::Nothing)\\n  \
    \    @ Base ./indices.jl:300\\n    [2] to_index(A::Vector{SubString{String}},\
    \ i::Nothing)\\n      @ Base ./indices.jl:277\\n    [3] to_indices\\n      @ ./indices.jl:333\
    \ [inlined]\\n    [4] to_indices\\n      @ ./indices.jl:325 [inlined]\\n    [5]\
    \ setindex!\\n      @ ./abstractarray.jl:1315 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpq4hn2mcl.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpq4hn2mcl.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpq4hn2mcl.jl:18\\ntest\
    \ set: Error During Test at /tmp/tmpq4hn2mcl.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\""
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2xy6ew3l.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xy6ew3l.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xy6ew3l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2xy6ew3l.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xy6ew3l.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xy6ew3l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2xy6ew3l.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2xy6ew3l.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2xy6ew3l.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2xy6ew3l.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    strs = split(numbers,\
    \ \" \")\n    nums = zeros(length(strs))\n    for i = 1:length(strs)\n       \
    \ nums[i] = ascii_num(strs[i])\n    end\n    inds = sortperm(nums)\n    nums_ordered\
    \ = nums[inds]\n    output = []\n    for i = 1:length(nums_ordered)\n        output\
    \ = push!(output, num2words(nums_ordered[i]))\n    end\n    return join(output,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj2jk2z1w.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: ascii_num\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpj2jk2z1w.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj2jk2z1w.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj2jk2z1w.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpj2jk2z1w.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: ascii_num not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpj2jk2z1w.jl:11\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj2jk2z1w.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj2jk2z1w.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpj2jk2z1w.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: ascii_num\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpj2jk2z1w.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpj2jk2z1w.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpj2jk2z1w.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpj2jk2z1w.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: ascii_num not defined\\n  Stackt"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num, nums, sort\
    \ = numbers.split(), [], []\n    for i in num \n        nums.append(get_number(i))\n\
    \    nums.sort()\n    for i in nums\n        sort.append(get_word(i))\n    return\
    \ \" \".join(sort)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpxe99izrm.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxe99izrm.jl:1\n\
    in expression starting at /tmp/tmpxe99izrm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_array\
    \ = split(numbers)\n    numbers_array[1]\n    numbers_array[2]\n    if numbers_array[1]\
    \ < numbers_array[2]\n        return join(numbers_array, \" \")\n    else\n  \
    \      return join(reverse(numbers_array), \" \")\n    end\nend\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk57ff_sm.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  BoundsError: attempt to\
    \ access 0-element Vector{SubString{String}} at index [1]\\n  Stacktrace:\\n \
    \  [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpk57ff_sm.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpk57ff_sm.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpk57ff_sm.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpk57ff_sm.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  BoundsError: attempt to access 1-element\
    \ Vector{SubString{String}} at index [2]\\n  Stacktrace:\\n   [1] getindex\\n\
    \     @ ./array.jl:861 [inlined]\\n   [2] sort_numbers(numbers::String)\\n   \
    \  @ Main /tmp/tmpk57ff_sm.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpk57ff_sm.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpk57ff_sm.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmpk57ff_sm.jl:25\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine five three\" == \"three\
    \ five nine\"'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers,\
    \ \" \")\n    Ints = []\n    for word in words\n        if word == \"zero\"\n\
    \            push!(Ints, 0)\n        elseif word == \"one\"\n            push!(Ints,\
    \ 1)\n        elseif word == \"two\"\n            push!(Ints, 2)\n        elseif\
    \ word == \"three\"\n            push!(Ints, 3)\n        elseif word == \"four\"\
    \n            push!(Ints, 4)\n        elseif word == \"five\"\n            push!(Ints,\
    \ 5)\n        elseif word == \"six\"\n            push!(Ints, 6)\n        elseif\
    \ word == \"seven\"\n            push!(Ints, 7)\n        elseif word == \"eight\"\
    \n            push!(Ints, 8)\n        elseif word == \"nine\"\n            push!(Ints,\
    \ 9)\n        end\n    end\n    answer = sort(Ints)\n    str = \"\"\n    for num\
    \ in answer\n        if num == 0\n            str = string(str, \"zero \")\n \
    \       elseif num == 1\n            str = string(str, \"one \")\n        elseif\
    \ num == 2\n            str = string(str, \"two \")\n        elseif num == 3\n\
    \            str = string(str, \"three \")\n        elseif num == 4\n        \
    \    str = string(str, \"four \")\n        elseif num == 5\n            str =\
    \ string(str, \"five \")\n        elseif num == 6\n            str = string(str,\
    \ \"six \")\n        elseif num == 7\n            str = string(str, \"seven \"\
    )\n        elseif num == 8\n            str = string(str, \"eight \")\n      \
    \  elseif num == 9\n            str = string(str, \"nine \")\n        end\n  \
    \  end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5cdg1mlr.jl:66\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"three \" == \"three\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5cdg1mlr.jl:66 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5cdg1mlr.jl:64\ntest set: Test\
    \ Failed at /tmp/tmp5cdg1mlr.jl:67\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"three five nine \" == \"three five nine\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5cdg1mlr.jl:67 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5cdg1mlr.jl:64\ntest set: Test\
    \ Failed at /tmp/tmp5cdg1mlr.jl:68\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ five seven eight nine \" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5cdg1mlr.jl:68 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5cdg1mlr.jl:64\ntest set: Test\
    \ Failed at /tmp/tmp5cdg1mlr.jl:69\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ one two three four five six \" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5cdg1mlr.jl:69 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5cdg1mlr.jl:62\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    words = split(numbers,\
    \ r\"\\s+\")\n    nums = map(convert_string_to_number, words)\n    sort!(nums)\n\
    \    return join(map(convert_number_to_string, nums), \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwv4b5r1m.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: convert_string_to_number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpwv4b5r1m.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwv4b5r1m.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwv4b5r1m.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpwv4b5r1m.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: convert_string_to_number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpwv4b5r1m.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwv4b5r1m.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwv4b5r1m.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpwv4b5r1m.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: convert_string_to_number\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpwv4b5r1m.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpwv4b5r1m.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwv4b5r1m.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpwv4b5r1m.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  Unde"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the String\
    \ into a String[]\n    nums = split(numbers)\n    # get a Dict of the numeric\
    \ value for each word\n    num_keys = Dict([(n, i) for (i, n) in enumerate([\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"])])\n    # sort the list by the numeric value\n    sort!(nums,\
    \ by=x->num_keys[x])\n    # return the list joined with a space\n    return join(nums,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    n = split(numbers)\n\
    \    numbers_dict = Dict()\n    for number in n\n        if number == \"zero\"\
    \n            numbers_dict[number] = 0\n        elseif number == \"one\"\n   \
    \         numbers_dict[number] = 1\n        elseif number == \"two\"\n       \
    \     numbers_dict[number] = 2\n        elseif number == \"three\"\n         \
    \   numbers_dict[number] = 3\n        elseif number == \"four\"\n            numbers_dict[number]\
    \ = 4\n        elseif number == \"five\"\n            numbers_dict[number] = 5\n\
    \        elseif number == \"six\"\n            numbers_dict[number] = 6\n    \
    \    elseif number == \"seven\"\n            numbers_dict[number] = 7\n      \
    \  elseif number == \"eight\"\n            numbers_dict[number] = 8\n        elseif\
    \ number == \"nine\"\n            numbers_dict[number] = 9\n        end\n    end\n\
    \    res = \"\"\n    for i = 1:9\n        for (k,v) in numbers_dict\n        \
    \    if v == i\n                res = res * k * \" \"\n            end\n     \
    \   end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfg6bvj6l.jl:49\n  Expression: candidate(\"\
    three\") == \"three\"\n   Evaluated: \"three \" == \"three\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg6bvj6l.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfg6bvj6l.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpfg6bvj6l.jl:50\n  Expression: candidate(\"three five nine\"\
    ) == \"three five nine\"\n   Evaluated: \"three five nine \" == \"three five nine\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg6bvj6l.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfg6bvj6l.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpfg6bvj6l.jl:51\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"four five\
    \ seven eight nine \" == \"zero four five seven eight nine\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg6bvj6l.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfg6bvj6l.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpfg6bvj6l.jl:52\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"one\
    \ two three four five six \" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfg6bvj6l.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfg6bvj6l.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_to_pos =\
    \ {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9}\n    return join(sort(split(numbers)), \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpa6zhog7d.jl:8\nin expression starting\
    \ at /tmp/tmpa6zhog7d.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_arr = split(numbers,\
    \ ' ')\n    sort!(num_arr)\n    numbers = join(num_arr, ' ')\n    return numbers\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpk2eq5ww1.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2eq5ww1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2eq5ww1.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk2eq5ww1.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2eq5ww1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2eq5ww1.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk2eq5ww1.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2eq5ww1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2eq5ww1.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk2eq5ww1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    numbers_as_ints = convert_numbers_to_ints(nums)\n    sorted_numbers\
    \ = sort(numbers_as_ints)\n    string_of_sorted_numbers = join(map(string, sorted_numbers),\
    \ \" \")\n    return string_of_sorted_numbers\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp83wcuvox.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: convert_numbers_to_ints\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp83wcuvox.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp83wcuvox.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp83wcuvox.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp83wcuvox.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: convert_numbers_to_ints\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp83wcuvox.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp83wcuvox.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp83wcuvox.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp83wcuvox.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: convert_numbers_to_ints\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp83wcuvox.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp83wcuvox.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp83wcuvox.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp83wcuvox.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVa"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = parse(split(numbers,\
    \ ' '))\n    sort!(num_list)\n    join(num_list, ' ')\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_k20j3zv.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: no method\
    \ matching parse(::Vector{SubString{String}})\\n  Closest candidates are:\\n \
    \   parse(!Matched::Type{T}, !Matched::AbstractString) where T<:Complex at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:381\\\
    n    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:40\\n    parse(!Matched::Type{T},\
    \ !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:240\\\
    n    ...\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmp_k20j3zv.jl:8\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_k20j3zv.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_k20j3zv.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the numbers\
    \ string into a vector of numbers\n    num_vector = split(numbers)\n    # create\
    \ a vector of integers to compare the strings to\n    num_vals = [0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9]\n    # create a vector of strings to compare the numbers to\n\
    \    num_strings = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    # create a dictionary to look\
    \ up numbers from the strings\n    d = Dict(num_strings[i] => num_vals[i] for\
    \ i in 1:10)\n    # sort the vector of numbers by their dictionary values\n  \
    \  sort!(num_vector, by = d)\n    # return the vector as a string\n    join(num_vector,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa86ig0t7.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three five nine\") == \"three five nine\"\
    \\n  MethodError: objects of type Dict{String, Int64} are not callable\\n  Stacktrace:\\\
    n    [1] lt(o::Base.Order.By{Dict{String, Int64}, Base.Order.ForwardOrdering},\
    \ a::SubString{String}, b::SubString{String})\\n      @ Base.Order ./ordering.jl:111\\\
    n    [2] sort!\\n      @ ./sort.jl:507 [inlined]\\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg, o::Base.Order.By{Dict{String,\
    \ Int64}, Base.Order.ForwardOrdering}, t::Vector{SubString{String}})\\n      @\
    \ Base.Sort ./sort.jl:592\\n    [4] sort!\\n      @ ./sort.jl:591 [inlined]\\\
    n    [5] sort!\\n      @ ./sort.jl:664 [inlined]\\n    [6] #sort!#8\\n      @\
    \ ./sort.jl:725 [inlined]\\n    [7] sort_numbers(numbers::String)\\n      @ Main\
    \ /tmp/tmpa86ig0t7.jl:17\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpa86ig0t7.jl:28 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpa86ig0t7.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    number_list\
    \ = numbers |> split(\" \")\n    number_list = [num_dict[number] for number in\
    \ number_list]\n    sorted_numbers = sort(number_list)\n    sorted_string = [key\
    \ for (key, value) in num_dict if value in sorted_numbers]\n    sorted_string\
    \ = join(sorted_string, \" \")\n    return sorted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6ukf6wmm.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Vector{SubString{String}} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmp6ukf6wmm.jl:9\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp6ukf6wmm.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp6ukf6wmm.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp6ukf6wmm.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\\n  Use square brackets [] for indexing an Array.\\n  Stacktrace:\\\
    n   [1] |>(x::String, f::Vector{SubString{String}})\\n     @ Base ./operators.jl:966\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp6ukf6wmm.jl:9\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp6ukf6wmm.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp6ukf6wmm.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    my_array = numbers.split(\"\
    \ \")\n    number_array = Array{Int64}(my_array)\n    sorted_array = sort(number_array)\n\
    \    sort_string = join(sorted_array, \" \")\n    return sort_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp10s_43d7.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp10s_43d7.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp10s_43d7.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp10s_43d7.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp10s_43d7.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp10s_43d7.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp10s_43d7.jl:20 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp10s_43d7.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp10s_43d7.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  type String has no\
    \ field split\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmp10s_43d7.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp10s_43d7.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp10s_43d7.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp10s_43d7.jl:22\\n  Test threw exception\\n  Expression:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    mapping = Dict('zero'\
    \ => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six'\
    \ => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    numbers = [mapping[i] for\
    \ i in split(numbers)]\n    numbers = sort(numbers)\n    numbers = [key(i) for\
    \ i in mapping if mapping[key(i)] in numbers]\n    numbers = join(numbers, ' ')\n\
    \    return numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpr_eqrm4k.jl:8\nin expression starting\
    \ at /tmp/tmpr_eqrm4k.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_array = split(numbers,\
    \ \" \")\n    num_array = map(x -> parse(Int, x), num_array)\n    sorted_array\
    \ = sort(num_array)\n    sorted_string = map(x -> string(x), sorted_array)\n \
    \   sorted_string = join(sorted_string, \" \")\n    return sorted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9elv05y_.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmp9elv05y_.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:744\\n    [7] collect_similar\\\
    n      @ ./array.jl:653 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2867\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp9elv05y_.jl:9\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [11] macro expansion\\n      @ /tmp/tmp9elv05y_.jl:20 [inlined]\\\
    n   [12] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [13] top-level scope\\n      @ /tmp/tmp9elv05y_.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmp9elv05y_.jl:21\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmp9elv05y_.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_splt = split(numbers,\
    \ r\"\\s+\")\n    num_as_int = [num2int(x) for x in num_splt]\n    sort_num_as_int\
    \ = sort(num_as_int)\n    sort_num_splt = [int2num(x) for x in sort_num_as_int]\n\
    \    return \" \".join(sort_num_splt)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuziprchm.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: num2int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpuziprchm.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpuziprchm.jl:19 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpuziprchm.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpuziprchm.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: num2int not defined\\n\
    \  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\n     @ Main ./none:0\\\
    n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpuziprchm.jl:9\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpuziprchm.jl:20 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpuziprchm.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpuziprchm.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: num2int\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(x::SubString{String})\\\
    n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\\
    n   [3] collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"})\\\
    n     @ Base ./array.jl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers\
    \ |> split(\" \")\n    new_list = num_list |> sort()\n    return join(new_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz_rucmig.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Vector{SubString{String}} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmpz_rucmig.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz_rucmig.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz_rucmig.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpz_rucmig.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\\n  Use square brackets [] for indexing an Array.\\n  Stacktrace:\\\
    n   [1] |>(x::String, f::Vector{SubString{String}})\\n     @ Base ./operators.jl:966\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpz_rucmig.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz_rucmig.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz_rucmig.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = strip(numbers)\n\
    \    replace!(numbers, 'zero', '0')\n    replace!(numbers, 'one', '1')\n    replace!(numbers,\
    \ 'two', '2')\n    replace!(numbers, 'three', '3')\n    replace!(numbers, 'four',\
    \ '4')\n    replace!(numbers, 'five', '5')\n    replace!(numbers, 'six', '6')\n\
    \    replace!(numbers, 'seven', '7')\n    replace!(numbers, 'eight', '8')\n  \
    \  replace!(numbers, 'nine', '9')\n    sort_numbers = sort(split(numbers))\n \
    \   replace!(sort_numbers[1], '0', 'zero')\n    replace!(sort_numbers[2], '1',\
    \ 'one')\n    replace!(sort_numbers[3], '2', 'two')\n    replace!(sort_numbers[4],\
    \ '3', 'three')\n    replace!(sort_numbers[5], '4', 'four')\n    replace!(sort_numbers[6],\
    \ '5', 'five')\n    replace!(sort_numbers[7], '6', 'six')\n    replace!(sort_numbers[8],\
    \ '7', 'seven')\n    replace!(sort_numbers[9], '8', 'eight')\n    replace!(sort_numbers[10],\
    \ '9', 'nine')\n    return sort_numbers\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp_id6pt1x.jl:9\nin expression starting\
    \ at /tmp/tmp_id6pt1x.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    output = sort([parse(Int,i)\
    \ for i in split(numbers)])\n    return join(string.(output),\" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvqq5kcps.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpvqq5kcps.jl:8\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [9] macro expansion\\n      @ /tmp/tmpvqq5kcps.jl:17 [inlined]\\\
    n   [10] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpvqq5kcps.jl:15\\ntest\
    \ set: Error During Test at /tmp/tmpvqq5kcps.jl:18\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ ./none:0 [inlined]\\n    [5] iterate\\n   \
    \   @ ./generator.jl:47 [inlined]\\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\\n      @ Base ./array.jl:724\\n    [7] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpvqq5kcps.jl:8\\n    [8] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # TODO: write\
    \ your code here\n    pass\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmqbx_wit.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: pass not\
    \ defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @ Main\
    \ /tmp/tmpmqbx_wit.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmqbx_wit.jl:16 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmqbx_wit.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpmqbx_wit.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  UndefVarError: pass not defined\\n  Stacktrace:\\\
    n   [1] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpmqbx_wit.jl:9\\n \
    \  [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmqbx_wit.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmqbx_wit.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpmqbx_wit.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: pass\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmpmqbx_wit.jl:9\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmqbx_wit.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmqbx_wit.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpmqbx_wit.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: pass not defined\\n  Stacktrace:\\n   [1] sort_numb"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    str = \"\";\n\
    \    numbers = lowercase(numbers);\n    words = split(numbers);\n    nums = zeros(Int,\
    \ length(words));\n    for i in 1:length(words)\n        nums[i] = get_numeral(words[i]);\n\
    \    end\n    for i in sort(nums)\n        str = string(str, \" \", get_numeral_word(i));\n\
    \    end\n    return lstrip(str);\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7od_gxjy.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ get_numeral not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp7od_gxjy.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7od_gxjy.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7od_gxjy.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp7od_gxjy.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: get_numeral\
    \ not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\n     @\
    \ Main /tmp/tmp7od_gxjy.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7od_gxjy.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7od_gxjy.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp7od_gxjy.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: get_numeral not defined\\n  Stacktrace:\\n   [1] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmp7od_gxjy.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7od_gxjy.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7od_gxjy.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp7od_gxjy.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"six five four three two one zero\") == \"zero one two "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # parse out the\
    \ numbers\n    nums = split(numbers)\n    # convert the numbers to their numerical\
    \ values\n    nums = map(s -> numbers2int[s], nums)\n    # sort the numbers\n\
    \    nums = sort(nums)\n    # convert the numbers back to string representations\n\
    \    nums = map(s -> int2numbers[s], nums)\n    # return the sorted space-delimited\
    \ string of numbers\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnd8zucmo.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ numbers2int not defined\\n  Stacktrace:\\n    [1] (::var\"#1#3\")(s::SubString{String})\\\
    n      @ Main /tmp/tmpnd8zucmo.jl:11\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpnd8zucmo.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpnd8zucmo.jl:25 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpnd8zucmo.jl:23\\ntest\
    \ set: Error During Test at /tmp/tmpnd8zucmo.jl:26\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError:\
    \ numbers2int not defined\\n  Stacktrace:\\n    [1] (::var\"#1#3\")(s::SubString{String})\\\
    n      @ Main /tmp/tmpnd8zucmo.jl:11\\n    [2] iterate\\n      @ ./generator.jl:47\
    \ [inlined]\\n    [3] _collect(c::Vector{SubString{String}}, itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\\n      @\
    \ Base ./array.jl:744\\n    [4] collect_similar\\n      @ ./array.jl:653 [inlined]\\\
    n    [5] map\\n      @ ./abstractarray.jl:2867 [inlined]\\n    [6] sort_numbers(numbers::String)\\\
    n      @ Main /tmp/tmpnd8zucmo.jl:11\\n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpnd8zucmo.jl:26 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_string\
    \ = split(numbers)\n    numbers_array = []\n    numbers_dict = Dict(\"zero\" =>\
    \ 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\" => 5,\
    \ \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    for number\
    \ in numbers_string\n        push!(numbers_array, numbers_dict[number])\n    end\n\
    \    sorted_numbers = sort(numbers_array)\n    sorted_numbers_string = []\n  \
    \  for i in sorted_numbers\n        push!(sorted_numbers_string, number_dict[i])\n\
    \    end\n    return sorted_numbers_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \"\"\" `string.split()`\
    \ will split a string on every whitespace\n        character, returning a vector\
    \ of strings as a result.\n        Then, `sort()` sorts a vector, returning a\
    \ vector of strings.\n        Finally, `join()` joins a vector of strings with\
    \ another string,\n        returning a single string.\n    \"\"\"\n    return\
    \ join(sort(split(numbers)), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr5o7r0lx.jl:23\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5o7r0lx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5o7r0lx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr5o7r0lx.jl:24\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5o7r0lx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5o7r0lx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr5o7r0lx.jl:25\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5o7r0lx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5o7r0lx.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr5o7r0lx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    number_dict =\
    \ Dict{Char, Int}('one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' =>\
    \ 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    s = split(numbers)\n\
    \    sort!(s, by = x -> number_dict[x])\n    return join(s, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpfgipuko8.jl:8\nin expression starting\
    \ at /tmp/tmpfgipuko8.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(parse.(Int, num_list))\n    return join(num_list, ' ')\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl8x7xwit.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:670 [inlined]\\\
    n    [5] _broadcast_getindex\\n      @ ./broadcast.jl:653 [inlined]\\n    [6]\
    \ getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [7] macro expansion\\\
    n      @ ./broadcast.jl:961 [inlined]\\n    [8] macro expansion\\n      @ ./simdloop.jl:77\
    \ [inlined]\\n    [9] copyto!\\n      @ ./broadcast.jl:960 [inlined]\\n   [10]\
    \ copyto!\\n      @ ./broadcast.jl:913 [inlined]\\n   [11] copy\\n      @ ./broadcast.jl:885\
    \ [inlined]\\n   [12] materialize\\n      @ ./broadcast.jl:860 [inlined]\\n  \
    \ [13] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpl8x7xwit.jl:9\\n \
    \  [14] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [15] macro expansion\\n      @ /tmp/tmpl8x7xwit.jl:18 [inlined]\\\
    n   [16] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [17] top-level scope\\n      @ /tmp/tmpl8x7xwit.jl:16\\ntest\
    \ set: Error During Test at /tmp/tmpl8x7xwit.jl:19\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broa"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    str_list = split(numbers)\n\
    \    num_list = []\n    for word in str_list\n        push!(num_list, numeral_to_num(word))\n\
    \    end\n    sort_num_list = sort(num_list)\n    str_sort_num_list = []\n   \
    \ for num in sort_num_list\n        push!(str_sort_num_list, num_to_numeral(num))\n\
    \    end\n    return join(str_sort_num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_r86to_b.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: numeral_to_num\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp_r86to_b.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_r86to_b.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_r86to_b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r86to_b.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: numeral_to_num\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp_r86to_b.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_r86to_b.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_r86to_b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r86to_b.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: numeral_to_num not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_r86to_b.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_r86to_b.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_r86to_b.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_r86to_b.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"six five four three two one zero\") == \"zero one two three four\
    \ five six\"\n  UndefVarError: nu"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_r86to_b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_arr = split(numbers,\
    \ \" \") # split string into array\n    sort!(num_arr) # sort array\n    return\
    \ join(num_arr, \" \") # join array into string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpswx_w4r9.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswx_w4r9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswx_w4r9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpswx_w4r9.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswx_w4r9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswx_w4r9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpswx_w4r9.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswx_w4r9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswx_w4r9.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswx_w4r9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    numbers_split\
    \ = split(numbers, \" \")\n    numbers_sorted = sort(numbers_split)\n    numbers_joined\
    \ = join(numbers_sorted, \" \")\n    \n    return numbers_joined\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplfqngr_b.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfqngr_b.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfqngr_b.jl:19\ntest set: Test\
    \ Failed at /tmp/tmplfqngr_b.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfqngr_b.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfqngr_b.jl:19\ntest set: Test\
    \ Failed at /tmp/tmplfqngr_b.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplfqngr_b.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplfqngr_b.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfqngr_b.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    if endswith(numbers,\
    \ \".\")\n        numbers = numbers[1:end-1]\n    end\n    numbers = split(numbers)\n\
    \    num_vals = [val(numbers[i]) for i in 1:length(numbers)]\n    sorted_num_vals\
    \ = sort(num_vals)\n    num_vals_map = Dict(zip(num_vals, numbers))\n    sorted_words\
    \ = [num_vals_map[i] for i in sorted_num_vals]\n    join(sorted_words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzb060ntd.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  UndefVarError:\
    \ val not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(i::Int64)\\n     @\
    \ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3]\
    \ collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#3\"})\\n     @ Base ./array.jl:724\\\
    n   [4] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpzb060ntd.jl:12\\n\
    \   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpzb060ntd.jl:24 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpzb060ntd.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpzb060ntd.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  UndefVarError: val\
    \ not defined\\n  Stacktrace:\\n   [1] (::var\"#1#3\")(i::Int64)\\n     @ Main\
    \ ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#3\"})\\n     @ Base ./array.jl:724\\n   [4] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpzb060ntd.jl:12\\n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmpzb060ntd.jl:25 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpzb060ntd.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpzb060ntd.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  UndefVarError: val not defined\\n  Stacktrace:\\n   [1] (::var\"\
    #1#3\")(i::Int64)\\n     @ Main ./none:0\\n   [2] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [3] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#3\"\
    })\\n     @ Base ./array.jl:724\\n   [4"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \") # split number string into string array\n    sort!(nums) # sort string\
    \ array\n    sorted_numbers = join(nums, \" \") # join array into string\n   \
    \ return sorted_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpid39y0fj.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid39y0fj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid39y0fj.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpid39y0fj.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid39y0fj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid39y0fj.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpid39y0fj.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid39y0fj.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid39y0fj.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpid39y0fj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers\
    \ |> split(\" \")\n    num_list = sort(num_list)\n    return join(num_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpythnoqr1.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  MethodError: objects of\
    \ type Vector{SubString{String}} are not callable\\n  Use square brackets [] for\
    \ indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmpythnoqr1.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpythnoqr1.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpythnoqr1.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpythnoqr1.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three\") == \"three\"\\n  MethodError: objects of type Vector{SubString{String}}\
    \ are not callable\\n  Use square brackets [] for indexing an Array.\\n  Stacktrace:\\\
    n   [1] |>(x::String, f::Vector{SubString{String}})\\n     @ Base ./operators.jl:966\\\
    n   [2] sort_numbers(numbers::String)\\n     @ Main /tmp/tmpythnoqr1.jl:8\\n \
    \  [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpythnoqr1.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpythnoqr1.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpythnoqr1.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  MethodError: objects\
    \ of type Vector{SubString{String}} are not callable\\n  Use square brackets []\
    \ for indexing an Array.\\n  Stacktrace:\\n   [1] |>(x::String, f::Vector{SubString{String}})\\\
    n     @ Base ./operators.jl:966\\n   [2] sort_numbers(numbers::String)\\n    \
    \ @ Main /tmp/tmpythnoqr1.jl:8\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/std"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers,\
    \ \" \"), by=x->word_to_numeral(x)), \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppdi035ib.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError:\
    \ word_to_numeral not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::SubString{String})\n\
    \      @ Main /tmp/tmppdi035ib.jl:8\n    [2] lt(o::Base.Order.By{var\"#1#2\",\
    \ Base.Order.ForwardOrdering}, a::SubString{String}, b::SubString{String})\n \
    \     @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{SubString{String}}, lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, t::Vector{SubString{String}})\n\
    \      @ Base.Sort ./sort.jl:592\n    [5] sort!\n      @ ./sort.jl:591 [inlined]\n\
    \    [6] sort!\n      @ ./sort.jl:664 [inlined]\n    [7] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [9] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmppdi035ib.jl:8\n   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmppdi035ib.jl:17 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmppdi035ib.jl:14\ntest set:\
    \ Error During Test at /tmp/tmppdi035ib.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: word_to_numeral not defined\n  Stacktrace:\n    [1]\
    \ (::var\"#1#2\")(x::SubString{String})\n      @ Main /tmp/tmppdi035ib.jl:8\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::SubString{String},\
    \ b::SubString{String})\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppdi035ib.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sorted_nums = sort(nums)\n    return join(sorted_nums, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgh_6_g22.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh_6_g22.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh_6_g22.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgh_6_g22.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh_6_g22.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh_6_g22.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgh_6_g22.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgh_6_g22.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgh_6_g22.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgh_6_g22.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list_sorted = sort(num_list)\n    output = \"\"\n    for i in 1:length(num_list_sorted)\n\
    \        output = output * num_list_sorted[i] * \" \"\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpzn_96vyg.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpzn_96vyg.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzn_96vyg.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzn_96vyg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzn_96vyg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpzn_96vyg.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzn_96vyg.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzn_96vyg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzn_96vyg.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpzn_96vyg.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzn_96vyg.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzn_96vyg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzn_96vyg.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzn_96vyg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    #\n    # YOUR\
    \ CODE HERE\n    #\n    \"\"\"\n    OUTPUT = \"\"\n    numstr = numbers.split(\"\
    \ \")\n    numstr.sort(key=int)\n    for n in numstr:\n        OUTPUT += n + \"\
    \ \"\n    return OUTPUT[0:len(OUTPUT)-1]\n    \"\"\"\n    numstr = numbers.split(\"\
    \ \")\n    numstr.sort(key=int)\n    return \" \".join(numstr)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwb1iyhau.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpwb1iyhau.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwb1iyhau.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwb1iyhau.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwb1iyhau.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpwb1iyhau.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwb1iyhau.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwb1iyhau.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwb1iyhau.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpwb1iyhau.jl:19\n  \
    \ [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwb1iyhau.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwb1iyhau.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwb1iyhau.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"ze"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwb1iyhau.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Create a new\
    \ array with the numbers split\n    # Convert the numbers to ints\n    # Sort\
    \ the numbers\n    # Return the numbers\nend\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpni8xwi9z.jl:13\nin expression starting at /tmp/tmpni8xwi9z.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    sorted_numbers\
    \ = sort(split(numbers))\n    join(sorted_numbers, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv_cwzqiy.jl:18\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_cwzqiy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_cwzqiy.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpv_cwzqiy.jl:19\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_cwzqiy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_cwzqiy.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpv_cwzqiy.jl:20\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv_cwzqiy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv_cwzqiy.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_cwzqiy.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    \n    number_dictionary\
    \ = OrderedDict(\n        \"zero\" => 0,\n        \"one\" => 1,\n        \"two\"\
    \ => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"five\" =>\
    \ 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" => 8,\n\
    \        \"nine\" => 9\n    )\n    \n    parsed_numbers = map(number_dictionary,\
    \ split(numbers))\n    sorted_numbers = sort(parsed_numbers)\n    sorted_numbers_string\
    \ = map(string, sorted_numbers)\n    joined_numbers_string = join(sorted_numbers_string,\
    \ \" \")\n    \n    return joined_numbers_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp10ovkc8h.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: OrderedDict not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp10ovkc8h.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp10ovkc8h.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp10ovkc8h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp10ovkc8h.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: OrderedDict not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp10ovkc8h.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp10ovkc8h.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp10ovkc8h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp10ovkc8h.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: OrderedDict\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp10ovkc8h.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp10ovkc8h.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp10ovkc8h.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp10ovkc8h.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: OrderedDict not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10ovkc8h.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(num2word, nums)\n    nums = sort(nums)\n    nums = map(word2num,\
    \ nums)\n    nums = join(nums, \" \")\n    return nums\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxge88j0n.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: num2word not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpxge88j0n.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxge88j0n.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxge88j0n.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpxge88j0n.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: num2word not defined\n \
    \ Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpxge88j0n.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxge88j0n.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxge88j0n.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpxge88j0n.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: num2word\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpxge88j0n.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxge88j0n.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxge88j0n.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpxge88j0n.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: num2word not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxge88j0n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return \" \"\
    .join(sort(split(numbers)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7qdw263g.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field join\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp7qdw263g.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7qdw263g.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7qdw263g.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qdw263g.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field join\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp7qdw263g.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7qdw263g.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7qdw263g.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qdw263g.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field join\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp7qdw263g.jl:8\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7qdw263g.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7qdw263g.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qdw263g.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero fou"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7qdw263g.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2kaphwnn.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2kaphwnn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2kaphwnn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2kaphwnn.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2kaphwnn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2kaphwnn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2kaphwnn.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2kaphwnn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2kaphwnn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kaphwnn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwbt5x2kn.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwbt5x2kn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwbt5x2kn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwbt5x2kn.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwbt5x2kn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwbt5x2kn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwbt5x2kn.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwbt5x2kn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwbt5x2kn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwbt5x2kn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return sort(split(numbers,\
    \ \" \")) |> join\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7_9puj46.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_9puj46.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_9puj46.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7_9puj46.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_9puj46.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_9puj46.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7_9puj46.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_9puj46.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_9puj46.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7_9puj46.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return split(numbers)\
    \ |>\n    map(num_to_int) |>\n    sort! |>\n    map(int_to_num) |>\n    join\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp1dykezqr.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: num_to_int not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1dykezqr.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1dykezqr.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1dykezqr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp1dykezqr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: num_to_int not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp1dykezqr.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1dykezqr.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1dykezqr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp1dykezqr.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: num_to_int\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp1dykezqr.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1dykezqr.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1dykezqr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp1dykezqr.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: num_to_int not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1dykezqr.jl:16\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_98_count_upper
language: jl
prompt: "\"\"\"\n    Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg')\
  \ returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\nfunction count_upper(s::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
  aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
  ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
  \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
completions: ["    # your code here\nend", "    # write your code here\n    end",
  "    count = 0\n    for (i,ch) in enumerate(s)\n        if i % 2 == 0\n        \
    \    if in(upper(ch), vowels)\n                count += 1\n            end\n \
    \       end\n    end\n    return count\nend", "    return length(findall(r\"[AEIOU]\"\
    ,s[2:2:end]))\nend\nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"abcdefg\"\
    ))\nprintln(count_upper(\"dBBE\"))", "    count = 0\n    for i in 1:length(s)\n\
    \        if i % 2 == 0\n            if islower(s[i])\n                count +=\
    \ 1\n            end\n        end\n    end\n    return count\nend", "    upperVowels=['A','E','I','O','U']\n\
    \    counter=0\n    for i in eachindex(s)\n        if s[i] in upperVowels && i%2==0\n\
    \            counter+=1\n        end\n    end\n    return counter\nend", "   \
    \ vowels = \"AEIOU\"\n    count = 0\n    for (i,c) in enumerate(s)\n        if\
    \ c in vowels && i % 2 == 0\n            count += 1\n        end\n    end\n  \
    \  return count\nend", "    num = 0\n    for (i,c) in enumerate(s)\n        if\
    \ isuppercase(c) && i % 2 == 0\n            num += 1\n        end\n    end\n \
    \   return num\nend", "    counter = 0\n    for i = 1:2:length(s)\n        if\
    \ s[i] in \"AEIOU\"\n            counter += 1\n        end\n    end\n    return\
    \ counter\nend", "    out = 0\n    for (i, x) in enumerate(s)\n        if isupper(x)\
    \ && i % 2 == 0\n            out += 1\n        end\n    end\n    return out\n\
    end", "    \n    counter = 0\n    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"\
    ]\n    \n    for (i, character) in enumerate(s)\n        if i % 2 == 0 && character\
    \ in vowels\n            counter += 1\n        end\n    end\n    \n    return\
    \ counter\nend", "    return sum(isupper(vowel) for (i, vowel) in enumerate(s)\
    \ if isvowel(vowel) && i % 2 == 0)\nend", "    count=0\n    for i in 1:2:length(s)\n\
    \        if upper(s[i]) in \"AEIOU\"\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    vowels = \"aeiouAEIOU\"\n    upper_vowels\
    \ = collect(s[2:2:end]) .* vowels\n    return sum(i -> i == \"\", upper_vowels)\n\
    end", "    # YOUR CODE HERE\n    uppercase_vowels = ['A', 'E', 'I', 'O', 'U']\n\
    \    return sum([1 for (i, c) in enumerate(s) if c in uppercase_vowels && i %\
    \ 2 == 0])\nend", "    count = 0\n    for (i, char) in enumerate(s)\n        if\
    \ i % 2 == 0 && in(char, [\"A\", \"E\", \"I\", \"O\", \"U\"])\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ (i, l) in enumerate(s)\n        if in(l, [\"A\", \"E\", \"I\", \"O\", \"U\"\
    ]) & (i % 2 == 0)\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in 2:2:length(s)\n        if s[i] in [\"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    counter = 0\n    for (idx, char) in enumerate(s)\n       \
    \ if idx % 2 == 0 && char in ['A', 'E', 'I', 'O', 'U']\n            counter +=\
    \ 1\n        end\n    end\n    return counter\nend", "    count = 0\n    for i\
    \ in s\n        if isupper(i) && !((s.index(i)) % 2 == 0)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0\n    for i in\
    \ eachindex(s)\n        if (s[i] in vowels) && isupper(s[i]) && (i % 2 == 0)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i = 1:2:length(s)\n        if s[i] in 'AEIOU'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in 2:2:length(s)\n        if s[i] in (\"A\", \"E\", \"I\", \"O\", \"U\")\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for n in eachindex(s)\n        if n % 2 == 0\n            if s[n] in\
    \ (\"A\", \"E\", \"I\", \"O\", \"U\")\n                count += 1\n          \
    \  end\n        end\n    end\n    return count\nend", "    vowels = [\"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    count = 0\n    for (i, letter) in enumerate(s)\n\
    \        if letter in vowels && i % 2 == 0\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    out::Int64 = 0\n    for i = 1:2:length(s)\n\
    \        if is_upper(s[i]) && is_vowel(s[i])\n            out += 1\n        end\n\
    \    end\n    return out\nend\nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"\
    abcdefg\"))\nprintln(count_upper(\"dBBE\"))", "    count = 0\n    len = length(s)\n\
    \    for i = 1:2:len\n        if s[i] in ['A','E','I','O','U']\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    # YOUR CODE HERE\n\
    end", "    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    count = 0\n    for\
    \ i in 2:2:length(s)\n        if s[i] in vowels\n            count += 1\n    \
    \    end\n    end\n    return count\nend", "    return length(filter(x -> (uppercase(x)\
    \ && (x in \"AEIOU\")) , s[2:2:end]))\nend", "    vowel_uppers = 0\n    for (i,char)\
    \ in enumerate(s)\n        if i % 2 == 0\n            is_upper = char in \"AEIOU\"\
    \n            if is_upper\n                vowel_uppers += 1\n            end\n\
    \        end\n    end\n    return vowel_uppers\nend\n@assert count_upper(\"aBCdEf\"\
    ) == 1\n@assert count_upper(\"abcdefg\") == 0\n@assert count_upper(\"dBBE\") ==\
    \ 0\n@assert count_upper(\"dBBEE\") == 1", "    vowel = \"AEIOU\"\n    count =\
    \ 0\n    for i in 2:2:length(s)\n        if s[i] in vowel\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0\n    i = 1\n\
    \    while i <= length(s)\n        if (i % 2) == 0 && s[i] in ['A', 'E', 'I',\
    \ 'O', 'U']\n            count += 1\n        end\n        i += 1\n    end\n  \
    \  return count\nend", "    return sum(isupper(s[i]) && isvowel(s[i]) for i in\
    \ range(1, length(s), 2))\nend", "    cnt = 0\n    i = 2\n    while i <= length(s)\n\
    \        c = s[i]\n        if c in ['A', 'E', 'I', 'O', 'U']\n            cnt\
    \ += 1\n        end\n        i += 2\n    end\n    return cnt\nend", "    count\
    \ = 0\n    for (index,char) in enumerate(s)\n        if isvowel(char) && isupper(char)\
    \ && index % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    cnt = 0\n    for i = 1:2:length(s)\n        if (s[i] in [\"\
    A\", \"E\", \"I\", \"O\", \"U\"])\n            cnt += 1\n        end\n    end\n\
    \    return cnt\nend", "    i::Int64 = 0\n    count::Int64 = 0\n    while i <\
    \ length(s)\n        if s[i] in ['A', 'E', 'I', 'O', 'U']\n            if i %\
    \ 2 == 0\n                count += 1\n            end\n        end\n        i\
    \ += 1\n    end\n    return count\nend", "    count = 0\n    for i in eachindex(s)\n\
    \        if i % 2 == 0 && s[i] in \"AEIOU\"\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    vowels = \"aeiouAEIOU\"\n    result = 0\n\
    \    for (i, c) in enumerate(s)\n        if c in vowels\n            if i % 2\
    \ == 0 \n                result += 1\n            end\n        end\n    end\n\
    \    return result\nend", "    # Write your code here\n    count = 0\n    for\
    \ c in s[2:2:end]\n        if isupper(c) && isvowel(c)\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    vowels = Set([\"A\", \"E\"\
    , \"I\", \"O\", \"U\"])\n    c = 0\n    for (i, ss) in enumerate(s)\n        if\
    \ i % 2 == 0 && ss in vowels\n            c += 1\n        end\n    end\n    return\
    \ c\nend", "    num = 0\n    for i in 1:2:length(s)\n        if s[i] in \"AEIOU\"\
    \n            num += 1\n        end\n    end\n    return num\nend", "    count\
    \ = 0 \n    for (i,c) in enumerate(s)\n        if (isupper(c) && i % 2 == 0)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    vowels\
    \ = 'AEIOU'\n    count = 0\n    for i = 1:2:length(s)\n        if s[i] in vowels\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i,c) in enumerate(s)\n        if c in vowels\n            if i\
    \ % 2 == 0\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n        \nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"\
    abcdefg\"))\nprintln(count_upper(\"dBBE\"))", "    num_upper = 0\n    for (index,\
    \ letter) in enumerate(s)\n        if index % 2 == 0 && is_upper(letter)\n   \
    \         num_upper += 1\n        end\n    end\n    return num_upper\nend", " \
    \   count = 0\n    iseven = 0\n    s = uppercase(s)\n    for i in 1:length(s)\n\
    \        if iseven == 0\n            if (s[i] == 'A') || (s[i] == 'E') || (s[i]\
    \ == 'I') || (s[i] == 'O') || (s[i] == 'U')\n                count += 1\n    \
    \        end\n            iseven = 1\n        else\n            iseven = 0\n \
    \       end\n    end\n    return count\nend", "    count = 0\n    for (idx, char)\
    \ in enumerate(s)\n        if idx % 2 == 0 && char in \"AEIOU\"\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count=0\n    for i\
    \ in 1:length(s)\n        if i%2==0\n            if s[i] in ['A','E','I','O','U']\n\
    \                count+=1\n            end\n        end\n    end\n    return count\n\
    end", "    j = 0\n    count = 0\n    for i = 1:length(s)\n        if isuppercase(s[i])\n\
    \            if mod(i,2) == 0\n                count += 1\n            end\n \
    \       end\n    end\n    return count\nend", "    counter = 0\n    for(index,\
    \ letter) in enumerate(s)\n        if(letter in \"AEIOU\") && (index % 2 == 0)\n\
    \            counter += 1\n        end\n    end\n    return counter\nend", " \
    \   n = 0\n    for (i, c) in enumerate(s)\n        if c in \"AEIOU\" && i % 2\
    \ == 0\n            n += 1\n        end\n    end\n    return n\nend", "    count\
    \ = 0\n    for i in 1:2:length(s)\n        if isupper(s[i]) && (s[i] in ['A','E','I','O','U'])\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    numUpper = 0\n    for (index, char) in enumerate(s)\n        if char in vowels\n\
    \            if index % 2 == 0\n                numUpper += 1\n            end\n\
    \        end\n    end\n    return numUpper\nend", "    count = 0\n    for i in\
    \ 2:2:length(s)\n        if isvowel(s[i])\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    sum([isupper(s[i]) && s[i] in \"AEIOU\"\
    \ for i in 2:2:length(s)])\nend\n \n \n\"\"\"\n    Given a string s, count the\
    \ number of uppercase consonants in odd indices.\n    \n    For example:\n   \
    \ count_upper('aBCdEf') returns 3\n    count_upper('abcdefg') returns 1\n    count_upper('dBBE')\
    \ returns 0\n    \"\"\"", "    lowercase = (\"a\" * 26 * s) .== s\n    uppercase\
    \ = (\"A\" * 26 * s) .== s\n    upper = sum(uppercase .& ~lowercase)\n    even\
    \ = uppercase .& (mod.(1:length(s), 2) .== 0)\n    return sum(even)\nend", " \
    \   c = 0\n    for (i,v) in enumerate(s)\n        if (v in \"AEIOU\") && (i %\
    \ 2 == 0)\n            c += 1\n        end\n    end\n    return c\nend", "   \
    \ count = 0\n    for i in 2:2:length(s)\n        if isupper(s[i])\n          \
    \  count += 1\n        end\n    end\n    return count\nend", "    vowel = Dict(\"\
    A\"=>1, \"E\"=>1, \"I\"=>1, \"O\"=>1, \"U\"=>1)\n    even_vowel = 0\n    for i\
    \ = 2:2:length(s)\n        if s[i] in keys(vowel)\n            even_vowel += 1\n\
    \        end\n    end\n    return even_vowel\nend", "    s[2:2:end] |> count_upper1\n\
    end", "    num_upper_vowels = 0\n    vowels = \"AEIOU\"\n    for (i,c) in enumerate(s)\n\
    \        if i % 2 == 0\n            if c in vowels\n                num_upper_vowels\
    \ += 1\n            end\n        end\n    end\n    return num_upper_vowels\nend",
  "    \"\"\"\n    Given a string s, count the number of uppercase vowels in even\
    \ indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg')\
    \ returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for\
    \ i in 1:2:length(s)\n        if uppercase(s[i]) && isvowel(s[i])\n          \
    \  n += 1\n        end\n    end\n    return n\nend", "    n_upper = 0\n    for\
    \ (i, letter) in enumerate(s)\n        if letter in ['A', 'E', 'I', 'O', 'U']\n\
    \            if i % 2 == 0\n                n_upper += 1\n            end\n  \
    \      end\n    end\n    return n_upper\nend", "    count = 0\n    for i in 1:2:length(s)\n\
    \        if s[i] in ['A','E','I','O','U']\n            count += 1\n        end\n\
    \    end\n    return count\nend\nprintln(count_upper(\"aBCdEf\"))\nprintln(count_upper(\"\
    abcdefg\"))\nprintln(count_upper(\"dBBE\"))", "    count = 0\n    for (i, char)\
    \ in enumerate(s)\n        if isupper(char) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0 \n    for i\
    \ in 2:2:length(s)\n        if isvowel(s[i]) && s[i] == uppercase(s[i])\n    \
    \        count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(map(t -> isupper(t) && t in \"AEIOU\", s))\nend", "    #start at the first\
    \ character in the string\n    i = 1\n    #initialize the count to zero\n    count\
    \ = 0\n    #loop through the whole string\n    while i <= length(s)\n        #if\
    \ the first character is a vowel\n        if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U')\n            #add one to the count\n \
    \           count += 1\n        end\n        #increment i by 2\n        i += 2\n\
    \    end\n    #return the count\n    return count\nend", "    # To do: write code\n\
    end", "    count = 0\n    for i = 1:2:length(s)\n        if isupper(s[i]) && (s[i]\
    \ in ['A','E','I','O','U'])\n            count += 1\n        end\n    end\n  \
    \  return count\nend", "    n = 0\n    for i in 2:2:length(s)\n        if occursin(\"\
    AEIOU\",s[i])\n            n += 1\n        end\n    end\n    return n\nend", " \
    \   count = 0\n    for i in 1:2:length(s)\n        if s[i] in \"AEIOU\"\n    \
    \        count += 1\n        end\n    end\n    return count\nend", "    # YOUR\
    \ CODE HERE\n    return 0\nend", "    # Your code here\nend", "    count = 0\n\
    \    for c in s[2:2:end]\n        if isupper(c) && isvowel(c)\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    ctr = 0\n    for i\
    \ in 1:2:endof(s)\n        if s[i] in \"AEIOU\"\n            ctr += 1\n      \
    \  end\n    end\n    return ctr\nend", "    count = 0\n    for i in 1:2:length(s)\n\
    \        if in(s[i], \"AEIOU\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    return sum(Int64.(s[2:2:end] in \"AEIOU\"))\nend",
  "    num = 0\n    for i = 1:2:length(s)\n        if isupper(s[i])\n            num\
    \ = num + 1\n        end\n    end\n    return num\nend", "    count = 0\n    for\
    \ i in 2:2:length(s)\n        if isupper(s[i]) && (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            count += 1\n    \
    \    end\n    end\n    return count\nend", "    l = length(s)\n    counter = 0\n\
    \    for i = 1:2:l\n        if is_upper(s[i]) && is_vowel(s[i])\n            counter\
    \ += 1\n        end\n    end\n    return counter\nend", "    length(filter(i->s[i]\
    \ in ['A','E','I','O','U'],2:2:length(s)))\nend", "    count = 0\n    for (i,j)\
    \ in enumerate(s)\n        if(iseven(i) == true && isvowel(j) == true && isupper(j)\
    \ == true)\n            count += 1\n        end\n    end\n    return count\nend",
  "    vowels = [v for v in s if v in \"AEIOU\"]\n    count = 0\n    for v in vowels\n\
    \        if (s.index(v) % 2 == 0)\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    \n    count = 0\n    for i = 1:2:length(s)\n   \
    \     if s[i] in (\"A\", \"E\", \"I\", \"O\", \"U\")\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    \n    # The length of the\
    \ string in s\n    n = length(s)\n    \n    # Create a counter to keep track of\
    \ the number of vowels in the even indices\n    counter = 0\n    \n    # Write\
    \ a for loop that iterates over the indices of s\n    for i = 1:2:n\n        \n\
    \        # Check to see if s[i] is a vowel\n        if s[i] in 'AEIOU'\n     \
    \       \n            # Increment the counter by 1 if s[i] is a vowel\n      \
    \      counter += 1\n        end\n    end\n    \n    # Return the counter once\
    \ the for loop is finished executing\n    return counter\nend", "    \n    number_of_uppercase_vowels\
    \ = 0\n    \n    for (index, character) in enumerate(s)\n        if is_vowel(character)\
    \ && is_uppercase(character) && is_even(index)\n            number_of_uppercase_vowels\
    \ += 1\n        end\n    end\n    \n    return number_of_uppercase_vowels\nend",
  "    uppercase_vowels = ['A', 'E', 'I', 'O', 'U']\n    count = 0\n    for i in 1:2:length(s)\n\
    \        if s[i] in uppercase_vowels\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    count = 0 \n    for i = 1:2:length(s)\n \
    \       if s[i] in ['A','E','I','O','U']\n            count += 1\n        end\n\
    \    end\n    return count\nend\n \ncount_upper(\"aBCdEf\")", "    upper_vowels\
    \ = \"AEIOU\"\n    count = 0\n    for i = 1:2:length(s)\n        if occursin(s[i],\
    \ upper_vowels)\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    s = split(s)\n    for c in s\n        if isupper(c)\
    \ && c in (\"A\", \"E\", \"I\", \"O\", \"U\")\n            count += 1\n      \
    \  end\n    end\n    return count\nend", "    count = 0\n    for (i, x) in enumerate(s)\n\
    \        if (i % 2 == 0) & (x in [\"A\", \"E\", \"I\", \"O\", \"U\"])\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    count =\
    \ 0\n    for i in eachindex(s)\n        if i % 2 == 0\n            if s[i] in\
    \ \"AEIOU\"\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend", "    count = 0\n    for (i, c) in enumerate(s)\n    \
    \    if i % 2 == 0 && isupper(c)\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    count = 0\n    for (i, c) in enumerate(s)\n    \
    \    if c in \"AEIOU\" && i % 2 == 0\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    vowels = ['A', 'E', 'I', 'O', 'U']\n    count\
    \ = 0\n    for (i, c) in enumerate(s)\n        if i % 2 == 0 && in(c, vowels)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i, c) in enumerate(s)\n        if isvowel(c) && (i % 2 == 0)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    #precondition:s\
    \ is a string\n    count = 0\n    for i in eachindex(s)\n        if (i % 2 ==\
    \ 0) & (\"A\" <= s[i] <= \"Z\") & (\"A\" <= s[i] <= \"E\")\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    return sum(isupper(s[i])\
    \ && isvowel(s[i]) && iseven(i) for i in 1:length(s))\nend", "    count = 0\n\
    \    for i in 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    n = 0\n\
    \    s_upper = uppercase(s)\n    for i in 2:2:length(s)\n        if s_upper[i]\
    \ in \"AEIOU\"\n            n += 1\n        end\n    end\n    return n\nend",
  "    count = 0\n    for i in eachindex(s)\n        if i % 2 == 0 && isupper(s[i])\
    \ && s[i] in \"AEIOU\"\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    uppercase_vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   count = 0\n    for i in 1:2:length(s)\n        if s[i] in uppercase_vowels\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    evens\
    \ = s[2:2:end]\n    count = 0\n    for i in evens\n        if isupper(i)\n   \
    \         count += 1\n        end\n    end\n    return count\nend", "    cnt =\
    \ 0\n    for (i,char) in enumerate(s)\n        cnt += isupper(char) && (i % 2\
    \ == 0)\n    end\n    return cnt\nend", "    count = 0\n    length = length(s)\n\
    \    for i in 1:2:length\n        if s[i] in \"AEIOU\"\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    return count(c -> c in \"\
    AEIOU\" && s.index(c) % 2 == 0, s)\nend", "    count = 0\n    for i in 2:2:length(s)\n\
    \        if isupper(s[i])\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for (i,c) in enumerate(s)\n        if c in\
    \ \"AEIOU\" && i % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for i in 1:2:length(s)\n        if isuppercase(s[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    num_upper\
    \ = 0\n    for i in 1:length(s)\n        if i % 2 == 0\n            if s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'\n          \
    \      num_upper += 1\n            end\n        end\n    end\n    return num_upper\n\
    end", "    count = 0\n    i = 1\n    while i <= length(s)\n        # check if\
    \ i is even\n        if (i % 2 == 0)\n            if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'\n                count += 1\n \
    \           end\n        end\n        i += 1\n    end\n    return count\nend",
  "    count = 0\n    for i in 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    #\
    \ task complete\n    # YOUR CODE HERE\n    s = map(Char,s)\n    vowel = ['A','E','I','O','U']\n\
    \    c = 0\n    for i in 2:2:length(s)\n        if s[i] in vowel\n           \
    \ c = c + 1\n        end\n    end\n    return c\nend", "    count = 0\n    for\
    \ i = 1:2:length(s)\n        ch = s[i]\n        if(ch in ['A','E','I','O','U'])\n\
    \            count += 1\n        end\n    end\n    return count\nend\n ", "  \
    \  # YOUR CODE HERE\nend\n ", "    count = 0\n    for i in 2:2:length(s)\n   \
    \     if occursin(s[i], \"AEIOU\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    ctr = 0\n    for i = 1:2:length(s)\n        ch =\
    \ s[i]\n        if ch in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            ctr\
    \ += 1\n        end\n    end\n    return ctr\nend", "    total = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && mod(i, 2) == 0\n            total\
    \ += 1\n        end\n    end\n    return total\nend\n@testset \"Testing count_upper\"\
    \ begin\n    @test count_upper(\"aBCdEf\") == 1\n    @test count_upper(\"abcdefg\"\
    ) == 0\n    @test count_upper(\"dBBE\") == 0\nend", "    num_uppers = 0\n    for\
    \ (i,char) in enumerate(s)\n        if (i%2==0) && (char in \"AEIOU\")\n     \
    \       num_uppers += 1\n        end\n    end\n    return num_uppers\nend", " \
    \   upper_vowels = \"AEIOU\"\n    count = 0\n    for i in 2:2:length(s)\n    \
    \    if s[i] in upper_vowels\n            count += 1\n        end\n    end\n \
    \   return count\nend", "    counter = 0\n    for (i,c) in enumerate(s)\n    \
    \    if i % 2 == 0 && isupper(c)\n            counter += 1\n        end\n    end\n\
    \    return counter\nend", "    count = 0 \n    evenindex = (1:2:length(s))\n\
    \    for i in evenindex\n        if s[i] in \"AEIOU\"\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    count = 0\n    for (i, c)\
    \ in enumerate(s)\n        if i % 2 == 0 && isupper(c) && isvowel(c)\n       \
    \     count += 1\n        end\n    end\n    return count\nend", "    j = s[2:end]\n\
    \    count = 0\n    for i in j\n        if isupper(i)\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    uppers = 0\n    for\
    \ (i, c) in enumerate(s)\n        if c in [\"A\", \"E\", \"I\", \"O\", \"U\"]\
    \ && i % 2 == 0\n            uppers += 1\n        end\n    end\n    return uppers\n\
    end", "    vowel = \"AEIOU\"\n    t = 0\n    for i in 1:2:length(s)\n        if\
    \ s[i] in vowel\n            t += 1\n        end\n    end\n    return t\nend\n\
    @assert count_upper(\"aBCdEf\") == 1\n@assert count_upper(\"abcdefg\") == 0\n\
    @assert count_upper(\"dBBE\") == 0", "    count = 0 \n    for c in s\n       \
    \ if c in \"AEIOU\"\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    counter::Int64 = 0\n    for (index, value) in enumerate(s)\n\
    \        if index % 2 == 0 && is_upper(value)\n            counter = counter +\
    \ 1\n        end\n    end\n    return counter\nend", "    res = 0\n    for i in\
    \ 2:2:endof(s)\n        if s[i] in ['A','E','I','O','U']\n            res += 1\n\
    \        end\n    end\n    return res\nend", "    count = 0\n    n = length(s)\n\
    \    for i in 2:2:n\n        if isupper(s[i]) && (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            count += 1\n       \
    \ end\n    end\n    return count\nend", "    upper_vowels = [i for i in s if i\
    \ in \"AEIOU\" if isupper(i)]\n    return length(upper_vowels)\nend", "    upper_vowels\
    \ = (\"A\", \"E\", \"I\", \"O\", \"U\")\n    counter = 0\n    for (i, letter)\
    \ in enumerate(s)\n        if letter in upper_vowels\n            if (i%2) ==\
    \ 0\n                counter += 1\n            end\n        end\n    end\n   \
    \ return counter\nend", "    count = 0\n    for i in 1:2:length(s)\n        if\
    \ Char(s[i]) in \"AEIOU\"\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for (i, x) in enumerate(s)\n        if i %\
    \ 2 == 0\n            if x in \"AEIOU\"\n                count += 1\n        \
    \    end\n        end\n    end\n    return count\nend\n ", "    count = 0\n  \
    \  for i in 1:length(s)\n        if (i % 2 == 0) && (s[i] in [\"A\", \"E\", \"\
    I\", \"O\", \"U\"])\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    n = 0\n    for i in 1:2:length(s)\n        if in(s[i], 'AEIOU')\n\
    \            n += 1\n        end\n    end\n    return n\nend", "    count=0\n\
    \    for i in eachindex(s)\n        if iseven(i) && s[i] in (\"A\",\"E\",\"I\"\
    ,\"O\",\"U\")\n            count+=1\n        end\n    end\n    return count\n\
    end", "    n = 0\n    for i in 1:2:length(s)\n        s[i] in ['A','E','I','O','U']\
    \ && n+=1\n    end\n    return n\nend", "    count = 0\n    for i in 2:2:length(s)\n\
    \        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0\n    for i in\
    \ 1:2:length(s)\n        s[i] == uppercase(s[i]) ? count += 1 : nothing\n    end\n\
    \    return count\nend", "    return length(regexp(r\"[AEIOU]\", s[2:2:end]))\n\
    end", "    count=0\n    for i in 2:2:length(s)\n        if s[i] in (\"A\",\"E\"\
    ,\"I\",\"O\",\"U\")\n            count+=1\n        end\n    end\n    return count\n\
    end", "    \n    return(sum( isuppercase(s[2i]) for i in range(1, Int64(length(s)/2)+1)\
    \ ))\nend", "    count = 0\n    for (i,v) in enumerate(s)\n        if i % 2 ==\
    \ 0 && (v == 'A' || v == 'E' || v == 'I' || v == 'O' || v == 'U')\n          \
    \  count += 1\n        end\n    end\n    return count\nend\n \n@test count_upper(\"\
    aBCdEf\") == 1\n@test count_upper(\"abcdefg\") == 0\n@test count_upper(\"dBBE\"\
    ) == 0\n@test count_upper(\"FEED\") == 1\n@test count_upper(\"FAR\") == 2\n ",
  "    uppers = count(x->x in \"AEIOU\",s)\n    evens = count(x->(x%2==0),collect(eachindex(s)))\n\
    \    return uppers-evens\nend", "    vowels = [\"A\", \"E\", \"I\", \"O\", \"\
    U\"]\n    return sum([s[i] in vowels for i in 2:2:length(s)])\nend", "    count\
    \ = 0\n    for i = 1:2:length(s)\n        if s[i] in 'AEIOU'\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n    ", "    # your code here\n\
    end", "    count = 0\n    for (i, letter) in enumerate(s)\n        if isvowel(letter)\
    \ && isupper(letter) && i % 2 == 0\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    c::Int64 = 0\n    for i in 1:2:length(s)\n     \
    \   if (s[i] in \"AEIOU\")\n            c = c + 1\n        end\n    end\n    return\
    \ c\nend", "    # Fill in your answer\nend", "    vwls = count(('A' <= uppercase(c)\
    \ <= 'Z') && ('A' <= c <= 'Z') for c in s)\n    return vwls\nend", "    count\
    \ = 0\n    for i in eachindex(s)\n        if i % 2 == 0 && s[i] in \"AEIOU\"\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in 2:2:length(s)\n        if uppercase(s[i]) in ['A','E','I','O','U']\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for (i, c) in enumerate(s)\n        if c in [\"A\", \"E\", \"I\", \"\
    O\", \"U\"] && i % 2 == 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    n = 0\n    for i in 1:2:length(s)\n        if s[i] in \"AEIOU\"\
    \n            n += 1\n        end\n    end\n    return n\nend", "    c = 0\n \
    \   for i = 1:2:length(s)\n        if s[i] in (\"A\", \"E\", \"I\", \"O\", \"\
    U\")\n            c += 1\n        end\n    end\n    return c\nend", "    count\
    \ = 0\n    for i in 2:2:length(s)\n        if isupper(s[i]) && (s[i] in ['A','E','I','O','U'])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    vowels\
    \ = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    count = 0\n    for i in 1:2:length(s)\n\
    \        if s[i] in vowels\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    uppercase_vowels = \"AEIOU\"\n    count = 0\n    for\
    \ (i, char) in enumerate(s)\n        if char in uppercase_vowels && i % 2 == 0\n\
    \            count += 1\n        end\n    end\n    return count\nend\n@assert\
    \ count_upper(\"aBCdEf\") == 1\n@assert count_upper(\"abcdefg\") == 0\n@assert\
    \ count_upper(\"dBBE\") == 0\n@assert count_upper(\"abcdefgU\") == 1\n@assert\
    \ count_upper(\"abcdefgA\") == 1\n@assert count_upper(\"A\") == 1\n@assert count_upper(\"\
    AA\") == 2\n@assert count_upper(\"aeiouE\") == 1\n@assert count_upper(\"aeiouU\"\
    ) == 1\n \n \n@assert count_upper(\"aeiou\") == 0", "    counter::Int64 = 0\n\
    \    for i in 2:2:length(s)\n        if s[i] \u2208 ['A','E','I','O','U']\n  \
    \          counter = counter + 1\n        end\n    end\n    return counter\nend",
  "    upper = \"AEIOU\"\n    i = 0\n    c = 0\n    while i < length(s)\n        if\
    \ i % 2 == 0 && ismember(s[i], upper)\n            c += 1\n        end\n     \
    \   i += 1\n    end\n    return c\nend", "    vowels = \"AEIOU\"\n    count =\
    \ 0\n    for i in s\n        if i in vowels && i == uppercase(i) && (s.index(i)\
    \ % 2 == 0)\n            count += 1\n        end\n    end\n    return count\n\
    end", "    vowels = \"AEIOU\"\n    count = 0\n    for i in 1:2:length(s)\n   \
    \     if s[i] in vowels\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    return sum(s[i] in string(\"AEIOU\") ? 1 : 0 for i in 2:2:length(s))\n\
    end", "    \n    count = 0\n    for (i, c) in enumerate(s)\n        if i % 2 ==\
    \ 0\n            if c in \"AEIOU\"\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend", "    count = 0\n    for (i,c) in\
    \ enumerate(s)\n        if isvowel(c) && uppercase(c) && (i % 2 == 0)\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    count =\
    \ 0\n    for i = 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n   \
    \         count += 1\n        end\n    end\n    return count\nend", "    n = length(s)\n\
    \    count = 0\n    for i in 1:2:n\n        if (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            count += 1\n       \
    \ end\n    end\n    return count\nend", "    sum([1 for (i, x) in enumerate(s)\
    \ if (x in [\"A\", \"E\", \"I\", \"O\", \"U\"]) && (i % 2 == 0)])\nend\n# Test\
    \ Cases\n@test count_upper(\"aBCdEf\") == 1\n@test count_upper(\"abcdefg\") ==\
    \ 0\n@test count_upper(\"dBBE\") == 0", "    vowels = ['A', 'E', 'I', 'O', 'U']\n\
    \    uppercase_vowels = [chr for chr in s if (chr in vowels) && isupper(chr)]\n\
    \    number_of_vowels = length(uppercase_vowels)\n    return number_of_vowels\n\
    end", "    count = 0 \n    for i in 2:2:length(s)\n        count += (s[i] in 'AEIOU')\
    \ ? 1 : 0\n    end\n    return count\nend", "    vowels = [\"A\", \"E\", \"I\"\
    , \"O\", \"U\"]\n    counter = 0\n    for (i,c) in enumerate(s)\n        if i\
    \ % 2 == 0 && in(c, vowels)\n            counter += 1\n        end\n    end\n\
    \    return counter\nend", "    c = 0\n    for (i, char) in enumerate(s)\n   \
    \     if isvowel(char) && isupper(char) && i % 2 == 0\n            c += 1\n  \
    \      end\n    end\n    return c\nend", "    return length(filter(x -> in(x,\
    \ ['A', 'E', 'I', 'O', 'U']), s[2:2:end]))\nend\ncount_upper(\"aBCdEf\")", " \
    \   counter = 0\n    for (index, letter) in enumerate(s)\n        if letter in\
    \ ['A', 'E', 'I', 'O', 'U']\n            if index % 2 == 0\n                counter\
    \ += 1\n            end\n        end\n    end\n    return counter\nend", "   \
    \ count = 0\n    for i in 2:2:length(s)\n        if s[i] in \"AEIOU\"\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    count =\
    \ 0\n    for i in 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend\n \n\
    assert count_upper(\"aBCdEf\") == 1\nassert count_upper(\"abcdefg\") == 0\nassert\
    \ count_upper(\"dBBE\") == 0", "    vowels = \"AEIOU\"\n    count = 0\n    for\
    \ i in 1:2:length(s)\n        if uppercase(s[i]) in vowels\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in 1:2:length(s)\n        c = s[i]\n        if is_upper(c) && c in \"AEIOU\"\
    \n            count += 1\n        end\n    end\n    return count\nend", "    ctr\
    \ = 0 \n    for i in eachindex(s)\n        if (i%2==0) && (s[i] in \"AEIOU\")\n\
    \            ctr+=1\n        end\n    end\n    return ctr\nend", "    num = 0\n\
    \    for (i, letter) in enumerate(s)\n        if isupper(letter) && mod(i, 2)\
    \ == 0\n            num += 1\n        end\n    end\n    return num\nend", "  \
    \  n = 0\n    for i in 1:2:length(s)\n        n += 1 if s[i] in \"AEIOU\" else\
    \ 0\n    end\n    return n\nend\nprint(count_upper(\"aBCdEf\"))", "    return\
    \ sum(s[2i] in [\"A\", \"E\", \"I\", \"O\", \"U\"] for i in 1:floor(length(s)/2))\n\
    end\ncount_upper(\"aBCdEf\")\ncount_upper(\"abcdefg\")\ncount_upper(\"dBBE\")",
  "    uppers = 0\n    for i in s\n        if isalpha(i) && isupper(i) && iseven(s,i)\n\
    \            uppers += 1\n        end\n    end\n    return uppers\nend", "   \
    \ count = 0\n    for (i, c) in enumerate(s)\n        if isupper(c) && isvowel(c)\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    \n    number_upper = 0\n    \n    for i in eachindex(s)\n        if\
    \ i % 2 == 0 && upper_vowel(s[i])\n            number_upper += 1\n        end\n\
    \    end\n    \n    return number_upper\nend", "    ctr = 0\n    for n in enumerate(s)\n\
    \        if n[2] in ('A','E','I','O','U') && n[1] % 2 == 0\n            ctr +=\
    \ 1\n        end\n    end\n    return ctr\nend", "    count = 0\n    for i = 1:2:length(s)\n\
    \        if isupper(s[i])\n            count = count + 1\n        end\n    end\n\
    \    return count\nend\ncount_upper(\"bAcdE\")", "    \n    count = 0\n    for\
    \ (i, c) in enumerate(s)\n        if (c in \"AEIOU\") && (i % 2 == 0)\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    upper_vowels\
    \ = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    upper_count = 0\n    for i in 1:2:length(s)\n\
    \        if s[i] in upper_vowels\n            upper_count += 1\n        end\n\
    \    end\n    return upper_count\nend", "    uppercasevowels = [\"A\", \"E\",\
    \ \"I\", \"O\", \"U\"]\n    count = 0\n    for i in eachindex(s)\n        if i\
    \ % 2 == 0\n            for letter in uppercasevowels\n                if s[i]\
    \ == letter\n                    count += 1\n                end\n           \
    \ end\n        end\n    end\n    return count\nend", "    counter = 0\n    for\
    \ i in 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            counter += 1\n\
    \        end\n    end\n    return counter\nend", "    counter = 0\n    for i in\
    \ eachindex(s)\n        if i % 2 == 0 && isvowel(s[i]) && s[i] in ['A','E','I','O','U']\n\
    \            counter += 1\n        end\n    end\n    return counter\nend", " \
    \   \n    # initialize a counter\n    counter = 0\n    \n    # loop through the\
    \ string\n    for i in 1:2:length(s)\n        # check if the character is uppercase\n\
    \        if s[i] == string(s[i]):upper()\n            # check if the character\
    \ is a vowel \n            if s[i] in \"AEIOU\"\n                # increment the\
    \ counter\n                counter += 1\n            end\n        end\n    end\n\
    \    \n    # return the counter\n    return counter\n    \nend", "    count =\
    \ 0\n    for i in enumerate(s)\n        if isvowel(i[2]) && isupper(i[2]) && i[1]\
    \ % 2 == 0\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for(i, character) in enumerate(s)\n        if isupper(character)\
    \ && i % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

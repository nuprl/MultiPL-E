name: HumanEval_89_encrypt
language: jl
results:
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for i in 1:length(s)\n        # 1: first\
    \ we change the letter to lowercase\n        # 2: We subtract the ascii value\
    \ of \"a\" from it to get\n        #    an integer in the range 0-25 representing\
    \ the character.\n        # 3: We add 2 to this integer and mod 26 to get a number\
    \ in the range 0-25\n        # 4: We add the ascii value of \"a\" to this value\
    \ to get the new character\n        # 5: we add the character to the string.\n\
    \        encrypted_string *= Char(Int(lowercase(s[i]))-Int(\"a\")+2)%26 + Int(\"\
    a\")\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdvpm5kfu.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpdvpm5kfu.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdvpm5kfu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdvpm5kfu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpdvpm5kfu.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpdvpm5kfu.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdvpm5kfu.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvpm5kfu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if length(s) == 1\n        s = s[1] \n        return lowercase[(findfirst(lowercase,\
    \ s) + 2*2) % 26]\n    else\n        return encrypt(s[1]) * encrypt(s[2:end])\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcqk4xuk8.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ encrypt(::Char)\n  Closest candidates are:\n    encrypt(!Matched::String) at\
    \ /tmp/tmpcqk4xuk8.jl:11\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main\
    \ /tmp/tmpcqk4xuk8.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcqk4xuk8.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcqk4xuk8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpcqk4xuk8.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ encrypt(::Char)\n  Closest candidates are:\n    encrypt(!Matched::String) at\
    \ /tmp/tmpcqk4xuk8.jl:11\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main\
    \ /tmp/tmpcqk4xuk8.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcqk4xuk8.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcqk4xuk8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpcqk4xuk8.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching encrypt(::Char)\n\
    \  Closest candidates are:\n    encrypt(!Matched::String) at /tmp/tmpcqk4xuk8.jl:11\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcqk4xuk8.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcqk4xuk8.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcqk4xuk8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcqk4xuk8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = join(collect(s), separator=\"\")\n    new_s = \"\"\n    for char in\
    \ s\n        num = (ord(char) - 97) * 2\n        new_char = Int8(char)\n     \
    \   if num > 26\n            num = num - 26\n        end\n        if char in [\"\
    y\", \"z\"]\n            num = num + 26\n        end\n        new_char = char\
    \ + num\n        new_s = new_s * string(new_char)\n    end\n    return new_s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuzedva1c.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ join(::Vector{Char}; separator=\"\")\n  Closest candidates are:\n    join(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:352 got unsupported\
    \ keyword argument \"separator\"\n    join(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:353\
    \ got unsupported keyword argument \"separator\"\n    join(::Any, !Matched::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:354\
    \ got unsupported keyword argument \"separator\"\n    ...\n  Stacktrace:\n   [1]\
    \ encrypt(s::String)\n     @ Main /tmp/tmpuzedva1c.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzedva1c.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuzedva1c.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpuzedva1c.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ join(::Vector{Char}; separator=\"\")\n  Closest candidates are:\n    join(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:352 got unsupported\
    \ keyword argument \"separator\"\n    join(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:353\
    \ got unsupported keyword argument \"separator\"\n    join(::Any, !Matched::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/strings/io.jl:354\
    \ got unsupported keyword argument \"separator\"\n    ...\n  Stacktrace:\n   [1]\
    \ encrypt(s::String)\n     @ Main /tmp/tmpuzedva1c.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuzedva1c.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuzedva1c.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encryptedString =\
    \ \"\"\n    \n    for i in s\n        for j in range(1,26)\n            if i ==\
    \ alphabet[j]\n                if j+2 >= 26\n                    encryptedString\
    \ = encryptedString * alphabet[j-24]\n                else\n                 \
    \   encryptedString = encryptedString * alphabet[j+2]\n                end\n \
    \           end\n        end\n    end\n    return encryptedString\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqrc92psv.jl:34\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrc92psv.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrc92psv.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpqrc92psv.jl:35\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrc92psv.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrc92psv.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpqrc92psv.jl:36\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrc92psv.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrc92psv.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpqrc92psv.jl:37\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrc92psv.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrc92psv.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpqrc92psv.jl:38\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqrc92psv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    my_dict = Dict()\n    for (index,letter) in enumerate(s)\n        new_index\
    \ = index + 2*index\n        my_dict[letter] = new_index\n    end\n    return\
    \ my_dict\nend\n        \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw_2ypt8l.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Dict{Any, Any} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpw_2ypt8l.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw_2ypt8l.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw_2ypt8l.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpw_2ypt8l.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Dict{Any, Any} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpw_2ypt8l.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw_2ypt8l.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_2ypt8l.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    ...\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"...\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp701xbra8.jl:12\nin expression starting at\
    \ /tmp/tmp701xbra8.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = []\n    for c in s\n        new_s = append!(new_s, c)\n    end\n\
    \    for i in 1:length(new_s)\n        new_s[i] = new_s[i] + 2*2\n    end\n  \
    \  return join(new_s, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptsthcn9d.jl:30\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptsthcn9d.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptsthcn9d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptsthcn9d.jl:31\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptsthcn9d.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptsthcn9d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptsthcn9d.jl:32\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptsthcn9d.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptsthcn9d.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptsthcn9d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    end\n \n \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwrly69nl.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpwrly69nl.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwrly69nl.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwrly69nl.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpwrly69nl.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpwrly69nl.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwrly69nl.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwrly69nl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    N = length(alphabet)\n\
    \    shift_letters = string(alphabet[3:N]) * 2\n    cipher_dict = Dict{Char, Char}()\n\
    \    for i in 1:length(alphabet)\n        cipher_dict[alphabet[i]] = shift_letters[i]\n\
    \    end\n    new_string = \"\"\n    for i in 1:length(s)\n        new_string\
    \ = string(new_string, cipher_dict[s[i]])\n    end\n    return new_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6_z2b0hr.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmp6_z2b0hr.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6_z2b0hr.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6_z2b0hr.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    z = 'abcdefghijklmnopqrstuvwxyz' #original alphabet \n    n = length(s)\
    \ #length of string\n    p = \"\" #empty string to add values to\n    for i in\
    \ 1:n #for loop to add values\n        if s[i] in z #if statement for range of\
    \ alphabet\n            x = findfirst(z,s[i]) #find first of string \n       \
    \     k = x+2*2 #rotate 2*2=4\n            if k > 26 #if statement to stay within\
    \ range\n                k = k-26 #bring it back \n            end\n         \
    \   p=p*z[k] #append p to string z\n        else\n            p=p*s[i] #no rotation\n\
    \        end\n    end\n    return p\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp5jr3q0jg.jl:12\nin expression\
    \ starting at /tmp/tmp5jr3q0jg.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    uc_alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    output = \"\"\n    for i = 1:length(s)\n        if s[i] in alphabet\n  \
    \          output = output * alphabet[(((search(alphabet, s[i]) - 1) + (2*2))%\
    \ 26) + 1]\n        elseif s[i] in uc_alpha\n            output = output * uc_alpha[(((search(uc_alpha,\
    \ s[i]) - 1) + (2*2))% 26) + 1]\n        else\n            output = output * s[i]\n\
    \        end\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppwwd7v2_.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppwwd7v2_.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwwd7v2_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwwd7v2_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmppwwd7v2_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppwwd7v2_.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwwd7v2_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwwd7v2_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmppwwd7v2_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmppwwd7v2_.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwwd7v2_.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwwd7v2_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmppwwd7v2_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmppwwd7v2_.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwwd7v2_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu2tacfi3.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu2tacfi3.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu2tacfi3.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu2tacfi3.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpu2tacfi3.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpu2tacfi3.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu2tacfi3.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2tacfi3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return map(x -> shift2(x), s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvh0nza12.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift2 not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmpvh0nza12.jl:12\n\
    \   [2] map(f::var\"#1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n \
    \  [3] encrypt(s::String)\n     @ Main /tmp/tmpvh0nza12.jl:12\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvh0nza12.jl:19 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvh0nza12.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpvh0nza12.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift2 not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmpvh0nza12.jl:12\n\
    \   [2] map(f::var\"#1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n \
    \  [3] encrypt(s::String)\n     @ Main /tmp/tmpvh0nza12.jl:12\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvh0nza12.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvh0nza12.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpvh0nza12.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift2 not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmpvh0nza12.jl:12\n   [2] map(f::var\"\
    #1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n   [3] encrypt(s::String)\n\
    \     @ Main /tmp/tmpvh0nza12.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvh0nza12.jl:21 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh0nza12.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    result = []\n    for c in s\n        result.append(chr(Int(c) + 2*2))\n\
    \    end\n    return(join(result, \"\"))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmjiqnpz2.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type Array has no field append\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpmjiqnpz2.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmjiqnpz2.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmjiqnpz2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmjiqnpz2.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type Array has no field append\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpmjiqnpz2.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmjiqnpz2.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmjiqnpz2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmjiqnpz2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpmjiqnpz2.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmjiqnpz2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmjiqnpz2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmjiqnpz2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmjiqnpz2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    rotate(c::Char)::Char = Char(Int(c)+2)\n    \n    return join([rotate(x)\
    \ for x in s])\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6lbgo47j.jl:22\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lbgo47j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lbgo47j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6lbgo47j.jl:23\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lbgo47j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lbgo47j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6lbgo47j.jl:24\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lbgo47j.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lbgo47j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6lbgo47j.jl:25\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lbgo47j.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lbgo47j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6lbgo47j.jl:26\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6lbgo47j.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    l = length(s)\n    x = collect(s)\n    for i in 1:l\n        x[i] = chr(ord(x[i])+2*2)\n\
    \    end\n    return join(x)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk5yxchxl.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpk5yxchxl.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5yxchxl.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5yxchxl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk5yxchxl.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpk5yxchxl.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5yxchxl.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5yxchxl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk5yxchxl.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpk5yxchxl.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5yxchxl.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5yxchxl.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpk5yxchxl.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpk5yxchxl.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5yxchxl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"\n    Encrypt the string by rotating two places for each character\n\
    \    \"\"\"\n    s2 = \"\"\n    s2 = join([a for a in string(s)])\n    return\
    \ \nend\n \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp03zraeur.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp03zraeur.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp03zraeur.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp03zraeur.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp03zraeur.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp03zraeur.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp03zraeur.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp03zraeur.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Initialize encrypted string\n    encrypted = \"\"\n    # Iterate through\
    \ the string\n    for c in s\n        # Perform rotational shift on each character\n\
    \        if c == 'a'\n            append!(encrypted, 'c')\n        elseif c ==\
    \ 'b'\n            append!(encrypted, 'd')\n        elseif c == 'c'\n        \
    \    append!(encrypted, 'e')\n        elseif c == 'd'\n            append!(encrypted,\
    \ 'f')\n        elseif c == 'e'\n            append!(encrypted, 'g')\n       \
    \ elseif c == 'f'\n            append!(encrypted, 'h')\n        elseif c == 'g'\n\
    \            append!(encrypted, 'i')\n        elseif c == 'h'\n            append!(encrypted,\
    \ 'j')\n        elseif c == 'i'\n            append!(encrypted, 'k')\n       \
    \ elseif c == 'j'\n            append!(encrypted, 'l')\n        elseif c == 'k'\n\
    \            append!(encrypted, 'm')\n        elseif c == 'l'\n            append!(encrypted,\
    \ 'n')\n        elseif c == 'm'\n            append!(encrypted, 'o')\n       \
    \ elseif c == 'n'\n            append!(encrypted, 'p')\n        elseif c == 'o'\n\
    \            append!(encrypted, 'q')\n        elseif c == 'p'\n            append!(encrypted,\
    \ 'r')\n        elseif c == 'q'\n            append!(encrypted, 's')\n       \
    \ elseif c == 'r'\n            append!(encrypted, 't')\n        elseif c == 's'\n\
    \            append!(encrypted, 'u')\n        elseif c == 't'\n            append!(encrypted,\
    \ 'v')\n        elseif c == 'u'\n            append!(encrypted, 'w')\n       \
    \ elseif c == 'v'\n            append!(encrypted, 'x')\n        elseif c == 'w'\n\
    \            append!(encrypted, 'y')\n        elseif c == 'x'\n            append!(encrypted,\
    \ 'z')\n        elseif c == 'y'\n            append!(encrypted, 'a')\n       \n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpimyjwl4h.jl:1\nin expression starting at /tmp/tmpimyjwl4h.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return map(x -> Char(x+2), s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzwk6ph4b.jl:19\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwk6ph4b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwk6ph4b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzwk6ph4b.jl:20\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwk6ph4b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwk6ph4b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzwk6ph4b.jl:21\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwk6ph4b.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwk6ph4b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzwk6ph4b.jl:22\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwk6ph4b.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwk6ph4b.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpzwk6ph4b.jl:23\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwk6ph4b.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    sa = collect(s)\n    rot = [x->x+2 for x in sa]\n    return join(rot)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8logts39.jl:21\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"#2#2\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8logts39.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8logts39.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8logts39.jl:22\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"#2#2#2#2#2#2#2#2#2\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8logts39.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8logts39.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8logts39.jl:23\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"#2#2\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8logts39.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8logts39.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8logts39.jl:24\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"#2#2\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8logts39.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8logts39.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8logts39.jl:25\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"#2#2#2#2#2#2#2#2#2#2#2#2#2\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8logts39.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # must be rotated twice\n    rotated_twice = rotate(rotate(s))\n    return\
    \ rotated_twice\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsj12tw7i.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpsj12tw7i.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsj12tw7i.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsj12tw7i.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpsj12tw7i.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpsj12tw7i.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsj12tw7i.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsj12tw7i.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpsj12tw7i.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpsj12tw7i.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsj12tw7i.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsj12tw7i.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpsj12tw7i.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpsj12tw7i.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsj12tw7i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    s_encrypt = \"\"\n    for\
    \ i in 1:length(s)\n        s_encrypt = s_encrypt * alphabet[3+findfirst(alphabet,\
    \ s[i])]\n    end\n    return s_encrypt\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjpn9ncnd.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjpn9ncnd.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpn9ncnd.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpn9ncnd.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjpn9ncnd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjpn9ncnd.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpn9ncnd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpn9ncnd.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjpn9ncnd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjpn9ncnd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    encryptedString\
    \ = \"\"\n    for i in s\n        if i == 'z'\n            encryptedString = encryptedString\
    \ * 'b'\n        elseif i == 'y'\n            encryptedString = encryptedString\
    \ * 'a'\n        else\n            encryptedString = encryptedString * alphabet[findfirst(alphabet,\
    \ i) + 2]\n        end\n    end\n    return encryptedString\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr3jqtxkg.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpr3jqtxkg.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3jqtxkg.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3jqtxkg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr3jqtxkg.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpr3jqtxkg.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3jqtxkg.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3jqtxkg.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpr3jqtxkg.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Vector{Char},\
    \ ::Char)\n  Closest candidates are:\n    findfirst"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr3jqtxkg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    key = \"cdefghijklmnopqrstuvwxyzab\"\
    \n    table = [key[i] for i in find(x -> x in alphabet, s)]\n    join(table)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpths3q4lt.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpths3q4lt.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpths3q4lt.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpths3q4lt.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpths3q4lt.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpths3q4lt.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpths3q4lt.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpths3q4lt.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpths3q4lt.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: find not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpths3q4lt.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpths3q4lt.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpths3q4lt.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpths3q4lt.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: find not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpths3q4lt.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpths3q4lt.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Encrypts the given string using a rotation of the alphabet.\"\"\"\
    \n    return shift(s,2*2)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp26qzgms5.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp26qzgms5.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp26qzgms5.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp26qzgms5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp26qzgms5.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp26qzgms5.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp26qzgms5.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp26qzgms5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp26qzgms5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp26qzgms5.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp26qzgms5.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp26qzgms5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp26qzgms5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp26qzgms5.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp26qzgms5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in s:\n        i = i+4\n        end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpepb2z0rz.jl:13\nin expression starting at\
    \ /tmp/tmpepb2z0rz.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    i = 1\n    s_new = String[]\n    for i in 1:length(s)\n        index =\
    \ findfirst(alphabet, s[i])\n        index = index + 2*2\n        if index > 26\n\
    \            index = index - 26\n        end\n        index = Int(index)\n   \
    \     push!(s_new, alphabet[index])\n    end\n    return string(s_new)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd6szoaj2.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: alphabet not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpd6szoaj2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd6szoaj2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd6szoaj2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd6szoaj2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: alphabet not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpd6szoaj2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd6szoaj2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd6szoaj2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd6szoaj2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpd6szoaj2.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd6szoaj2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd6szoaj2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd6szoaj2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: alphabet not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpd6szoaj2.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd6szoaj2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    n = length(s)\n    s =\
    \ lowercase(s)\n    out = \"\"\n    for i in 1:n\n        idx = findfirst(alphabet,\
    \ s[i])\n        out = out * get(alphabet, (idx + 2) % length(alphabet), \" \"\
    )\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprv7v8yz7.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmprv7v8yz7.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprv7v8yz7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprv7v8yz7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprv7v8yz7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmprv7v8yz7.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprv7v8yz7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprv7v8yz7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmprv7v8yz7.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprv7v8yz7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    letters = split(s, \"\")\n    newletters = []\n    for letter in letters\n\
    \        push!(newletters, chr(mod(ord(letter) + 8, 256)))\n    end\n    return\
    \ join(newletters, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbtwthm98.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpbtwthm98.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtwthm98.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtwthm98.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpbtwthm98.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpbtwthm98.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtwthm98.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtwthm98.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpbtwthm98.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpbtwthm98.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbtwthm98.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbtwthm98.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpbtwthm98.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpbtwthm98.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbtwthm98.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = \"abcdefghijklmnopqrstuvwxyz\"\n    b = \"\"\n    for i in s\n   \
    \     push!(b,a[(findfirst(a,i) + 2*2)%26 + 1])\n    end\n    return b\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5d0rtavs.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5d0rtavs.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5d0rtavs.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5d0rtavs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5d0rtavs.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5d0rtavs.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5d0rtavs.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5d0rtavs.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp5d0rtavs.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d0rtavs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\"]\n    string_length = length(s)\n    string_array = Array{String}(string_length)\n\
    \    output_array = Array{String}(string_length)\n    counter = 0\n    while counter\
    \ <= string_length\n        string_array[counter] = s[counter]\n        output_array[counter]\
    \ = alphabet[String(alphabet[string_array[counter]*2])]\n        counter += 1\n\
    \    end\n    return string_array\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppy2chjwr.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ (Array{String})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppy2chjwr.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppy2chjwr.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppy2chjwr.jl:28\ntest set:\
    \ Error During Test at /tmp/tmppy2chjwr.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ (Array{String})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppy2chjwr.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/std"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppy2chjwr.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    enc = \"\"\n    for i in s\n        enc *= a[(div(Int(i),2)*2)-1]\n    end\n\
    \    return enc\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmxtp93pe.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 26-element\
    \ Vector{Char} at index [103]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmxtp93pe.jl:15\n \
    \  [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmxtp93pe.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmxtp93pe.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmxtp93pe.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 26-element Vector{Char} at index [95]\n  Stacktrace:\n   [1] getindex\n    \
    \ @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmxtp93pe.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmxtp93pe.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmxtp93pe.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmxtp93pe.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 26-element Vector{Char}\
    \ at index [101]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpmxtp93pe.jl:15\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmxtp93pe.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmxtp93pe.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpmxtp93pe.jl:27\n  Test threw exception"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmxtp93pe.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i = 0:(length(s) - 1)\n        s[i] = 'l' #temp\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnj2bxqzp.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmpnj2bxqzp.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj2bxqzp.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj2bxqzp.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpnj2bxqzp.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmpnj2bxqzp.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj2bxqzp.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj2bxqzp.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpnj2bxqzp.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnj2bxqzp.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj2bxqzp.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj2bxqzp.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpnj2bxqzp.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::Stri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnj2bxqzp.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    count = 0\n    s = lowercase(s)\n    out = \"\"\n    for letter in s\n\
    \        if letter in string(\"abcd\")\n            out = out * letter\n     \
    \   else\n            letter = chr(Int(letter) + count)\n            out = out\
    \ * letter\n        end\n        count += 2\n    end\n    return out\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyxnwzblu.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyxnwzblu.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyxnwzblu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyxnwzblu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyxnwzblu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyxnwzblu.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyxnwzblu.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyxnwzblu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyxnwzblu.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpyxnwzblu.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyxnwzblu.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyxnwzblu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyxnwzblu.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpyxnwzblu.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyxnwzblu.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return convert(String, [x+2 for x in ascii(s)])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeyp_c2r7.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpeyp_c2r7.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeyp_c2r7.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeyp_c2r7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpeyp_c2r7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpeyp_c2r7.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeyp_c2r7.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeyp_c2r7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out = \"\"\n    for i in 1:length(s)\n        out = out * string(char(s[i]\
    \ + 4))\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpisaoisb5.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpisaoisb5.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpisaoisb5.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpisaoisb5.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpisaoisb5.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpisaoisb5.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpisaoisb5.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpisaoisb5.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpisaoisb5.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpisaoisb5.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpisaoisb5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpisaoisb5.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpisaoisb5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpisaoisb5.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpisaoisb5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create alphabet\n    a=collect('abcdefghijklmnopqrstuvwxyz')\n    #\
    \ initialize new string\n    n=[]\n    # iterate over each letter in s\n    for\
    \ letter in s\n        # append the shifted letter to n\n        push!(n,a[a .==\
    \ letter][2*2+1])\n    end\n    # return encrypted string\n    return join(n)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpmlkv6vyr.jl:13\nin expression\
    \ starting at /tmp/tmpmlkv6vyr.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = length(s)\n    for i in 1:n\n        if s[i] == \"a\"\n          \
    \  s[i] = \"c\"\n        elseif s[i] == \"b\"\n            s[i] = \"d\"\n    \
    \    elseif s[i] == \"c\"\n            s[i] = \"e\"\n        elseif s[i] == \"\
    d\"\n            s[i] = \"f\"\n        elseif s[i] == \"e\"\n            s[i]\
    \ = \"g\"\n        elseif s[i] == \"f\"\n            s[i] = \"h\"\n        elseif\
    \ s[i] == \"g\"\n            s[i] = \"i\"\n        elseif s[i] == \"h\"\n    \
    \        s[i] = \"j\"\n        elseif s[i] == \"i\"\n            s[i] = \"k\"\n\
    \        elseif s[i] == \"j\"\n            s[i] = \"l\"\n        elseif s[i] ==\
    \ \"k\"\n            s[i] = \"m\"\n        elseif s[i] == \"l\"\n            s[i]\
    \ = \"n\"\n        elseif s[i] == \"m\"\n            s[i] = \"o\"\n        elseif\
    \ s[i] == \"n\"\n            s[i] = \"p\"\n        elseif s[i] == \"o\"\n    \
    \        s[i] = \"q\"\n        elseif s[i] == \"p\"\n            s[i] = \"r\"\n\
    \        elseif s[i] == \"q\"\n            s[i] = \"s\"\n        elseif s[i] ==\
    \ \"r\"\n            s[i] = \"t\"\n        elseif s[i] == \"s\"\n            s[i]\
    \ = \"u\"\n        elseif s[i] == \"t\"\n            s[i] = \"v\"\n        elseif\
    \ s[i] == \"u\"\n            s[i] = \"w\"\n        elseif s[i] == \"v\"\n    \
    \        s[i] = \"x\"\n        elseif s[i] == \"w\"\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwqcnc_ee.jl:1\nin expression starting at /tmp/tmpwqcnc_ee.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    shift = 2*2\n    new = \"\"\n    for i in s\n        if isletter(i)\n\
    \            # if the letter is not in the alphabet then it is a special character\n\
    \            if i in String(\"abcdefghijklmnopqrstuvwxyz\")\n                j\
    \ = findnext(String(\"abcdefghijklmnopqrstuvwxyz\"), i, 1)+shift\n           \
    \     if j>length(String(\"abcdefghijklmnopqrstuvwxyz\"))\n                  \
    \  j -= length(String(\"abcdefghijklmnopqrstuvwxyz\"))\n                end\n\
    \                new *= String(\"abcdefghijklmnopqrstuvwxyz\")[j]\n          \
    \  elseif i in String(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n                j = findnext(String(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"), i, 1)+shift\n                if j>length(String(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n                    j -= length(String(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ))\n                end\n                new *= String(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[j]\n            else \n                new *= i\n            end\n        else\n\
    \            new *= i\n        end\n    end\n    return new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpume776pk.jl:43\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findnext(::String, ::Char, ::Int64)\n  Closest candidates are:\n    findnext(!Matched::Function,\
    \ ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1946\n\
    \    findnext(::AbstractString, !Matched::AbstractString, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:303\n\
    \    findnext(!Matched::Base.RegexAndMatchData, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:584\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpume776pk.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpume776pk.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpume776pk.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpume776pk.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findnext(::String, ::Char, ::Int64)\n  Closest candidates are:\n    findnext(!Matched::Function,\
    \ ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1946\n\
    \    findnext(::AbstractString, !Matched::AbstractString, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:303\n\
    \    findnext(!Matched::Base.RegexAndMatchData, ::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:584\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpume776pk.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpume776pk.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpume776pk.jl:42\ntest set:\
    \ Error During"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpume776pk.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    c = Char[]\n    for l in s\n        c = push!(c, l)\n    end\n \
    \   index = 0\n    for i in c\n        if i == 'a'\n            c[index] = 'c'\n\
    \        elseif i == 'b'\n            c[index] = 'd'\n        elseif i == 'c'\n\
    \            c[index] = 'e'\n        elseif i == 'd'\n            c[index] = 'f'\n\
    \        elseif i == 'e'\n            c[index] = 'g'\n        elseif i == 'f'\n\
    \            c[index] = 'h'\n        elseif i == 'g'\n            c[index] = 'i'\n\
    \        elseif i == 'h'\n            c[index] = 'j'\n        elseif i == 'i'\n\
    \            c[index] = 'k'\n        elseif i == 'j'\n            c[index] = 'l'\n\
    \        elseif i == 'k'\n            c[index] = 'm'\n        elseif i == 'l'\n\
    \            c[index] = 'n'\n        elseif i == 'm'\n            c[index] = 'o'\n\
    \        elseif i == 'n'\n            c[index] = 'p'\n        elseif i == 'o'\n\
    \            c[index] = 'q'\n        elseif i == 'p'\n            c[index] = 'r'\n\
    \        elseif i == 'q'\n            c[index] = 's'\n        elseif i == 'r'\n\
    \            c[index] = 't'\n        elseif i == 's'\n            c[index] = 'u'\n\
    \        elseif i == 't'\n            c[index] = 'v'\n        elseif i == 'u'\n\
    \            c[index] = 'w'\n        elseif i == 'v'\n            c[index] = 'x'\n\
    \        elseif i == 'w'\n            c[index] = 'y'\n        elseif i == 'x'\n\
    \            c[index] = 'z'\n        elseif i == 'y'\n            c[index] = 'a\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpi_ewd8vc.jl:74\nin expression starting at /tmp/tmpi_ewd8vc.jl:74\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = String[]\n\
    \    for i in s\n        if isalpha(i)\n            if i == 'z'\n            \
    \    push!(encrypted, 'b')\n            elseif i == 'y'\n                push!(encrypted,\
    \ 'a')\n            else\n                index = findfirst(alphabet, i)\n   \
    \             push!(encrypted, alphabet[index+2])\n            end\n        else\n\
    \            push!(encrypted, i)\n        end\n    end\n    return join(encrypted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpapjqozyz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpapjqozyz.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapjqozyz.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapjqozyz.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpapjqozyz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpapjqozyz.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapjqozyz.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapjqozyz.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpapjqozyz.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpapjqozyz.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpapjqozyz.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpapjqozyz.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpapjqozyz.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpapjqozyz.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapjqozyz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \"\"\"\n    c = \"\"\n    for ch in s\n        if ch == 'a'\n           \
    \ c *= 'c'\n        elseif ch == 'b'\n            c *= 'd'\n        elseif ch\
    \ == 'c'\n            c *= 'e'\n        elseif ch == 'd'\n            c *= 'f'\n\
    \        elseif ch == 'e'\n            c *= 'g'\n        elseif ch == 'f'\n  \
    \          c *= 'h'\n        elseif ch == 'g'\n            c *= 'i'\n        elseif\
    \ ch == 'h'\n            c *= 'j'\n        elseif ch == 'i'\n            c *=\
    \ 'k'\n        elseif ch == 'j'\n            c *= 'l'\n        elseif ch == 'k'\n\
    \            c *= 'm'\n        elseif ch == 'l'\n            c *= 'n'\n      \
    \  elseif ch == 'm'\n            c *= 'o'\n        elseif ch == 'n'\n        \
    \    c *= 'p'\n        elseif ch == 'o'\n            c *= 'q'\n        elseif\
    \ ch == 'p'\n            c *= 'r'\n        elseif ch == 'q'\n            c *=\
    \ 's'\n        elseif ch == 'r'\n            c *= 't'\n        elseif ch == 's'\n\
    \            c *= 'u'\n        elseif ch == 't'\n            c *= 'v'\n      \
    \  elseif ch == 'u'\n            c *= 'w'\n        elseif ch == 'v'\n        \
    \    c *= 'x'\n        elseif ch == 'w'\n            c *= 'y'\n       \nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5udo12ux.jl:1\nin expression starting at /tmp/tmp5udo12ux.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = 'abcdefghijklmnopqrstuvwxyz'\n    s2 = \"\"\n    for i in s\n    \
    \    ind = findfirst(a,i)\n        if ind + 2 > 25\n            ind = ind + 2\
    \ - 26\n        else\n            ind = ind + 2\n        end\n        s2 = s2\
    \ * string(a[ind])\n    end\n    return s2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpz0lzytgs.jl:12\nin expression\
    \ starting at /tmp/tmpz0lzytgs.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = Char(0)\n    b = Char(0)\n    m = Vector{Char}()\n    for i in 1:length(s)\n\
    \        a = Char(Int(s[i])+2)\n        b = Char(Int(a)+2)\n        push!(m,b)\n\
    \    end\n    join(m)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwh4o6dnx.jl:31\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwh4o6dnx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwh4o6dnx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwh4o6dnx.jl:32\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwh4o6dnx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwh4o6dnx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwh4o6dnx.jl:33\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwh4o6dnx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwh4o6dnx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwh4o6dnx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    let alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"\
    , \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    let l = length(s)\n  \
    \  let message = \"\"\n    for i in 1:l\n        if s[i] == \" \"\n          \
    \  message = string(message, \" \")\n        else\n            let position =\
    \ findfirst(x -> x == s[i], alphabet)\n            let code_pos = mod((2*position+2),\
    \ 26)\n            message = string(message, alphabet[code_pos])\n        end\n\
    \    end\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_dmvtjab.jl:15\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_dmvtjab.jl:1\n\
    in expression starting at /tmp/tmp_dmvtjab.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # ...\n    return s;\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp60x72xp5.jl:20\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60x72xp5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60x72xp5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp60x72xp5.jl:21\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60x72xp5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60x72xp5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp60x72xp5.jl:22\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60x72xp5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60x72xp5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp60x72xp5.jl:23\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60x72xp5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60x72xp5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp60x72xp5.jl:24\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp60x72xp5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = Dict('a'=>2, 'b'=>4, 'c'=>6, 'd'=>8, 'e'=>10, 'f'=>12, 'g'=>14, 'h'=>16,\
    \ 'i'=>18, 'j'=>20, 'k'=>22, 'l'=>24, 'm'=>26, 'n'=>28, 'o'=>30, 'p'=>32, 'q'=>34,\
    \ 'r'=>36, 's'=>38, 't'=>40, 'u'=>42, 'v'=>44, 'w'=>46, 'x'=>48, 'y'=>50, 'z'=>52)\n\
    \    y = \"\"\n    for i in 1:length(s)\n        y = string(y,c[lowercase(s[i])])\n\
    \    end\n    return y\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpir1zetg_.jl:24\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1618\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpir1zetg_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpir1zetg_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpir1zetg_.jl:25\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"2388121416202224\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpir1zetg_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpir1zetg_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpir1zetg_.jl:26\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"1412\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpir1zetg_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpir1zetg_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpir1zetg_.jl:27\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"1040\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpir1zetg_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpir1zetg_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpir1zetg_.jl:28\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"12210461224610122104614\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpir1zetg_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c=collect(s)\n    for i in 1:length(c)\n        if c[i] in \"abcd\"\n\
    \            c[i]=string(int(c[i])+2)\n        elseif c[i] in \"efgh\"\n     \
    \       c[i]=string(int(c[i])+4)\n        elseif c[i] in \"ijkl\"\n          \
    \  c[i]=string(int(c[i])+6)\n        elseif c[i] in \"mnop\"\n            c[i]=string(int(c[i])+8)\n\
    \        elseif c[i] in \"qrst\"\n            c[i]=string(int(c[i])+10)\n    \
    \    elseif c[i] in \"uvwxyz\"\n            c[i]=string(int(c[i])+12)\n      \
    \  end\n    end\n    join(c)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnf7sma3j.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnf7sma3j.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnf7sma3j.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnf7sma3j.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpnf7sma3j.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnf7sma3j.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnf7sma3j.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnf7sma3j.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpnf7sma3j.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpnf7sma3j.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnf7sma3j.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnf7sma3j.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpnf7sma3j.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpnf7sma3j.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnf7sma3j.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    # A dictionary for the alphabet\n    alphabet = Dict(\"a\" => 1,\
    \ \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5, \"f\" => 6,\n              \
    \     \"g\" => 7, \"h\" => 8, \"i\" => 9, \"j\" => 10, \"k\" => 11, \"l\" => 12,\
    \ \n                   \"m\" => 13, \"n\" => 14, \"o\" => 15, \"p\" => 16, \"\
    q\" => 17, \"r\" => 18, \n                   \"s\" => 19, \"t\" => 20, \"u\" =>\
    \ 21, \"v\" => 22, \"w\" => 23, \"x\" => 24, \n                   \"y\" => 25,\
    \ \"z\" => 26)\n    \n    # A dictionary for the rotated alphabet. \n    alphabet_rotated\
    \ = Dict(\"a\" => 3, \"b\" => 4, \"c\" => 5, \"d\" => 6, \"e\" => 7, \"f\" =>\
    \ 8,\n                   \"g\" => 9, \"h\" => 10, \"i\" => 11, \"j\" => 12, \"\
    k\" => 13, \"l\" => 14, \n                   \"m\" => 15, \"n\" => 16, \"o\" =>\
    \ 17, \"p\" => 18, \"q\" => 19, \"r\" => 20, \n                   \"s\" => 21,\
    \ \"t\" => 22, \"u\" => 23, \"v\" => 24, \"w\" => 25, \"x\" => 26, \n        \
    \           \"y\" => 1, \"z\" => 2)\n    \n    # Convert the string to lowercase\
    \ to avoid complications.\n    s = lowercase(s)\n    \n    encrypted_string =\
    \ \"\"\n    \n    # Iterate through the string and encrypt it\n    for character\
    \ in s\n        if character in keys(alphabet)\n            encrypted_string =\
    \ encrypted_string * string(keys(alphabet_rotated)[values(alphabet_rotated) .==\
    \ values(alphabet)[character]])\n        else\n            println(\"The character\
    \ '$character' is not a lowercase letter in the English alphabet!\")\n       \
    \ end\n    end\n    \n    return encrypted_string\n\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfcbklpkx.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfcbklpkx.jl:1\n\
    in expression starting at /tmp/tmpfcbklpkx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #Convert string to lowercase\n    s = lowercase(s)\n    #Create alphabet\n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    #Create empty string to store\
    \ values\n    res = \"\"\n    #Iterate through s\n    for i in s\n        #Find\
    \ index of each letter in the alphabet\n        idx = findfirst(x -> x == i, alphabet)\n\
    \        #Shift by two and store in 'res'\n        push!(res, alphabet[(idx +\
    \ 2) % 26 + 1])\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp06otq39.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp06otq39.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp06otq39.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp06otq39.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpp06otq39.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp06otq39.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp06otq39.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp06otq39.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpp06otq3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp06otq39.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \"\"\"\n    # Create alphabet array\n    alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    # Create output array\n    output = []\n    # For each element in the string\n\
    \    for x in s\n        # Check if it is a letter\n        if x in alphabet\n\
    \            # Encrypt the letter\n            push!(output,alphabet[(findall(collect(s))[x]\
    \ + 4) % 26])\n        else\n            # If not a letter then push the element\n\
    \            push!(output,x)\n        end\n    end\n    # Return the string\n\
    \    return string(output)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk0y6ee7e.jl:45\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  TypeError: non-boolean (Char) used\
    \ in boolean context\n  Stacktrace:\n    [1] iterate\n      @ ./iterators.jl:447\
    \ [inlined]\n    [2] iterate\n      @ ./generator.jl:44 [inlined]\n    [3] grow_to!(dest::Vector{Int64},\
    \ itr::Base.Generator{Base.Iterators.Filter{Base.var\"#108#110\", Base.Pairs{Int64,\
    \ Char, LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Vector{Char}}}, Base.var\"\
    #107#109\"})\n      @ Base ./array.jl:797\n    [4] collect\n      @ ./array.jl:721\
    \ [inlined]\n    [5] findall\n      @ ./array.jl:2300 [inlined]\n    [6] encrypt(s::String)\n\
    \      @ Main /tmp/tmpk0y6ee7e.jl:31\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpk0y6ee7e.jl:45 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpk0y6ee7e.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpk0y6ee7e.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  TypeError: non-boolean (Char) used\
    \ in boolean context\n  Stacktrace:\n    [1] iterate\n      @ ./iterators.jl:447\
    \ [inlined]\n    [2] iterate\n      @ ./generator.jl:44 [inlined]\n    [3] grow_to!(dest::Vector{Int64},\
    \ itr::Base.Generator{Base.Iterators.Filter{Base.var\"#108#110\", Base.Pairs{Int64,\
    \ Char, LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Vector{Char}}}, Base.var\"\
    #107#109\"})\n      @ Base ./array.jl:797\n    [4] collect\n      @ ./array.jl:721\
    \ [inlined]\n    [5] findall\n      @ ./array.jl:2300 [inlined]\n    [6] encrypt(s::String)\n\
    \      @ Main /tmp/tmpk0y6ee7e.jl:31\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpk0y6ee7e.jl:46 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk0y6ee7e.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in 1:length(s)\n        if s[i] in ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \            newpos=mod(Int(s[i])+4,122)+97\n            s[i]=Char(newpos)\n \
    \       end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprvleoxys.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmprvleoxys.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprvleoxys.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprvleoxys.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprvleoxys.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmprvleoxys.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprvleoxys.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprvleoxys.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprvleoxys.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmprvleoxys.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprvleoxys.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprvleoxys.jl:24\ntest set:\
    \ Error During Test at /tmp/tmprvleoxys.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::Stri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvleoxys.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    letters = [i for i in 'abcdefghijklmnopqrstuvwxyz']\n    encrypted = [i\
    \ for i in 'cdefghijklmnopqrstuvwxyzab']\n    d = Dict(zip(letters, encrypted))\n\
    \    collect(join(get(d,j,j) for j in s))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpe4whb001.jl:12\nin expression\
    \ starting at /tmp/tmpe4whb001.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  encrypted = \"\"\n  for letter\
    \ in s\n    if letter == \" \"\n      push!(encrypted, \" \")\n    else\n    \
    \  index = findfirst(alphabet, letter)\n      push!(encrypted, alphabet[index\
    \ + 2])\n    end\n  end\n  return encrypted\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpak2qugms.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpak2qugms.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpak2qugms.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpak2qugms.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpak2qugms.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpak2qugms.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpak2qugms.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpak2qugms.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpak2qugms.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpak2qugms.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    f(c::Char) = Char(c + 2*2)\n    return join(f.(s))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplkjv48r0.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ (::var\"#f#1\")(::String)\n  Closest candidates are:\n    (::var\"#f#1\")(!Matched::Char)\
    \ at /tmp/tmplkjv48r0.jl:12\n  Stacktrace:\n    [1] _broadcast_getindex_evalf\n\
    \      @ ./broadcast.jl:670 [inlined]\n    [2] _broadcast_getindex\n      @ ./broadcast.jl:643\
    \ [inlined]\n    [3] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [4] copy\n\
    \      @ ./broadcast.jl:875 [inlined]\n    [5] materialize\n      @ ./broadcast.jl:860\
    \ [inlined]\n    [6] encrypt(s::String)\n      @ Main /tmp/tmplkjv48r0.jl:13\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmplkjv48r0.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmplkjv48r0.jl:19\ntest set:\
    \ Error During Test at /tmp/tmplkjv48r0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ (::var\"#f#1\")(::String)\n  Closest candidates are:\n    (::var\"#f#1\")(!Matched::Char)\
    \ at /tmp/tmplkjv48r0.jl:12\n  Stacktrace:\n    [1] _broadcast_getindex_evalf\n\
    \      @ ./broadcast.jl:670 [inlined]\n    [2] _broadcast_getindex\n      @ ./broadcast.jl:643\
    \ [inlined]\n    [3] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [4] copy\n\
    \      @ ./broadcast.jl:875 [inlined]\n    [5] materialize\n      @ ./broadcast.jl:860\
    \ [inlined]\n    [6] encrypt(s::String)\n      @ Main /tmp/tmplkjv48r0.jl:13\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmplkjv48r0.jl:21 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmplkjv48r0.jl:19\ntest set:\
    \ Error During Test at /tmp/tmplkjv48r0.jl:22\n  Test threw"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplkjv48r0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in s\n        push!(a,i)\n    end\n    for i in a\n        j = \"\
    abcdefghijklmnopqrstuvwxyz\"\n        if i in j\n            k = j[i]\n      \
    \      push!(b,k)\n        end\n    end\n    for i in b\n        l = b[i]\n  \
    \      l = l-2\n        push!(c,l)\n    end\n    return c\nend\n        \nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3cu99yh7.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: a not defined\n \
    \ Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3cu99yh7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3cu99yh7.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3cu99yh7.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3cu99yh7.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: a not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3cu99yh7.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3cu99yh7.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3cu99yh7.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3cu99yh7.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: a not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp3cu99yh7.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3cu99yh7.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3cu99yh7.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3cu99yh7.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: a not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp3cu99yh7.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cu99yh7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # note that the alphabet is a string 'abcdefghijklmnopqrstuvwxyz'\n  \
    \  # string(p) converts the integer p to a string\n    return [string(alphabet[(find(alphabet,\
    \ i) + (2*2))%26+1]) for i in s]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzlvzeiac.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(i::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpzlvzeiac.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpzlvzeiac.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpzlvzeiac.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzlvzeiac.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: find not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(i::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpzlvzeiac.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpzlvzeiac.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpzlvzeiac.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzlvzeiac.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: find not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(i::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpzlvzeiac.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzlvzeiac.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_new = String[]\n    for i in s\n        push!(s_new, chr(convert(Int,(i\
    \ + 2*2))))\n    end\n    return join(s_new)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptlzhikxz.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmptlzhikxz.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptlzhikxz.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptlzhikxz.jl:22\ntest set:\
    \ Error During Test at /tmp/tmptlzhikxz.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmptlzhikxz.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptlzhikxz.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptlzhikxz.jl:22\ntest set:\
    \ Error During Test at /tmp/tmptlzhikxz.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmptlzhikxz.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptlzhikxz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptlzhikxz.jl:22\ntest set:\
    \ Error During Test at /tmp/tmptlzhikxz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmptlzhikxz.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptlzhikxz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return join([char[1] for char in string(s)])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpz2dck4.jl:19\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpz2dck4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpz2dck4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbpz2dck4.jl:20\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpz2dck4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpz2dck4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbpz2dck4.jl:21\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpz2dck4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpz2dck4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbpz2dck4.jl:22\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpz2dck4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpz2dck4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbpz2dck4.jl:23\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpz2dck4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    i = 0\n    encrypted_string = \"\"\n    while i <= length(s) - 1\n   \
    \     if s[i] == 'a' || s[i] == 'b' || s[i] == 'c' || s[i] == 'd' || s[i] == 'e'\
    \ || s[i] == 'f'\n            encrypted_string *= s[i] + 2\n        elseif s[i]\
    \ == 'g' || s[i] == 'h' || s[i] == 'i' || s[i] == 'j' || s[i] == 'k' || s[i] ==\
    \ 'l'\n            encrypted_string *= s[i] + 2\n        elseif s[i] == 'm' ||\
    \ s[i] == 'n' || s[i] == 'o' || s[i] == 'p' || s[i] == 'q' || s[i] == 'r'\n  \
    \          encrypted_string *= s[i] + 2\n        elseif s[i] == 's' || s[i] ==\
    \ 't' || s[i] == 'u' || s[i] == 'v' || s[i] == 'w' || s[i] == 'x'\n          \
    \  encrypted_string *= s[i] + 2\n        elseif s[i] == 'y' || s[i] == 'z'\n \
    \           encrypted_string *= s[i] + 2\n        end\n        i += 1\n    end\n\
    \    encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5jqfh3ot.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 2-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmp5jqfh3ot.jl:15\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5jqfh3ot.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5jqfh3ot.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp5jqfh3ot.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 9-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmp5jqfh3ot.jl:15\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5jqfh3ot.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5jqfh3ot.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp5jqfh3ot.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 2-codeunit String\
    \ at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmp5jqfh3ot.jl:15\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5jqfh3ot.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if length(s) == 1\n        s = Char(s[1] + 2)\n    else\n        s = Char(s[1]\
    \ + 2) * 2\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk38zf64m.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::Char, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpk38zf64m.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpk38zf64m.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpk38zf64m.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = length(s)\n    output = String[]\n    for i in 1:n\n        if s[i]\
    \ == 'a'\n            push!(output,'c')\n        elseif s[i] == 'b'\n        \
    \    push!(output,'d')\n        elseif s[i] == 'c'\n            push!(output,'e')\n\
    \        elseif s[i] == 'd'\n            push!(output,'f')\n        elseif s[i]\
    \ == 'e'\n            push!(output,'g')\n        elseif s[i] == 'f'\n        \
    \    push!(output,'h')\n        elseif s[i] == 'g'\n            push!(output,'i')\n\
    \        elseif s[i] == 'h'\n            push!(output,'j')\n        elseif s[i]\
    \ == 'i'\n            push!(output,'k')\n        elseif s[i] == 'j'\n        \
    \    push!(output,'l')\n        elseif s[i] == 'k'\n            push!(output,'m')\n\
    \        elseif s[i] == 'l'\n            push!(output,'n')\n        elseif s[i]\
    \ == 'm'\n            push!(output,'o')\n        elseif s[i] == 'n'\n        \
    \    push!(output,'p')\n        elseif s[i] == 'o'\n            push!(output,'q')\n\
    \        elseif s[i] == 'p'\n            push!(output,'r')\n        elseif s[i]\
    \ == 'q'\n            push!(output,'s')\n        elseif s[i] == 'r'\n        \
    \    push!(output,'t')\n        elseif s[i] == 's'\n            push!(output,'u')\n\
    \        elseif s[i] == 't'\n            push!(output,'v')\n        elseif s[i]\
    \ == 'u'\n            push!(output,'w')\n        elseif s[i] == 'v'\n        \
    \    push!(output,'x')\n        elseif s[i] == 'w'\n            push!(output,'y')\n\
    \        elseif s[i]\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6nov6gge.jl:1\nin expression starting at /tmp/tmp6nov6gge.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    h=Hash([('a'=>'c'),('b'=>'d'),('c'=>'e'),('d'=>'f'),('e'=>'g'),('f'=>'h'),('g'=>'i'),('h'=>'j'),('i'=>'k'),('j'=>'l'),('k'=>'m'),('l'=>'n'),('m'=>'o'),('n'=>'p'),('o'=>'q'),('p'=>'r'),('q'=>'s'),('r'=>'t'),('s'=>'u'),('t'=>'v'),('u'=>'w'),('v'=>'x'),('w'=>'y'),('x'=>'z'),('y'=>'a'),('z'=>'b')])\n\
    \    ans=\"\"\n    for i in s\n        ans=ans*h[i]\n    end\n    return ans\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjuuwao62.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: Hash not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjuuwao62.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjuuwao62.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjuuwao62.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjuuwao62.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: Hash not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjuuwao62.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjuuwao62.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjuuwao62.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjuuwao62.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: Hash not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjuuwao62.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjuuwao62.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjuuwao62.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjuuwao62.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: Hash not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjuuwao62.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjuuwao62.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    convert(String, collect(rotate(s,3)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc1jyv_e4.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpc1jyv_e4.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc1jyv_e4.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc1jyv_e4.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpc1jyv_e4.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpc1jyv_e4.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc1jyv_e4.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc1jyv_e4.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpc1jyv_e4.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpc1jyv_e4.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc1jyv_e4.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc1jyv_e4.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpc1jyv_e4.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpc1jyv_e4.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1jyv_e4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"\n    Takes a string s and returns an encrypted string.\n    \"\"\
    \"\n    result = \"\"\n    for ch in s\n        result *= Char(Int(ch) + 2*2)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpju5zhfja.jl:30\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju5zhfja.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju5zhfja.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpju5zhfja.jl:31\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju5zhfja.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju5zhfja.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpju5zhfja.jl:32\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju5zhfja.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju5zhfja.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpju5zhfja.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for ch in s\n        # Get the current character's\
    \ index in the alphabet\n        index = findfirst(alphabet, ch)\n        # Shift\
    \ the index down by 2 and mod by 26\n        index = (index + 4) % 26\n      \
    \  # Get the new character from the alphabet\n        encrypted = encrypted *\
    \ alphabet[index]\n    end\n    return encrypted\nend\nencrypt(\"hi\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: alphabet not defined\nStacktrace:\n [1]\
    \ encrypt(s::String)\n   @ Main /tmp/tmp47x37suu.jl:15\n [2] top-level scope\n\
    \   @ /tmp/tmp47x37suu.jl:23\nin expression starting at /tmp/tmp47x37suu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    ASCII_indices = [i for i in s]\n    for i = 1:length(ASCII_indices)\n\
    \        ASCII_indices[i] = Int(ASCII_indices[i]) - 96\n    end\n    for i = 1:length(ASCII_indices)\n\
    \        ASCII_indices[i] = ASCII_indices[i] + 2\n        if ASCII_indices[i]\
    \ > 26\n            ASCII_indices[i] = ASCII_indices[i] - 26\n        end\n  \
    \  end\n    for i = 1:length(ASCII_indices)\n        ASCII_indices[i] = ASCII_indices[i]\
    \ + 96\n    end\n    for i = 1:length(ASCII_indices)\n        ASCII_indices[i]\
    \ = Char(ASCII_indices[i])\n    end\n    return join(ASCII_indices)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_z6_5x6y.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ isless(::Int64, ::Char)\n  Closest candidates are:\n    isless(::Real, !Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n    isless(::Real,\
    \ !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Int64, y::Char)\n     @ Base ./operators.jl:352\n\
    \   [2] >(x::Char, y::Int64)\n     @ Base ./operators.jl:378\n   [3] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_z6_5x6y.jl:18\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_z6_5x6y.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_z6_5x6y.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp_z6_5x6y.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ isless(::Int64, ::Char)\n  Closest candidates are:\n    isless(::Real, !Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n    isless(::Real,\
    \ !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Int64, y::Char)\n     @ Base ./operators.jl:352\n\
    \   [2] >(x::Char, y::Int64)\n     @ Base ./operators.jl:378\n   [3] encrypt(s::String)\n\
    \     @ Main /tmp/tmp_z6_5x6y.jl:18\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_z6_5x6y.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_z6_5x6y.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n   \n    new_s = []\n    for i in s\n        new_s = push!(new_s, i)\n   \
    \     if i == 'z'\n            push!(new_s, 'b')\n        elseif i == 'y'\n  \
    \          push!(new_s, 'a')\n        elseif i == ' '\n            push!(new_s,\
    \ ' ')\n        else\n            push!(new_s, chr(Int(i) + 2))\n        end\n\
    \    end\n    \n    return join(new_s[1:end-1])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7wqvve_v.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7wqvve_v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7wqvve_v.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7wqvve_v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7wqvve_v.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7wqvve_v.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7wqvve_v.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7wqvve_v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7wqvve_v.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp7wqvve_v.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7wqvve_v.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7wqvve_v.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp7wqvve_v.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp7wqvve_v.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7wqvve_v.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s \n    s = s |> uppercase \n    s = collect(s)\n    return collect(s)\
    \ |> x -> map(x->x-2,x) |>  x -> map(x->x-2,x) |> x -> Char.(x) |> collect \n\
    end \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsg7h483a.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpsg7h483a.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsg7h483a.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsg7h483a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpsg7h483a.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpsg7h483a.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsg7h483a.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsg7h483a.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_string = \"\"\n    for char in s\n        encrypted_string *=\
    \ chr(ord(char) + 2)\n    end\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqivwk6_y.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqivwk6_y.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqivwk6_y.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqivwk6_y.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqivwk6_y.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqivwk6_y.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqivwk6_y.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqivwk6_y.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqivwk6_y.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpqivwk6_y.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqivwk6_y.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqivwk6_y.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqivwk6_y.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpqivwk6_y.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqivwk6_y.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [chr(i) for i in range(ord('a'), ord('z')+1)] # Create alphabet\n\
    \    cipher_alphabet = alphabet[:] # Create cipher alphabet\n    for i in 1:length(alphabet)\n\
    \        if i%2 == 0\n            cipher_alphabet[i] = alphabet[i+2]\n       \
    \ else\n            cipher_alphabet[i] = alphabet[i+4]\n        end\n    end\n\
    \    cipher_alphabet[length(alphabet)] = alphabet[1]\n    cipher_alphabet[length(alphabet)-1]\
    \ = alphabet[2]\n    cipher_string = \"\"\n    for i in 1:length(s)\n        c\
    \ = findfirst(s[i], alphabet)\n        if c == 0\n            cipher_string =\
    \ cipher_string * s[i]\n        else\n            cipher_string = cipher_string\
    \ * cipher_alphabet[c]\n        end\n    end\n    return cipher_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmiybkepj.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpmiybkepj.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmiybkepj.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmiybkepj.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpmiybkepj.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpmiybkepj.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmiybkepj.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmiybkepj.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpmiybkepj.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpmiybkepj.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmiybkepj.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmiybkepj.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpmiybkepj.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpmiybkepj.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmiybkepj.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    dict = Dict()\n    for i in 97:122\n        dict[string(Char(i))] = string(Char(mod(i+2*2,\
    \ 122)+97))\n    end\n    encrypted_string = \"\"\n    for i in s\n        push!(encrypted_string,\
    \ dict[string(i)])\n    end\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe6qvavg6.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::String)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpe6qvavg6.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe6qvavg6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe6qvavg6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpe6qvavg6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::String)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpe6qvavg6.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe6qvavg6.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe6qvavg6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpe6q"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6qvavg6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i = 1:length(s)\n        s[i] = Char(Int(s[i]) + 2)\n    end\n   \
    \ return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1eem76of.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1eem76of.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1eem76of.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1eem76of.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp1eem76of.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmp1eem76of.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1eem76of.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1eem76of.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp1eem76of.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1eem76of.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1eem76of.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1eem76of.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp1eem76of.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::Stri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1eem76of.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for i in 1:length(s)\n        s[i] = s[i] - 2\n    end\n    return s\n\
    end\nencrypt(\"hi\")\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\\nStacktrace:\\n [1] encrypt(s::String)\\n   @ Main /tmp/tmp929upfl0.jl:13\\\
    n [2] top-level scope\\n   @ /tmp/tmp929upfl0.jl:17\\nin expression starting at\
    \ /tmp/tmp929upfl0.jl:17\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if s == \"\"\n        return \"\"\n    else\n        return shift(s[1])*rotate(shift(s[2:end]))\n\
    \    end\nend\n \n\"\"\"This function shift the given string according to the\
    \ rule.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpqbimzf7l.jl:19\nin expression starting at /tmp/tmpqbimzf7l.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [rotate(x) for x in s]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphtjtqhj3.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmphtjtqhj3.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmphtjtqhj3.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmphtjtqhj3.jl:18\ntest set:\
    \ Error During Test at /tmp/tmphtjtqhj3.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: rotate not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmphtjtqhj3.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmphtjtqhj3.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmphtjtqhj3.jl:18\ntest set:\
    \ Error During Test at /tmp/tmphtjtqhj3.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: rotate not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmphtjtqhj3.jl:12\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphtjtqhj3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #rotation formula: ord('char') - ord('a') + 2*2\n    #index of a letter\
    \ in the alphabet is its position in the\n    #unicode table, ord('a') = 97. \n\
    \    #here we add two to the index of the letter and shift\n    #down by two multiplied\
    \ to two places, which is 4\n    #also add back the ord('a') to shift back to\
    \ the left \n    return map(Char, ord.(s) .- ord('a') .+ 4 + ord('a')) |> join\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0ptadqwv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp0ptadqwv.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ptadqwv.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ptadqwv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0ptadqwv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp0ptadqwv.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ptadqwv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ptadqwv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0ptadqwv.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp0ptadqwv.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ptadqwv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ptadqwv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0ptadqwv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp0ptadqwv.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ptadqwv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for c in s\n        if c != \" \"\n            encrypted\
    \ = encrypted * c[1] * (c[1] * 2 - 'a' * 2) + \" \"\n        else\n          \
    \  encrypted = encrypted * \" \"\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2rlqjat6.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::Char, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmp2rlqjat6.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp2rlqjat6.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2rlqjat6.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    result=[]\n    for i in s\n        n=findfirst(alph,i)+2*2\n   \
    \     if n>length(alph)\n            n=n-length(alph)\n        end\n        push!(result,alph[n])\n\
    \    end\n    \n    return join(result)\nend\n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpds4y8gu2.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: alph not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpds4y8gu2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpds4y8gu2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpds4y8gu2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpds4y8gu2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: alph not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpds4y8gu2.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpds4y8gu2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpds4y8gu2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpds4y8gu2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: alph not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpds4y8gu2.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpds4y8gu2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpds4y8gu2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpds4y8gu2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: alph not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpds4y8gu2.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpds4y8gu2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for letter in s\n        char_code = Char.getindex(letter)\
    \ - 97\n        shift = (char_code + 2)\n        new_char_code = mod(shift, 26)\
    \ + 97\n        new_letter = Char(new_char_code)\n        new_s = string(new_s,\
    \ new_letter)\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp196vmlmh.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type DataType has no field getindex\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp196vmlmh.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp196vmlmh.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp196vmlmh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp196vmlmh.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type DataType has no field getindex\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp196vmlmh.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp196vmlmh.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp196vmlmh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp196vmlmh.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type DataType has no field getindex\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp196vmlmh.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp196vmlmh.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp196vmlmh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp196vmlmh.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type DataType has no field getindex\n  Stacktrace:\n\
    \   [1] "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp196vmlmh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    letters = ['a':'z']\n    en_s = \"\"\n    for i in s\n        if i ==\
    \ 'a'\n            en_s = en_s * 'c'\n        elseif i == 'b'\n            en_s\
    \ = en_s * 'd'\n        elseif i == 'c'\n            en_s = en_s * 'e'\n     \
    \   elseif i == 'd'\n            en_s = en_s * 'f'\n        elseif i == 'e'\n\
    \            en_s = en_s * 'g'\n        elseif i == 'f'\n            en_s = en_s\
    \ * 'h'\n        elseif i == 'g'\n            en_s = en_s * 'i'\n        elseif\
    \ i == 'h'\n            en_s = en_s * 'j'\n        elseif i == 'i'\n         \
    \   en_s = en_s * 'k'\n        elseif i == 'j'\n            en_s = en_s * 'l'\n\
    \        elseif i == 'k'\n            en_s = en_s * 'm'\n        elseif i == 'l'\n\
    \            en_s = en_s * 'n'\n        elseif i == 'm'\n            en_s = en_s\
    \ * 'o'\n        elseif i == 'n'\n            en_s = en_s * 'p'\n        elseif\
    \ i == 'o'\n            en_s = en_s * 'q'\n        elseif i == 'p'\n         \
    \   en_s = en_s * 'r'\n        elseif i == 'q'\n            en_s = en_s * 's'\n\
    \        elseif i == 'r'\n            en_s = en_s * 't'\n        elseif i == 's'\n\
    \            en_s = en_s * 'u'\n        elseif i == 't'\n            en_s = en_s\
    \ * 'v'\n        elseif i == 'u'\n            en_s = en_s * 'w'\n        elseif\
    \ i == 'v'\n            en_s = en_s * 'x'\n        elseif i ==\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptxdlnla9.jl:1\nin expression starting at /tmp/tmptxdlnla9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    i = 0\n    while\
    \ i < length(s)\n       \n        #return a string that is rotated by two\n  \
    \      index = findfirst(x -> x == s[i], alphabet)\n        s[i] = alphabet[mod(index\
    \ + 2, length(alphabet))]\n        \n        i += 1\n    end\n    \n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdr38_7oa.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 2-codeunit\
    \ String at index [0]\n  Stacktrace:\n    [1] checkbounds\n      @ ./strings/basic.jl:216\
    \ [inlined]\n    [2] codeunit\n      @ ./strings/string.jl:102 [inlined]\n   \
    \ [3] getindex(s::String, i::Int64)\n      @ Base ./strings/string.jl:223\n  \
    \  [4] (::var\"#1#2\"{String})(x::Char)\n      @ Main /tmp/tmpdr38_7oa.jl:18\n\
    \    [5] findnext(testf::var\"#1#2\"{String}, s::String, i::Int64)\n      @ Base\
    \ ./strings/search.jl:153\n    [6] findfirst\n      @ ./array.jl:2002 [inlined]\n\
    \    [7] encrypt(s::String)\n      @ Main /tmp/tmpdr38_7oa.jl:18\n    [8] macro\
    \ expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpdr38_7oa.jl:31 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpdr38_7oa.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpdr38_7oa.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 9-codeunit String at index [0]\n  Stacktrace:\n    [1] checkbounds\n      @\
    \ ./strings/basic.jl:216 [inlined]\n    [2] codeunit\n      @ ./strings/string.jl:102\
    \ [inlined]\n    [3] getindex(s::String, i::Int64)\n      @ Base ./strings/string.jl:223\n\
    \    [4] (::var\"#1#2\"{String})(x::Char)\n      @ Main /tmp/tmpdr38_7oa.jl:18\n\
    \    [5] findnext(testf::var\"#1#2\"{String}, s::String, i::Int64)\n      @ Base\
    \ ./strings/search.jl:153\n    [6] findfirst\n      @ ./array.jl:2002 [inlined]\n\
    \    [7] encrypt(s::String)\n      @ Main /tmp/tmpdr38_7oa.jl:18\n    [8] macro\
    \ expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpdr38_7oa.jl:32 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdr38_7oa.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Function to encrypt the given string by shifting the letters in\n\
    \    the string by two positions multiplied by two.\n    \"\"\"\n    abc = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    cipher = ''\n    for char in s\n        i = findfirst(abc, char)\n      \
    \  #the findfirst function returns an int value instead of index, hence the conversion\n\
    \        index = convert(Int64, i)\n        #the encryption works by shifting\
    \ the position of the character by 2 \n        #multiplied by 2, which is then\
    \ moduloed by the length of the alphabet\n        cipher = cipher * string(abc[(index+4)%26+1])\n\
    \    end\n    return cipher\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp1lmf2mxp.jl:15\nin expression\
    \ starting at /tmp/tmp1lmf2mxp.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    ##creating an empty string to dump the encrypted string \n    output =\
    \ \"\"\n    ##creating a range of 1:length(s) to iterate through the string\n\
    \    for letter in 1:length(s)\n        ### Since strings are immutable, so creating\
    \ a new string as per the requirement \n        a = string(s[letter])\n      \
    \  ## if else statement to check whether the letters are alphabet or not.\n  \
    \      if a == \"a\" || a == \"b\"\n            output *= \"c\"*\"d\"\n      \
    \  elseif a == \"c\" || a == \"d\"\n            output *= \"e\"*\"f\"\n      \
    \  elseif a == \"e\" || a == \"f\"\n            output *= \"g\"*\"h\"\n      \
    \  elseif a == \"g\" || a == \"h\"\n            output *= \"i\"*\"j\"\n      \
    \  elseif a == \"i\" || a == \"j\"\n            output *= \"k\"*\"l\"\n      \
    \  elseif a == \"k\" || a == \"l\"\n            output *= \"m\"*\"n\"\n      \
    \  elseif a == \"m\" || a == \"n\"\n            output *= \"o\"*\"p\"\n      \
    \  elseif a == \"o\" || a == \"p\"\n            output *= \"q\"*\"r\"\n      \
    \  elseif a == \"q\" || a == \"r\"\n            output *= \"s\"*\"t\"\n      \
    \  elseif a == \"s\" || a == \"t\"\n            output *= \"u\"*\"v\"\n      \
    \  elseif a == \"u\" || a == \"v\"\n            output *= \"w\"*\"x\"\n      \
    \  elseif a == \"w\" || a == \"x\"\n            output *= \"y\"*\"z\"\n      \
    \  elseif a == \"y\" || a == \"z\"\n            output *= \"a\"*\"b\"\n      \
    \  else\n            continue\n        end\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxdehvuuy.jl:56\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ijkl\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdehvuuy.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdehvuuy.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpxdehvuuy.jl:57\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cduvefghijijklmnmn\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdehvuuy.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdehvuuy.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpxdehvuuy.jl:58\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ijgh\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdehvuuy.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdehvuuy.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpxdehvuuy.jl:59\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ghuv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxdehvuuy.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxdehvuuy.jl:55\ntest set: Test\
    \ Failed at /tmp/tmpxdehvuuy.jl:60\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"ghcdghyzghcdyzghghcdghyzij\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdehvuuy.jl:53\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n = 2*2\n    String[(shift(x, n)) for x in s]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoulnztcq.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpoulnztcq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoulnztcq.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoulnztcq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpoulnztcq.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpoulnztcq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoulnztcq.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoulnztcq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpoulnztcq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpoulnztcq.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoulnztcq.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoulnztcq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpoulnztcq.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpoulnztcq.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoulnztcq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    offset = 2\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    encrypted =\
    \ String[]\n    for i in 1:length(s)\n        encrypted = append!(encrypted,s[i])\n\
    \        index = findfirst(alpha,s[i])\n        offset_index = index + offset\n\
    \        encrypted[i] = alpha[offset_index]\n    end\n    return join(encrypted,\"\
    \")\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpo84hi34z.jl:13\nin expression\
    \ starting at /tmp/tmpo84hi34z.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = string(\"abcdefghijklmnopqrstuvwxyz\")\n    cipher_alphabet\
    \ = string(\"cdefghijklmnopqrstuvwxyzab\")\n    output = \"\"\n    for i in s\n\
    \        loc = search(alphabet, i)\n        output = output * cipher_alphabet[loc]\n\
    \    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi6g_i_lh.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpi6g_i_lh.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi6g_i_lh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi6g_i_lh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpi6g_i_lh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpi6g_i_lh.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi6g_i_lh.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi6g_i_lh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpi6g_i_lh.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpi6g_i_lh.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi6g_i_lh.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi6g_i_lh.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpi6g_i_lh.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpi6g_i_lh.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi6g_i_lh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Encrypt a string by shifting each letter to the left by 2*2 times\n\
    \    if isvalid(s)\n        s2 = \"\"\n        for c in s\n            i = findfirst(letters,\
    \ c)\n            s2 = s2 * letters[i+4]\n        end\n        return s2\n   \
    \ else\n        throw(ArgumentError(\"Argument must be string\"))\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9efh382q.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: letters not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp9efh382q.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9efh382q.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9efh382q.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9efh382q.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: letters not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp9efh382q.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9efh382q.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9efh382q.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9efh382q.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: letters not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp9efh382q.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9efh382q.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9efh382q.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp9efh382q.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: letters not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp9efh382q.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9efh382q.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #Create encrypted string\n    encstr=\"\"\n    #loop through each character\
    \ in the string\n    for i in 1:length(s)\n        #If character is space, add\
    \ space to encrypted string\n        if s[i]==' '\n            push!(encstr,'\
    \ ')\n        #If character is uppercase, change character to lowercase\n    \
    \    elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            s[i]=lowercase(s[i])\n\
    \        #Use letters as indices to translate to encrypted letters\n        else\n\
    \            encstr=string(encstr,letters[letters .== s[i]][1 + 2*2])\n      \
    \  end\n    end\n    #Return encrypted string\n    return encstr\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpo6kxqsmb.jl:20\nin expression\
    \ starting at /tmp/tmpo6kxqsmb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return s |> String.shift(2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnd4g7q_0.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type DataType has no field shift\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpnd4g7q_0.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnd4g7q_0.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnd4g7q_0.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnd4g7q_0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type DataType has no field shift\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpnd4g7q_0.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnd4g7q_0.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnd4g7q_0.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnd4g7q_0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type DataType has no field shift\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpnd4g7q_0.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnd4g7q_0.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnd4g7q_0.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnd4g7q_0.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type DataType has no field shift\n  Stacktrace:\n\
    \   [1] getproperty\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnd4g7q_0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    #Create a variable to store the output string\n    out_string =\
    \ \"\"\n    \n    #Loop over the length of the input string\n    for i in 1:length(s)\n\
    \        #Check if the character of the string is a letter.\n        if s[i] in\
    \ ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \            #If the letter is a capital letter, add the encrypted value for the\
    \ character\n            #to the output string\n            if s[i] in ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n\
    \                out_string = out_string * string(Char(Int(s[i])+2))\n       \
    \     else\n                out_string = out_string * string(Char(Int(s[i])+2))\n\
    \            end\n        else\n            #If the character is not a letter,\
    \ add the character to the output string\n            out_string = out_string\
    \ * string(s[i])\n        end\n    end\n    #Return the output string\n    return\
    \ out_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpifkk35vi.jl:40\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpifkk35vi.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpifkk35vi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpifkk35vi.jl:41\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpifkk35vi.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpifkk35vi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpifkk35vi.jl:42\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpifkk35vi.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpifkk35vi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpifkk35vi.jl:43\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpifkk35vi.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpifkk35vi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpifkk35vi.jl:44\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpifkk35vi.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = collect(\"abcdefghijklmnopqrstuvwxyz\")\n    alphabetRotated\
    \ = collect(\"cdefghijklmnopqrstuvwxyzab\")\n    encrypted = collect(\"\")\n \
    \   for i in 1:length(s)\n        index = findfirst(alphabet, s[i])\n        append!(encrypted,\
    \ alphabetRotated[index])\n    end\n    return join(encrypted)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcrb8e0xy.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpcrb8e0xy.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcrb8e0xy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcrb8e0xy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcrb8e0xy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpcrb8e0xy.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcrb8e0xy.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcrb8e0xy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcrb8e0xy.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Vector{Char},\
    \ ::Char)\n  Closest candidates are:\n    findfirst"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcrb8e0xy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  if !ismatch(r\"^[a-zA-Z]+$\", s)\n    throw(DomainError(\"Input string must\
    \ only contain letters\"))\n  end\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxm60lmza.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxm60lmza.jl:1\n\
    in expression starting at /tmp/tmpxm60lmza.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_string = \"\"\n    for char in s\n        if char in 'abcdefghijklmnopqrstuvwxyz'\n\
    \            if char in 'zyxwvutsrqponmlkjihgfedcba'\n                new_string\
    \ = new_string * char\n            else \n                new_string = new_string\
    \ * string(next(char),2)\n            end\n        else\n            new_string\
    \ = new_string * char\n        end\n    end\n    return new_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpqk85q2a5.jl:14\nin expression\
    \ starting at /tmp/tmpqk85q2a5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = ('a':'z')\n    b = []\n    for i in 1:length(s)\n        c = a[findfirst(a,s[i])]\n\
    \        c = a[findnext(a,c,2)]\n        c = a[findnext(a,c,2)]\n        push!(b,c)\n\
    \    end\n    return join(b)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplruixprf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::StepRange{Char, Int64}, ::Char)\n  Closest candidates are:\n   \
    \ findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmplruixprf.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplruixprf.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplruixprf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmplruixprf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::StepRange{Char, Int64}, ::Char)\n  Closest candidates are:\n   \
    \ findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmplruixprf.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplruixprf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplruixprf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmplruixprf.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::StepRange{Char,\
    \ Int64}, ::Char)\n  Closest"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplruixprf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    str = \"\"\n    new_str = []\n    for i in s\n        push!(new_str, next_char(i))\n\
    \    end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6fiw6ncy.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: next_char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6fiw6ncy.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6fiw6ncy.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6fiw6ncy.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6fiw6ncy.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: next_char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp6fiw6ncy.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6fiw6ncy.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6fiw6ncy.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6fiw6ncy.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: next_char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp6fiw6ncy.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6fiw6ncy.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6fiw6ncy.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6fiw6ncy.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: next_char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp6fiw6ncy.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6fiw6ncy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [(lowercase(x)) for x in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnlpmgql4.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnlpmgql4.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnlpmgql4.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnlpmgql4.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnlpmgql4.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnlpmgql4.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnlpmgql4.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlpmgql4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a=collect(s)\n    i=2*2\n    encrypt=String[]\n    for i in a\n      \
    \  push!(encrypt,i+i)\n    end\n    return join(encrypt)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqub_r7gd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ +(::Char, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(::T, !Matched::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    +(!Matched::Integer, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqub_r7gd.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqub_r7gd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqub_r7gd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqub_r7gd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ +(::Char, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(::T, !Matched::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    +(!Matched::Integer, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqub_r7gd.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqub_r7gd.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqub_r7gd.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqub_r7gd.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching +"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqub_r7gd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create a dictionary with the shifted alphabet\n    alphabet = Dict('a'=>'c',\
    \ 'b'=>'d', 'c'=>'e', 'd'=>'f', 'e'=>'g', 'f'=>'h', 'g'=>'i', 'h'=>'j', 'i'=>'k',\
    \ 'j'=>'l', 'k'=>'m', 'l'=>'n', 'm'=>'o', 'n'=>'p', 'o'=>'q', 'p'=>'r', 'q'=>'s',\
    \ 'r'=>'t', 's'=>'u', 't'=>'v', 'u'=>'w', 'v'=>'x', 'w'=>'y', 'x'=>'z', 'y'=>'a',\
    \ 'z'=>'b')\n    encrypted_string = \"\"\n    # Iterate through the string, looking\
    \ up each letter in the dictionary and appending the encrypted letter to the new\
    \ string\n    for letter in s\n        encrypted_string = append!(encrypted_string,\
    \ get(alphabet, letter, letter))\n    end\n    return encrypted_string\nend\n\
    # Test cases\nprintln(encrypt(\"hi\"))\nprintln(encrypt(\"asdfghjkl\"))\nprintln(encrypt(\"\
    gf\"))\nprintln(encrypt(\"et\"))\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching append!(::String, ::Char)\n\
    Closest candidates are:\n  append!(!Matched::BitVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n\
    \  append!(!Matched::AbstractVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n\
    \  append!(!Matched::AbstractVector, ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n\
    Stacktrace:\n [1] encrypt(s::String)\n   @ Main /tmp/tmpizzllj29.jl:17\n [2] top-level\
    \ scope\n   @ /tmp/tmpizzllj29.jl:22\nin expression starting at /tmp/tmpizzllj29.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = String[]\n    for c in s\n        push!(new_s,chr(mod(ord(c)+4,256)))\n\
    \    end\n    return join(new_s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_zlajbf_.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_zlajbf_.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_zlajbf_.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_zlajbf_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_zlajbf_.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_zlajbf_.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_zlajbf_.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_zlajbf_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_zlajbf_.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp_zlajbf_.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_zlajbf_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_zlajbf_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_zlajbf_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp_zlajbf_.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_zlajbf_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return collect(map(x -> chr(ord(x) + 2*2), s))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprj_gjcp6.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmprj_gjcp6.jl:12\n\
    \   [2] map(f::var\"#1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n \
    \  [3] encrypt(s::String)\n     @ Main /tmp/tmprj_gjcp6.jl:12\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprj_gjcp6.jl:19 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprj_gjcp6.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprj_gjcp6.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmprj_gjcp6.jl:12\n\
    \   [2] map(f::var\"#1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n \
    \  [3] encrypt(s::String)\n     @ Main /tmp/tmprj_gjcp6.jl:12\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprj_gjcp6.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprj_gjcp6.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprj_gjcp6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main /tmp/tmprj_gjcp6.jl:12\n   [2] map(f::var\"\
    #1#2\", s::String)\n     @ Base ./strings/basic.jl:610\n   [3] encrypt(s::String)\n\
    \     @ Main /tmp/tmprj_gjcp6.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprj_gjcp6.jl:21 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprj_gjcp6.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for i in 1:length(s)\n        temp = s[i]\n    \
    \    if temp == 'e'\n            encrypted = string(encrypted, 'g')\n        elseif\
    \ temp == 'r'\n            encrypted = string(encrypted, 't')\n        elseif\
    \ temp == 't'\n            encrypted = string(encrypted, 'v')\n        elseif\
    \ temp == 'y'\n            encrypted = string(encrypted, 'a')\n        elseif\
    \ temp == 'u'\n            encrypted = string(encrypted, 'b')\n        elseif\
    \ temp == 'i'\n            encrypted = string(encrypted, 'c')\n        elseif\
    \ temp == 'o'\n            encrypted = string(encrypted, 'd')\n        elseif\
    \ temp == 'p'\n            encrypted = string(encrypted, 'f')\n        elseif\
    \ temp == 'a'\n            encrypted = string(encrypted, 'h')\n        elseif\
    \ temp == 's'\n            encrypted = string(encrypted, 'j')\n        elseif\
    \ temp == 'd'\n            encrypted = string(encrypted, 'k')\n        elseif\
    \ temp == 'f'\n            encrypted = string(encrypted, 'l')\n        elseif\
    \ temp == 'g'\n            encrypted = string(encrypted, 'n')\n        elseif\
    \ temp == 'h'\n            encrypted = string(encrypted, 'o')\n        elseif\
    \ temp == 'j'\n            encrypted = string(encrypted, 'p')\n        elseif\
    \ temp == 'k'\n            encrypted = string(encrypted, 'r')\n        elseif\
    \ temp == 'l'\n            encrypted = string(encrypted, 's')\n        elseif\
    \ temp == 'z'\n            encrypted = string(encrypted, 'u')\n        elseif\
    \ temp == 'x'\n            encrypted = string(encrypted, 'w')\n        elseif\
    \ temp == 'c'\n            encrypted = string(encrypted, 'y')\n        elseif\
    \ temp == 'v'\n            encrypted = string(encrypted, 'z')\n        elseif\
    \ temp == 'b'\n            encrypted = string(encrypted, 'x')\n        elseif\
    \ temp == 'n'\n            encrypted = string(encrypted, 'q')\n        elseif\
    \ temp == 'm'\n            encrypted = string(encrypted, 'i')\n        elseif\
    \ temp == 'w'\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1dwoj_h.jl:1\nin expression starting at /tmp/tmpk1dwoj_h.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = String[]\n    for c in s\n        a = (c - \"a\"[1]) * 2 + \"a\"\
    [1]\n        push!(s2, Char(a))\n    end\n    join(s2)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjgrrmjte.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Char)\n     @ Base\
    \ ./array.jl:994\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpjgrrmjte.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjgrrmjte.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjgrrmjte.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjgrrmjte.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Char)\n     @ Base\
    \ ./array.jl:994\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpjgrrmjte.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjgrrmjte.jl:25 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjgrrmjte.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_str = \"\"\n    for i in 1:length(s)\n        let c = s[i]\n\
    \        if !('a' <= c <= 'z')\n            encrypted_str *= c\n        else\n\
    \            c = 'a' + (((c - 'a') + 2) % 26)\n            encrypted_str *= c\n\
    \        end\n    end\n    return encrypted_str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdgqp96qo.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdgqp96qo.jl:1\n\
    in expression starting at /tmp/tmpdgqp96qo.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    letters = [x for x in s]\n    for x in letters\n\
    \        if x in \"abcdefghijklmnopqrstuvwxyz\"\n            encrypted = encrypted\
    \ * x\n        end\n    end\n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprygpfbqg.jl:26\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprygpfbqg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprygpfbqg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprygpfbqg.jl:27\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprygpfbqg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprygpfbqg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprygpfbqg.jl:28\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprygpfbqg.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprygpfbqg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprygpfbqg.jl:29\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprygpfbqg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprygpfbqg.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprygpfbqg.jl:30\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprygpfbqg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    index(x) = Int(x) - 97\n    encrypt_index(x) = (index(x) + 2*2) % 26 +\
    \ 97\n    encrypt_string(s) = Char(encrypt_index(s))\n    encrypt_string.(s)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4j8dcibh.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#index#1\")(x::String)\n      @ Main\
    \ /tmp/tmp4j8dcibh.jl:12\n    [2] (::var\"#encrypt_index#2\"{var\"#index#1\"})(x::String)\n\
    \      @ Main /tmp/tmp4j8dcibh.jl:13\n    [3] (::var\"#encrypt_string#3\"{var\"\
    #encrypt_index#2\"{var\"#index#1\"}})(s::String)\n      @ Main /tmp/tmp4j8dcibh.jl:14\n\
    \    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n   \
    \ [5] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [7] copy\n      @ ./broadcast.jl:875\
    \ [inlined]\n    [8] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [9]\
    \ encrypt(s::String)\n      @ Main /tmp/tmp4j8dcibh.jl:15\n   [10] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp4j8dcibh.jl:22 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp4j8dcibh.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp4j8dcibh.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4j8dcibh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for char in s\n        if char == 'a'\n        \
    \    push!(encrypted, 'c')\n        elseif char == 'b'\n            push!(encrypted,\
    \ 'd')\n        elseif char == 'c'\n            push!(encrypted, 'e')\n      \
    \  elseif char == 'd'\n            push!(encrypted, 'f')\n        elseif char\
    \ == 'e'\n            push!(encrypted, 'g')\n        elseif char == 'f'\n    \
    \        push!(encrypted, 'h')\n        elseif char == 'g'\n            push!(encrypted,\
    \ 'i')\n        elseif char == 'h'\n            push!(encrypted, 'j')\n      \
    \  elseif char == 'i'\n            push!(encrypted, 'k')\n        elseif char\
    \ == 'j'\n            push!(encrypted, 'l')\n        elseif char == 'k'\n    \
    \        push!(encrypted, 'm')\n        elseif char == 'l'\n            push!(encrypted,\
    \ 'n')\n        elseif char == 'm'\n            push!(encrypted, 'o')\n      \
    \  elseif char == 'n'\n            push!(encrypted, 'p')\n        elseif char\
    \ == 'o'\n            push!(encrypted, 'q')\n        elseif char == 'p'\n    \
    \        push!(encrypted, 'r')\n        elseif char == 'q'\n            push!(encrypted,\
    \ 's')\n        elseif char == 'r'\n            push!(encrypted, 't')\n      \
    \  elseif char == 's'\n            push!(encrypted, 'u')\n        elseif char\
    \ == 't'\n            push!(encrypted, 'v')\n        elseif char == 'u'\n    \
    \        push!(encrypted, 'w')\n        elseif char == 'v'\n            push!(encrypted,\
    \ 'x')\n        elseif char == 'w'\n            push!(encrypted, 'y')\n      \
    \  elseif char == 'x'\n            push!(encrypted, 'z')\n        elseif char\
    \ == 'y'\n            push!(encrypted, 'a')\n        elseif char == 'z'\n    \
    \        push!(encrypted, 'b')\n        else\n            push!(\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbnszx7wu.jl:70\nin expression starting at\
    \ /tmp/tmpbnszx7wu.jl:70\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = \"\"\n    for i in s\n        #for lowercase letters\n        if\
    \ 'a' <= i <= 'z'\n            if i + 2 <= 'z'\n                s2 = s2 * i\n\
    \            else\n                s2 = s2 * ('a'+((i-'a')-1) )\n            end\n\
    \        #for uppercase letters\n        elseif 'A' <= i <= 'Z'\n            if\
    \ i + 2 <= 'Z'\n                s2 = s2 * i\n            else\n              \
    \  s2 = s2 * ('A'+((i-'A')-1) )\n            end\n        else\n            s2\
    \ = s2 * i\n        end\n    end\n    return s2\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd6zm4_g7.jl:39\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6zm4_g7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6zm4_g7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpd6zm4_g7.jl:40\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6zm4_g7.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6zm4_g7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpd6zm4_g7.jl:41\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6zm4_g7.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6zm4_g7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpd6zm4_g7.jl:42\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6zm4_g7.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6zm4_g7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpd6zm4_g7.jl:43\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd6zm4_g7.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = string(s)\n    for i in collect(eachindex(s))\n        if (s[i]\
    \ == 'z')\n            new_s[i] = 'b'\n        elseif (s[i] == 'y')\n        \
    \    new_s[i] = 'a'\n        else\n            new_s[i] = s[i] + 2\n        end\n\
    \    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc_8x6t8_.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmpc_8x6t8_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_8x6t8_.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_8x6t8_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpc_8x6t8_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmpc_8x6t8_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_8x6t8_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_8x6t8_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpc_8x6t8_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpc_8x6t8_.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc_8x6t8_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc_8x6t8_.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpc_8x6t8_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::Stri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc_8x6t8_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return [shift(char) for char in s]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_d5dnl68.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(char::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp_d5dnl68.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_d5dnl68.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_d5dnl68.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp_d5dnl68.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(char::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp_d5dnl68.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_d5dnl68.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_d5dnl68.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp_d5dnl68.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(char::Char)\n     @ Main ./none:0\n   [2] iterate\n  \
    \   @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp_d5dnl68.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_d5dnl68.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\n        'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'\n\
    \    ]\n    encrypted = \"\"\n    for ch in s\n        if ch == 'a' || ch == 'A'\n\
    \            encrypted = encrypted * \"c\"\n        elseif ch == 'b' || ch ==\
    \ 'B'\n            encrypted = encrypted * \"d\"\n        elseif ch == 'c' ||\
    \ ch == 'C'\n            encrypted = encrypted * \"e\"\n        elseif ch == 'd'\
    \ || ch == 'D'\n            encrypted = encrypted * \"f\"\n        elseif ch ==\
    \ 'e' || ch == 'E'\n            encrypted = encrypted * \"g\"\n        elseif\
    \ ch == 'f' || ch == 'F'\n            encrypted = encrypted * \"h\"\n        elseif\
    \ ch == 'g' || ch == 'G'\n            encrypted = encrypted * \"i\"\n        elseif\
    \ ch == 'h' || ch == 'H'\n            encrypted = encrypted * \"j\"\n        elseif\
    \ ch == 'i' || ch == 'I'\n            encrypted = encrypted * \"k\"\n        elseif\
    \ ch == 'j' || ch == 'J'\n            encrypted = encrypted * \"l\"\n        elseif\
    \ ch == 'k' || ch == 'K'\n            encrypted = encrypted * \"m\"\n        elseif\
    \ ch == 'l' || ch == 'L'\n            encrypted = encrypted * \"n\"\n        elseif\
    \ ch == 'm' || ch == 'M'\n            encrypted = encrypted * \"o\"\n        elseif\
    \ ch == 'n' || ch == 'N'\n            encrypted = encrypted * \"p\"\n        elseif\
    \ ch == 'o' || ch == 'O'\n            encrypted = encrypted * \"q\"\n        elseif\
    \ ch == 'p' || ch == 'P'\n            encrypted = encrypted * \"r\"\n        elseif\
    \ ch == 'q' || ch == 'Q'\n            encrypted = encrypted * \"s\"\n        elseif\
    \ ch == 'r' || ch == 'R'\n            encrypted = encrypted * \"t\"\n        elseif\
    \ ch == '\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpdwels1ll.jl:59\nin expression starting at /tmp/tmpdwels1ll.jl:59\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt = \"\"\n    for i in s\n        if i == \" \"\n            push!(encrypt,\
    \ i)\n        else\n            push!(encrypt, i)\n            rotate!(encrypt,\
    \ 2)\n        end\n    end\n    return join(encrypt)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5icf35ok.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5icf35ok.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5icf35ok.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5icf35ok.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5icf35ok.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5icf35ok.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5icf35ok.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5icf35ok.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5icf35o"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5icf35ok.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"Encrypt input string by shifting each letter two places\"\n    return\
    \ join([Base.shift(s[i], 2) for i in 1:length(s)])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp09vj71lb.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\"{String})(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"{String}})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmp09vj71lb.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp09vj71lb.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp09vj71lb.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp09vj71lb.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\"{String})(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"{String}})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmp09vj71lb.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp09vj71lb.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp09vj71lb.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp09vj71lb.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\"{String})(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"{String}})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmp09vj71lb.jl:13\n   [5] macro expansion\n     @ /shared/cento"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp09vj71lb.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # initialize a counter variable\n    counter = 0\n    # initialize an\
    \ empty string\n    new_string = \"\"\n    # for loop through string given\n \
    \   for i = 1:length(s)\n        # add 2 to the counter\n        counter += 2\n\
    \        # if the counter is greater than the length of the string\n        if\
    \ counter > length(s)\n            # subtract the length of the string from the\
    \ counter\n            counter -= length(s)\n        end\n        # add the character\
    \ of the string at the counter to the new string\n        push!(new_string,s[counter])\n\
    \    end\n    # return the new string\n    return new_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplad0kxm_.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmplad0kxm_.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplad0kxm_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplad0kxm_.jl:35\ntest set:\
    \ Error During Test at /tmp/tmplad0kxm_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmplad0kxm_.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplad0kxm_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplad0kxm_.jl:35\ntest set:\
    \ Error During Test at /tmp/tmplad0kxm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplad0kxm_.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  s=shift(s,-1,-1)\n  s=shift(s,-1,-1)\n  return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4h4y23w3.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4h4y23w3.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4h4y23w3.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4h4y23w3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp4h4y23w3.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4h4y23w3.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4h4y23w3.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4h4y23w3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp4h4y23w3.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp4h4y23w3.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4h4y23w3.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4h4y23w3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp4h4y23w3.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp4h4y23w3.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4h4y23w3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"The function encrypt takes a string as an argument and \n    returns\
    \ a string encrypted with the alphabet being rotated\"\"\"\n    \n    s = String(s)\n\
    \    my_letters = split(s, \"\")\n    new_letters = []\n    for letter in my_letters\n\
    \        if (letter == \"a\") || (letter == \"A\")\n            push!(new_letters,\
    \ \"C\")\n        elseif (letter == \"b\") || (letter == \"B\")\n            push!(new_letters,\
    \ \"D\")\n        elseif (letter == \"c\") || (letter == \"C\")\n            push!(new_letters,\
    \ \"E\")\n        elseif (letter == \"d\") || (letter == \"D\")\n            push!(new_letters,\
    \ \"F\")\n        elseif (letter == \"e\") || (letter == \"E\")\n            push!(new_letters,\
    \ \"G\")\n        elseif (letter == \"f\") || (letter == \"F\")\n            push!(new_letters,\
    \ \"H\")\n        elseif (letter == \"g\") || (letter == \"G\")\n            push!(new_letters,\
    \ \"I\")\n        elseif (letter == \"h\") || (letter == \"H\")\n            push!(new_letters,\
    \ \"J\")\n        elseif (letter == \"i\") || (letter == \"I\")\n            push!(new_letters,\
    \ \"K\")\n        elseif (letter == \"j\") || (letter == \"J\")\n            push!(new_letters,\
    \ \"L\")\n        elseif (letter == \"k\") || (letter == \"K\")\n            push!(new_letters,\
    \ \"M\")\n        elseif (letter == \"l\") || (letter == \"L\")\n            push!(new_letters,\
    \ \"N\")\n        elseif (letter == \"m\") || (letter == \"M\")\n            push!(new_letters,\
    \ \"O\")\n        elseif (letter == \"n\") || (letter == \"N\")\n            push!(new_letters,\
    \ \"P\")\n        elseif (letter == \"o\") || (letter == \"O\")\n            push!(new_letters,\
    \ \"Q\")\n        elseif (letter == \"p\") || (letter == \"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwu3yx46t.jl:55\nin expression starting at\
    \ /tmp/tmpwu3yx46t.jl:55\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #The alphabet\n    alphabet = (\"abcdefghijklmnopqrstuvwxyz\")\n    newstring\
    \ = \"\"\n    #loops through the string given and rotates the alphabet by two\
    \ and appends it to the new string\n    for letter in s\n        if letter in\
    \ alphabet \n            newalphabet = shift(alphabet, -1)\n            newstring\
    \ = newstring * newalphabet[search(alphabet, letter)]\n        else\n        \
    \    newstring = newstring * letter\n        end\n    end\n    return newstring\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj712x7qb.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpj712x7qb.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj712x7qb.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj712x7qb.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpj712x7qb.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpj712x7qb.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj712x7qb.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj712x7qb.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpj712x7qb.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpj712x7qb.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj712x7qb.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj712x7qb.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpj712x7qb.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpj712x7qb.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj712x7qb.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = \"\"\n    for i in 1:length(s)\n        c = string(c,lowercase(s[i])[div(lowercase(s[i])[1]\
    \ + 2, 26)])\n    end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsay0znlj.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ div(::Char, ::Int64, ::RoundingMode{:ToZero})\n  Closest candidates are:\n \
    \   div(!Matched::P, ::Real, ::RoundingMode) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:85\n\
    \    div(!Matched::Rational, ::Integer, ::RoundingMode) at /shared/centos7/julia/1.7.3/share/julia/base/rational.jl:429\n\
    \    div(!Matched::T, ::T, ::RoundingMode{:ToZero}) where T<:Union{Int128, Int16,\
    \ Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:257\n\
    \    ...\n  Stacktrace:\n   [1] div(a::Char, b::Int64)\n     @ Base ./div.jl:37\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpsay0znlj.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsay0znlj.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsay0znlj.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpsay0znlj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ div(::Char, ::Int64, ::RoundingMode{:ToZero})\n  Closest candidates are:\n \
    \   div(!Matched::P, ::Real, ::RoundingMode) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:85\n\
    \    div(!Matched::Rational, ::Integer, ::RoundingMode) at /shared/centos7/julia/1.7.3/share/julia/base/rational.jl:429\n\
    \    div(!Matched::T, ::T, ::RoundingMode{:ToZero}) where T<:Union{Int128, Int16,\
    \ Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:257\n\
    \    ...\n  Stacktrace:\n   [1] div(a::Char, b::Int64)\n     @ Base ./div.jl:37\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmpsay0znlj.jl:14\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsay0znlj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    l = length(s)\n    result = String(l)\n    for i = 1:l\n        if s[i]\
    \ == 'a'\n            result[i] = 'c'\n        elseif s[i] == 'b'\n          \
    \  result[i] = 'd'\n        elseif s[i] == 'c'\n            result[i] = 'e'\n\
    \        elseif s[i] == 'd'\n            result[i] = 'f'\n        elseif s[i]\
    \ == 'e'\n            result[i] = 'g'\n        elseif s[i] == 'f'\n          \
    \  result[i] = 'h'\n        elseif s[i] == 'g'\n            result[i] = 'i'\n\
    \        elseif s[i] == 'h'\n            result[i] = 'j'\n        elseif s[i]\
    \ == 'i'\n            result[i] = 'k'\n        elseif s[i] == 'j'\n          \
    \  result[i] = 'l'\n        elseif s[i] == 'k'\n            result[i] = 'm'\n\
    \        elseif s[i] == 'l'\n            result[i] = 'n'\n        elseif s[i]\
    \ == 'm'\n            result[i] = 'o'\n        elseif s[i] == 'n'\n          \
    \  result[i] = 'p'\n        elseif s[i] == 'o'\n            result[i] = 'q'\n\
    \        elseif s[i] == 'p'\n            result[i] = 'r'\n        elseif s[i]\
    \ == 'q'\n            result[i] = 's'\n        elseif s[i] == 'r'\n          \
    \  result[i] = 't'\n        elseif s[i] == 's'\n            result[i] = 'u'\n\
    \        elseif s[i] == 't'\n            result[i] = 'v'\n        elseif s[i]\
    \ == 'u'\n            result[i] = 'w'\n        elseif s[i] == 'v'\n          \
    \  result[i] = 'x'\n        elseif s\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyrek990j.jl:1\nin expression starting at /tmp/tmpyrek990j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n       \n    encrypted = \"\"\n    \n    for c in s\n        encrypted = encrypted\
    \ * shift(c, 2*2)\n    end\n    \n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4b3gtdzj.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4b3gtdzj.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4b3gtdzj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4b3gtdzj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4b3gtdzj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp4b3gtdzj.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4b3gtdzj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4b3gtdzj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4b3gtdzj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp4b3gtdzj.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4b3gtdzj.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4b3gtdzj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4b3gtdzj.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp4b3gtdzj.jl:16\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4b3gtdzj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    out = \"\"\n    for letter in s\n        if letter != \" \"\n        \
    \    if letter <= \"w\"\n                out = out * string(Char(Int(letter) +\
    \ 2))\n            elseif letter <= \"z\"\n                out = out * string(Char(Int(letter)\
    \ - 24))\n            elseif letter <= \"W\"\n                out = out * string(Char(Int(letter)\
    \ + 2))\n            elseif letter <= \"Z\"\n                out = out * string(Char(Int(letter)\
    \ - 24))\n            end\n        else\n            out = out * \" \"\n     \
    \   end\n    end\n    return out\nend\nencrypt(\"hi\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching isless(::Char, ::String)\n\
    Closest candidates are:\n  isless(!Matched::AbstractString, ::AbstractString)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:344\n  isless(::Char,\
    \ !Matched::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \  isless(::AbstractChar, !Matched::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:221\n\
    \  ...\nStacktrace:\n [1] <(x::Char, y::String)\n   @ Base ./operators.jl:352\n\
    \ [2] <=(x::Char, y::String)\n   @ Base ./operators.jl:401\n [3] encrypt(s::String)\n\
    \   @ Main /tmp/tmp1n1be1bu.jl:15\n [4] top-level scope\n   @ /tmp/tmp1n1be1bu.jl:30\n\
    in expression starting at /tmp/tmp1n1be1bu.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Split s into array of characters\n    charArray = split(s, \"\")\n \
    \   # Empty String to hold encrypted characters\n    encryptedString = \"\"\n\
    \    # Loop over charArray and encrypt each character\n    for i in charArray\n\
    \        # Encrypts a character and appends it to the encryptedString\n      \
    \  push!(encryptedString, shiftDown(i))\n    end\n    # Returns the encryptedString\n\
    \    return encryptedString\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf4v3hmb0.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shiftDown not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpf4v3hmb0.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf4v3hmb0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf4v3hmb0.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpf4v3hmb0.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shiftDown not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpf4v3hmb0.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf4v3hmb0.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf4v3hmb0.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpf4v3hmb0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shiftDown not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpf4v3hmb0.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf4v3hmb0.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf4v3hmb0.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpf4v3hmb0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shiftDown not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpf4v3hmb0.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4v3hmb0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    rotation = 2\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    encryt_alphabet\
    \ = alphabet[rotation:end] * rotation + alphabet[1:rotation]\n    encrypted_string\
    \ = \"\"\n    for character in s\n        push!(encrypted_string, encryt_alphabet[findall(character,\
    \ alphabet)[1]])\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpnfgcvwpz.jl:13\nin expression\
    \ starting at /tmp/tmpnfgcvwpz.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    @assert setdiff(s, letters) == Set{Char}()\n    s_l = split(s, \"\")\n\
    \    encrypted = []\n    for i in s_l\n        if i == 'y'\n            append!(encrypted,\
    \ 'a')\n        elseif i == 'z'\n            append!(encrypted, 'b')\n       \
    \ elseif i == 'x'\n            append!(encrypted, 'y')\n        else\n       \
    \     push!(encrypted, chr(Int(i) + 2))\n        end\n    end\n    return join(encrypted,\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1hnarwvb.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: letters not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1hnarwvb.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1hnarwvb.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1hnarwvb.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp1hnarwvb.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: letters not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1hnarwvb.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1hnarwvb.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1hnarwvb.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp1hnarwvb.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: letters not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp1hnarwvb.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1hnarwvb.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1hnarwvb.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp1hnarwvb.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: letters not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp1hnarwvb.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1hnarwvb.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    newS = String[]\n    for i in s\n        if i == 'z'\n            push!(newS,\
    \ 'b')\n        elseif i == 'y'\n            push!(newS, 'a')\n        else\n\
    \            push!(newS, char(int(i) + 2))\n        end\n    end\n    return join(newS)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjjn_l81y.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjjn_l81y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjjn_l81y.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjjn_l81y.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpjjn_l81y.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpjjn_l81y.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjjn_l81y.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjjn_l81y.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpjjn_l81y.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjjn_l81y.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjjn_l81y.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjjn_l81y.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpjjn_l81y.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpjjn_l81y.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjn_l81y.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a=String[]\n    for i in s\n        if i==\"z\"\n            push!(a,\"\
    b\")\n        elseif i==\"y\"\n            push!(a,\"a\")\n        else\n    \
    \        push!(a,string(chr(ord(i)+2)))\n        end\n    end\n    join(a)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphznhviwu.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmphznhviwu.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphznhviwu.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphznhviwu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphznhviwu.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmphznhviwu.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphznhviwu.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphznhviwu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphznhviwu.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmphznhviwu.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphznhviwu.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphznhviwu.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphznhviwu.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmphznhviwu.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphznhviwu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #Create a string of the alphabet\n    #create a dictionary for the alphabet\n\
    \    #Create a new string that is two spaces down from the argument\n    #If it\
    \ reaches the end, continue from the beginning\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqq0lsx6w.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqq0lsx6w.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqq0lsx6w.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqq0lsx6w.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpqq0lsx6w.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqq0lsx6w.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqq0lsx6w.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqq0lsx6w.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    l=[]\n    for i in s\n        if i == \"a\" \n        push!(l,\"c\")\n\
    \        elseif i == \"b\"\n        push!(l,\"d\")\n        elseif i == \"c\"\n\
    \        push!(l,\"e\")\n        elseif i == \"d\"\n        push!(l,\"f\")\n \
    \       elseif i == \"e\"\n        push!(l,\"g\")\n        elseif i == \"f\"\n\
    \        push!(l,\"h\")\n        elseif i == \"g\"\n        push!(l,\"i\")\n \
    \       elseif i == \"h\"\n        push!(l,\"j\")\n        elseif i == \"i\"\n\
    \        push!(l,\"k\")\n        elseif i == \"j\"\n        push!(l,\"l\")\n \
    \       elseif i == \"k\"\n        push!(l,\"m\")\n        elseif i == \"l\"\n\
    \        push!(l,\"n\")\n        elseif i == \"m\"\n        push!(l,\"o\")\n \
    \       elseif i == \"n\"\n        push!(l,\"p\")\n        elseif i == \"o\"\n\
    \        push!(l,\"q\")\n        elseif i == \"p\"\n        push!(l,\"r\")\n \
    \       elseif i == \"q\"\n        push!(l,\"s\")\n        elseif i == \"r\"\n\
    \        push!(l,\"t\")\n        elseif i == \"s\"\n        push!(l,\"u\")\n \
    \       elseif i == \"t\"\n        push!(l,\"v\")\n        elseif i == \"u\"\n\
    \        push!(l,\"w\")\n        elseif i == \"v\"\n        push!(l,\"x\")\n \
    \       elseif i == \"w\"\n        push!(l,\"y\")\n        elseif i == \"x\"\n\
    \        push!(l,\"z\")\n        elseif i == \"y\"\n        push!(l,\"a\")\n \
    \       elseif i == \"z\"\n        push!(l,\"b\")\n        end\n    end\n    return\
    \ join(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmn4gv9ye.jl:75\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn4gv9ye.jl:75 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn4gv9ye.jl:74\ntest set: Test\
    \ Failed at /tmp/tmpmn4gv9ye.jl:76\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"\" == \"ewhjklnop\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn4gv9ye.jl:76 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn4gv9ye.jl:74\ntest set: Test\
    \ Failed at /tmp/tmpmn4gv9ye.jl:77\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn4gv9ye.jl:77 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn4gv9ye.jl:74\ntest set: Test\
    \ Failed at /tmp/tmpmn4gv9ye.jl:78\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn4gv9ye.jl:78 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn4gv9ye.jl:74\ntest set: Test\
    \ Failed at /tmp/tmpmn4gv9ye.jl:79\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"\" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmn4gv9ye.jl:72\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    str = \"\"\n    for letter\
    \ in s\n        index = findfirst(x -> x == letter, alphabet)\n        if index\
    \ <= 23\n            index += 2\n        else\n            index -= 23\n     \
    \   end\n        str = string(str, alphabet[index])\n    end\n    return str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ujb81m4.jl:30\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ujb81m4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ujb81m4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ujb81m4.jl:31\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ujb81m4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ujb81m4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ujb81m4.jl:32\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ujb81m4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ujb81m4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ujb81m4.jl:33\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ujb81m4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ujb81m4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ujb81m4.jl:34\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ujb81m4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Define an alphabet array\n    c = Array('a':'z')\n    # Define an array\
    \ of letters being shifted\n    d = Array('c':'z', 'a':'b')\n    # Define an empty\
    \ array for outputs\n    e = []\n    # For loop for searching letters\n    for\
    \ i = 1:length(s)\n        # If loop for each letter\n        if s[i] in c\n \
    \           # Get the index of each letter\n            a = findall(x->x==s[i],\
    \ c)[1]\n            # Replace the letter with the shifted version\n         \
    \   push!(e, d[a])\n        else\n            # If the character is not a letter,\
    \ push it as is\n            push!(e, s[i])\n        end\n    end\n    # Return\
    \ the shifted string\n    return join(e)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcunwnnvh.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ Array(::StepRange{Char, Int64}, ::StepRange{Char, Int64})\n  Closest candidates\
    \ are:\n    Array(::AbstractArray{T, N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:481\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcunwnnvh.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcunwnnvh.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcunwnnvh.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpcunwnnvh.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ Array(::StepRange{Char, Int64}, ::StepRange{Char, Int64})\n  Closest candidates\
    \ are:\n    Array(::AbstractArray{T, N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:481\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcunwnnvh.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcunwnnvh.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcunwnnvh.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpcunwnnvh.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching Array(::StepRange{Char,\
    \ Int64}, ::StepRange{Char, Int64})\n  Closest candidates are:\n    Array(::AbstractArray{T,\
    \ N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:481\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpcunwnnvh.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcunwnnvh.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = \"\"\n    for char in s\n        if char in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            push!(encrypted,string(\"abcdefghijklmnopqrstuvwxyz\")[string(\"\
    abcdefghijklmnopqrstuvwxyz\").index(char)+2])\n        elseif char in string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            push!(encrypted,string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").index(char)+2])\n        else\n     \
    \       push!(encrypted,char)\n        end\n    end\n    return encrypted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8g8chkbs.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp8g8chkbs.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8g8chkbs.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8g8chkbs.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp8g8chkbs.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp8g8chkbs.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8g8chkbs.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8g8chkbs.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp8g8chkbs.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmp8g8chkbs.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8g8chkbs.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8g8chkbs.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp8g8chkbs.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8g8chkbs.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgydq76ri.jl:19\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgydq76ri.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgydq76ri.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgydq76ri.jl:20\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgydq76ri.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgydq76ri.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgydq76ri.jl:21\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgydq76ri.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgydq76ri.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgydq76ri.jl:22\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgydq76ri.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgydq76ri.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgydq76ri.jl:23\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgydq76ri.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    t = Char[]\n    for i in 1:length(s)\n        #s[i] = s[i] + 2*i\n   \
    \     d = s[i] - 2*i\n        if d < 97\n            d = d + 26\n        end\n\
    \        push!(t, Char(d))\n    end\n    string(t)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ro_qkxx.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ isless(::Char, ::Int64)\n  Closest candidates are:\n    isless(!Matched::AbstractFloat,\
    \ ::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:186\n \
    \   isless(!Matched::Real, ::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(::Char, !Matched::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Char, y::Int64)\n     @ Base ./operators.jl:352\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmp1ro_qkxx.jl:16\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ro_qkxx.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ro_qkxx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1ro_qkxx.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ isless(::Char, ::Int64)\n  Closest candidates are:\n    isless(!Matched::AbstractFloat,\
    \ ::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:186\n \
    \   isless(!Matched::Real, ::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(::Char, !Matched::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Char, y::Int64)\n     @ Base ./operators.jl:352\n\
    \   [2] encrypt(s::String)\n     @ Main /tmp/tmp1ro_qkxx.jl:16\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1ro_qkxx.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1ro_qkxx.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1ro_qkxx.jl:30\n  Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ro_qkxx.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    b = string(\"CDEFGHIJKLMNOPQRSTUVWXYZAB\"\
    )\n    s = uppercase(s)\n    l = length(s)\n    i = 1\n    c = \"\"\n    while\
    \ i <= l\n        if s[i] in a\n            c = c * b[findfirst(a,s[i])]\n   \
    \     elseif s[i] in b\n            c = c * b[findfirst(b,s[i])]\n        else\n\
    \            c = c * s[i]\n        end\n        i = i + 1\n    end\n    return\
    \ c\nend\n# Test data\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwzge5noe.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpwzge5noe.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwzge5noe.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwzge5noe.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpwzge5noe.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpwzge5noe.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwzge5noe.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwzge5noe.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpwzge5noe.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwzge5noe.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt = \"\"\n    for i in s\n        if i == \" \"\n            push!(encrypt,\
    \ \" \")\n        elseif i == \"z\"\n            push!(encrypt, \"b\")\n     \
    \   elseif i == \"y\"\n            push!(encrypt, \"a\")\n        else\n     \
    \       x = findnext(i)\n            push!(encrypt, x)\n        end\n    end\n\
    \    return encrypt\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxebpqm2q.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findnext(::Char)\n  Closest candidates are:\n    findnext(::AbstractChar, !Matched::AbstractString,\
    \ !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:322\n\
    \    findnext(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1862\n\
    \    findnext(!Matched::Base.Fix2{<:Union{typeof(==), typeof(isequal)}, Bool},\
    \ !Matched::BitArray, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1514\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxebpqm2q.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxebpqm2q.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxebpqm2q.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpxebpqm2q.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findnext(::Char)\n  Closest candidates are:\n    findnext(::AbstractChar, !Matched::AbstractString,\
    \ !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:322\n\
    \    findnext(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1862\n\
    \    findnext(!Matched::Base.Fix2{<:Union{typeof(==), typeof(isequal)}, Bool},\
    \ !Matched::BitArray, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1514\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxebpqm2q.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxebpqm2q.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxebpqm2q.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    @views alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    num = 2\n    @views\
    \ rotated_alphabet = [alphabet[k-num] for k in 1:length(alphabet)]\n    #println(rotated_alphabet)\n\
    \    encrypted_string = s\n    for i in 1:length(s)\n        if (isequal(s[i],\"\
    \ \"))\n            encrypted_string[i] = \" \"\n        else\n            encrypted_string[i]\
    \ = rotated_alphabet[findfirst(isequal(s[i]),alphabet)]\n        end\n    end\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3nkwl7yy.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 26-codeunit\
    \ String at index [-1]\n  Stacktrace:\n    [1] checkbounds\n      @ ./strings/basic.jl:216\
    \ [inlined]\n    [2] codeunit\n      @ ./strings/string.jl:102 [inlined]\n   \
    \ [3] getindex\n      @ ./strings/string.jl:223 [inlined]\n    [4] maybeview\n\
    \      @ ./strings/substring.jl:52 [inlined]\n    [5] #1\n      @ ./none:0 [inlined]\n\
    \    [6] iterate\n      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"{Int64, String}})\n      @ Base ./array.jl:724\n    [8] encrypt(s::String)\n\
    \      @ Main /tmp/tmp3nkwl7yy.jl:14\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp3nkwl7yy.jl:31 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp3nkwl7yy.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp3nkwl7yy.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 26-codeunit String at index [-1]\n  Stacktrace:\n    [1] checkbounds\n     \
    \ @ ./strings/basic.jl:216 [inlined]\n    [2] codeunit\n      @ ./strings/string.jl:102\
    \ [inlined]\n    [3] getindex\n      @ ./strings/string.jl:223 [inlined]\n   \
    \ [4] maybeview\n      @ ./strings/substring.jl:52 [inlined]\n    [5] #1\n   \
    \   @ ./none:0 [inlined]\n    [6] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [7] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#2\"{Int64, String}})\n\
    \      @ Base ./array.jl:724\n    [8] encrypt(s::String)\n      @ Main /tmp/tmp3nkwl7yy.jl:14\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp3nkwl7yy.jl:32 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ ["
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3nkwl7yy.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Create an array containing the lowercase alphabet. We will call this\
    \ array \n    # \"alpha\"\n    letters = ['a':'z']\n    alpha = [x for x in letters]\n\
    \    # Create an empty array that will be used to build the encrypted string\n\
    \    s_new = []\n    # Loop through each character in the string, s.\n    for\
    \ i in 1:length(s)\n        # Find the index of the character in the alphabet\n\
    \        index = findfirst(alpha, s[i])\n        # Find the new index in the alphabet.\n\
    \        # This index is the sum of the old index and 2\n        new_index = index\
    \ + 2\n        # If the new index exceeds the bounds of the alphabet, subtract\
    \ 26\n        if new_index > 26\n            new_index = new_index - 26\n    \
    \    end\n        # Append the new character (the character at new_index) to the\
    \ array\n        # \"s_new\"\n        push!(s_new, alpha[new_index])\n    end\n\
    \    # Combine all the characters in the array \"s_new\" into a single string\n\
    \    # called \"s_new_str\"\n    s_new_str = \"\"\n    for i in 1:length(s_new)\n\
    \        s_new_str = s_new_str * s_new[i]\n    end\n    # Return the encrypted\
    \ string\n    return s_new_str\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_y_7jbl6.jl:48\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::Vector{StepRange{Char, Int64}}, ::Char)\n  Closest candidates are:\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_y_7jbl6.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_y_7jbl6.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_y_7jbl6.jl:47\ntest set:\
    \ Error During Test at /tmp/tmp_y_7jbl6.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::Vector{StepRange{Char, Int64}}, ::Char)\n  Closest candidates are:\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp_y_7jbl6.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_y_7jbl6.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_y_7jbl6.jl:47\ntest set:\
    \ Error During Test at /tmp/tmp_y_7jbl6.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Vector{StepRange{Char,\
    \ In"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_y_7jbl6.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt = \"\"\n    for ch in s\n        if (ch != 'z') & (ch != 'y')\n\
    \            encrypt = string(encrypt, chr(int(ch) + 2))\n        elseif ch ==\
    \ 'z'\n            encrypt = string(encrypt, 'b')\n        elseif ch == 'y'\n\
    \            encrypt = string(encrypt, 'a')\n        end\n    end\n    return\
    \ encrypt\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi5gi6h88.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpi5gi6h88.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5gi6h88.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5gi6h88.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpi5gi6h88.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpi5gi6h88.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5gi6h88.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5gi6h88.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpi5gi6h88.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpi5gi6h88.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5gi6h88.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5gi6h88.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpi5gi6h88.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpi5gi6h88.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi5gi6h88.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if s == \"a\"\n        return \"c\"\n    elseif s == \"b\"\n        return\
    \ \"d\"\n    elseif s == \"c\"\n        return \"e\"\n    elseif s == \"d\"\n\
    \        return \"f\"\n    elseif s == \"e\"\n        return \"g\"\n    elseif\
    \ s == \"f\"\n        return \"h\"\n    elseif s == \"g\"\n        return \"i\"\
    \n    elseif s == \"h\"\n        return \"j\"\n    elseif s == \"i\"\n       \
    \ return \"k\"\n    elseif s == \"j\"\n        return \"l\"\n    elseif s == \"\
    k\"\n        return \"m\"\n    elseif s == \"l\"\n        return \"n\"\n    elseif\
    \ s == \"m\"\n        return \"o\"\n    elseif s == \"n\"\n        return \"p\"\
    \n    elseif s == \"o\"\n        return \"q\"\n    elseif s == \"p\"\n       \
    \ return \"r\"\n    elseif s == \"q\"\n        return \"s\"\n    elseif s == \"\
    r\"\n        return \"t\"\n    elseif s == \"s\"\n        return \"u\"\n    elseif\
    \ s == \"t\"\n        return \"v\"\n    elseif s == \"u\"\n        return \"w\"\
    \n    elseif s == \"v\"\n        return \"x\"\n    elseif s == \"w\"\n       \
    \ return \"y\"\n    elseif s == \"x\"\n        return \"z\"\n    elseif s == \"\
    y\"\n        return \"a\"\n    elseif s == \"z\"\n        return \"b\"\n    else\n\
    \        return s\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi37cmej1.jl:73\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi37cmej1.jl:73 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi37cmej1.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpi37cmej1.jl:74\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi37cmej1.jl:74 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi37cmej1.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpi37cmej1.jl:75\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi37cmej1.jl:75 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi37cmej1.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpi37cmej1.jl:76\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi37cmej1.jl:76 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi37cmej1.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpi37cmej1.jl:77\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi37cmej1.jl:70\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s = s .* 2\n    return s[end-1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp420rexrb.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n    [1] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:670\
    \ [inlined]\\n    [2] _broadcast_getindex\\n      @ ./broadcast.jl:643 [inlined]\\\
    n    [3] getindex\\n      @ ./broadcast.jl:597 [inlined]\\n    [4] copy\\n   \
    \   @ ./broadcast.jl:875 [inlined]\\n    [5] materialize\\n      @ ./broadcast.jl:860\
    \ [inlined]\\n    [6] encrypt(s::String)\\n      @ Main /tmp/tmp420rexrb.jl:12\\\
    n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmp420rexrb.jl:20 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmp420rexrb.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for i in s\n    end \n\
    \    return \nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpleign95z.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpleign95z.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpleign95z.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpleign95z.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpleign95z.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpleign95z.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpleign95z.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpleign95z.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if length(s)<=1\n        return s\n    else \n        return (s[end-1])*(s[end])\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4av0css2.jl:23\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4av0css2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4av0css2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4av0css2.jl:24\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"kl\" == \"ewhjklnop\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4av0css2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4av0css2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4av0css2.jl:25\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4av0css2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4av0css2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4av0css2.jl:26\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4av0css2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4av0css2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4av0css2.jl:27\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"wg\" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4av0css2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # initialize output string\n    # create a character array of the alphabet\n\
    \    # iterate through the character array and string and shift each character\n\
    \    #    - use the in operator to find if the character is in the alphabet\n\
    \    #    - use the find function to find the character in the alphabet\n    #\
    \    - use mod to wrap around the alphabet\n    #    - define the lowercase and\
    \ uppercase letters separately\n    # append the shifted character to the output\
    \ string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmgdklnsm.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpmgdklnsm.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmgdklnsm.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmgdklnsm.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpmgdklnsm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpmgdklnsm.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmgdklnsm.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmgdklnsm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    n=length(s)\n    a=[]\n    for i in 1:n\n        if s[i]==\"z\" || s[i]==\"\
    y\"\n            push!(a,char(s[i]-24))\n        elseif s[i]==\"Z\" || s[i]==\"\
    Y\"\n            push!(a,char(s[i]-24))\n        else\n            push!(a,char(s[i]+2))\n\
    \        end\n    end\n    join(a)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3w603zux.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3w603zux.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3w603zux.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3w603zux.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3w603zux.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3w603zux.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3w603zux.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3w603zux.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3w603zux.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp3w603zux.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3w603zux.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3w603zux.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3w603zux.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp3w603zux.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3w603zux.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted_array = []\n    for char in s\n        if 'a' <= char <= 'w'\n\
    \            encrypted_array.append(Char(Int(char) + 2))\n        elseif 'x' <=\
    \ char <= 'z'\n            encrypted_array.append(Char(Int(char) - 24))\n    \
    \    elseif 'A' <= char <= 'W'\n            encrypted_array.append(Char(Int(char)\
    \ + 2))\n        elseif 'X' <= char <= 'Z'\n            encrypted_array.append(Char(Int(char)\
    \ - 24))\n        else\n            encrypted_array.append(char)\n        end\n\
    \    end\n    return join(encrypted_array, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdf35bbw1.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type Array has no field append\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main ./strings/string.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdf35bbw1.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdf35bbw1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpdf35bbw1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type Array has no field append\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main ./strings/string.jl:0\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdf35bbw1.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdf35bbw1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpdf35bbw1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main ./strings/string.jl:0\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdf35bbw1.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdf35bbw1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpdf35bbw1.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type Array has no field append\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main ./strings/string.jl:0\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   ["
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdf35bbw1.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  return [shift(x) for x in s] |> String\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6oxqqflm.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp6oxqqflm.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6oxqqflm.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6oxqqflm.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp6oxqqflm.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmp6oxqqflm.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6oxqqflm.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6oxqqflm.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp6oxqqflm.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @\
    \ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String, var\"\
    #1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmp6oxqqflm.jl:12\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6oxqqflm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_copy = s \n    for i in 1:length(s)\n        if s[i] == 'a' || s[i]\
    \ == 'c'\n            s_copy[i] = 'e'\n        elseif s[i] == 'b' || s[i] == 'd'\n\
    \            s_copy[i] = 'f'\n        elseif s[i] == 'e' || s[i] == 'g'\n    \
    \        s_copy[i] = 'i'\n        elseif s[i] == 'f' || s[i] == 'h'\n        \
    \    s_copy[i] = 'j'\n        elseif s[i] == 'i' || s[i] == 'k'\n            s_copy[i]\
    \ = 'm'\n        elseif s[i] == 'j' || s[i] == 'l'\n            s_copy[i] = 'n'\n\
    \        elseif s[i] == 'm' || s[i] == 'n'\n            s_copy[i] = 'q'\n    \
    \    elseif s[i] == 'o' || s[i] == 'p'\n            s_copy[i] = 'r'\n        elseif\
    \ s[i] == 'q' || s[i] == 'r'\n            s_copy[i] = 'u'\n        elseif s[i]\
    \ == 's' || s[i] == 't'\n            s_copy[i] = 'v'\n        elseif s[i] == 'u'\
    \ || s[i] == 'v'\n            s_copy[i] = 'y'\n        elseif s[i] == 'w' || s[i]\
    \ == 'x'\n            s_copy[i] = 'z'\n        elseif s[i] == 'y' || s[i] == 'z'\n\
    \            s_copy[i] = 'b'\n        end\n    end\n    return s_copy\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppeqw309q.jl:49\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmppeqw309q.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppeqw309q.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppeqw309q.jl:48\ntest set:\
    \ Error During Test at /tmp/tmppeqw309q.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmppeqw309q.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppeqw309q.jl:50 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppeqw309q.jl:48\ntest set:\
    \ Error During Test at /tmp/tmppeqw309q.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmppeqw309q.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppeqw309q.jl:51 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppeqw309q.jl:48\ntest set:\
    \ Error During Test at /tmp/tmppeqw309q.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::Stri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppeqw309q.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a=filter(x->x in \"abcdefghijklmnopqrstuvwxyz\",lowercase(s))\n    b=map(x->x+2*2,a)\n\
    \    c=collect(b)\n    for (i,j) in enumerate(b)\n        if j>122\n         \
    \   c[i]=j-26\n        end\n    end\n    return string(c)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpctajfvfm.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ isless(::Int64, ::Char)\n  Closest candidates are:\n    isless(::Real, !Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n    isless(::Real,\
    \ !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Int64, y::Char)\n     @ Base ./operators.jl:352\n\
    \   [2] >(x::Char, y::Int64)\n     @ Base ./operators.jl:378\n   [3] encrypt(s::String)\n\
    \     @ Main /tmp/tmpctajfvfm.jl:16\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpctajfvfm.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpctajfvfm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpctajfvfm.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ isless(::Int64, ::Char)\n  Closest candidates are:\n    isless(::Real, !Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n    isless(::Real,\
    \ !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Int64, y::Char)\n     @ Base ./operators.jl:352\n\
    \   [2] >(x::Char, y::Int64)\n     @ Base ./operators.jl:378\n   [3] encrypt(s::String)\n\
    \     @ Main /tmp/tmpctajfvfm.jl:16\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpctajfvfm.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpctajfvfm.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \n    #initialize dictionary \n    d = Dict()\n    #this will be used\
    \ to add letters to the dictionary \n    alphabet = [chr(x) for x in range(97,123)]\n\
    \    for (index, letter) in enumerate(alphabet)\n        d[letter] = alphabet[(index\
    \ + 2) % 26]\n    end\n    \n    #initialize an empty string \n    result = \"\
    \"\n    #use the dictionary to encrypt letters \n    for letter in s\n       \
    \ result = result * d[letter]\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph29f8anj.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmph29f8anj.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmph29f8anj.jl:34 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmph29f8anj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph29f8anj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmph29f8anj.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmph29f8anj.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmph29f8anj.jl:33\ntest set:\
    \ Error During Test at /tmp/tmph29f8anj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n   [2] iterate\n    \
    \ @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmph29f8anj.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph29f8anj.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n  println(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "hi\ntest set: Error During Test at /tmp/tmp1wmbvgau.jl:19\n  Test threw\
    \ exception\n  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1wmbvgau.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1wmbvgau.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1wmbvgau.jl:18\nasdfghjkl\n\
    test set: Error During Test at /tmp/tmp1wmbvgau.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp1wmbvgau.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1wmbvgau.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wmbvgau.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    l=collect(s)\n    for i in 1:length(l)\n        if l[i] == 'y'\n     \
    \       l[i] = 'a'\n        elseif l[i] == 'z'\n            l[i] = 'b'\n     \
    \   else\n            l[i] = l[i]\n        end\n    end\n    for i in 1:length(l)\n\
    \        if l[i] in 'a':'w'\n            l[i] = Char(Int(l[i])+2)\n        elseif\
    \ l[i] in 'x':'z'\n            l[i] = Char(Int(l[i])+2)\n        else\n      \
    \      l[i] = l[i]\n        end\n    end\n    return join(l)\nend\n    \nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp72uvzrh3.jl:39\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp72uvzrh3.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp72uvzrh3.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp72uvzrh3.jl:40\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp72uvzrh3.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp72uvzrh3.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp72uvzrh3.jl:41\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp72uvzrh3.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp72uvzrh3.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp72uvzrh3.jl:42\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp72uvzrh3.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp72uvzrh3.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp72uvzrh3.jl:43\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp72uvzrh3.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    a = 0\n    encrypted_string = \"\"\n    for i in s\n        sf[a] = nextletter(i)\n\
    \        a += 1\n    end\n    encrypted_string = join(sf)\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyz6gzvlr.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: nextletter not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyz6gzvlr.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyz6gzvlr.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyz6gzvlr.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyz6gzvlr.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: nextletter not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpyz6gzvlr.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyz6gzvlr.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyz6gzvlr.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyz6gzvlr.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: nextletter not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpyz6gzvlr.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyz6gzvlr.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyz6gzvlr.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpyz6gzvlr.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: nextletter not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpyz6gzvlr.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyz6gzvlr.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"Return a string encrypted with the alphabet being rotated by two\
    \ places.\n    \"\"\"\n    # Create a dictionary of characters and \n    # their\
    \ corresponding encrypted characters\n    my_dict = {'a':'c', 'b':'d', 'c':'e',\
    \ 'd':'f', 'e':'g', \n               'f':'h', 'g':'i', 'h':'j', 'i':'k', 'j':'l',\
    \ \n               'k':'m', 'l':'n', 'm':'o', 'n':'p', 'o':'q', \n           \
    \    'p':'r', 'q':'s', 'r':'t', 's':'u', 't':'v', \n               'u':'w', 'v':'x',\
    \ 'w':'y', 'x':'z', 'y':'a', \n               'z':'b'}\n    # Call array_shift\
    \ from the helper module \n    # to create the shifted array\n    a = array_shift(collect(s),\
    \ 2)\n    # Create the encrypted string.\n    # The encrypted string is formed\
    \ by \n    # the encrypted characters corresponding \n    # to the characters\
    \ in the array.\n    return join(my_dict[x] for x in a)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: { } vector syntax is discontinued around /tmp/tmpqlkflmu1.jl:16\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpqlkflmu1.jl:1\nin expression starting\
    \ at /tmp/tmpqlkflmu1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_list = []\n    for i in s\n        new_list.append(chr(ord(i) + 2*2))\n\
    \    end\n    return \"\".join(new_list)\nend\nprintln(encrypt(\"hello\"))\nprintln(encrypt(\"\
    asdfghjkl\"))\nprintln(encrypt(\"gf\"))\nprintln(encrypt(\"et\"))\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: type Array has no field append\nStacktrace:\n [1] getproperty\n\
    \   @ ./Base.jl:42 [inlined]\n [2] encrypt(s::String)\n   @ Main /tmp/tmpw8zyb6ek.jl:14\n\
    \ [3] top-level scope\n   @ /tmp/tmpw8zyb6ek.jl:18\nin expression starting at\
    \ /tmp/tmpw8zyb6ek.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    srotated = String[]\n    for i = 1:length(s)\n        c = s[i]\n     \
    \   cpos = search(alpha, c)\n        dpos = cpos + 2*2\n        if dpos > 26\n\
    \            dpos = dpos - 26\n        end\n        d = alpha[dpos]\n        append!(srotated,\
    \ d)\n    end\n    return join(srotated)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkd2ndl0w.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkd2ndl0w.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkd2ndl0w.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkd2ndl0w.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkd2ndl0w.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpkd2ndl0w.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkd2ndl0w.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkd2ndl0w.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkd2ndl0w.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpkd2ndl0w.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkd2ndl0w.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkd2ndl0w.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkd2ndl0w.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpkd2ndl0w.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkd2ndl0w.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    ascii = Int8[]\n    for c in s\n        if c == 'z'\n            push!(ascii,\
    \ 'b')\n        elseif c == 'y'\n            push!(ascii, 'a')\n        else\n\
    \            push!(ascii, c + 2)\n        end\n    end\n    return String(ascii)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7bgtxkx2.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ String(::Vector{Int8})\n  Closest candidates are:\n    String(!Matched::String)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n    ...\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7bgtxkx2.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7bgtxkx2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7bgtxkx2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp7bgtxkx2.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ String(::Vector{Int8})\n  Closest candidates are:\n    String(!Matched::String)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n    ...\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp7bgtxkx2.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7bgtxkx2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7bgtxkx2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp7bgtxkx2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching String(::Vector{Int8})\n\
    \  Closest candidates are:\n    "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7bgtxkx2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    key = 2\n    letters = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypt = \"\
    \"\n    for x in s\n        if x == \" \"\n            append!(encrypt, \" \"\
    )\n        else\n            a = findfirst(letters, x)\n            if a + key\
    \ > 26\n                x = mod(a + key, 26)\n                append!(encrypt,\
    \ letters[x])\n            else\n                append!(encrypt, letters[a +\
    \ key])\n            end\n        end\n    end\n    return encrypt\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3mqeyeth.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3mqeyeth.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3mqeyeth.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3mqeyeth.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3mqeyeth.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3mqeyeth.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3mqeyeth.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3mqeyeth.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3mqeyeth.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching findfirst(::Str"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3mqeyeth.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    str_array = s.lower()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    num_array = []\n    for i = 1:length(str_array)\n        if str_array[i]\
    \ == \" \"\n            push!(num_array, 26)\n        else\n            push!(num_array,\
    \ find(alphabet, str_array[i])[1])\n        end\n    end\n    output = \"\"\n\
    \    for i = 1:length(num_array)\n        if num_array[i] == 26\n            output\
    \ = output * \" \"\n        else\n            output = output * alphabet[((num_array[i]-1)*2+2)%26+1]\n\
    \        end\n    end\n    return output\nend\n    \n        \nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxr1jlqwy.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lower\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpxr1jlqwy.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxr1jlqwy.jl:39 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxr1jlqwy.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpxr1jlqwy.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lower\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpxr1jlqwy.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxr1jlqwy.jl:40 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxr1jlqwy.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpxr1jlqwy.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lower\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpxr1jlqwy.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxr1jlqwy.jl:41 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxr1jlqwy.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpxr1jlqwy.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lower\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxr1jlqwy.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    k = 2*2\n    return Base.shift(s, k)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeg101ao_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpeg101ao_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeg101ao_.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeg101ao_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpeg101ao_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpeg101ao_.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeg101ao_.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeg101ao_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpeg101ao_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpeg101ao_.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeg101ao_.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeg101ao_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpeg101ao_.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpeg101ao_.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeg101ao_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #alphabet is the string of letters used in the language \n    #available\
    \ to the user\n    #rotation is the value to which the alphabet should be \n \
    \   #rotated by\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    rotation =\
    \ 2\n    #Declaring new variables of the same type as the arguments \n    #String\
    \ in this case \n    newstring = String(s)\n    new_s = String(s)\n    for i=1:length(s)\n\
    \        #Going through every character of the string one at a time \n       \
    \ #and converting it to lowercase for easier accessing\n        #the index of\
    \ each character in the alphabet\n        newstring[i] = lowercase(s[i])\n   \
    \     #creating a variable that stores the index of the new string in \n     \
    \   #the alphabet\n        character_index = findfirst(alphabet, newstring[i])\n\
    \        #addition of the index of the character and the rotation \n        #variable\
    \ modulo the length of the alphabet gives the index \n        #of the new character\n\
    \        index = mod((character_index + rotation),length(alphabet))\n        #that\
    \ new character replaces the old character in the new_s \n        #string which\
    \ we have returned as the encrypted string \n        new_s[i] = alphabet[index]\n\
    \    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe1hn17wt.jl:45\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmpe1hn17wt.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe1hn17wt.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe1hn17wt.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpe1hn17wt.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ setindex!(::String, ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n\
    \     @ Main /tmp/tmpe1hn17wt.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe1hn17wt.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe1hn17wt.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpe1hn17wt.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpe1hn17wt.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe1hn17wt.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe1hn17wt.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpe1hn17wt.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  MethodError: no method matching setindex!(::String,\
    \ ::Char, ::Int64)\n  Stacktrace:\n   [1] encrypt(s::Stri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1hn17wt.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = ''\n    for i in 1:length(s)\n        newVal = s[i] + 2*2\
    \ \n        if newVal > 122 \n            newVal = newVal - 26\n        end\n\
    \        encrypted = encrypted * string(Char(newVal))\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbc2n354p.jl:12\nin expression starting at\
    \ /tmp/tmpbc2n354p.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s\n    new=String[]\n    for i in 1:length(s)\n        n=Int(s[i])+2*2\n\
    \        if n > 90\n            n = n-26\n        end\n        push!(new,Char(n))\n\
    \    end\n    new_string=join(new)\n    return new_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8lsozx9l.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Char)\n     @ Base\
    \ ./array.jl:994\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp8lsozx9l.jl:19\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8lsozx9l.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8lsozx9l.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp8lsozx9l.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Char)\n     @ Base\
    \ ./array.jl:994\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp8lsozx9l.jl:19\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8lsozx9l.jl:30 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lsozx9l.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    counter = 0\n \
    \   encrypted_str = \"\"\n    while counter < length(s)\n        char = uppercase(s[counter])\n\
    \        location = findfirst(alphabet, char)\n        new_location = location\
    \ + 2*2\n        if new_location > 26\n            new_location = new_location\
    \ - 26\n        end\n        encrypted_str = encrypted_str * uppercase(alphabet[new_location])\n\
    \        counter += 1\n    end\n    return encrypted_str\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqykixfjt.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  BoundsError: attempt to access 2-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqykixfjt.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqykixfjt.jl:32 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqykixfjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpqykixfjt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  BoundsError: attempt to access\
    \ 9-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqykixfjt.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqykixfjt.jl:33 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqykixfjt.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpqykixfjt.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  BoundsError: attempt to access 2-codeunit String\
    \ at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] encrypt(s::String)\n\
    \     @ Main /tmp/tmpqykixfjt.jl:16\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqykixfjt.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = \"\"\n    for i in s\n        if (i=='z')\n            s2 *= 'b'\n\
    \        elseif (i=='y')\n            s2 *= 'a'\n        elseif ('a'<=i<='z')\n\
    \            s2 *= chr(2*2+ord(i))\n        else\n            s2 *= i\n      \
    \  end\n    end\n    return s2\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt7_e242o.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpt7_e242o.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt7_e242o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt7_e242o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpt7_e242o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpt7_e242o.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt7_e242o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt7_e242o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpt7_e242o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpt7_e242o.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt7_e242o.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt7_e242o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpt7_e242o.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpt7_e242o.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt7_e242o.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for i in s\n        r = Char(mod(2*(ord(i) - 96), 26)\
    \ + 96)\n        push!(new_s, r)\n    end\n    return new_s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuh2uuhud.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpuh2uuhud.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuh2uuhud.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuh2uuhud.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpuh2uuhud.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: ord not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpuh2uuhud.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuh2uuhud.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuh2uuhud.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpuh2uuhud.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpuh2uuhud.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuh2uuhud.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuh2uuhud.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpuh2uuhud.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: ord not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpuh2uuhud.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuh2uuhud.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    for ch in s\n        val = Int(ch) + 2\n        append!(s,UInt8(val))\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaxmzrya6.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ append!(::String, ::UInt8)\n  Closest candidates are:\n    append!(!Matched::BitVector,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n   \
    \ append!(!Matched::AbstractVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n\
    \    append!(!Matched::AbstractVector, ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpaxmzrya6.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaxmzrya6.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaxmzrya6.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaxmzrya6.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ append!(::String, ::UInt8)\n  Closest candidates are:\n    append!(!Matched::BitVector,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n   \
    \ append!(!Matched::AbstractVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n\
    \    append!(!Matched::AbstractVector, ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpaxmzrya6.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaxmzrya6.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaxmzrya6.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaxmzrya6.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  MethodError: no method matching app"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaxmzrya6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"\n    Encrypt a String of characters by 2*2 places.\n    \"\"\"\n\
    \    alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\"]\n    s = split(s, \"\")\n    output = \"\"\n    for i in 1:length(s)\n\
    \        c = findfirst(a->a==s[i], alphabet)\n        output = output * alphabet[c+2*2]\n\
    \    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaziiqrof.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\"\n  BoundsError:\
    \ attempt to access 26-element Vector{String} at index [27]\n  Stacktrace:\n \
    \  [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpaziiqrof.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaziiqrof.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaziiqrof.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpaziiqrof.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\n  BoundsError: attempt to\
    \ access 26-element Vector{String} at index [29]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpaziiqrof.jl:20\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaziiqrof.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaziiqrof.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpaziiqrof.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \n  BoundsError: attempt to access 26-element Vector{String} at index [28]\n \
    \ Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpaziiqrof.jl:20\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaziiqrof.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] to"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaziiqrof.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    array = collect(s)\n    length = size(array,1)\n    for i in 1:length\n\
    \        if (array[i] == 'z') \n            array[i] = 'b'\n        elseif (array[i]\
    \ == 'y')\n            array[i] = 'a'\n        else\n            array[i] = array[i]\
    \ + 2\n        end\n    end\n    join(array)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpub9e48qw.jl:30\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpub9e48qw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpub9e48qw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpub9e48qw.jl:31\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpub9e48qw.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpub9e48qw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpub9e48qw.jl:32\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpub9e48qw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpub9e48qw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpub9e48qw.jl:33\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpub9e48qw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpub9e48qw.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpub9e48qw.jl:34\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpub9e48qw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb9n0vf21.jl:19\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9n0vf21.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9n0vf21.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9n0vf21.jl:20\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9n0vf21.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9n0vf21.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9n0vf21.jl:21\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9n0vf21.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9n0vf21.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9n0vf21.jl:22\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9n0vf21.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9n0vf21.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb9n0vf21.jl:23\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb9n0vf21.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = \"\"\n    for x in s\n        new_s *= string(x[1] + 2)\n    end\n\
    \    return new_s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmuo_wskb.jl:23\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmuo_wskb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmuo_wskb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmuo_wskb.jl:24\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmuo_wskb.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmuo_wskb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmuo_wskb.jl:25\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmuo_wskb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmuo_wskb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmuo_wskb.jl:26\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmuo_wskb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmuo_wskb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmuo_wskb.jl:27\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmuo_wskb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt = \"\"\n    for c in s\n        if (c in ['A':'Y', 'a':'y'])\n\
    \            encrypt = encrypt * string(Char(Int(c)+2))\n        elseif (c in\
    \ ['Z', 'z'])\n            encrypt = encrypt * \"a\"\n        elseif (c in ['['])\n\
    \            encrypt = encrypt * \"b\"\n        else\n            encrypt = encrypt\
    \ * string(c)\n        end\n    end\n    return encrypt\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp577t6q4l.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp577t6q4l.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp577t6q4l.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp577t6q4l.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp577t6q4l.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp577t6q4l.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp577t6q4l.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp577t6q4l.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp577t6q4l.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp577t6q4l.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp577t6q4l.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp577t6q4l.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp577t6q4l.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp577t6q4l.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #type in code here\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnq6fz392.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnq6fz392.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnq6fz392.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnq6fz392.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnq6fz392.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnq6fz392.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnq6fz392.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnq6fz392.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    let secret = \"klmnopqrstuvwxyzabcd\"\n    return [secret[search(s[i],\
    \ 'abcdefghijklmnopqrstuvwxyz')] for i = 1:length(s)] |> join |> String\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpmzwskh61.jl:13\nin expression\
    \ starting at /tmp/tmpmzwskh61.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypted = []\n    for i = 1:length(s)\n        push!(encrypted, s[i]\
    \ + 2*2)\n    end\n    return join(encrypted)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy6u_acwb.jl:27\n  Expression: candidate(\"\
    faewfawefaewg\") == \"jeiajeaijeiak\"\n   Evaluated: \"jei{je{ijei{k\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6u_acwb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6u_acwb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpy6u_acwb.jl:28\n  Expression: candidate(\"hellomyfriend\"\
    ) == \"lippsqcjvmirh\"\n   Evaluated: \"lippsq}jvmirh\" == \"lippsqcjvmirh\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6u_acwb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6u_acwb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpy6u_acwb.jl:29\n  Expression: candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\n   Evaluated: \"h|~hpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy6u_acwb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy6u_acwb.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6u_acwb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    return String[Char(getindex(s, i) + (i%2)*2) for i=1:length(s)]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmqi4gysc.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{String}, x::Char, i1::Int64)\n\
    \     @ Base ./array.jl:903\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmqi4gysc.jl:12\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmqi4gysc.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmqi4gysc.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpmqi4gysc.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(A::Vector{String}, x::Char, i1::Int64)\n\
    \     @ Base ./array.jl:903\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmqi4gysc.jl:12\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /t"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqi4gysc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    l = collect(s)\n    l = [x - 2*2 for x in l]\n    return l\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxjofx_ff.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxjofx_ff.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxjofx_ff.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxjofx_ff.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpxjofx_ff.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: Cannot `convert` an\
    \ object of type Vector{Char} to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxjofx_ff.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxjofx_ff.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjofx_ff.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #Set up the alphabet\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    new_word = \"\" #where we will save the encrypted letters\n    for i in s\
    \ #looping through the length of the string\n        for j in collect(1:26) #looping\
    \ through length of alphabet\n            if i == alphabet[j] #checking if the\
    \ letter in the string matches the letter in the alphabet\n                new_word\
    \ = new_word * alphabet[j + 2] #if match, add 2 to index and append to new_word\n\
    \            end\n        end\n    end\n    return new_word\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp88yp_ky0.jl:29\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88yp_ky0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88yp_ky0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp88yp_ky0.jl:30\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88yp_ky0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88yp_ky0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp88yp_ky0.jl:31\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88yp_ky0.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88yp_ky0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp88yp_ky0.jl:32\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88yp_ky0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88yp_ky0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp88yp_ky0.jl:33\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88yp_ky0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted = \"\"\n    for\
    \ i in 1:length(s)\n        cur_char = s[i]\n        char_pos = findall(x->x==cur_char,alphabet)\n\
    \        encrypted_char = alphabet[(char_pos[1] + (i*2))%26]\n        encrypted\
    \ = string(encrypted,encrypted_char)\n    end\n    return encrypted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppwpzseeo.jl:27\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jm\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwpzseeo.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwpzseeo.jl:26\ntest set: Test\
    \ Failed at /tmp/tmppwpzseeo.jl:28\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cwjnqtxad\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwpzseeo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwpzseeo.jl:26\ntest set: Test\
    \ Failed at /tmp/tmppwpzseeo.jl:29\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ij\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwpzseeo.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwpzseeo.jl:26\ntest set: Test\
    \ Failed at /tmp/tmppwpzseeo.jl:30\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gx\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppwpzseeo.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppwpzseeo.jl:26\ntest set: Test\
    \ Failed at /tmp/tmppwpzseeo.jl:31\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hekepmkuxuaug\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwpzseeo.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = Int[]\n    for i = 1:length(s)\n        if s[i] == 'z'\n         \
    \   append!(c, 'a')\n        elseif s[i] == 'y'\n            append!(c, 'z')\n\
    \        else\n            append!(c, (s[i] + 2))\n        end\n    end\n    return\
    \ string(c)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4fkjxr40.jl:29\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"[106, 107]\" == \"lm\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fkjxr40.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4fkjxr40.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4fkjxr40.jl:30\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"[99, 117, 102, 104, 105, 106, 108, 109, 110]\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fkjxr40.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4fkjxr40.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4fkjxr40.jl:31\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"[105, 104]\" == \"kj\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fkjxr40.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4fkjxr40.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4fkjxr40.jl:32\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"[103, 118]\" == \"ix\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fkjxr40.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4fkjxr40.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4fkjxr40.jl:33\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"[104, 99, 103, 121, 104, 99, 1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4fkjxr40.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    shift = 2\n    number_of_letters\
    \ = length(alphabet)\n    cipher = \"\"\n    for i in s\n        index = search(alphabet,\
    \ i)\n        new_index = index + 2 * shift\n        if new_index > number_of_letters\n\
    \            new_index = new_index - number_of_letters\n        end\n        letter\
    \ = alphabet[new_index]\n        push!(cipher, letter)\n    end\n    return cipher\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqwtr1g0a.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqwtr1g0a.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqwtr1g0a.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqwtr1g0a.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpqwtr1g0a.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: search not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpqwtr1g0a.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqwtr1g0a.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqwtr1g0a.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpqwtr1g0a.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpqwtr1g0a.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqwtr1g0a.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqwtr1g0a.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpqwtr1g0a.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: search not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpqwtr1g0a.jl:17\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqwtr1g0a.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # Initialize value of new string\n    encrypted_string = \"\"\n    # Iterate\
    \ over each letter of the input string\n    for i in s\n        # Empty string\
    \ to add the rotation to\n        new_letter = \"\"\n        # If the letter is\
    \ a space (ASCII value: 32), append the space to the new string\n        if (i\
    \ == \" \")\n            push!(new_letter,i)\n        # Otherwise, rotate the\
    \ letter by two places\n        else\n            # Convert the letter to an ASCII\
    \ value for rotation purposes\n            j = string(i)\n            letter_index\
    \ = findfirst(j)\n            # Rotate the letter by two places\n            rotated_letter\
    \ = letter_index - 2\n            # Convert the rotated letter back to a string\n\
    \            new_letter = String(rotated_letter)\n        end\n        # Add the\
    \ rotated letter to the new string\n        push!(encrypted_string,new_letter)\n\
    \    end\n    # Return the new encrypted string\n    return encrypted_string\n\
    end\nprintln(encrypt(\"hi\"))\nprintln(encrypt(\"asdfghjkl\"))\nprintln(encrypt(\"\
    gf\"))\nprintln(encrypt(\"et\"))\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: TypeError: non-boolean (Char) used in boolean context\n\
    Stacktrace:\n [1] findfirst(A::String)\n   @ Base ./array.jl:1912\n [2] encrypt(s::String)\n\
    \   @ Main /tmp/tmp7b11nguc.jl:25\n [3] top-level scope\n   @ /tmp/tmp7b11nguc.jl:37\n\
    in expression starting at /tmp/tmp7b11nguc.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = Array{String}(length(s))\n    for i = 1:length(s)\n        c[i] =\
    \ ifelse(s[i]=='z',\"b\",ifelse(s[i]=='y',\"a\",chr(Int(s[i])+2)))\n    end\n\
    \    return join(c)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq4ro74xv.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ (Array{String})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpq4ro74xv.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ro74xv.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ro74xv.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpq4ro74xv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ (Array{String})(::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpq4ro74xv.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/std"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq4ro74xv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s2 = []\n    for c in s\n        #push!(s2, chr(ord(c) + 2*2))\n     \
    \   push!(s2, Char(Int(c) + 2*2))\n    end\n    return string(s2)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6jv7l319.jl:24\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"Any['l', 'm']\" == \"lm\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jv7l319.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jv7l319.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6jv7l319.jl:25\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"Any['e', 'w', 'h', 'j', 'k', 'l', 'n', 'o', 'p']\"\
    \ == \"ewhjklnop\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jv7l319.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jv7l319.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6jv7l319.jl:26\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"Any['k', 'j']\" == \"kj\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jv7l319.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jv7l319.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6jv7l319.jl:27\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"Any['i', 'x']\" == \"ix\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jv7l319.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jv7l319.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6jv7l319.jl:28\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"Any['j', 'e', 'i'"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jv7l319.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    letters=string(\"abcdefghijklmnopqrstuvwxyz\",)\n    encrypted_letters=string(\"\
    cdefghijklmnopqrstuvwxyzab\",)\n    for i in s\n        try\n            str[]=encrypted_letters(i)\n\
    \            return str\n        catch \n            print('Please enter a valid\
    \ string')\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmphvk9yzef.jl:19\nin expression\
    \ starting at /tmp/tmphvk9yzef.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    #Declare variables\n    key_dict = Dict{Char, Char}('a' => 'c', 'b' =>\
    \ 'd', 'c' => 'e', 'd' => 'f', 'e' => 'g', 'f' => 'h', 'g' => 'i', 'h' => 'j',\
    \ 'i' => 'k', 'j' => 'l', 'k' => 'm', 'l' => 'n', 'm' => 'o', 'n' => 'p', 'o'\
    \ => 'q', 'p' => 'r', 'q' => 's', 'r' => 't', 's' => 'u', 't' => 'v', 'u' => 'w',\
    \ 'v' => 'x', 'w' => 'y', 'x' => 'z', 'y' => 'a', 'z' => 'b')\n    encrypted_string\
    \ = \"\"\n    #Loop through the string, lookup the value of each character in\
    \ the key_dict,\n    #and concatenate those values to encrypted_string\n    for\
    \ c in s\n        append!(encrypted_string, key_dict[c])\n    end\n    return\
    \ encrypted_string\nend\nencrypt(\"asdfghjkl\")\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching append!(::String, ::Char)\n\
    Closest candidates are:\n  append!(!Matched::BitVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n\
    \  append!(!Matched::AbstractVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n\
    \  append!(!Matched::AbstractVector, ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n\
    Stacktrace:\n [1] encrypt(s::String)\n   @ Main /tmp/tmpy8ltwhtz.jl:18\n [2] top-level\
    \ scope\n   @ /tmp/tmpy8ltwhtz.jl:22\nin expression starting at /tmp/tmpy8ltwhtz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c = map(ch -> (ch->Char('a')::Int + (ch->Char(ch)::Int + 2*2)%26)::Char,\
    \ s)\n    return join(c)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2nlacyb6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  TypeError: in typeassert, expected\
    \ Char, got a value of type var\"#2#5\"\n  Stacktrace:\n   [1] (::var\"#1#4\"\
    )(ch::Char)\n     @ Main /tmp/tmp2nlacyb6.jl:12\n   [2] map(f::var\"#1#4\", s::String)\n\
    \     @ Base ./strings/basic.jl:610\n   [3] encrypt(s::String)\n     @ Main /tmp/tmp2nlacyb6.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2nlacyb6.jl:20 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2nlacyb6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp2nlacyb6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  TypeError: in typeassert, expected\
    \ Char, got a value of type var\"#2#5\"\n  Stacktrace:\n   [1] (::var\"#1#4\"\
    )(ch::Char)\n     @ Main /tmp/tmp2nlacyb6.jl:12\n   [2] map(f::var\"#1#4\", s::String)\n\
    \     @ Base ./strings/basic.jl:610\n   [3] encrypt(s::String)\n     @ Main /tmp/tmp2nlacyb6.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2nlacyb6.jl:21 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2nlacyb6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp2nlacyb6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  TypeError: in typeassert, expected Char, got\
    \ a value of type var\"#2#5\"\n  Stacktrace:\n   [1] (::var\"#1#4\")(ch::Char)\n\
    \     @ Main /tmp/tmp2nlacyb6.jl:12\n   [2] map(f::var\"#1#4\", s::String)\n \
    \    @ Base ./strings/basic.jl:610\n   [3] encrypt(s::String)\n     @ Main /tmp/tmp2nlacyb6.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2nlacyb6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = ['a':'z']\n    new_string = \" \"\n    for i in s\n       \
    \ for j in alphabet\n            if i == j\n                index = findfirst(alphabet,j)\n\
    \                new_string = new_string * alphabet[(index+1)%26+1]\n        \
    \    end\n        end\n    end\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpan441trd.jl:29\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \" \" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan441trd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan441trd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpan441trd.jl:30\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \" \" == \"ewhjklnop\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan441trd.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan441trd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpan441trd.jl:31\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \" \" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan441trd.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan441trd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpan441trd.jl:32\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \" \" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan441trd.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan441trd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpan441trd.jl:33\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \" \" == \"jeiajeaijeiak\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpan441trd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    array(s,1)\n    for i in\
    \ s\n        for j in alphabet\n            if i==j\n                ind=findfirst(x->x==j,alphabet)\n\
    \                n=ind+2*2\n                if n>26\n                    n=n-26\n\
    \                end\n                push!(s,alphabet[n])\n            end\n\
    \        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxqzkfunw.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: array not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxqzkfunw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxqzkfunw.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqzkfunw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqzkfunw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: array not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpxqzkfunw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxqzkfunw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqzkfunw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqzkfunw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: array not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpxqzkfunw.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxqzkfunw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxqzkfunw.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpxqzkfunw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: array not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpxqzkfunw.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxqzkfunw.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    encrypt = \"\"\n    for character in s\n        if character in 'abcdefghijklmnopqrstuvwxyz'\n\
    \            character = chr(ord(character) + 2)\n        end\n        if character\
    \ in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            character = chr(ord(character)\
    \ + 2)\n        end\n        encrypt = encrypt * character\n    end\n    return\
    \ encrypt\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpct20mp2r.jl:14\nin expression\
    \ starting at /tmp/tmpct20mp2r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    c=collect(s)\n    for i in 1:length(c)\n        if c[i]!=\" \"\n     \
    \       c[i]=char(Int(c[i])+2*2)\n        end\n    end\n    c=join(c)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe2ujmkd0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpe2ujmkd0.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2ujmkd0.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2ujmkd0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe2ujmkd0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpe2ujmkd0.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2ujmkd0.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2ujmkd0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe2ujmkd0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpe2ujmkd0.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2ujmkd0.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2ujmkd0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpe2ujmkd0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpe2ujmkd0.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe2ujmkd0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # create new string with empty quotes\n    newstring=\"\"\n    # create\
    \ a loop that goes from 1 to the length of the argument string\n    for i in 1:length(s)\n\
    \        # create new value for each letter in the string that adds two to each\
    \ letter\n        newnum=s[i]+2\n        # if the letter is a new lowercase letter,\
    \ then subtract 26 and add it to the new string\n        if 97<=s[i]<=122\n  \
    \          if newnum>122\n                newstring=string(newstring,char(newnum-26))\n\
    \            else\n                newstring=string(newstring,char(newnum))\n\
    \            end\n        # if the letter is a new uppercase letter, then subtract\
    \ 26 and add it to the new string\n        elseif 65<=s[i]<=90\n            if\
    \ newnum>90\n                newstring=string(newstring,char(newnum-26))\n   \
    \         else\n                newstring=string(newstring,char(newnum))\n   \
    \         end\n        # if the letter is not a letter, then add it to the new\
    \ string without changing it\n        else\n            newstring=string(newstring,char(s[i]))\n\
    \        end\n    end\n    # return the new string\n    return newstring\nend\n\
    encrypt(\"The quick brown fox jumps over the lazy dog\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching isless(::Int64, ::Char)\n\
    Closest candidates are:\n  isless(::Real, !Matched::AbstractFloat) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n\
    \  isless(::Real, !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \  isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \  ...\nStacktrace:\n [1] <(x::Int64, y::Char)\n   @ Base ./operators.jl:352\n\
    \ [2] <=(x::Int64, y::Char)\n   @ Base ./operators.jl:401\n [3] encrypt(s::String)\n\
    \   @ Main /tmp/tmpj0lw3uwp.jl:19\n [4] top-level scope\n   @ /tmp/tmpj0lw3uwp.jl:40\n\
    in expression starting at /tmp/tmpj0lw3uwp.jl:40\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    newString = \"\"\n    for\
    \ n = 1:length(s)\n        current = s[n]\n        try\n            #find the\
    \ index position of the current character in the alphabet\n            i = findfirst(alphabet,\
    \ current) \n            #add 2 to the index position, and wrap around if necessary\n\
    \            newIndex = mod(i+2, length(alphabet))\n            #find the new\
    \ character at this new index position\n            newChar = alphabet[newIndex]\n\
    \            #add the new character to the newString\n            newString =\
    \ newString * newChar\n        catch\n            newString = newString * current\n\
    \        end\n    end\n    return newString\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprm4rpx4t.jl:36\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprm4rpx4t.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprm4rpx4t.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprm4rpx4t.jl:37\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprm4rpx4t.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprm4rpx4t.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprm4rpx4t.jl:38\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprm4rpx4t.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprm4rpx4t.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprm4rpx4t.jl:39\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprm4rpx4t.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprm4rpx4t.jl:35\ntest set: Test\
    \ Failed at /tmp/tmprm4rpx4t.jl:40\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprm4rpx4t.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    s_array = Array{Char}(s)\n    for i in 1:length(s_array)\n        s_array[i]\
    \ = Char(s_array[i] + 4)\n    end\n    return join(s_array, \"\")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3d_88njy.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ (Array{Char})(::String)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3d_88njy.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3d_88njy.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3d_88njy.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp3d_88njy.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ (Array{Char})(::String)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.AbstractQ)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:563\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp3d_88njy.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3d_88njy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    # This function will take in a string as an argument\n    # Returns a\
    \ string encrypted with alphabet being rotated.\n    # The alphabet should be\
    \ rotated in a manner that the letters\n    # shift down by two multiplied to\
    \ two places. \n    \n    #Declare a variable that will be used later\n    new_s\
    \ = \"\"\n    \n    #Use a for loop to iterate through the string being passed\
    \ in.\n    for char in s\n        #Take each character, convert it to its ASCII\
    \ value, add 2*2 = 4,\n        #convert it back to a character, and add it to\
    \ the new string.\n        push!(new_s, string(Char(Int(char) + 4)))\n    end\n\
    \    \n    #Return the new string\n    return new_s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5zw5i679.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ push!(::String, ::String)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5zw5i679.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zw5i679.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5zw5i679.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp5zw5i679.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ push!(::String, ::String)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp5zw5i679.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5zw5i679.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5zw5i679.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp5zw"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5zw5i679.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    i = 0\n    newstring = \"\"\n    for i in s\n        if i == \"z\"\n \
    \           newstring = newstring * \"b\"\n        elseif i == \"y\"\n       \
    \     newstring = newstring * \"a\"\n        else \n            newstring = newstring\
    \ * (string(char(Int(i) + 2)))\n        end\n    end\n    return newstring\nend\n\
    \        \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2exd59st.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp2exd59st.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2exd59st.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2exd59st.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2exd59st.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp2exd59st.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2exd59st.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2exd59st.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2exd59st.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp2exd59st.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2exd59st.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2exd59st.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2exd59st.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp2exd59st.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2exd59st.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    \"\"\"\n    encrypt a string s and returns the encrypted string\n    \"\
    \"\"\n    a = Array{Char}(undef, length(s))\n    for i in 1:length(s)\n      \
    \  if s[i] == 'z'\n            a[i] = 'b'\n        elseif s[i] == 'y'\n      \
    \      a[i] = 'a'\n        else\n            a[i] = Char(Int(s[i]) + 2)\n    \
    \    end\n    end\n    join(a)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeu0wj6b2.jl:32\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeu0wj6b2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeu0wj6b2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpeu0wj6b2.jl:33\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeu0wj6b2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeu0wj6b2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpeu0wj6b2.jl:34\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeu0wj6b2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeu0wj6b2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpeu0wj6b2.jl:35\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeu0wj6b2.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeu0wj6b2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpeu0wj6b2.jl:36\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeu0wj6b2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    if (length(s)==0) return \"\"\n    elseif (length(s)==1) return s\n  \
    \  elseif (length(s)==2) return s[2:2]*2 \n    else \n        s_char = char(s)\n\
    \        s_char[1:end-1]=s_char[3:end]\n        s_char[end]=s_char[2]\n      \
    \  s_char[end-1]=s_char[1]\n        return s_char \n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf_w6lz7p.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"hi\") == \"lm\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpf_w6lz7p.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf_w6lz7p.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf_w6lz7p.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpf_w6lz7p.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\\n  UndefVarError: char not defined\\\
    n  Stacktrace:\\n   [1] encrypt(s::String)\\n     @ Main /tmp/tmpf_w6lz7p.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpf_w6lz7p.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpf_w6lz7p.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpf_w6lz7p.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\\n  MethodError: no method matching *(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\n    *(!Matched::T,\
    \ ::T) where T<:U"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    new_s = []\n    for n in s\n        if n=='z' || n=='Z'\n            new_s\
    \ = [new_s..., 'a', 'A']\n        elseif n=='y' || n=='Y'\n            new_s =\
    \ [new_s..., 'z', 'Z']\n        else\n            new_s = [new_s..., char(Int(n)+2)]\n\
    \        end\n    end\n    return join(new_s, \"\")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0rmw23qc.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp0rmw23qc.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0rmw23qc.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0rmw23qc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp0rmw23qc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: char not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp0rmw23qc.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0rmw23qc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0rmw23qc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp0rmw23qc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp0rmw23qc.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0rmw23qc.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0rmw23qc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp0rmw23qc.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: char not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmp0rmw23qc.jl:19\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0rmw23qc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    d = ['a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q'\
    \ 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z']\n    k = []\n    s = s:lower()\n    for\
    \ i in s\n        for j in 1:26\n            if i == d[j]\n                j +=\
    \ 2*2\n                push!(k,d[j])\n            end\n        end\n    end\n\
    \    return k\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp6te84b_.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: lower not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp6te84b_.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp6te84b_.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp6te84b_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp6te84b_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: lower not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpp6te84b_.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp6te84b_.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp6te84b_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp6te84b_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: lower not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpp6te84b_.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp6te84b_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp6te84b_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpp6te84b_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: lower not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpp6te84b_.jl:14\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp6te84b_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n\
    \    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n\
    \    encrypt('et') returns 'ix'\n    \"\"\"\nfunction encrypt(s::String)::String\
    \ \n    alph = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\"]\n    res = \"\"\n    for c in s\n        x = searchsortedfirst(alph,c)\n\
    \        x -= 2\n        if x<=0\n            x+=26\n        end\n        res\
    \ *= alph[x]\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps902e346.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  MethodError: no method matching\
    \ isless(::String, ::Char)\n  Closest candidates are:\n    isless(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:344\n\
    \    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    isless(!Matched::AbstractChar, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:221\n\
    \    ...\n  Stacktrace:\n    [1] lt(o::Base.Order.ForwardOrdering, a::String,\
    \ b::Char)\n      @ Base.Order ./ordering.jl:109\n    [2] searchsortedfirst\n\
    \      @ ./sort.jl:184 [inlined]\n    [3] searchsortedfirst\n      @ ./sort.jl:295\
    \ [inlined]\n    [4] #searchsortedfirst#4\n      @ ./sort.jl:297 [inlined]\n \
    \   [5] searchsortedfirst\n      @ ./sort.jl:297 [inlined]\n    [6] encrypt(s::String)\n\
    \      @ Main /tmp/tmps902e346.jl:15\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmps902e346.jl:29 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmps902e346.jl:28\ntest set:\
    \ Error During Test at /tmp/tmps902e346.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  MethodError: no method matching\
    \ isless(::String, ::Char)\n  Closest candidates are:\n    isless(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:344\n\
    \    isless(!Matched::Char, ::Char) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:214\n\
    \    isless(!Matched::AbstractChar, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:221\n\
    \    ...\n  Stacktrace:\n    [1] lt(o::Base.Order.ForwardOrdering, a::String,\
    \ b::Char)\n      @ Base.Order ./ordering.jl:109\n    [2] searchsortedfirst\n\
    \      @ ./sort.jl:184 [inlined]\n    [3] searchsortedfirst"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps902e346.jl:26\n"
  exit_code: 1
  status: SyntaxError

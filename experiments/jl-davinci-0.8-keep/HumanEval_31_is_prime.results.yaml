name: HumanEval_31_is_prime
language: jl
results:
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n % 2 == 0\n        return false\n\
    \    end\n    i = 3\n    while i * i <= n\n        if n % i == 0\n           \
    \ return false\n        end\n        i += 2\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvcxi_s_8.jl:41\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvcxi_s_8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvcxi_s_8.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvcxi_s_8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    cond=true\n    if n<2\n        cond=false\n\
    \    else\n        for i in 2:floor(sqrt(n))\n            if n%i==0\n        \
    \        cond=false\n                break\n            end\n        end\n   \
    \ end\n    return cond\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for d in 2:sqrt(n)\n        if n % d == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n==1 || n==2 || n==3\n        return\
    \ true\n    elseif n % 2 == 0 || n % 3 == 0\n        return false\n    else\n\
    \        for i in 5:2:floor(Int64, sqrt(n))\n            if n % i == 0\n     \
    \           return false\n            end\n        end\n        return true\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgqi7u4ge.jl:42\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqi7u4ge.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqi7u4ge.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgqi7u4ge.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 || n == 3\n        return true\n\
    \    elseif n == 1\n        return false\n    elseif n%2 == 0\n        return\
    \ false\n    else\n        for i = 3:2:floor(Int64, sqrt(n))\n            if n%i\
    \ == 0\n                return false\n            end\n        end\n        return\
    \ true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:round(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    #Variables for for loops\n    a = 2\n\
    \    m = n\n    #While loop for odd numbers\n    while m>1\n        #Checking\
    \ if the number is even\n        if m%2 == 0\n            return false\n     \
    \   else\n            #Goes through all the odd numbers\n            for i in\
    \ 3:2:floor(Int64,sqrt(m))\n                if m%i == 0\n                    return\
    \ false\n                end\n            end\n            #only way to get through\
    \ that loop is by not having a factor\n            return true\n        end\n\
    \    end\n    #If the number is 1, then the while loop will never be entered\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n\n        if n % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuusrfyyh.jl:31\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuusrfyyh.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusrfyyh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuusrfyyh.jl:32\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusrfyyh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusrfyyh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuusrfyyh.jl:33\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusrfyyh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusrfyyh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuusrfyyh.jl:34\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuusrfyyh.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuusrfyyh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuusrfyyh.jl:36\n  Expression: candidate(1) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuusrfyyh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    # This determines whether the number is\
    \ prime or not.\n    if n <= 1\n        return false\n    elseif n <= 3\n    \
    \    return true\n    elseif n % 2 == 0 || n % 3 == 0\n        return false\n\
    \    end\n    i = 5\n    while i * i <= n\n        if n % i == 0 || n % (i + 2)\
    \ == 0\n            return false\n        end\n        i += 6\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 0 \n        return false\n   \
    \ end\n    for i = 2:floor(Int64,sqrt(n))\n        if n % i == 0\n           \
    \ return false\n        end\n    end\n    return true\nend\n \n\"\"\"Return a\
    \ list of all primes less than or equal to n.\n    >>> all_primes(10)\n    2-element\
    \ Array{Int64,1}:\n     2\n     3\n    >>> all_primes(20)\n    8-element Array{Int64,1}:\n\
    \     2\n     3\n     5\n     7\n     11\n     13\n     17\n     19\n    >>> all_primes(0)\n\
    \    0-element Array{Int64,1}\n    >>> all_primes(100)\n    25-element Array{Int64,1}:\n\
    \      2\n      3\n      5\n      7\n     11\n     13\n     17\n     19\n    \
    \ 23\n     29\n     31\n     37\n     41\n     43\n     47\n     53\n     59\n\
    \     61\n     67\n     71\n     73\n     79\n     83\n     89\n     97\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpqqv9fh8j.jl:29\nin expression starting at /tmp/tmpqqv9fh8j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n > 1\n        for i in 2:sqrt(n)\n\
    \            if n % i == 0\n                return false\n            end\n  \
    \      end\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n-1 \n        if n % i == 0\
    \ \n            return false \n        end \n    end \n    return true \nend \n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0ujpakme.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ujpakme.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ujpakme.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ujpakme.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n > 1 && all(n % d != 0 for d in\
    \ 2:floor(Int64,sqrt(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 || n == 3\n        return true\n\
    \    elseif (n % 2) == 0 || (n % 3) == 0\n        return false\n    else\n   \
    \     i = 5\n        while i*i <= n\n            if (n % i) == 0 || (n % (i +\
    \ 2)) == 0\n                return false\n            end\n            i += 6\n\
    \        end\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjqs0xzwf.jl:44\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqs0xzwf.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqs0xzwf.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqs0xzwf.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    j=2\n    if n==1\n        return false\n\
    \    end\n    for i in 2:n\n        if(n%i==0)\n            j+=1\n        end\n\
    \    end\n    if j>2\n        return false\n    else\n        return true\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4dgtkuj5.jl:39\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4dgtkuj5.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgtkuj5.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp4dgtkuj5.jl:40\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgtkuj5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgtkuj5.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp4dgtkuj5.jl:41\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgtkuj5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgtkuj5.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp4dgtkuj5.jl:42\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4dgtkuj5.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4dgtkuj5.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp4dgtkuj5.jl:45\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dgtkuj5.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 \n        return true\n    elseif\
    \ n < 2 || (n \xF7 2)*2 == n\n        return false\n    else\n        for i =\
    \ 3:2:ceil(Int64, sqrt(n))\n            if (n \xF7 i)*i == n\n               \
    \ return false\n            end\n        end\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    # logic to check whether n is prime or\
    \ not:\n    if n < 2\n        return false\n    end\n    for i in 2:n-1\n    \
    \    if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i = 2:n-1\n        if mod(n,i) == 0\n            return false\n     \
    \   end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n    # If the number is prime, its factors\
    \ are 1 and itself.\n    # So we only have to check if any of its integers is\
    \ a factor.\n    # This can be optimized by \"breaking\" the loop if any of these\
    \ is true.\n    # If none of the integers are factors, then the number is prime.\n\
    \    # If the number is 1, it's not a prime.\n    # If the number is prime, it\
    \ cannot be even, \n    # so we start with 3 and continue until it's less than\
    \ the square root of the number.\n    if n == 1\n        return false\n    else\n\
    \        for i = 3:sqrt(n)\n            if (n % i) == 0\n                return\
    \ false\n            end\n        end\n        return true\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqii76ghn.jl:42\n  Expression: candidate(6)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqii76ghn.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqii76ghn.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpqii76ghn.jl:47\n  Expression: candidate(4) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqii76ghn.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqii76ghn.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqii76ghn.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1 \n        return false\n   \
    \ end\n    for i in 2:ceil(Int64, sqrt(n))\n        if n % i == 0\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1 \n        return false\n   \
    \ end \n    for i = 2:n-1\n        if (n % i) == 0\n            return false\n\
    \        end\n    end\n    return true\nend\n\"\"\"Return the smallest factor\
    \ of a given number.\n    >>> smallest_factor(10)\n    2\n    >>> smallest_factor(101)\n\
    \    101\n    >>> smallest_factor(17)\n    17\n    >>> smallest_factor(1)\n  \
    \  1\n    >>> smallest_factor(4)\n    2\n    >>> smallest_factor(9)\n    3\n \
    \   \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp0mdmabxv.jl:28\nin expression starting at /tmp/tmp0mdmabxv.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1 return false end\n    if n ==\
    \ 2 return true end\n    if n % 2 == 0 return false end\n    for i = 3:2:floor(Int64,\
    \ sqrt(n))\n        if n % i == 0 return false end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if mod(n, 2) == 0\n        return\
    \ false\n    end\n    for d in 3:2:floor(sqrt(n))\n        if mod(n, d) == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    x = True\n    if n == 1\n        x = false\n\
    \    elseif n > 1\n        for i in 2:n-1\n            if n % i == 0\n       \
    \         x = false\n            end\n        end\n    end\n    return x\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpobmj9oin.jl:35\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  UndefVarError: True not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpobmj9oin.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpobmj9oin.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpobmj9oin.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpobmj9oin.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  UndefVarError: True not defined\n  Stacktrace:\n \
    \  [1] is_prime(n::Int64)\n     @ Main /tmp/tmpobmj9oin.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpobmj9oin.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpobmj9oin.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpobmj9oin.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: True not defined\n  Stacktrace:\n  \
    \ [1] is_prime(n::Int64)\n     @ Main /tmp/tmpobmj9oin.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpobmj9oin.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpobmj9oin.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpobmj9oin.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: True not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpobmj9oin.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpobmj9oin.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n\n        if n % i == 0 &&\
    \ i != n\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqjsfen44.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjsfen44.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjsfen44.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqjsfen44.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n    # check if n is a positive integer\n\
    \    if n < 1\n        return false\n    end\n    \n    # check for factors\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    \n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp856kd0gj.jl:44\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp856kd0gj.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp856kd0gj.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp856kd0gj.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    # Start with a candidate divisor, d, equal to 2.\n    d = 2\n    # Now let's\
    \ check to see if n has any divisors strictly less than n.\n    while n > d*d\n\
    \        # If n is evenly divisible by some d, then it's not prime.\n        if\
    \ n % d == 0\n            return false\n        end\n        # Next, check if\
    \ n is evenly divisible by d+1.\n        d += 1\n    end\n    # If we reach here,\
    \ then n has no divisors less than n, so it's prime.\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpryn9laex.jl:45\n  Expression: candidate(4)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpryn9laex.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpryn9laex.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpryn9laex.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    (n > 1) && all(n % i != 0 for i in 2:sqrt(n))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n > 2 && n %% 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:ceil(Int64,sqrt(n))\n        if n %% i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"%\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp070vyj2f.jl:18\nin expression starting at\
    \ /tmp/tmp070vyj2f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n<2 \n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n%i==0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1 return false end\n    for i\
    \ in 2:round(Int64, sqrt(n))\n        if n % i == 0 return false end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:floor(Int64,sqrt(n))\n    \
    \    if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv4zkmk7u.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4zkmk7u.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4zkmk7u.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv4zkmk7u.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1 return false end\n    if n ==\
    \ 2 return true end\n    if n % 2 == 0 return false end\n    for i in 3:2:round(Int64,sqrt(n))\n\
    \        if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    prime = true\n    if n <= 1\n        prime\
    \ = false\n    else\n        for i = 2:floor(Int64, sqrt(n))\n            if rem(n,\
    \ i) == 0\n                prime = false\n                break\n            end\n\
    \        end\n    end\n    return prime\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n==2 || n==3 || n==5 || n==7 return\
    \ true\n    if n==1 || n==4 || n%2==0 || n%3==0 || n%5==0 || n%7==0 return false\n\
    \    r = n \n    i = 2\n    while i < r\n        if n%i==0 return false\n    \
    \    r = floor(Int64, n/i)\n        i = i+1\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg2kc7fr_.jl:1\nin expression starting at /tmp/tmpg2kc7fr_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    # Try every number smaller than n to see\
    \ if it divides evenly into n\n    # If it does, then n is not prime\n    # We\
    \ only need to try up to sqrt(n) because:\n    #   - if n is not prime, it must\
    \ have a prime factor less than sqrt(n)\n    #   - if n is prime, it cannot have\
    \ a factor more than sqrt(n)\n    for i in 2:ceil(sqrt(n))\n        if mod(n,\
    \ i) == 0\n            return false\n        end\n    end\n    # If we got through\
    \ the loop, n is prime\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpax99g2vc.jl:42\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpax99g2vc.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpax99g2vc.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpax99g2vc.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n<=1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n%i==0\n            return false\n        end\n\
    \    end\n    return true\nend\nis_prime(11)\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    sqrt(n) == round(sqrt(n)) && n % 2 == 0 && n != 2 && n != 1 ? false : true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9d0y38os.jl:28\n  Expression: candidate(6)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0y38os.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0y38os.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9d0y38os.jl:38\n  Expression: candidate(85) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0y38os.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0y38os.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9d0y38os.jl:39\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0y38os.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0y38os.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp9d0y38os.jl:40\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d0y38os.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d0y38os.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     4     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d0y38os.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \"\"\"Return true if a given number is\
    \ prime, and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmddw5jgu.jl:1\nin expression starting at /tmp/tmpmddw5jgu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n    for x = 2:n-1\n        if n % x\
    \ == 0\n            return false\n        end\n    end\n    return true\nend\n\
    # @test is_prime(4)\n# @test is_prime(101)\n# @test is_prime(1)\n# @test is_prime(11)\n\
    # @test is_prime(61)\n# @test is_prime(6)\n# @test is_prime(13441)\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppna7un6s.jl:44\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppna7un6s.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppna7un6s.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppna7un6s.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \"\"\"Tests if n is prime and returns\
    \ true if it is, false otherwise.\"\"\"\n    prime = true\n    for i = 2:ceil(Int64,\
    \ sqrt(n))\n        if mod(n, i) == 0\n            prime = false\n           \
    \ break\n        end\n    end\n    return prime\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu_9qximc.jl:39\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu_9qximc.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu_9qximc.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu_9qximc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i = 2:n-1 \n        if n % i == 0\n\
    \            return false\n        end\n    end\n    true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvnnwrn7z.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvnnwrn7z.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvnnwrn7z.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvnnwrn7z.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:((floor(Int64,sqrt(n)))+1)\n        if n % i == 0\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n % 2 == 0\n        return false\n\
    \    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq_spij8n.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpq_spij8n.jl:1\n\
    in expression starting at /tmp/tmpq_spij8n.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1 || n % 2 == 0 && n != 2 \n \
    \       return false\n    end\n    for i in 2:ceil(Int64, sqrt(n))\n        if\
    \ n % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n > 1\n        sqr = trunc(Int64, sqrt(n))\n\
    \        if n == 2\n            return true\n        elseif n % 2 == 0\n     \
    \       return false\n        else\n            for i in 3:2:sqr\n           \
    \     if n % i == 0\n                    return false\n                end\n \
    \           end\n            return true\n        end\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1: return false\n    for i in\
    \ 2:floor(Int64,sqrt(n))\n        if n % i == 0: return false\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqrpmkjpa.jl:1\nin expression starting at /tmp/tmpqrpmkjpa.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    for i in 2:sqrt(n)\n       \
    \ if n % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \"\"\"Return true if a given number is\
    \ prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n\
    \    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n\
    \    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n\
    \    False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpoigjvy37.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoigjvy37.jl:1\n\
    in expression starting at /tmp/tmpoigjvy37.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    for i in 2:Int(ceil(sqrt(n)))\n\
    \        if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for d in 2:sqrt(n)\n        if n % d == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    # return n in primes\n    if n == 2\n\
    \        return true\n    elseif n == 1\n        return false\n    elseif n %\
    \ 2 == 0\n        return false\n    else\n        i = 3\n        while i <= sqrt(n)\n\
    \            if n % i == 0\n                return false\n            end\n  \
    \          i += 2\n        end\n        return true\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n   if n == 1\n      return false\n   end\n\
    \   for i in 2:n-1\n       if n % i == 0\n           return false\n       end\n\
    \   end\n   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n % 2 == 0) \n        return false\n\
    \    end\n    max = floor(Int64, sqrt(n))\n    for i in 2:max\n        if (n %\
    \ i == 0)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7fxn68x6.jl:40\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fxn68x6.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fxn68x6.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7fxn68x6.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for k in 2:n\n        if k*k > n\n            break\n  \
    \      end\n        if n % k == 0\n            return false\n        end\n   \
    \ end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    #NOTES:\n    #n is an integer greater\
    \ than 1.\n    #returns true if n is prime, and false otherwise.\n    divisors\
    \ = []\n    if n == 1\n        return false\n    end\n    for i = 2:n-1\n    \
    \    if (mod(n,i) == 0)\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:Int64(sqrt(n))\n        if\
    \ n % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpch0kfbka.jl:30\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  InexactError: Int64(2.449489742783178)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmpch0kfbka.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpch0kfbka.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpch0kfbka.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpch0kfbka.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  InexactError: Int64(10.04987562112089)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmpch0kfbka.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpch0kfbka.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpch0kfbka.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpch0kfbka.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  InexactError: Int64(3.3166247903554)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmpch0kfbka.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpch0kfbka.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpch0kfbka.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpch0kfbka.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  InexactError: Int64(115.93532679903913)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./floa"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpch0kfbka.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptck8dkm1.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptck8dkm1.jl:1\n\
    in expression starting at /tmp/tmptck8dkm1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n &lt; 2 || n &amp; 1 == 0\n        return false\n    else\n        for i in\
    \ 3:2:round(Int64,sqrt(n))\n            if n % i == 0\n                return\
    \ false\n            end\n        end\n        return true\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqsimk_44.jl:36\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpqsimk_44.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqsimk_44.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqsimk_44.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpqsimk_44.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  UndefVarError: lt not defined\n  Stacktrace:\n   [1]\
    \ is_prime(n::Int64)\n     @ Main /tmp/tmpqsimk_44.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqsimk_44.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqsimk_44.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpqsimk_44.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: lt not defined\n  Stacktrace:\n   [1]\
    \ is_prime(n::Int64)\n     @ Main /tmp/tmpqsimk_44.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqsimk_44.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqsimk_44.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpqsimk_44.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: lt not defined\n  Stacktrace:\n \
    \  [1] is_prime(n::Int64)\n     @ Main /tmp/tmpqsimk_44.jl:20\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsimk_44.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n % 2 == 0 || n < 2\n        return false\n    else\n        # only needs to\
    \ check the odd numbers\n        # up to n - 1\n        for i = 3:2:n - 1\n  \
    \          if n % i == 0\n                return false\n            end\n    \
    \    end\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n-1\n        if n % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\n \n   \
    \ \n \n \n    \nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp04l5s3l2.jl:41\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp04l5s3l2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp04l5s3l2.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04l5s3l2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:min(n,sqrt(n))\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    i = 2\n    for i in 2:n-1\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1 \n        return false\n   \
    \ end\n    for d in 2:sqrt(n)\n        if n % d == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if mod(n,i) == 0\n            return false\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n < 2)\n        return false\n   \
    \ end\n    for i in (2:n-1)\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1 \n        return false\n   \
    \ end\n    for i in 2:n-1\n        if n % i == 0\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 \n        return false\n    end\n\
    \    for i in 2:Int(sqrt(n))\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp169je8oh.jl:33\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  InexactError: Int64(2.449489742783178)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmp169je8oh.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp169je8oh.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp169je8oh.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp169je8oh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  InexactError: Int64(10.04987562112089)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmp169je8oh.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp169je8oh.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp169je8oh.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp169je8oh.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  InexactError: Int64(3.3166247903554)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmp169je8oh.jl:21\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp169je8oh.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp169je8oh.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp169je8oh.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  InexactError: Int64(115.93532679903913)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./floa"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp169je8oh.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    # Checks if number is one or even.\n \
    \   if mod(n, 2) == 0 || n == 1\n        return false\n    end\n    # Checks if\
    \ number is divisible by any odd numbers between 3 and n-1.\n    for i in 3:2:n-1\n\
    \        if mod(n, i) == 0\n            return false\n        end\n    end\n \
    \   # If no divisor is found, n is prime.\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    upper_bound = isqrt(n)\n    if n < 2\n\
    \        return false\n    end\n    if n == 2\n        return true\n    end\n\
    \    # All primes larger than 3 are of the form 6n+/-1\n    # Check if n is divisible\
    \ by 2 or 3\n    if n % 2 == 0 || n % 3 == 0\n        return false\n    end\n\
    \    for x in 1:upper_bound\n        if n % (6*x-1) == 0 || n % (6*x+1) == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9_2nllt0.jl:44\n  Expression: candidate(11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9_2nllt0.jl:44 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9_2nllt0.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp9_2nllt0.jl:49\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9_2nllt0.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9_2nllt0.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp9_2nllt0.jl:50\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9_2nllt0.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9_2nllt0.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp9_2nllt0.jl:51\n  Expression: candidate(17) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9_2nllt0.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9_2nllt0.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     4     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9_2nllt0.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 \n        return true\n    elseif\
    \ n > 2 \n        #less computationally expensive than finding all divisors\n\
    \        for i in 2:n-1\n            if n % i == 0\n                return false\n\
    \            end\n        end\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i = 2:sqrt(n)\n        if n % i == 0\n            return false\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 \n        return true\n    elseif\
    \ n<=1 \n        return false\n    else\n        # Check whether n is divisible\
    \ by a number in the range 2 to n-1\n        # If n is divisible by a number in\
    \ the range, the number n is composite\n        # So, we need to check the divisibility\
    \ by each number in the range 2 to n-1\n        # If n is not divisible by any\
    \ number in the range, the number n is prime\n        for i=2:n-1\n          \
    \  if n%i == 0\n                return false\n            end\n        end\n \
    \       return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 1\n        return false\n    end\n\
    \    if n == 2 || n == 3\n        return true\n    end\n    for i = 2:n-1\n  \
    \      if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpw5cg9_oi.jl:42\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw5cg9_oi.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw5cg9_oi.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5cg9_oi.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 0 \n        return false\n   \
    \ end\n    for i in 2:n-1\n        if n % i == 0\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzmdosy20.jl:39\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzmdosy20.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzmdosy20.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzmdosy20.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n<2 \n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n%i==0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:ceil(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return_val = false\n    if n == 2 || n\
    \ == 3 || n == 5 || n == 7\n        return_val = true\n    elseif (n > 7) && (n\
    \ % 2 != 0) && (n % 3 != 0) && (n % 5 != 0) && (n % 7 != 0)\n        for i in\
    \ 8:2:isqrt(n)\n            if n % i == 0\n                return_val = false\n\
    \                break\n            else\n                return_val = true\n\
    \            end\n        end\n    end\n    return return_val\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_cbs1ymg.jl:40\n  Expression: candidate(11)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_cbs1ymg.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cbs1ymg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp_cbs1ymg.jl:42\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cbs1ymg.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cbs1ymg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp_cbs1ymg.jl:46\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cbs1ymg.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cbs1ymg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp_cbs1ymg.jl:47\n  Expression: candidate(17) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cbs1ymg.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cbs1ymg.jl:37\ntest set: Test\
    \ Failed at /tmp/tmp_cbs1ymg.jl:50\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_cbs1ymg.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \"\"\"\n    Returns true or false depending\
    \ on whether n is prime or not\n    \"\"\"\n    # We have to use Int64 because\
    \ the algorithm works for larger numbers\n    # but if you don't use Int64 then\
    \ it is not as accurate (it gives wrong\n    # answers for larger numbers)\n \
    \   if n == 2\n        return true\n    elseif n == 3\n        return true\n \
    \   elseif n == 1\n        return false\n    elseif n %% 2 == 0 || n %% 3 == 0\
    \ \n        return false\n    else\n        i = 5\n        while i*i <= n\n  \
    \          if n %% i == 0 || n %% (i+2) == 0\n                return false\n \
    \           end\n            i += 6\n        end\n        return true\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"%\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmponprti3r.jl:30\nin expression starting at\
    \ /tmp/tmponprti3r.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n     if n < 2\n        return false\n\
    \    end\n    \n    for i in 2:sqrt(n)\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    \n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 2:2:round(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphmnt4bg1.jl:49\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmnt4bg1.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmnt4bg1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmphmnt4bg1.jl:50\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmnt4bg1.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmnt4bg1.jl:38\ntest set: Test\
    \ Failed at /tmp/tmphmnt4bg1.jl:51\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphmnt4bg1.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphmnt4bg1.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphmnt4bg1.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for div in 2:n-1\n        if n % div == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 \n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    x = 2\n    if n < x\n        return false\n\
    \    end\n    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n   if n < 2 return false\n   for i in 2:round(Int64,\
    \ sqrt(n))\n        if (n % i) == 0 return false\n   end\n   return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpellv33ph.jl:1\nin expression starting at /tmp/tmpellv33ph.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:trunc(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 return true end\n    if n <\
    \ 2 || n % 2 == 0 return false end\n    for i = 3:2:sqrt(n)\n        if n % i\
    \ == 0\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n  return factor(n) == [n]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw7q4fbk6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpw7q4fbk6.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw7q4fbk6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw7q4fbk6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpw7q4fbk6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpw7q4fbk6.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw7q4fbk6.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw7q4fbk6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpw7q4fbk6.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpw7q4fbk6.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw7q4fbk6.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw7q4fbk6.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpw7q4fbk6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpw7q4fbk6.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw7q4fbk6.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 1 \n        return false\n    end\
    \ \n    for i = 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa3uujvw1.jl:39\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa3uujvw1.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa3uujvw1.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa3uujvw1.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:floor(Int64, sqrt(n))\n   \
    \     if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpl7fxr269.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7fxr269.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7fxr269.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7fxr269.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    max_divisor = trunc(Int64, sqrt(n))\n    for i in 3:2:max_divisor\n\
    \        if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    n == 1 && return false\n    n == 2 &&\
    \ return true\n    n % 2 == 0 && return false\n    # if n < 1 return false end\n\
    \    # if n == 2 return true end\n    # if n % 2 == 0 return false end\n    for\
    \ i in range(3, round(Int64,sqrt(n))+1, 2)\n        if n % i == 0 return false\
    \ end\n    end\n    return true\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw2jp071u.jl:45\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2jp071u.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2jp071u.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpw2jp071u.jl:46\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2jp071u.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2jp071u.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpw2jp071u.jl:47\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2jp071u.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2jp071u.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2jp071u.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n >= 2 && !(2:n-1).any(x -> rem(n,x)\
    \ == 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpex1v6uoi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  type UnitRange has no field any\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmpex1v6uoi.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpex1v6uoi.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpex1v6uoi.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpex1v6uoi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  type UnitRange has no field any\n  Stacktrace:\n \
    \  [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmpex1v6uoi.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpex1v6uoi.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpex1v6uoi.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpex1v6uoi.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  type UnitRange has no field any\n  Stacktrace:\n  \
    \ [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmpex1v6uoi.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpex1v6uoi.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpex1v6uoi.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpex1v6uoi.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  type UnitRange has no field any\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [i"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpex1v6uoi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    i::Int64 = 1\n    k::Int64 = 0\n    while\
    \ i <= floor(Int64,sqrt(n))\n        if n % i == 0\n            k = k + 1\n  \
    \      end\n        i = i + 1\n    end\n    if k == 1\n        return true\n \
    \   else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqaes0kmr.jl:43\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqaes0kmr.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqaes0kmr.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqaes0kmr.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n \u2264 1\n        return false\n\
    \    end\n    if n < 4\n        return true\n    end\n    if n % 2 == 0\n    \
    \    return false\n    end\n    if n < 9\n        return true\n    end\n    if\
    \ n % 3 == 0\n        return false\n    end\n    r = trunc(sqrt(n))\n    f = 5\n\
    \    while f <= r\n        if n % f == 0\n            return false\n        end\n\
    \        if n % (f+2) == 0\n            return false\n        end\n        f +=\
    \ 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    i = 3\n    while i*i <= n\n        if n % i == 0\n     \
    \       return false\n        end\n        i += 2\n    end\n    return true\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n==1)\n        return false\n    end\n\
    \    for i in 2:n-1\n        if (n%i==0)\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    n == 2 || n == 3 || n % 2 != 0 && n %\
    \ 3 != 0 && begin\n        divisible = true\n        i = 5\n        while i^2\
    \ <= n && divisible\n            divisible = n % i != 0\n            i += 2\n\
    \        end\n        !divisible\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmbxek2yc.jl:34\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmbxek2yc.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbxek2yc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbxek2yc.jl:35\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbxek2yc.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbxek2yc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbxek2yc.jl:36\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbxek2yc.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbxek2yc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbxek2yc.jl:37\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbxek2yc.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbxek2yc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbxek2yc.jl:40\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmbxek2yc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    nums = [x for x in 2:sqrt(n)]\n    return\
    \ all(n % x != 0 for x in nums)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprmr0izaj.jl:32\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmr0izaj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmr0izaj.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmr0izaj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n % 2 == 0 \n        return false\n\
    \    end\n    # Note: if n is odd, then it's either a prime or a multiple of 3\n\
    \    # So we can just check if it's a multiple of 3 or a multiple of an odd number\
    \ \n    # greater than 3.\n    if n % 3 == 0 \n        return false\n    end\n\
    \    # Note: we can stop checking at sqrt(n)\n    # Because if n is not a prime,\
    \ \n    # it can be factored as n = a * b\n    # where a <= sqrt(n) and b >= sqrt(n)\n\
    \    # Therefore, if a <= sqrt(n), b >= sqrt(n)\n    # That is, at least one of\
    \ n's factors is <= sqrt(n)\n    # Therefore, if n is not a prime, \n    # there\
    \ exists at least one factor of n <= sqrt(n)\n    # and we have already checked\
    \ all factors <= sqrt(n)\n    # Therefore, if there is a factor of n <= sqrt(n),\n\
    \    # we must have found it by now.\n    # Therefore, if we don't find a factor\
    \ of n <= sqrt(n),\n    # n is a prime\n    for i in range(5, Int(sqrt(n)) + 1,\
    \ 6)\n        if n % i == 0 || n % (i + 2) == 0\n            return false\n  \
    \      end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpivmuajb7.jl:53\\n  Test threw\
    \ exception\\n  Expression: candidate(101) == true\\n  InexactError: Int64(10.04987562112089)\\\
    n  Stacktrace:\\n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] is_prime(n::Int64)\\\
    n     @ Main /tmp/tmpivmuajb7.jl:40\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpivmuajb7.jl:53 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpivmuajb7.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpivmuajb7.jl:54\\n  Test threw exception\\n  Expression:\
    \ candidate(11) == true\\n  InexactError: Int64(3.3166247903554)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] is_prime(n::Int64)\\\
    n     @ Main /tmp/tmpivmuajb7.jl:40\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpivmuajb7.jl:54 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpivmuajb7.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpivmuajb7.jl:55\\n  Test threw exception\\n  Expression:\
    \ candidate(13441) == true\\n  InexactError: Int64(115.93532679903913)\\n  Stacktrace:\\\
    n   [1] Int64\\n     @ ./float.jl:812 [inlined]\\n   [2] is_prime(n::Int64)\\\
    n     @ Main /tmp/tmpivmuajb7.jl:40\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpivmuajb7.jl:55 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpivmuajb7.jl:51\\ntest set:\
    \ Error During Test at /tmp/tmpivmuajb7.jl:56\\n  Test threw exception\\n  Expression:\
    \ candidate(61) == true\\n  InexactError: Int64(7.8"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n < 1) return false end\n    if (n\
    \ == 1) return false end\n    if (n == 2) return true end\n    if (n == 3) return\
    \ true end\n    if (n % 2 == 0) return false end\n    if (n % 3 == 0) return false\
    \ end\n    i = 5\n    w = 2\n    while i * i <= n\n        if (n % i == 0) return\
    \ false end\n        i += w\n        w = 6 - w\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 return false end\n    for i in\
    \ 2:ceil(Int64,sqrt(n))\n        if n % i == 0 return false end\n    end\n   \
    \ return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n \u2264 1\n        return false\n\
    \    end\n    if n < 4\n        return true\n    end\n    if n % 2 == 0\n    \
    \    return false\n    end\n    if n < 9\n        return true\n    end\n    if\
    \ n % 3 == 0\n        return false\n    end\n    r = floor(sqrt(n))\n    f = 5\n\
    \    while f <= r\n        if n % f == 0\n            return false\n        end\n\
    \        if n % (f+2) == 0\n            return false\n        end\n        f +=\
    \ 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n <= 1) # <=1 is not prime\n     \
    \   return false\n    elseif (n == 2) # prime exception\n        return true\n\
    \    elseif (n % 2 == 0) # if the number is even, it is not prime\n        return\
    \ false\n    else\n        for x in 3:2:n-1\n            if (n % x == 0) # if\
    \ it has a divisor, it is not prime\n                return false\n          \
    \  end\n        end\n        return true # if it has not returned false, it is\
    \ prime\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    b = n % 2\n    for i in 2:n-1\n      \
    \  if n % i == 0\n            return false\n        end\n    end\n    if b ==\
    \ 0\n        return false\n    else\n        return true\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ly_7yj8.jl:41\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ly_7yj8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ly_7yj8.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ly_7yj8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    count = 0\n    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n \
    \           count += 1\n        end\n    end\n    if count >= 1\n        return\
    \ false\n    else\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n   return (n > 1) && all(n % i != 0 for i\
    \ in 2:ceil(Int64,sqrt(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    max = floor(Int64, sqrt(n))\n    i = 2\n\
    \    while i <= max\n        if n % i == 0\n            return false\n       \
    \ end\n        i += 1\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph59wjcrr.jl:39\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph59wjcrr.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph59wjcrr.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph59wjcrr.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i = 3:2:sqrt(n)\n        if n % i == 0\n           \
    \ return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    prime = true\n    if n % 2 == 0\n    \
    \    prime = false\n    else\n        for i in 3:2:n-1\n            if n % i ==\
    \ 0\n                prime = false\n                break\n            end\n \
    \       end\n    end\n    return prime\nend\n\"\"\"\n    >>> is_prime(6)\n   \
    \ False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n   \
    \ >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n\
    \    False\n    >>> is_prime(1)\n    False\n\"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpwu7b5zi_.jl:31\nin expression starting at /tmp/tmpwu7b5zi_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 return false\n    for i in 2:floor(Int64,sqrt(n))\n\
    \        if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg2p1bl07.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg2p1bl07.jl:1\n\
    in expression starting at /tmp/tmpg2p1bl07.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in (2:sqrt(n))\n        if n % i == 0\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || mod(n, 2) == 0\n        return false\n    else \n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if mod(n, i) == 0\n                return false\n    \
    \        end\n        end\n        return true\n    end\nend\n\"\"\"Return an\
    \ array containing the first n prime numbers.\n    >>> primes(5)\n    [2, 3, 5,\
    \ 7, 11]\n    >>> primes(2)\n    [2, 3]\n    >>> primes(10)\n    [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29]\n    >>> primes(20)\n    [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71]\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpbu2v0pm5.jl:31\nin expression starting at /tmp/tmpbu2v0pm5.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n   return n > 1 && all(n % i != 0 for i in\
    \ 2:trunc(Int64, sqrt(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    x = (2:n-1)\n    if n < 2\n        return\
    \ false\n    elseif n == 2\n        return true\n    elseif any(x % n == 0)\n\
    \        return false\n    else\n        return true\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7v79rxog.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(6) == false\\n  MethodError: no method matching\
    \ rem(::UnitRange{Int64}, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] is_prime(n::Int64)\\n     @ Main /tmp/tmp7v79rxog.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7v79rxog.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7v79rxog.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp7v79rxog.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(101) == true\\n  MethodError: no method matching rem(::UnitRange{Int64},\
    \ ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] is_prime(n::Int64)\\n     @ Main /tmp/tmp7v79rxog.jl:23\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7v79rxog.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7v79rxog.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmp7v79rxog.jl:36\\n  Test threw excepti"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for d = 2:isqrt(n)\n        if n % d ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsv75f9w9.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsv75f9w9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsv75f9w9.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsv75f9w9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n > 2\n        return !any([(n % i\
    \ == 0) for i in 2:2:floor(Int64,sqrt(n))])\n    elseif n == 2\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfx3nzycj.jl:41\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfx3nzycj.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfx3nzycj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfx3nzycj.jl:42\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfx3nzycj.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfx3nzycj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfx3nzycj.jl:43\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfx3nzycj.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfx3nzycj.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfx3nzycj.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn49zphos.jl:26\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpn49zphos.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49zphos.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn49zphos.jl:27\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49zphos.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49zphos.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn49zphos.jl:28\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49zphos.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49zphos.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn49zphos.jl:29\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49zphos.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49zphos.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpn49zphos.jl:32\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn49zphos.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n < 2)\n        return false\n   \
    \ end\n    if (n == 2)\n        return true\n    end\n    if (n % 2 == 0)\n  \
    \      return false\n    end\n    for i in 3:2:floor(sqrt(n))\n        if (n %\
    \ i == 0)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n<=1\n        return false\n    end\n\
    \    if n==2\n        return true\n    end\n    for i in 2:n-1\n        if n%i==0\n\
    \            return false\n        end\n    end\n    return true\nend\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n-1\n        if (n % i == 0)\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcj4j36ra.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcj4j36ra.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcj4j36ra.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcj4j36ra.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for d in 3:2:n-1\n        if n % d == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n > 1 && count_true(isprime.(2:floor(Int,sqrt(n)):n-1))\
    \ == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmppwy4uui4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_prime(n::Int64)\n     @ Main /tmp/tmppwy4uui4.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwy4uui4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwy4uui4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppwy4uui4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmppwy4uui4.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwy4uui4.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwy4uui4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppwy4uui4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmppwy4uui4.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwy4uui4.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwy4uui4.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppwy4uui4.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmppwy4uui4.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwy4uui4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n > 1    \n        if n < 4 \n    \
    \        return true\n        end\n        elseif n % 2 == 0\n            return\
    \ false\n        elseif n < 9\n            return true\n        elseif n % 3 ==\
    \ 0\n            return false\n        else\n            r = floor(sqrt(n))\n\
    \            f = 5\n            while f <= r\n                if n % f == 0\n\
    \                    return false\n                elseif n % (f + 2) == 0\n \
    \                   return false\n                end\n                f = f +\
    \ 6\n            end\n            return true\n        end\n    else\n       \
    \ return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp186_ily3.jl:17 expected\
    \ \"end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp186_ily3.jl:41\n\
    in expression starting at /tmp/tmp186_ily3.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n > 1 && all([n % i != 0 for i\
    \ in 2:Int(sqrt(n))])\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgeb3vvld.jl:25\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  InexactError: Int64(2.449489742783178)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmpgeb3vvld.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgeb3vvld.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgeb3vvld.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpgeb3vvld.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  InexactError: Int64(10.04987562112089)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmpgeb3vvld.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgeb3vvld.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgeb3vvld.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpgeb3vvld.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  InexactError: Int64(3.3166247903554)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmpgeb3vvld.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgeb3vvld.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgeb3vvld.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpgeb3vvld.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  InexactError: Int64(115.93532679903913)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./floa"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgeb3vvld.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps7l0wyn5.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps7l0wyn5.jl:1\n\
    in expression starting at /tmp/tmps7l0wyn5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    n > 1 || return false\n    n < 4 || return\
    \ true\n    n%2 == 0 || return false\n    n < 9 || return true\n    n%3 == 0 ||\
    \ return false\n    factor = 5\n    while true\n        if n%factor == 0 || n%(factor+2)\
    \ == 0\n            return false\n        end\n        factor += 6\n        if\
    \ factor*factor > n\n            return true\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ma9jb8e.jl:39\n  Expression: candidate(6)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ma9jb8e.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ma9jb8e.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp1ma9jb8e.jl:44\n  Expression: candidate(4) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ma9jb8e.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ma9jb8e.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp1ma9jb8e.jl:49\n  Expression: candidate(85) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ma9jb8e.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ma9jb8e.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp1ma9jb8e.jl:50\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ma9jb8e.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ma9jb8e.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp1ma9jb8e.jl:51\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2]"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ma9jb8e.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n-1\n        if (n % i == 0)\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6sl6d3uq.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sl6d3uq.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sl6d3uq.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sl6d3uq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n <= 1 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    i = 2\n    while i^2 <= n\n        if n % i == 0\n            return false\n\
    \        end\n        i += 1\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    upper_bound = floor(Int64, sqrt(n))\n    for i in 2:upper_bound\n       \
    \ if n % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\n```\nA good thing about Julia is that there is always more than one way to\
    \ do the same thing. Let's see if we can do better:\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi_wt0io6.jl:29\nin expression starting at\
    \ /tmp/tmpi_wt0io6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2 || n == 3\n        return true\n    end\n    if n % 2 == 0 || n\
    \ % 3 == 0\n        return false\n    end\n    for i in 2:floor(Int64, sqrt(n))\n\
    \        if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n \n    n > 1 || return false\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5n9anznr.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5n9anznr.jl:1\n\
    in expression starting at /tmp/tmp5n9anznr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n==1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n%i==0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    limit = convert(Int64,floor(sqrt(n)))\n    for i in 3:2:limit\n\
    \        if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:ceil(Int64,sqrt(n)) \n    \
    \    if n % i == 0 \n            return false \n        end \n    end \n    return\
    \ true \nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3n5ojdge.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3n5ojdge.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3n5ojdge.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3n5ojdge.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n > 2 && (rem(n, 2) == 0 || rem(n,\
    \ 3) == 0)\n        return false\n    end\n    for i in 2:floor(Int64, sqrt(n))\n\
    \        if rem(n, i) == 0\n            return false\n        end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjf3marb6.jl:39\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjf3marb6.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjf3marb6.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjf3marb6.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n<=1)\n        return false\n    end\n\
    \    for i in 2:n-1\n        if (n%i==0)\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    #if n in (1,2)\n    #    return true\n\
    \    #end\n    #for i in 3:n\n    #    if n % i == 0\n    #        return false\n\
    \    #    end\n    #end\n    #return true\n    \n    if n<=1 \n        return\
    \ false\n    elseif n<=3\n        return true\n    elseif n%2==0 || n%3==0\n \
    \       return false\n    else\n        i=5\n        while i*i<=n\n          \
    \  if n%i==0 || n%(i+2)==0\n                return false\n            end\n  \
    \          i+=6\n        end\n        return true\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n < 2) \n        return false\n  \
    \  end\n    i = 2\n    while i <= sqrt(n)\n        if mod(n, i) == 0\n       \
    \     return false\n        end\n        i += 1\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    #only need to check up to square root of n\n    for i in\
    \ 3:sqrt(n):2\n        if n % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvzp5oj8g.jl:50\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzp5oj8g.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzp5oj8g.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpvzp5oj8g.jl:51\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzp5oj8g.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzp5oj8g.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpvzp5oj8g.jl:52\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvzp5oj8g.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvzp5oj8g.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvzp5oj8g.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n  #if n == 1\n  #  return false\n  #end\n\
    \  #for i = 2:n-1\n  #  if n % i == 0\n  #    return false\n  #  end\n  #end\n\
    \  #return true\n  return n == 2 || n > 2 && n % 2 != 0 && all([n % i != 0 for\
    \ i = 3:2:n-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    is_prime = true\n    for i in 2:n-1\n        if n % i == 0\n            is_prime\
    \ = false\n            break\n        end\n    end\n    return is_prime\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n==1\n        return false\n    end\n\
    \    if n==2\n        return true\n    end\n    if n%2==0\n        return false\n\
    \    end\n    for i in 3:round(Int64, sqrt(n))\n        if n%i==0\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n    # Loop over every integer from 2\
    \ to n.\n    for i in 2:n\n        \n        # If i divides n then n cannot be\
    \ prime.\n        if n % i == 0\n            return false\n        end\n    end\n\
    \    \n    # If n is not divisible by anything, then it is prime.\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp90cgoj42.jl:37\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp90cgoj42.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90cgoj42.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp90cgoj42.jl:38\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90cgoj42.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90cgoj42.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp90cgoj42.jl:39\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90cgoj42.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90cgoj42.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp90cgoj42.jl:40\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp90cgoj42.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp90cgoj42.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp90cgoj42.jl:42\n  Expression: candidate(1) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp90cgoj42.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i = 2:sqrt(n)\n        if mod(n, i) == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n    for i in 1:sqrt(n)\n        if n\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpstp_71qu.jl:32\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpstp_71qu.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpstp_71qu.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpstp_71qu.jl:33\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpstp_71qu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpstp_71qu.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpstp_71qu.jl:34\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpstp_71qu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpstp_71qu.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpstp_71qu.jl:35\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpstp_71qu.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpstp_71qu.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpstp_71qu.jl:38\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpstp_71qu.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for factor in 2:floor(Int64, sqrt(n))\n        if n % factor == 0\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 || n == 3 || n == 5 || n ==\
    \ 7\n        return true\n    elseif n % 2 == 0 || n % 3 == 0 || n % 5 == 0 ||\
    \ n % 7 == 0 || n == 1\n        return false\n    else\n        return true\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpinc38jzq.jl:43\n  Expression: candidate(255379)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpinc38jzq.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpinc38jzq.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpinc38jzq.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:floor(Int64,sqrt(n))\n    \
    \    if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpibloyon1.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibloyon1.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibloyon1.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibloyon1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 \n        return true\n    else\n\
    \        i = 2\n        while i < n\n            if n % i == 0\n             \
    \   return false\n            end\n            i += 1\n        end\n        return\
    \ true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp78abf_az.jl:42\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp78abf_az.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp78abf_az.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78abf_az.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    return !(2 .<= n .<= trunc(Int64,sqrt(n)) && n % 2 == 0 || \n           \
    \  3 .<= n .<= trunc(Int64,sqrt(n)) && n % 3 == 0 || \n             5 .<= n .<=\
    \ trunc(Int64,sqrt(n)) && n % 5 == 0 || \n             7 .<= n .<= trunc(Int64,sqrt(n))\
    \ && n % 7 == 0 || \n             11 .<= n .<= trunc(Int64,sqrt(n)) && n % 11\
    \ == 0 || \n             13 .<= n .<= trunc(Int64,sqrt(n)) && n % 13 == 0 || \n\
    \             17 .<= n .<= trunc(Int64,sqrt(n)) && n % 17 == 0 || \n         \
    \    19 .<= n .<= trunc(Int64,sqrt(n)) && n % 19 == 0 || \n             23 .<=\
    \ n .<= trunc(Int64,sqrt(n)) && n % 23 == 0 || \n             29 .<= n .<= trunc(Int64,sqrt(n))\
    \ && n % 29 == 0 || \n             31 .<= n .<= trunc(Int64,sqrt(n)) && n % 31\
    \ == 0 || \n             37 .<= n .<= trunc(Int64,sqrt(n)) && n % 37 == 0 || \n\
    \             41 .<= n .<= trunc(Int64,sqrt(n)) && n % 41 == 0 || \n         \
    \    43 .<= n .<= trunc(Int64,sqrt(n)) && n % 43 == 0 || \n             47 .<=\
    \ n .<= trunc(Int64,sqrt(n)) && n % 47 == 0 || \n             53 .<= n .<= trunc(Int64,sqrt(n))\
    \ && n % 53 == 0 || \n             59 .<= n .<= trunc(Int64,sqrt(n)) && n % 59\
    \ == 0 || \n             61 .<= n .<= trunc(Int64,sqrt(n))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpitkyj5a1.jl:39\nin expression starting at\
    \ /tmp/tmpitkyj5a1.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for d = 2:sqrt(n)\n        if n % d == 0\n            return false\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n > 1 && all([(n % k) != 0 for\
    \ k in 2:Int(sqrt(n))]) \nend\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_z0or4eu.jl:26\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  InexactError: Int64(2.449489742783178)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n\
    \     @ Main /tmp/tmp_z0or4eu.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_z0or4eu.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_z0or4eu.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_z0or4eu.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  InexactError: Int64(10.04987562112089)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmp_z0or4eu.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_z0or4eu.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_z0or4eu.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_z0or4eu.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  InexactError: Int64(3.3166247903554)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_prime(n::Int64)\n  \
    \   @ Main /tmp/tmp_z0or4eu.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_z0or4eu.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_z0or4eu.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_z0or4eu.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  InexactError: Int64(115.93532679903913)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./floa"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_z0or4eu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1:\n        return false\n   \
    \ end\n    for i = 2:n-1\n        if n % i == 0:\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqeihe2p_.jl:19\nin expression starting at\
    \ /tmp/tmpqeihe2p_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return all([n%x != 0 for x in 2:floor(sqrt(n))])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmplc0pl_70.jl:31\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplc0pl_70.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplc0pl_70.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplc0pl_70.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n < 2)\n        return false\n   \
    \ end\n    i = 2\n    while i <= sqrt(n)\n        if (n % i == 0)\n          \
    \  return false\n        end\n        i += 1\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 return false end\n    if n ==\
    \ 2 return true end\n    if n % 2 == 0 return false end\n    for i in 3:2:n-1\
    \ \n        if n % i == 0 \n            return false\n        end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t\
    @test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:n-1\n        if n % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\n    \n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7a2rnahn.jl:37\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7a2rnahn.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7a2rnahn.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7a2rnahn.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n==1\n        return false\n    end\n\
    \    for i in 2:n\n        if mod(n,i)==0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpreq0g4wd.jl:34\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpreq0g4wd.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpreq0g4wd.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpreq0g4wd.jl:35\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpreq0g4wd.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpreq0g4wd.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpreq0g4wd.jl:36\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpreq0g4wd.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpreq0g4wd.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpreq0g4wd.jl:37\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpreq0g4wd.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpreq0g4wd.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpreq0g4wd.jl:40\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpreq0g4wd.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    #add in a check here to make sure the\
    \ number is positive, or greater than 0\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsy5b1col.jl:17\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsy5b1col.jl:1\n\
    in expression starting at /tmp/tmpsy5b1col.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1 \n        return false\n   \
    \ end\n    for i in 2:n-1\n        if n % i == 0\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    val = true\n    if n % 2 == 0\n      \
    \  return false\n    end\n    for i in 2:n\n        if i == n\n            return\
    \ val\n        end\n        if n % i == 0\n            val = false\n        end\n\
    \    end\n    return val\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppr9s09p_.jl:43\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppr9s09p_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppr9s09p_.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppr9s09p_.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n  return n > 1 && all(n % i != 0 for i in\
    \ 2:floor(Int64, sqrt(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2 || n == 3 || n == 5\n        return true\n    end\n    if n % 2\
    \ == 0 || n % 3 == 0 || n % 5 == 0\n        return false\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdncujkmx.jl:45\n  Expression: candidate(77)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdncujkmx.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdncujkmx.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpdncujkmx.jl:46\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdncujkmx.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdncujkmx.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdncujkmx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 return false\n    for i in 2:2:n-1\n\
    \        if n % i == 0 return false\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu2g28fcl.jl:1\nin expression starting at /tmp/tmpu2g28fcl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 1:n-1\n        if n % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp82osjr_.jl:31\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp82osjr_.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp82osjr_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp82osjr_.jl:32\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp82osjr_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp82osjr_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp82osjr_.jl:33\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp82osjr_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp82osjr_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp82osjr_.jl:34\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp82osjr_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp82osjr_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpp82osjr_.jl:36\n  Expression: candidate(1) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp82osjr_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n>1 && isempty(factor(n))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) ==\
    \ false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp6aw__qsj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmp6aw__qsj.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6aw__qsj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6aw__qsj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6aw__qsj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmp6aw__qsj.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6aw__qsj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6aw__qsj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6aw__qsj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmp6aw__qsj.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6aw__qsj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6aw__qsj.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp6aw__qsj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: factor not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmp6aw__qsj.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3]"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6aw__qsj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    k = sqrt(n)\n    if n <= 1\n        return\
    \ false\n    elseif n == 2\n        return true\n    elseif n % 2 == 0\n     \
    \   return false\n    else\n        for i = 3:2:k\n            if n % i == 0\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n<2 return false end\n    for i in\
    \ 2:floor(Int64,sqrt(n))\n        if n%i==0 return false end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    # Start at 2, and look at every other number up to the number\n    # to see\
    \ if it divides in\n    for i in 2:2:n\n        if mod(n, i) == 0\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk80m25gs.jl:45\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk80m25gs.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk80m25gs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk80m25gs.jl:46\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk80m25gs.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk80m25gs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk80m25gs.jl:47\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk80m25gs.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk80m25gs.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk80m25gs.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    return n > 1 && n % 2 != 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx7p9n3sv.jl:35\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx7p9n3sv.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx7p9n3sv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpx7p9n3sv.jl:36\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx7p9n3sv.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx7p9n3sv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpx7p9n3sv.jl:37\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx7p9n3sv.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx7p9n3sv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx7p9n3sv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    \n    if n == 1\n        return false\n\
    \    end\n    \n    if n == 2 || n == 3\n        return true\n    end\n    \n\
    \    if n % 2 == 0 || n % 3 == 0\n        return false\n    end\n    \n    k =\
    \ 5\n    while k*k <= n\n        if n % k == 0 || n % (k+2) == 0\n           \
    \ return false\n        end\n        k += 6\n    end\n    \n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 \n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\n```\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjk7zk069.jl:28\nin expression starting at\
    \ /tmp/tmpjk7zk069.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for d in 2:floor(Int64, sqrt(n))\n        if n % d == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in range(2, floor(Int64, sqrt(n))+1)\n\
    \        if mod(n, i) == 0 \n            return false\n        end\n    end\n\
    \    return true\nend\nis_prime(11)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvssafqrn.jl:37\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvssafqrn.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvssafqrn.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvssafqrn.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for j = 2:sqrt(n)\n        if n % j == 0\n            return false\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:round(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n<=1\n        return false\n    end\n\
    \    if n==2\n        return true\n    end\n    if n%2==0\n        return false\n\
    \    end\n    for i in 3:2:floor(Int64,sqrt(n))\n        if n%i==0\n         \
    \   return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    x = 2 \n    if n == 2 return true \n \
    \   while x < n \n        if n % x == 0 \n            return false \n        end\
    \ \n        x += 1 \n    end \n    return true \nend \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp48rptsz.jl:34\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpp48rptsz.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp48rptsz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp48rptsz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpp48rptsz.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpp48rptsz.jl:26\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp48rptsz.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp48rptsz.jl:33\ntest set:\
    \ E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp48rptsz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n   if n < 2 \n        return false\n    end\n\
    \    \n    for i in 2:floor(Int,sqrt(n))\n        if rem(n,i) == 0\n         \
    \   return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:Int(ceil(sqrt(n)))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for k in 2:ceil(Int64,sqrt(n))\n     \
    \   if n % k == 0\n            return false\n        end\n    end\n    true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3oyot8kf.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3oyot8kf.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3oyot8kf.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3oyot8kf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    is_prime = true\n    # If n is not a number,\
    \ return false.\n    if n < 2\n        is_prime = false\n    # If n is a number,\
    \ then test for divisibility for all number less than n.\n    else\n        for\
    \ i in 1:n\n            if i < n && n % i == 0\n                is_prime = false\n\
    \            end\n        end\n    end\n    return is_prime\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiut14dqq.jl:38\n  Expression: candidate(101)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpiut14dqq.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiut14dqq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpiut14dqq.jl:39\n  Expression: candidate(11) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiut14dqq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiut14dqq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpiut14dqq.jl:40\n  Expression: candidate(13441) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiut14dqq.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiut14dqq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpiut14dqq.jl:41\n  Expression: candidate(61) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiut14dqq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiut14dqq.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpiut14dqq.jl:44\n  Expression: candidate(5) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiut14dqq.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i = 2:n-1\n        if (n % i == 0)\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7iqh6rit.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7iqh6rit.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7iqh6rit.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7iqh6rit.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    #Step 1: Check if n is even and if so,\
    \ return false\n    if n%2 == 0\n        return false\n    end\n    #Step 2: Otherwise,\
    \ n is odd, check if n is divisible by any odd numbers between 3 and sqrt(n)\n\
    \    m = int(floor(sqrt(n)))\n    for i in 3:2:m\n        if n%i == 0\n      \
    \      return false\n        end\n    end\n    #Step 3: No odd number from 3 to\
    \ sqrt(n) divides n, return true\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphc1w03c8.jl:38\n  Test threw exception\n\
    \  Expression: candidate(101) == true\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmphc1w03c8.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphc1w03c8.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphc1w03c8.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphc1w03c8.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ is_prime(n::Int64)\n     @ Main /tmp/tmphc1w03c8.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphc1w03c8.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphc1w03c8.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphc1w03c8.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmphc1w03c8.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphc1w03c8.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphc1w03c8.jl:36\ntest set:\
    \ Error During Test at /tmp/tmphc1w03c8.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(61) == true\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ is_prime(n::Int64)\n     @ Main /tmp/tmphc1w03c8.jl:23\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expan"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphc1w03c8.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1 \n        return false\n   \
    \ end\n    if n <= 3 \n        return true\n    end\n    for i = 2:2:floor(Int64,\
    \ sqrt(n))\n        if n % i == 0\n            return false\n        end\n   \
    \ end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp70x034_w.jl:46\n  Expression: candidate(85)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70x034_w.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70x034_w.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp70x034_w.jl:47\n  Expression: candidate(77) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70x034_w.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70x034_w.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp70x034_w.jl:48\n  Expression: candidate(255379) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp70x034_w.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp70x034_w.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp70x034_w.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    sq = sqrt(n)\n    sq_i = trunc(sq)\n    return all([(n %\
    \ i != 0) for i in 2:sq_i])\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if (n == 1) \n        return false\n \
    \   end\n    if (n == 2)\n        return true\n    end\n    for i = 2:floor(Int64,\
    \ sqrt(n))\n        if mod(n, i) == 0\n            return false\n        end\n\
    \    end\n    return true\nend\n\"\"\"Return the greatest common divisor of two\
    \ integers.\n    >>> gcd(100, 2)\n    2\n    >>> gcd(100, 9)\n    1\n    >>> gcd(100,\
    \ 30)\n    10\n    >>> gcd(100, 100)\n    100\n    >>> gcd(6, 2)\n    2\n    >>>\
    \ gcd(7, 11)\n    1\n    >>> gcd(10, 20)\n    10\n    >>> gcd(4, 5)\n    1\n \
    \   \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpiq38t5dx.jl:31\nin expression starting at /tmp/tmpiq38t5dx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    f::Int64 = 2\n    while n % f != 0 &&\
    \ f*f <= n\n        f = f + 1\n    end\n    return n % f != 0\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1xcg60dg.jl:35\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1xcg60dg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1xcg60dg.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1xcg60dg.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    num_divisors=num_divisors(n)\n    num_divisors>2\
    \ ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfxtlqzyc.jl:26\n  Test threw exception\n\
    \  Expression: candidate(6) == false\n  UndefVarError: num_divisors not defined\n\
    \  Stacktrace:\n   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpfxtlqzyc.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfxtlqzyc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfxtlqzyc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfxtlqzyc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(101) == true\n  UndefVarError: num_divisors not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpfxtlqzyc.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfxtlqzyc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfxtlqzyc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfxtlqzyc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(11) == true\n  UndefVarError: num_divisors not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpfxtlqzyc.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfxtlqzyc.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfxtlqzyc.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfxtlqzyc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(13441) == true\n  UndefVarError: num_divisors not defined\n  Stacktrace:\n\
    \   [1] is_prime(n::Int64)\n     @ Main /tmp/tmpfxtlqzyc.jl:18\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfxtlqzyc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n \u2264 1\n        return false\n\
    \    end\n    if n \u2264 3\n        return true\n    end\n    if n % 2 == 0 ||\
    \ n % 3 == 0\n        return false\n    end\n    i = 5\n    while i * i \u2264\
    \ n\n        if n % i == 0 || n % (i + 2) == 0\n            return false\n   \
    \     end\n        i += 6\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 return false end\n    for d in\
    \ 2:sqrt(n)\n        if n % d == 0 return false end\n    end\n    return true\n\
    end\n```\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptc713uq3.jl:24\nin expression starting at\
    \ /tmp/tmptc713uq3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n==1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n%i==0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    for i in 2:Int64(floor(sqrt(n)))\n   \
    \     if n % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\
    \t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t\
    @test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85)\
    \ == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379) == false)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv0cf5g8k.jl:36\n  Expression: candidate(1)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0cf5g8k.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0cf5g8k.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv0cf5g8k.jl:27\n"
  exit_code: 1
  status: SyntaxError

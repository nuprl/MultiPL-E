name: HumanEval_44_change_base
language: jl
results:
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        x, remainder\
    \ = divrem(x, base)\n        push!(result, remainder)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6vm2d3tb.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp6vm2d3tb.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6vm2d3tb.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6vm2d3tb.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp6vm2d3tb.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp6vm2d3tb.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6vm2d3tb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6vm2d3tb.jl:23\ntest set:\
    \ Error During Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6vm2d3tb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    temp = abs(x)\n    result = \"\"\n    while temp\
    \ > 0\n        mod = temp % base\n        result = string(mod) * result\n    \
    \    temp = temp / base\n    end\n    if x >= 0\n        return result\n    else\n\
    \        return \"-\" * result\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0jve_f3b.jl:30\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0jve_f3b.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(x // base, base) * string(x % base)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppwizg449.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppwizg449.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmppwizg449.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwizg449.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwizg449.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppwizg449.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppwizg449.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmppwizg449.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwizg449.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppwizg449.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppwizg449.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmppwizg449.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmppwizg449.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppwizg449.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwizg449.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    string = \"\"\
    \n    while quotient > 0\n        remainder = quotient % base\n        quotient\
    \ = quotient / base\n        string = string * string(remainder)\n    end\n  \
    \  return string\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqpz7u_tv.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpqpz7u_tv.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqpz7u_tv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqpz7u_tv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqpz7u_tv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqpz7u_tv.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqpz7u_tv.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqpz7u_tv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqpz7u_tv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n   \
    \  @ Main /tmp/tmpqpz7u_tv.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqpz7u_tv.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqpz7u_tv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqpz7u_tv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqpz7u_tv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    y = x\n    i = 0\n    s = \"\"\n    while y >= base^i\n\
    \        i += 1\n    end\n    i -= 1\n    while i >= 0\n        n = y % base^(i+1)\
    \ / base^i\n        y -= n * base^i\n        if n == 10\n            s = string(s,\
    \ \"A\")\n        elseif n == 11\n            s = string(s, \"B\")\n        elseif\
    \ n == 12\n            s = string(s, \"C\")\n        elseif n == 13\n        \
    \    s = string(s, \"D\")\n        elseif n == 14\n            s = string(s, \"\
    E\")\n        elseif n == 15\n            s = string(s, \"F\")\n        else\n\
    \            s = string(s, n)\n        end\n        i -= 1\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2q8vyo65.jl:46\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.66666666666666650.0\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2q8vyo65.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2q8vyo65.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp2q8vyo65.jl:47\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.00.00.0\" == \"100\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2q8vyo65.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2q8vyo65.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp2q8vyo65.jl:48\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.8281250.00.00.00.00.00.00.0\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2q8vyo65.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2q8vyo65.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp2q8vyo65.jl:49\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00.0\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2q8vyo65.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2q8vyo65.jl:45\ntest set: Test\
    \ Failed at /tmp/tmp2q8vyo65.jl:50\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"1.00.00.00.0\" == \"1000\"\nStacktrace:\n [1] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2q8vyo65.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    a::Int64 = 0\n    string = \"\"\n    while x != 0\n\
    \        a = x % base\n        x = x // base\n        string = string * string(a)\n\
    \    end\n    string = reverse(string)\n    return string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqfsfr69t.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpqfsfr69t.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfsfr69t.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqfsfr69t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqfsfr69t.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqfsfr69t.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfsfr69t.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqfsfr69t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqfsfr69t.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n   \
    \  @ Main /tmp/tmpqfsfr69t.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfsfr69t.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqfsfr69t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpqfsfr69t.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqfsfr69t.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    #initialize a string representation of the new number\n\
    \    #start with the last (least significant) digit of the number\n    new_num\
    \ = \"\"\n    while x > 0\n        new_num = string(x % base) * new_num\n    \
    \    x = x \xF7 base\n    end\n    return new_num\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    output = \"\"\
    \n    while(quotient >= base)\n        remainder = div(quotient, base)\n     \
    \   quotient = remainder\n        push!(output,remainder)\n    end\n    return\
    \ output\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmr5zfwlc.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(8, 3) == \"22\"\\n  MethodError: no method\
    \ matching push!(::String, ::Int64)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\\
    n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmpmr5zfwlc.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmr5zfwlc.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmr5zfwlc.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpmr5zfwlc.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(9, 3) == \"100\"\\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\n   \
    \ push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmpmr5zfwlc.jl:18\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpmr5zfwlc.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tm"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    temp = convert(String, div(x, base))\n    rem = rem(x,\
    \ base)\n    return temp * string(rem)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_t1mymnu.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(8, 3) == \"22\"\\n  MethodError: Cannot\
    \ `convert` an object of type Int64 to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmp_t1mymnu.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_t1mymnu.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_t1mymnu.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp_t1mymnu.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(9, 3) == \"100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmp_t1mymnu.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_t1mymnu.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        result =\
    \ string(x % base) * result\n        x = div(x, base)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    divisor = base\n    result = \"\"\n    # repeat until\
    \ x less than base\n    while x >= base\n        # get remainder of integer division\n\
    \        remainder = x % divisor\n        # add remainder to result string\n \
    \       result = string(remainder) * result\n        # get quotient of integer\
    \ division\n        x = x / divisor\n    end\n    # get last quotient after while\
    \ loop\n    result = string(x) * result\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpijk6519o.jl:32\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.66666666666666652\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpijk6519o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpijk6519o.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpijk6519o.jl:33\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.00.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpijk6519o.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpijk6519o.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpijk6519o.jl:34\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.8281251.656251.31250.6251.250.51.00\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpijk6519o.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpijk6519o.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpijk6519o.jl:35\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpijk6519o.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpijk6519o.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpijk6519o.jl:36\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"1.00.00.00\" == \"1000\"\nStacktrace:\n [1] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpijk6519o.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base < 10\n        r = \"\"\n        while x >\
    \ 0\n            r = string(x % base) * r\n            x = x \xF7 base\n     \
    \   end\n        return r\n    else\n        error(\"Not implemented for base\
    \ > 10\")\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    result = \"\"\n    while quotient\
    \ > 0\n        remainder = quotient % base\n        result = string(remainder)\
    \ * result\n        quotient = quotient \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        s = string(x %\
    \ base) * s\n        x = floor(Int64, x / base)\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x != 0\n        s = string(x\
    \ % base) * s\n        x = Int64(x / base)\n    end\n    return s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg7xx98q2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpg7xx98q2.jl:15\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg7xx98q2.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg7xx98q2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpg7xx98q2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpg7xx98q2.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg7xx98q2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg7xx98q2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpg7xx98q2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpg7xx98q2.jl:15\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg7xx98q2.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg7xx98q2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpg7xx98q2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7xx98q2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n  res = \"\"\n  quotient = x\n  remainder = 0\n  while\
    \ quotient > 0\n    remainder = quotient % base\n    quotient = quotient \xF7\
    \ base\n    res = string(remainder) * res\n  end\n  return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    temp = x\n    string = \"\"\n    while temp > 0\n\
    \        string = string * string(temp % base)\n        temp = div(temp, base)\n\
    \    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqtog25ot.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpqtog25ot.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqtog25ot.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqtog25ot.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqtog25ot.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpqtog25ot.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqtog25ot.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqtog25ot.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqtog25ot.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n   \
    \  @ Main /tmp/tmpqtog25ot.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqtog25ot.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqtog25ot.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqtog25ot.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtog25ot.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder = Int64[]\n    while x > 0\n        remainder\
    \ = push!(remainder, x % base)\n        x = div(x, base)\n    end\n    return\
    \ join(reverse(map(Int64, remainder)))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    temp = []\n    if x == 0 \n        return \"0\"\n\
    \    end\n    if x < 0\n        return \"-\"*change_base(-x, base)\n    end\n\
    \    while x != 0\n        push!(temp, x%base)\n        x = div(x, base)\n   \
    \ end\n    return join(reverse(map(string, temp)))\nend\n```\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy68dhhzm.jl:25\nin expression starting at\
    \ /tmp/tmpy68dhhzm.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x != 0\n        s = string(x\
    \ % base) * s \n        x = x div base\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"while\" at /tmp/tmpib5zxpwx.jl:13 expected\
    \ \"end\", got \"div\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpib5zxpwx.jl:15\n\
    in expression starting at /tmp/tmpib5zxpwx.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        r = x % base\n        res = string(r) * res\n\
    \        x = Int64(x / base)\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazht5gz5.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpazht5gz5.jl:19\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpazht5gz5.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpazht5gz5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpazht5gz5.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpazht5gz5.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpazht5gz5.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpazht5gz5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpazht5gz5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpazht5gz5.jl:19\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpazht5gz5.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpazht5gz5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpazht5gz5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazht5gz5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_base = []\n    while x >= base\n        push!(x_base,\
    \ x % base)\n        x = floor(Int64, x / base)\n    end\n    push!(x_base, x)\n\
    \    x_base = reverse(x_base)\n    x_base = [string(i) for i in x_base]\n    return\
    \ join(x_base, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    string_list = [ ]\n    while x >= base\n        push!(string_list,\
    \ string(x % base))\n        x = x \xF7 base\n    end\n    push!(string_list,\
    \ string(x))\n    string_list = reverse(string_list)\n    answer = join(string_list,\
    \ \"\")\n    return answer\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    qua, mod = divrem(x, base)\n    while qua != 0 \n\
    \        print(mod)\n        qua, mod = divrem(qua, base)\n    println(mod)\n\
    \    return mod\nend\n#change_base(7, 2)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptnb49mk3.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptnb49mk3.jl:1\n\
    in expression starting at /tmp/tmptnb49mk3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    if x == 0\n        return \"0\"\n    end\n\
    \    s = \"\"\n    while x > 0\n        push!(s, (x % base) + '0')\n        x\
    \ = x \xF7 base\n    end\n    return reverse(s)\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1_gnctha.jl:29\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp1_gnctha.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1_gnctha.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_gnctha.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1_gnctha.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp1_gnctha.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1_gnctha.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_gnctha.jl:28\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1_gnctha.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base < 2 || base > 10\n        println(\"base\
    \ must be in 2 - 10!\")\n        return\n    end\n    s = \"\"\n    while x !=\
    \ 0\n        s = string(x % base) * s\n        x = x \xF7 base\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new_number = \"\"\n    if x <= 0\n        return\
    \ \"0\"\n    end\n    # base has to be a positive integer between 2 and 9\n  \
    \  if base <= 1 || base >= 10\n        return \"base has to be between 2 and 9\"\
    \n    end\n    remainder = x % base\n    dividend = x\n    while dividend != 0\n\
    \        if base == 2\n            remainder = if remainder == 1\n           \
    \     push!(new_number, '1')\n            else\n                push!(new_number,\
    \ '0')\n            end\n        elseif base == 3\n            remainder = if\
    \ remainder == 0\n                push!(new_number, '0')\n            elseif remainder\
    \ == 1\n                push!(new_number, '1')\n            elseif remainder ==\
    \ 2\n                push!(new_number, '2')\n            end\n        elseif base\
    \ == 4\n            remainder = if remainder == 0\n                push!(new_number,\
    \ '0')\n            elseif remainder == 1\n                push!(new_number, '1')\n\
    \            elseif remainder == 2\n                push!(new_number, '2')\n \
    \           elseif remainder == 3\n                push!(new_number, '3')\n  \
    \          end\n        elseif base == 5\n            remainder = if remainder\
    \ == 0\n                push!(new_number, '0')\n            elseif remainder ==\
    \ 1\n                push!(new_number, '1')\n            elseif remainder == 2\n\
    \                push!(new_number, '2')\n            elseif remainder == 3\n \
    \               push!(new_number, '3')\n            elseif remainder == 4\n  \
    \              push!(new_number, '4')\n            end\n        elseif base ==\
    \ 6\n            remainder = if remainder == 0\n                push!(new_number,\
    \ '0')\n            elseif remainder == 1\n                push!(new_number, '1')\n\
    \            elseif remainder == 2\n                push!(new_number, '2')\n \
    \           elseif remainder == 3\n                push!(new_number, '3')\n  \
    \          elseif remainder == 4\n                push!(new_number, '4')\n   \
    \         elseif remainder == 5\n                push!(new_number, '5')\n    \
    \        end\n       \nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumlhc8nm.jl:1\nin expression starting at /tmp/tmpumlhc8nm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < 0\n        sign = \"-\"\n        x = -x\n\
    \    else\n        sign = \"\"\n    end\n    res = \"\"\n    while x > 0\n   \
    \     rem = x % base\n        res = string(rem) * res\n        x = x \xF7 base\n\
    \    end\n    sign * res\nend\nchange_base(8, 3)\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # to be implemented\n    new=0\n    n=1\n    while\
    \ x>0\n        r=rem(x,base)\n        new=r*n+new\n        x=div(x,base)\n   \
    \     n=n*10\n    end\n    return string(new)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x = convert(Float64, x)\n    base = convert(Float64,\
    \ base)\n    str = \"\"\n    while(x > 0)\n        str = convert(String, Int64(x\
    \ % base)) * str\n        x = x/base\n    end\n    return str\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfsd2dwhg.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpfsd2dwhg.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfsd2dwhg.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfsd2dwhg.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpfsd2dwhg.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpfsd2dwhg.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfsd2dwhg.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfsd2dwhg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder = x % base\n    quotient = floor(Int64,\
    \ x / base)\n    if quotient == 0\n        return string(remainder)\n    else\n\
    \        return change_base(quotient, base) * string(remainder)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = 0\n    ans = \"\"\n    while x >= base ^ n \n\
    \        n += 1\n    end\n    while n >= 0\n        y = x % (base ^ n)\n     \
    \   x = x - y\n        n -= 1\n        ans = ans * string(y)\n    end\n    return\
    \ ans\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyb_i4n49.jl:30\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"800\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyb_i4n49.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyb_i4n49.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyb_i4n49.jl:31\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"9000\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyb_i4n49.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyb_i4n49.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyb_i4n49.jl:32\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"23400000000\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyb_i4n49.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyb_i4n49.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyb_i4n49.jl:33\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1600000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyb_i4n49.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyb_i4n49.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyb_i4n49.jl:34\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"80000\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyb_i4n49.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = \"\"\n    if x == 0 \n        return r\n    end\n\
    \    while x >= base\n        r = string(x % base) * r\n        x = x \xF7 base\n\
    \    end\n    r = string(x) * r\n    return r\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    num = \"\"\n    while x > 0\n        rem = x % base\n\
    \        num = string(rem) * num\n        x = div(x, base)\n    end\n    return\
    \ num\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x \n    new_base_num = []\n    while quotient\
    \ > 0\n        remainder = quotient % base\n        new_base_num = [string(remainder),\
    \ new_base_num...]\n        quotient = quotient \xF7 base\n    end\n    return\
    \ join(new_base_num)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = []\n    while x > 0\n        push!(r, string(x\
    \ % base))\n        x = x \xF7 base\n    end\n    join(reverse(r))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        rem = x % base\n\
    \        x = x // base\n        s = string(rem) * s\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp106h7elp.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp106h7elp.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp106h7elp.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp106h7elp.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp106h7elp.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp106h7elp.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp106h7elp.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp106h7elp.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp106h7elp.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp106h7elp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = rem(x, base)\n\
    \    ans = string(remainder)\n    while quotient != 0\n        x = quotient\n\
    \        quotient = div(x, base)\n        remainder = rem(x, base)\n        ans\
    \ = string(remainder) * ans\n    end\n    return ans\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    output = \"\"\
    \n    while quotient >= base\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        output = string(remainder) * output\n    end\n\
    \    output = string(quotient) * output\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        r = mod(x, base)\n\
    \        s = string(r) * s\n        x = div(x, base)\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainders = []\n    while x > 0\n        r = x %\
    \ base\n        x = x \xF7 base\n        push!(remainders, r)\n    end\n    @assert\
    \ all(map(0:base-1, remainders))\n    s = \"\"\n    for r in reverse(remainders)\n\
    \        s *= string(r)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptrl1vvh8.jl:30\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: objects of type UnitRange{Int64}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] iterate\n     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744\
    \ [inlined]\n   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n\
    \     @ ./abstractarray.jl:2867 [inlined]\n   [5] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmptrl1vvh8.jl:18\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptrl1vvh8.jl:30 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptrl1vvh8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptrl1vvh8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: objects of type UnitRange{Int64}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] iterate\n     @ ./generator.jl:47 [inlined]\n   [2] _collect\n     @ ./array.jl:744\
    \ [inlined]\n   [3] collect_similar\n     @ ./array.jl:653 [inlined]\n   [4] map\n\
    \     @ ./abstractarray.jl:2867 [inlined]\n   [5] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmptrl1vvh8.jl:18\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptrl1vvh8.jl:31 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptrl1vvh8.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptrl1vvh8.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: objects of type UnitRange{Int64}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] iterate\n     @ ./generator.jl:47 [inlined]\n   [2] _colle"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrl1vvh8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return '0'\n    end\n    if x\
    \ < 0\n        return '-' * change_base(-x, base)\n    end\n    s = \"\"\n   \
    \ while x > 0\n        s = string(x % base) * s\n        x = x \xF7 base\n   \
    \ end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        x, remainder\
    \ = divrem(x, base)\n        push!(result, remainder)\n    end\n    join(reverse(result))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd4xtt3cb.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(8, 3) == \"22\"\\n  MethodError: no method\
    \ matching push!(::String, ::Int64)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\\
    n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmpd4xtt3cb.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd4xtt3cb.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpd4xtt3cb.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpd4xtt3cb.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(9, 3) == \"100\"\\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\\n   \
    \ push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\\\
    n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmpd4xtt3cb.jl:15\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpd4xtt3cb.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base > 10\n        error(\"base numbers are less\
    \ than 10\")\n    end\n    result = \"\"\n    d = 0\n    #d = div(x, base)\n \
    \   q = x\n    while q > 0\n        q, r = divrem(q, base)\n        result = string(r)\
    \ * result\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # x: the input number.\n    # base: the base you\
    \ want to convert to.\n    # return string representation after the conversion.\n\
    \    # base numbers are less than 10.\n    y = \"\"\n    while x > 0\n       \
    \ y = string(x % base) * y\n        x = x \xF7 base\n    end\n    y\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else \n\
    \        return change_base(x//base, base) * string(x%base)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp12ni5ux2.jl:23\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp12ni5ux2.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp12ni5ux2.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12ni5ux2.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp12ni5ux2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp12ni5ux2.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp12ni5ux2.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp12ni5ux2.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12ni5ux2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp12ni5ux2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp12ni5ux2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Rational{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp12ni5ux2.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp12ni5ux2.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12ni5ux2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12ni5ux2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainders = []\n    remainder = x\n    for i = 1:floor(Int64,log(x,base))\n\
    \        remainder, r = divrem(remainder, base)\n        prepend!(remainders,r)\n\
    \    end\n    if remainder > 0\n        prepend!(remainders,remainder)\n    end\n\
    \    join(map(string,remainders))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4j9jqrum.jl:28\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"8\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4j9jqrum.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4j9jqrum.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4j9jqrum.jl:29\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"9\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4j9jqrum.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4j9jqrum.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4j9jqrum.jl:30\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"234\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4j9jqrum.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4j9jqrum.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4j9jqrum.jl:31\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"16\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4j9jqrum.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4j9jqrum.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4j9jqrum.jl:32\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"8\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4j9jqrum.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x != 0\n        if x % base\
    \ == 0\n            res = \"0\" * res\n        else\n            res = \"1\" *\
    \ res\n        end\n        x -= x % base\n        x /= base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdpdusdrc.jl:29\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"11\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdpdusdrc.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdpdusdrc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdpdusdrc.jl:35\n  Expression: candidate(2, 3) == \"2\"\n \
    \  Evaluated: \"1\" == \"2\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdpdusdrc.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdpdusdrc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdpdusdrc.jl:36\n  Expression: candidate(3, 4) == \"3\"\n \
    \  Evaluated: \"1\" == \"3\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdpdusdrc.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdpdusdrc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdpdusdrc.jl:37\n  Expression: candidate(4, 5) == \"4\"\n \
    \  Evaluated: \"1\" == \"4\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdpdusdrc.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdpdusdrc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpdpdusdrc.jl:38\n  Expression: candidate(5, 6) == \"5\"\n \
    \  Evaluated: \"1\" == \"5\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdpdusdrc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    answer = \"\"\n    quotient = x\n    while quotient\
    \ > 0\n        answer = string(quotient % base) * answer\n        quotient = quotient\
    \ \xF7 base\n    end\n    return answer\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        remainder\
    \ = x % base\n        result = string(remainder) * result\n        x = x \xF7\
    \ base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    assert base < 10 && base > 1\n    #res = '0'\n  \
    \  res = []\n    while x > 0\n        append!(res, x % base)\n        x = x \xF7\
    \ base\n    end\n    return string(reverse(res))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpkt3544dg.jl:11 expected\
    \ \"end\", got \"base\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkt3544dg.jl:12\n\
    in expression starting at /tmp/tmpkt3544dg.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    y = \"\" # empty string\n    while x != 0\n     \
    \   y = string(x % base) * y # adding string to empty string\n        x = x \xF7\
    \ base\n    end\n    return y\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Convert x to base\n    \"\"\"\n    if x ==\
    \ 0\n        return \"0\"\n    end\n    out_string = \"\"\n    while x > 0\n \
    \       out_string = string(x % base) * out_string\n        x = x // base\n  \
    \  end\n    return out_string\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphquptmli.jl:30\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmphquptmli.jl:19\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmphquptmli.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmphquptmli.jl:29\ntest set:\
    \ Error During Test at /tmp/tmphquptmli.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmphquptmli.jl:19\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmphquptmli.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmphquptmli.jl:29\ntest set:\
    \ Error During Test at /tmp/tmphquptmli.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphquptmli.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    int_part, exp_part = divmod(x, 1)\n    if exp_part\
    \ == 0\n        ret = []\n        while x > 0\n            x, remainder = divmod(x,\
    \ base)\n            push!(ret, remainder)\n        end\n        ret = reverse(ret)\n\
    \        return join(ret)\n    else\n        ret = []\n        while x > 0\n \
    \           x, remainder = divmod(x, base)\n            push!(ret, remainder)\n\
    \        end\n        ret = reverse(ret)\n        return join(ret)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp33rhy_bw.jl:36\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: divmod not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp33rhy_bw.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp33rhy_bw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp33rhy_bw.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp33rhy_bw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: divmod not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp33rhy_bw.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp33rhy_bw.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp33rhy_bw.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp33rhy_bw.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: divmod not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp33rhy_bw.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp33rhy_bw.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp33rhy_bw.jl:35\ntest set:\
    \ Error During Test at /tmp/tmp33rhy_bw.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: divmod not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp33rhy_bw.jl:12\n\
    \   [2] macro expansion\n     @ /shared/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp33rhy_bw.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x > 0\n        r = x % base\n\
    \        x = Int64(floor(x / base))\n        res = string(r) * res\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        remainder\
    \ = x % base\n        result = string(remainder) * result\n        x = x \xF7\
    \ base\n    end\n    return result\nend\nprintln(change_base(8, 3))\nprintln(change_base(8,\
    \ 2))\nprintln(change_base(7, 2))\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "22\n1000\n111\nTest Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    num = x\n    result = \"\"\n    while num > 0\n \
    \       r = num % base\n        num = div(num, base)\n        push!(result, string(r))\n\
    \    end\n    reverse(result)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps1z7irt_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmps1z7irt_.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps1z7irt_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps1z7irt_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmps1z7irt_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmps1z7irt_.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps1z7irt_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps1z7irt_.jl:25\ntest set:\
    \ Error During "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps1z7irt_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    string = \"\"\n    while x > 0\n        r = x % base\n\
    \        string = string * string(r)\n        x = floor(x / base)\n    end\n \
    \   return string\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp542k06ul.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp542k06ul.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp542k06ul.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp542k06ul.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp542k06ul.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp542k06ul.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp542k06ul.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp542k06ul.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp542k06ul.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: objects of type String are\
    \ not callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n   \
    \  @ Main /tmp/tmp542k06ul.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp542k06ul.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp542k06ul.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp542k06ul.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp542k06ul.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base < 2 || base > 10\n        error(\"Base numbers\
    \ are less than 10\")\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x // base\n    end\n    return result\n\
    end\n \nchange_base(8, 3)\nchange_base(8, 2)\nchange_base(7, 2)\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: OverflowError: 4052555153018976267 * 3 overflowed for\
    \ type Int64\nStacktrace:\n [1] throw_overflowerr_binaryop(op::Symbol, x::Int64,\
    \ y::Int64)\n   @ Base.Checked ./checked.jl:154\n [2] checked_mul\n   @ ./checked.jl:288\
    \ [inlined]\n [3] rem\n   @ ./rational.jl:312 [inlined]\n [4] change_base(x::Int64,\
    \ base::Int64)\n   @ Main /tmp/tmpbd4luqn3.jl:17\n [5] top-level scope\n   @ /tmp/tmpbd4luqn3.jl:23\n\
    in expression starting at /tmp/tmpbd4luqn3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        remainder\
    \ = x % base\n        x = x / base\n        result = string(remainder) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjx5hgirq.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjx5hgirq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # define function change_base\n    #   input: two\
    \ integers x (number) and base (bases)\n    #   output: string after the change\n\
    \    # initialize variables\n    x_temp = x\n    result = \"\"\n    while x_temp\
    \ > 0\n        # while loop that goes through the number x\n        digit = x_temp\
    \ % base\n        result = string(digit) * result\n        x_temp = x_temp \xF7\
    \ base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    output = \"\"\n    while x > 0\n        output =\
    \ string(x % base) * output\n        x = x // base\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjzb57rl2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjzb57rl2.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjzb57rl2.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjzb57rl2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjzb57rl2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjzb57rl2.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjzb57rl2.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjzb57rl2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpjzb57rl2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjzb57rl2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    if quotient\
    \ == 0\n        return string(remainder)\n    else\n        return change_base(quotient,\
    \ base) * string(remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    quotient\
    \ = x\n    base_digits = []\n    while quotient > 0\n        remainder = quotient\
    \ % base\n        quotient = quotient \xF7 base\n        push!(base_digits, remainder)\n\
    \    end\n    base_digits = reverse(base_digits)\n    base_digits = join(string.(base_digits))\n\
    \    return base_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # Create conversion function\n    function digit_to_base(digit::Int64,\
    \ base::Int64)::String\n        num_char = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return num_char[digit+1]\n    end\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzmf062s0.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzmf062s0.jl:1\n\
    in expression starting at /tmp/tmpzmf062s0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = String(\"\")\n    while x > 0\n        if\
    \ x % base == 0\n            result = \"0\" * result\n        else\n         \
    \   result = \"1\" * result\n        end\n        x = x div base\n    end\n  \
    \  return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"while\" at /tmp/tmp1mm2hs__.jl:13 expected\
    \ \"end\", got \"div\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1mm2hs__.jl:19\n\
    in expression starting at /tmp/tmp1mm2hs__.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    j = 1\n    q = Int64[]\n    while x > 0\n       \
    \ if x >= base^j\n            q = push!(q, x % base^j)\n            x = x - x\
    \ % base^j\n        end\n        j += 1\n    end\n    q = q[end:-1:1]\n    return\
    \ join(q)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ikcod6a.jl:29\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"62\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ikcod6a.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ikcod6a.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_ikcod6a.jl:30\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"900\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ikcod6a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ikcod6a.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_ikcod6a.jl:31\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"128643208020\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ikcod6a.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ikcod6a.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_ikcod6a.jl:32\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"160000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ikcod6a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ikcod6a.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_ikcod6a.jl:33\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"8000\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ikcod6a.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x/base;\n    if (x == 0) \n        return\
    \ \"\"\n    else\n        remainder = x%base;\n        return change_base(quotient,\
    \ base) * string(remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3r_8m49z.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3r_8m49z.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp3r_8m49z.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3r_8m49z.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3r_8m49z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp3r_8m49z.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3r_8m49z.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp3r_8m49z.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3r_8m49z.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3r_8m49z.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp3r_8m49z.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  MethodError: no method matching change_base(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    change_base(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp3r_8m49z.jl:11\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmp3r_8m49z.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3r_8m49z.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3r_8m49z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0 \n        return \"0\"\n    end\n    res\
    \ = []\n    while x != 0\n        push!(res, x % base)\n        x = div(x, base)\n\
    \    end\n    return join(map(string, reverse(res)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if (base < 2) || (base > 10)\n        error(\"base\
    \ number must be between 2 and 10\")\n    end\n    if (x < 0) || (x > base-1)\n\
    \        error(\"the number must be between 0 and base-1\")\n    end\n    if x\
    \ == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n     \
    \   rem = x % base\n        res = string(rem) * res\n        x = floor(Int64,\
    \ x / base)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpek518hmo.jl:34\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  the number must be between 0 and base-1\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpek518hmo.jl:16\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpek518hmo.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpek518hmo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpek518hmo.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  the number must be between 0 and base-1\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpek518hmo.jl:16\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpek518hmo.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpek518hmo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpek518hmo.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  the number must be between 0 and base-1\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpek518hmo.jl:16\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpek518hmo.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpek518hmo.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpek518hmo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"1000"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpek518hmo.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base == 10\n        return string(x)\n    end\n\
    \    val = \"\"\n    while x > 0\n        r = x % base\n        x = x // base\n\
    \        push!(val, string(r))\n    end\n    reverse(val)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ojpdee0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp1ojpdee0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1ojpdee0.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1ojpdee0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1ojpdee0.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp1ojpdee0.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1ojpdee0.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1ojpdee0.jl:27\ntest set:\
    \ Error During "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ojpdee0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    powers = zeros(Int64, Int(ceil(log(x, base))))\n\
    \    answer = \"\"\n    for i in 1:length(powers)\n        powers[i] = Int64(base\
    \ ^ (i-1))\n    end\n    for i in 1:length(powers)\n        temp = Int64(x //\
    \ powers[i])\n        if temp > 0\n            x = x - temp * powers[i]\n    \
    \        answer = answer * string(temp)\n        else\n            answer = answer\
    \ * \"0\"\n        end\n    end\n    return answer\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpahgv9xmh.jl:33\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"8\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahgv9xmh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahgv9xmh.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpahgv9xmh.jl:34\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"9\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahgv9xmh.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahgv9xmh.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpahgv9xmh.jl:35\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"234\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahgv9xmh.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahgv9xmh.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpahgv9xmh.jl:36\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"16\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahgv9xmh.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahgv9xmh.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpahgv9xmh.jl:37\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"8\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahgv9xmh.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    converted_number\
    \ = \"\"\n    while quotient != 0\n        remainder = quotient % base\n     \
    \   quotient = quotient // base\n        converted_number = string(remainder)\
    \ * converted_number\n    end\n    return converted_number\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3v10dtei.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp3v10dtei.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3v10dtei.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3v10dtei.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3v10dtei.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp3v10dtei.jl:16\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3v10dtei.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3v10dtei.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3v10dtei.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3v10dtei.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    return \"\" # TODO\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsqmx8lhh.jl:19\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqmx8lhh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqmx8lhh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsqmx8lhh.jl:20\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqmx8lhh.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqmx8lhh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsqmx8lhh.jl:21\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsqmx8lhh.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqmx8lhh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsqmx8lhh.jl:22\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqmx8lhh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqmx8lhh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsqmx8lhh.jl:23\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqmx8lhh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r\"\"\"Change numerical base of input number x to\
    \ base.\n    return string representation after the conversion.\n    base numbers\
    \ are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8,\
    \ 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    # Todo:\
    \ final assignment\n    s = \"\"\n    while x >= base:\n        a = x % base\n\
    \        s = \"$s$a\"\n        x = x \xF7 base\n    s = \"$s$x\"\n    s = reverse(s)\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbha_q1se.jl:25\nin expression starting at\
    \ /tmp/tmpbha_q1se.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    base_str = \"\
    \"\n    while quotient != 0\n        remainder = quotient % base\n        quotient\
    \ = quotient \xF7 base\n        push!(base_str, remainder)\n    end\n    return\
    \ join(reverse(base_str))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl51ouiqf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpl51ouiqf.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl51ouiqf.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl51ouiqf.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpl51ouiqf.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpl51ouiqf.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl51ouiqf.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl51ouiqf.jl:26\ntest set:\
    \ Error During Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl51ouiqf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    base_string = \"\"\n    if x == 0\n        return\
    \ \"0\"\n    end\n    if x == 1\n        return \"1\"\n    end\n    while x >\
    \ 0\n        base_string = string(x % base) * base_string\n        x = x // base\n\
    \    end\n    return base_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2f_l2ywm.jl:30\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp2f_l2ywm.jl:20\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2f_l2ywm.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2f_l2ywm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2f_l2ywm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp2f_l2ywm.jl:20\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2f_l2ywm.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2f_l2ywm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2f_l2ywm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2f_l2ywm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder = \"\"\n    while x>=base\n        remainder\
    \ = remainder * string(x%base)\n        x = div(x, base)\n    end\n    remainder\
    \ = remainder * string(x)\n    remainder = reverse(remainder)\n    return remainder\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x = abs(x)\n    result = \"\"\n    while x != 0\n\
    \        remainder = x % base\n        x = div(x, base)\n        push!(result,\
    \ remainder)\n    end\n    return join(reverse(result))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvpir329n.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpvpir329n.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvpir329n.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvpir329n.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvpir329n.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpvpir329n.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvpir329n.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvpir329n.jl:25\ntest set:\
    \ Error During Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvpir329n.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    int_to_base = [\"0\", \"1\", \"2\", \"3\", \"4\"\
    , \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\
    ]\n    if x < base\n        return int_to_base[x]\n    else\n        return change_base(div(x,\
    \ base), base) * int_to_base[rem(x, base)]\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptmdm3lnt.jl:24\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"11\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmdm3lnt.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptmdm3lnt.jl:23\ntest set: Error\
    \ During Test at /tmp/tmptmdm3lnt.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  BoundsError: attempt to access 16-element Vector{String}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64) (repeats 2 times)\n     @ Main /tmp/tmptmdm3lnt.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmdm3lnt.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmdm3lnt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptmdm3lnt.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 16-element\
    \ Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64) (repeats 5 times)\n   \
    \  @ Main /tmp/tmptmdm3lnt.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmdm3lnt.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmdm3lnt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptmdm3lnt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  BoundsError: attempt to access 16-element Vector{String}\
    \ at index [0]\n  Stacktrace:\n   [1] g"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptmdm3lnt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # handle the case that input number is negative\n\
    \    is_negative = false\n    if x < 0\n        is_negative = true\n        x\
    \ = -x\n    end\n    # convert the positive number to new base\n    result = string(x\
    \ % base)\n    x = div(x, base)\n    while x != 0\n        result = string(x %\
    \ base) * result\n        x = div(x, base)\n    end\n    # set the result to negative\
    \ if needed\n    if is_negative\n        result = \"-\" * result\n    end\n  \
    \  return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        s = string(x %\
    \ base) * s\n        x = div(x, base)\n    end\n    return s\nend\nchange_base(8,\
    \ 3)\nchange_base(8, 2)\nchange_base(7, 2)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        if x % base\
    \ < 10\n            result = result * string(x % base)\n        else\n       \
    \     result = result * \"a\"\n        end\n        x = x // base\n    end\n \
    \   return reverse(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3fzi38h3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp3fzi38h3.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3fzi38h3.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3fzi38h3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3fzi38h3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp3fzi38h3.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3fzi38h3.jl:29 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3fzi38h3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp3fzi38h3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3fzi38h3.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # Base: 2, 3, 4, 5, 6, 7, 8, 9\n    result = \"\"\
    \n    while x > 0\n        r = x % base\n        x = div(x, base)\n        push!(result,\
    \ string(r))\n    end\n    return reverse(result)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3yf2zlpp.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp3yf2zlpp.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3yf2zlpp.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3yf2zlpp.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3yf2zlpp.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::String)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp3yf2zlpp.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3yf2zlpp.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3yf2zlpp.jl:25\ntest set:\
    \ Error During "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3yf2zlpp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    quotient = x\n    remainder = 0\n    digits\
    \ = Int64[]\n    \n    while quotient != 0\n        remainder = mod(quotient,\
    \ base)\n        push!(digits, remainder)\n        quotient = div(quotient, base)\n\
    \    end\n    \n    str = \"\"\n    for digit in digits\n        str = string(digit)\
    \ * str\n    end\n    \n    return str\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    t = \"\"\n    while x >= base\n        t = string(x\
    \ % base) * t\n        x = x \xF7 base\n    end\n    t = string(x) * t\n    return\
    \ t\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    xs = []\n    while x >= base\n        rem = x % base\n\
    \        push!(xs, rem)\n        x = x \xF7 base\n    end\n    push!(xs, x)\n\
    \    join(reverse(map(string, xs)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"\n    use first argument as the number to be\
    \ converted\n    use second argument as the numerical base of the output\n   \
    \ \"\"\"\n    if x < base\n        return string(x)\n    else\n        q, r =\
    \ divrem(x, base)\n        return string(change_base(q, base), r)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    result = \"\"\n    while quotient\
    \ >= base \n        quotient, remainder = divrem(quotient, base)\n        result\
    \ = string(remainder) * result\n    end\n    result = string(quotient) * result\n\
    \    return result\nend\nchange_base(8, 3)\nchange_base(8, 2)\nchange_base(7,\
    \ 2)\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = mod(x, base)\n\
    \    if quotient == 0\n        return string(remainder)\n    else\n        return\
    \ string(change_base(quotient, base)) * string(remainder)\n    end\nend\n```\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp97swlnf1.jl:20\nin expression starting at\
    \ /tmp/tmp97swlnf1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q = x\n    out = \"\"\n    while q != 0\n       \
    \ r = q % base\n        q = q \xF7 base\n        push!(out, '0' + r)\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1zgu_6yi.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp1zgu_6yi.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1zgu_6yi.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1zgu_6yi.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1zgu_6yi.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp1zgu_6yi.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1zgu_6yi.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1zgu_6yi.jl:25\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1zgu_6yi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = div(x,\
    \ base)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        #append the\
    \ quotient to the string\n        result = string(x % base) * result\n       \
    \ #divide the number by the base\n        x = x / base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuj4a6bjm.jl:26\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuj4a6bjm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    div = 10\n    if base < 10\n        div = 9\n   \
    \ end\n    result = \"\"\n    while x > 0\n        r = x % base\n        x = div(x,\
    \ base)\n        result = string(r) * result\n    end\n    return result\nend\n\
    \    \n    function change_base(x::Int64, base::Int64)::String \n        divide(x::Int64,\
    \ base::Int64) = 10(x, base)\n        divide(x::Int64, base::Int64) = x / base\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb6987pa4.jl:25\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb6987pa4.jl:25\n\
    in expression starting at /tmp/tmpb6987pa4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        temp = x\
    \ % base\n        if temp > 9\n            temp = char(temp+55)\n        end\n\
    \        result = \"$temp$result\"\n        x = div(x, base)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    numstr = \"\"\n    while x >= base\n        numstr\
    \ = numstr * string(x % base)\n        x = x / base\n    end\n    numstr = numstr\
    \ * string(x)\n    numstr = reverse(numstr)\n    return numstr\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7mgc49n3.jl:26\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5666666666666666.22\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mgc49n3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mgc49n3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7mgc49n3.jl:27\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"0.10.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7mgc49n3.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mgc49n3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7mgc49n3.jl:28\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"521828.152656.15213.1526.052.15.00.10\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mgc49n3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mgc49n3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7mgc49n3.jl:29\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"0.10.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7mgc49n3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7mgc49n3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7mgc49n3.jl:30\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"0.10.00.00\" == \"1000\"\nStacktrace:\n [1] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7mgc49n3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if (base < 1) || (base > 10)\n        throw(DomainError())\n\
    \    end\n    if x < 0\n        throw(DomainError())\n    end\n    if x < base\n\
    \        return string(x)\n    end\n    return change_base(div(x, base), base)\
    \ * string(rem(x, base))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = \"0123456789\"\n    if x < base\n      \
    \  return digits[x+1]\n    else\n        return change_base(x \xF7 base, base)\
    \ * digits[x % base + 1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzb6kklzd.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpzb6kklzd.jl:14\n   [2] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpzb6kklzd.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzb6kklzd.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzb6kklzd.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpzb6kklzd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpzb6kklzd.jl:14\n   [2] change_base(x::Int64, base::Int64) (repeats 2\
    \ times)\n     @ Main /tmp/tmpzb6kklzd.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzb6kklzd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new = \"\"\n    while x > 0\n        new = string(x\
    \ % base) * new\n        x = x / base\n    end\n    return new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcj77phia.jl:24\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcj77phia.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q = x\n    binary_list = []\n    while q > 0\n  \
    \      binary_list = append!(binary_list, q % base)\n        q = Int64(q / base)\n\
    \    end\n    return join(reverse(binary_list))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvfns18e2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpvfns18e2.jl:16\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvfns18e2.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvfns18e2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvfns18e2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpvfns18e2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvfns18e2.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvfns18e2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvfns18e2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpvfns18e2.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvfns18e2.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvfns18e2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvfns18e2.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvfns18e2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        new_digit\
    \ = convert(Int64, x % base)\n        result = string(new_digit) * result\n  \
    \      x = convert(Int64, x / base)\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4h1p1khb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] change_base(x::Int64, base::Int64)\n \
    \    @ Main /tmp/tmp4h1p1khb.jl:16\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4h1p1khb.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4h1p1khb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4h1p1khb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp4h1p1khb.jl:16\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4h1p1khb.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4h1p1khb.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4h1p1khb.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp4h1p1khb.jl:16\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4h1p1khb.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4h1p1khb.jl:24\ntest se"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4h1p1khb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    if quotient\
    \ == 0\n        return string(remainder)\n    else\n        return change_base(quotient,\
    \ base) * string(remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    base_digits = [\"0\", \"1\", \"2\", \"3\", \"4\"\
    , \"5\", \"6\", \"7\", \"8\", \"9\"]\n    output = \"\"\n    value = x\n    while\
    \ value > 0\n        output = base_digits[mod(value, base)] * output\n       \
    \ value = div(value, base)\n    end\n    return output\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc8d7qp9p.jl:26\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"11\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc8d7qp9p.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc8d7qp9p.jl:25\ntest set: Error\
    \ During Test at /tmp/tmpc8d7qp9p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  BoundsError: attempt to access 10-element Vector{String}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpc8d7qp9p.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc8d7qp9p.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc8d7qp9p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpc8d7qp9p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 10-element\
    \ Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpc8d7qp9p.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc8d7qp9p.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc8d7qp9p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpc8d7qp9p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  BoundsError: attempt to access 10-element Vector{String}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8d7qp9p.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4htd02ha.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(8, 3) == \"22\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmp4htd02ha.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4htd02ha.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4htd02ha.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp4htd02ha.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(9, 3) == \"100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @\
    \ Main /tmp/tmp4htd02ha.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4htd02ha.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplmve9_w2.jl:19\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmplmve9_w2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplmve9_w2.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplmve9_w2.jl:18\ntest set:\
    \ Error During Test at /tmp/tmplmve9_w2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmplmve9_w2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplmve9_w2.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplmve9_w2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    if x == 0\n        return \"0\"\n    end\n\
    \    \n    r = String[]\n    while x > 0\n        r = [string(x % base)] .* r\n\
    \        x = x \xF7 base\n    end\n    return join(r)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7oloyqpi.jl:29\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7oloyqpi.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7oloyqpi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7oloyqpi.jl:30\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7oloyqpi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7oloyqpi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7oloyqpi.jl:31\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7oloyqpi.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7oloyqpi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7oloyqpi.jl:32\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7oloyqpi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7oloyqpi.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp7oloyqpi.jl:33\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7oloyqpi.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = []\n    while x != 0\n        r = x % base\n\
    \        push!(digits, r)\n        x = x \xF7 base\n    end\n    join(reverse(digits),\
    \ \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digit2char(d::Int64) = \"0123456789abcdefghijklmnopqrstuvwxyz\"\
    [1 + d]\n    s = \"\"\n    q = x\n    while q > 0\n        s = digit2char(q %\
    \ base) * s\n        q = q \xF7 base\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        rest = x\
    \ % base\n        x = floor(Int64, x / base)\n        result = string(rest) *\
    \ result\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    a = \"\"\n    if x == 0\n        return \"0\"\n \
    \   end\n    while x > 0\n        a = Int64(x % base) * ones(Char, 1) * a\n  \
    \      x = x / base\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3fobc8xa.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching one(::Type{Char})\n\
    \  Closest candidates are:\n    one(!Matched::Union{Type{T}, T}) where T<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:262\n    one(!Matched::Union{Type{P},\
    \ P}) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:54\n\
    \    one(!Matched::LinearAlgebra.SymTridiagonal{T, V} where V<:AbstractVector{T})\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/special.jl:308\n\
    \    ...\n  Stacktrace:\n   [1] ones(#unused#::Type{Char}, dims::Tuple{Int64})\n\
    \     @ Base ./array.jl:526\n   [2] ones(#unused#::Type{Char}, dims::Int64)\n\
    \     @ Base ./array.jl:521\n   [3] change_base(x::Int64, base::Int64)\n     @\
    \ Main /tmp/tmp3fobc8xa.jl:17\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3fobc8xa.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3fobc8xa.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp3fobc8xa.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching one(::Type{Char})\n\
    \  Closest candidates are:\n    one(!Matched::Union{Type{T}, T}) where T<:AbstractString\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:262\n    one(!Matched::Union{Type{P},\
    \ P}) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:54\n\
    \    one(!Matched::LinearAlgebra.SymTridiagonal{T, V} where V<:AbstractVector{T})\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/special.jl:308\n\
    \    ...\n  Stacktrace:\n   [1] ones(#unused#::Type{Char}, dims::Tuple{Int64})\n\
    \     @ Base ./array.jl:526\n   [2] ones(#unused#::Type{Char}, dims::Int64)\n\
    \     @ Base ./array.jl:5"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3fobc8xa.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"\"\n    else\n      \
    \  end = ifelse(x % base < 10, string(x % base), 'A')\n        return change_base(div(x,\
    \ base), base) * end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm9iizb4r.jl:16\nin expression starting at /tmp/tmpm9iizb4r.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new_num = []\n    while x > 0\n        push!(new_num,\
    \ string(x % base))\n        x = div(x, base)\n    end\n    new_num = reverse(new_num)\n\
    \    return join(new_num, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    if x == 0\n        return \"0\"\n\
    \    end\n    while x > 0\n        res = string(res, x % base)\n        x = x\
    \ \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuy9of03u.jl:28\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"001\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuy9of03u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuy9of03u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpuy9of03u.jl:29\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"01010111\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuy9of03u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuy9of03u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpuy9of03u.jl:30\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"00001\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuy9of03u.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuy9of03u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpuy9of03u.jl:31\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"0001\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuy9of03u.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuy9of03u.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuy9of03u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Change numerical base of input number x to\
    \ base.\n    return string representation after the conversion.\n    base numbers\
    \ are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8,\
    \ 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    base_list\
    \ = []\n    while x != 0\n        remainder = x % base\n        base_list = push!(base_list,\
    \ remainder)\n        x = div(x, base)\n    end\n    base_list = reverse(base_list)\n\
    \    base_string = \"\"\n    for i in 1:length(base_list)\n        base_string\
    \ = string(base_string, base_list[i])\n    end\n    return base_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    convert_to_base = Dict()\n    for i in 0:base-1\n\
    \        convert_to_base[i] = string(i)\n    end\n    res = \"\"\n    while x\
    \ != 0\n        remainder = x % base\n        res = convert_to_base[remainder]\
    \ * res\n        x = x / base\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcaytahwe.jl:29\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  KeyError: key 2.6666666666666665 not\
    \ found\n  Stacktrace:\n   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2]\
    \ change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpcaytahwe.jl:19\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcaytahwe.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcaytahwe.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpcaytahwe.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  KeyError: key 0.3333333333333333 not found\n \
    \ Stacktrace:\n   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpcaytahwe.jl:19\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcaytahwe.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcaytahwe.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpcaytahwe.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  KeyError: key 0.5 not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpcaytahwe.jl:19\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcaytahwe.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcaytahwe.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpcaytahwe.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  KeyError: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcaytahwe.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x_copy = x\n    x_list = []\n    result = \"\"\n\
    \    while x_copy >= base\n        remainder = mod(x_copy, base)\n        push!(x_list,\
    \ remainder)\n        x_copy = div(x_copy, base)\n    end\n    push!(x_list, x_copy)\n\
    \    reverse!(x_list)\n    for i in x_list\n        push!(result, i)\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyouefpb1.jl:32\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpyouefpb1.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyouefpb1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyouefpb1.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpyouefpb1.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpyouefpb1.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyouefpb1.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyouefpb1.jl:31\ntest set:\
    \ Error During Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyouefpb1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    end\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb6sj1716.jl:18\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpb6sj1716.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb6sj1716.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb6sj1716.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpb6sj1716.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpb6sj1716.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb6sj1716.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6sj1716.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    dividend = base\n    res = \"\"\
    \n    while quotient >= dividend\n        (quotient, remainder) = divrem(quotient,\
    \ dividend)\n        res = string(remainder) * res\n    end\n    res = string(quotient)\
    \ * res\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    divmod_result = divmod(x, base)\n    if divmod_result[1]\
    \ > 0 \n        return change_base(divmod_result[1], base) * string(divmod_result[2])\n\
    \    else\n        return string(divmod_result[2])\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1124p55e.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: divmod not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1124p55e.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1124p55e.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1124p55e.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp1124p55e.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: divmod not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1124p55e.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1124p55e.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1124p55e.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp1124p55e.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: divmod not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1124p55e.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1124p55e.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1124p55e.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp1124p55e.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: divmod not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmp1124p55e.jl:12\n\
    \   [2] macro expansion\n     @ /shared/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1124p55e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, rem = divrem(x, base)\n    if quotient\
    \ == 0\n        return string(rem)\n    else\n        return change_base(quotient,\
    \ base) * string(rem)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0 \n        return \"0\"\n    end\n    if\
    \ x < 0 \n        return \"-\" * change_base(-x, base)\n    end\n    r = \"\"\n\
    \    while x > 0 \n        x, d = divrem(x, base)\n        r = string(d) * r\n\
    \    end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient::Int64 = x\n    digits::String = \"\"\n\
    \    while (quotient > 0)\n        digits *= string(quotient % base)\n       \
    \ quotient = quotient \xF7 base\n    end\n    digits\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdcvyfs1q.jl:26\n  Expression: candidate(9,\
    \ 3) == \"100\"\n   Evaluated: \"001\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdcvyfs1q.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdcvyfs1q.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpdcvyfs1q.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"01010111\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdcvyfs1q.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdcvyfs1q.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpdcvyfs1q.jl:28\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"00001\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdcvyfs1q.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdcvyfs1q.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpdcvyfs1q.jl:29\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"0001\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdcvyfs1q.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdcvyfs1q.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdcvyfs1q.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    digits = [0; 0; 0; 0; 0; 0; 0; 0; 0; 0]\n    cur_base\
    \ = 10\n    i = 0\n    while x != 0\n        cur_digit = x % cur_base\n      \
    \  x = x // cur_base\n        digits[i] = cur_digit\n        i += 1\n    end\n\
    \    new_str = \"\"\n    for j = i-1:-1:0\n        new_str *= digits[j]\n    end\n\
    \    return new_str\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjf6pvl1q.jl:32\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  BoundsError: attempt to access 10-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjf6pvl1q.jl:18\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjf6pvl1q.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjf6pvl1q.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjf6pvl1q.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  BoundsError: attempt to access 10-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjf6pvl1q.jl:18\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjf6pvl1q.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjf6pvl1q.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpjf6pvl1q.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  BoundsError: attempt to access 10-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903\
    \ [inlined]\n   [2] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjf6pvl1q.jl:18\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjf6pvl1q.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjf6pvl1q.jl:31\ntest set:\
    \ Error During Test at /"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjf6pvl1q.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    if x ==\
    \ 0\n        return \"0\"\n    elseif quotient == 0\n        return string(remainder)\n\
    \    else\n        return change_base(quotient, base) * string(remainder)\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    if x == 0\n        return \"\"\n    end\n    rem = x % base\n\
    \    x = Int64(x / base)\n    return change_base(x, base) * string(rem)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptdi3suwl.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmptdi3suwl.jl:19\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptdi3suwl.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptdi3suwl.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptdi3suwl.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmptdi3suwl.jl:19\n   [3] change_base(x::Int64, base::Int64)\
    \ (repeats 2 times)\n     @ Main /tmp/tmptdi3suwl.jl:20\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptdi3suwl.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmptdi3suwl.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptdi3suwl.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmptdi3suwl.jl:19\n   [3] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmptdi3suwl.jl:20\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptdi3suwl.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptdi3suwl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    while x > 0\n        y = x % base\n\
    \        x = div(x, base)\n        push!(s, '0' + y)\n    end\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppnxngs5u.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmppnxngs5u.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppnxngs5u.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppnxngs5u.jl:24\ntest set:\
    \ Error During Test at /tmp/tmppnxngs5u.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmppnxngs5u.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppnxngs5u.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppnxngs5u.jl:24\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppnxngs5u.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\" \n    while x != 0 \n        result\
    \ = string(x % base) * result\n        x = x//base\n    end\n    return result\n\
    end\n@testset \"1\" begin\n    @test change_base(8, 3) == \"22\"\n    @test change_base(8,\
    \ 2) == \"1000\"\n    @test change_base(7, 2) == \"111\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpejuxud44.jl:19\nin expression starting at /tmp/tmpejuxud44.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < 0\n        x = -x\n        s = '-'\n    else\n\
    \        s = ''\n    end\n    if x == 0\n        return \"0\"\n    end\n    while\
    \ x > 0\n        s = string(x % base) * s\n        x = x \xF7 base\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpccb4i941.jl:16\nin expression starting at\
    \ /tmp/tmpccb4i941.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = string(x % base)\n    while x >= base\n     \
    \   x = x / base\n        s = string(x % base) * s\n    end\n    return s\nend\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoke__e3m.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"2.66666666666666652\" == \"22\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoke__e3m.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoke__e3m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpoke__e3m.jl:26\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1.00.00\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoke__e3m.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoke__e3m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpoke__e3m.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"1.8281251.656251.31250.6251.250.51.00\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoke__e3m.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoke__e3m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpoke__e3m.jl:28\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1.00.00.00.00\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoke__e3m.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoke__e3m.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpoke__e3m.jl:29\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"1.00.00.00\" == \"1000\"\nStacktrace:\n [1] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoke__e3m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    result = \"\"\n    while x != 0\n        remainder\
    \ = x % base\n        x = x \xF7 base\n        result = string(remainder) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < 0\n        throw(DomainError())\n    end\n\
    \    if x == 0\n        return \"0\"\n    end\n    result = []\n    while x !=\
    \ 0\n        x, remainder = divrem(x, base)\n        push!(result, remainder)\n\
    \    end\n    reverse(result)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm9z74yda.jl:30\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{Any} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpm9z74yda.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm9z74yda.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm9z74yda.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm9z74yda.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Vector{Any} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpm9z74yda.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm9z74yda.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:128"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9z74yda.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Change numerical base of input number x to\
    \ base.\n    return string representation after the conversion.\n    base numbers\
    \ are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8,\
    \ 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    n = x\n\
    \    digits = []\n    while n > 0\n        digits = [n % base] + digits\n    \
    \    n = n \xF7 base\n    end\n    return join(digits)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp313kmuu6.jl:35\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  DimensionMismatch(\"dimensions must\
    \ match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at\
    \ 1\")\n  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n\
    \   [2] promote_shape\n     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64},\
    \ Bs::Vector{Any})\n     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmp313kmuu6.jl:25\n   [5] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp313kmuu6.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp313kmuu6.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp313kmuu6.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  DimensionMismatch(\"dimensions must match: a has\
    \ dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n  Stacktrace:\n\
    \   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n\
    \     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64}, Bs::Vector{Any})\n\
    \     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64, base::Int64)\n  \
    \   @ Main /tmp/tmp313kmuu6.jl:25\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp313kmuu6.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp313kmuu6.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp313kmuu6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  DimensionMismatch(\"dimensions must match:\
    \ a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n\
    \  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2]\
    \ promote_shape\n     @ ./indic"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp313kmuu6.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    neg\
    \ = false\n    if x < 0\n        neg = true\n        x = -x\n    end\n    results\
    \ = []\n    while x > 0\n        push!(results, (x % base))\n        x = x //\
    \ base\n    end\n    if neg\n        results = ['-' for x in results]\n    end\n\
    \    return reverse(join(string.(results)))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt9ohjcgq.jl:35\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpt9ohjcgq.jl:22\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpt9ohjcgq.jl:35 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpt9ohjcgq.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpt9ohjcgq.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpt9ohjcgq.jl:22\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpt9ohjcgq.jl:36 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpt9ohjcgq.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpt9ohjcgq.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt9ohjcgq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = []\n    while x != 0\n        push!(res, convert(String,\
    \ x % base))\n        x = x \xF7 base\n    end\n    return join(reverse(res))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpec7hogac.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpec7hogac.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpec7hogac.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpec7hogac.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpec7hogac.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpec7hogac.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpec7hogac.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpec7hogac.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = []\n    while x > 0\n        r = x % base\n\
    \        push!(result, r)\n        x = x \xF7 base\n    end\n    return join(reverse(result))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base == 10\n        return string(x)\n    end\n\
    \    z = 0\n    r = []\n    while x >= base\n        z = x % base\n        r =\
    \ append!(r, z)\n        x = x // base\n    end\n    r = append!(r, x)\n    return\
    \ join(reverse(r))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw_r9qmc4.jl:30\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"8//32\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_r9qmc4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_r9qmc4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw_r9qmc4.jl:31\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"1//10//10\" == \"100\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_r9qmc4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_r9qmc4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw_r9qmc4.jl:32\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"117//6453//3221//165//85//41//21//10\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_r9qmc4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_r9qmc4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw_r9qmc4.jl:33\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1//10//10//10//10\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_r9qmc4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_r9qmc4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw_r9qmc4.jl:34\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"1//10//10//10\" == \"1000\"\nStacktrace:\n [1] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_r9qmc4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base\n        return string(x)\n    else\n\
    \        return change_base(div(x, base), base) * string(rem(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    result = \"\"\n    while quotient\
    \ != 0\n        result = string(quotient % base) * result\n        quotient =\
    \ quotient / base\n    end\n    return result\nend\nchange_base(8, 3)\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpciaw24h9.jl:26\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpciaw24h9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = convert(String, x % base)\n    while x >\
    \ base - 1\n        x = x \xF7 base\n        result = string(x % base, result)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7pzhi3n_.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp7pzhi3n_.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7pzhi3n_.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7pzhi3n_.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7pzhi3n_.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp7pzhi3n_.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7pzhi3n_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7pzhi3n_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = x\n    output = \"\"\n    while n > 0\n     \
    \   output = string(n % base) * output\n        n = div(n, base)\n    end\n  \
    \  output\nend\n \nchange_base(8, 3)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"\"\"\"\n    # check for not negative base\n\
    \    if base < 2\n        println(\"base should be greater than 1\")\n       \
    \ return\n    end\n    # check for Int64\n    if !(isinstance(x, Int64))\n   \
    \     println(\"x is not Int64\")\n        return\n    end\n    # check for Int64\n\
    \    if !(isinstance(base, Int64))\n        println(\"base is not Int64\")\n \
    \       return\n    end\n    # check for negative number\n    if x < 0\n     \
    \   return \"negative numbers not supported\"\n    end\n    # check for zero\n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        rem = x % base\n        x = x \xF7 base\n        result = string(rem)\
    \ * result\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjosenl7v.jl:49\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  UndefVarError: isinstance not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjosenl7v.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjosenl7v.jl:49 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjosenl7v.jl:48\ntest set:\
    \ Error During Test at /tmp/tmpjosenl7v.jl:50\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  UndefVarError: isinstance not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjosenl7v.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjosenl7v.jl:50 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjosenl7v.jl:48\ntest set:\
    \ Error During Test at /tmp/tmpjosenl7v.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  UndefVarError: isinstance not defined\n\
    \  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjosenl7v.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjosenl7v.jl:51 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjosenl7v.jl:48\ntest set:\
    \ Error During Test at /tmp/tmpjosenl7v.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  UndefVarError: isinstance not defined\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpjosenl7v.jl:19\n\
    \   [2] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjosenl7v.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base > 10\n        return \"base error\"\n   \
    \ end\n    remainders = []\n    while x > 0\n        remainder = x % base\n  \
    \      push!(remainders, remainder)\n        x = x \xF7 base\n    end\n    reverse_str\
    \ = string(reverse(remainders))\n    return reverse_str\nend\nprintln(change_base(99,\
    \ 2))\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "Any[1, 1, 0, 0, 0, 1, 1]\ntest set: Test Failed at /tmp/tmpy759xaks.jl:30\n\
    \  Expression: candidate(8, 3) == \"22\"\n   Evaluated: \"Any[2, 2]\" == \"22\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy759xaks.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy759xaks.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpy759xaks.jl:31\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"Any[1, 0, 0]\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy759xaks.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy759xaks.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpy759xaks.jl:32\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"Any[1, 1, 1, 0, 1, 0, 1, 0]\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy759xaks.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy759xaks.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpy759xaks.jl:33\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"Any[1, 0, 0, 0, 0]\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy759xaks.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy759xaks.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpy759xaks.jl:34\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"Any[1, 0, 0, 0]\" == \"1000\"\nStac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy759xaks.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        remainder\
    \ = x % base\n        x = x \xF7 base\n        result = string(remainder) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    i = 0\n    result = \"\"\n    while(i < base):\n\
    \        if (x < base^i):\n            result = '0' * (base^i - x) * (i != 0)\
    \ * \"1\" * (i == 0) * result\n            return result\n        elif (x % base^i\
    \ < base^(i-1)):\n            result = '0' * (base^i - x % base^i) * (i != 0)\
    \ * \"1\" * (i == 0) * result\n            x = x - (base^i - x % base^i)\n   \
    \         i += 1\n        else:\n            i += 1\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppz80je0r.jl:15\nin expression starting at\
    \ /tmp/tmppz80je0r.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x > 0\n        res = string(x\
    \ % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    str = \"\"\n    if x==0\n        return \"0\"\n \
    \   end\n    while x != 0\n        str = string(x%base) * str\n        x = x//base\n\
    \    end\n    return str\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgoan1om_.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpgoan1om_.jl:17\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgoan1om_.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgoan1om_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgoan1om_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpgoan1om_.jl:17\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgoan1om_.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgoan1om_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgoan1om_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgoan1om_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    new_base_nums = [] # create an empty list to store\
    \ new base numbers\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphrgib13j.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphrgib13j.jl:1\n\
    in expression starting at /tmp/tmphrgib13j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    base_str = \"\"\n    while x > 0\n        base_str\
    \ = string(x % base) * base_str\n        x = div(x, base)\n    end\n    return\
    \ base_str\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t\
    @test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    remainder = []\n    while x > 0\n        push!(remainder,\
    \ x % base)\n        x = x // base\n    end\n    return join(reverse(map(x ->\
    \ string(x), remainder)))\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeoi6jmm2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpeoi6jmm2.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpeoi6jmm2.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpeoi6jmm2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpeoi6jmm2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpeoi6jmm2.jl:14\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpeoi6jmm2.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpeoi6jmm2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpeoi6jmm2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeoi6jmm2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = x\
    \ \xF7 base\n    end\n    return res\nend\nchange_base(8, 3)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = x\
    \ \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainders = x, []\n    while quotient\
    \ >= base\n        quotient, remainder = divrem(quotient, base)\n        push!(remainders,\
    \ remainder)\n    end\n    push!(remainders, quotient)\n    return string(reverse(remainders))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5tds1av.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"Any[2, 2]\" == \"22\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5tds1av.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5tds1av.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo5tds1av.jl:26\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"Any[1, 0, 0]\" == \"100\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5tds1av.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5tds1av.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo5tds1av.jl:27\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"Any[1, 1, 1, 0, 1, 0, 1, 0]\" == \"11101010\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5tds1av.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5tds1av.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo5tds1av.jl:28\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"Any[1, 0, 0, 0, 0]\" == \"10000\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo5tds1av.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo5tds1av.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo5tds1av.jl:29\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"Any[1, 0, 0, 0]\" == \"1000\"\nStacktrace:\n [1] macro expans"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5tds1av.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"\n    \u6700\u521D\u306E1\u304C\u51FA\u308B\
    \u6841\u3092\u8A08\u7B97\u3059\u308B\u3002\n    \u4F8B\u3048\u30708\u306A\u3089\
    \u30012^3\u307E\u3067\u8A08\u7B97\u3057\u30018\u306F2^3\u4EE5\u4E0A2^2\u672A\u6E80\
    \u3067\u3042\u308B\u3002\n    \u3053\u306E\u8A08\u7B97\u30923\u6841\u76EE\u306B\
    \u304A\u3044\u3066\u884C\u3046\u3002\n    \u3053\u308C\u3092\u4E00\u6841\u305A\
    \u3064\u8A08\u7B97\u3057\u3066\u3044\u304F\u3002\n    \"\"\"\n    power = 0\n\
    \    while base^power <= x\n        power += 1\n    end\n    power -= 1\n    digits\
    \ = Array{Char}(undef, power+1)\n    i = 1\n    while power >= 0\n        if x\
    \ >= base^power\n            digits[i] = base + 48\n            x -= base^power\n\
    \        else\n            digits[i] = 0 + 48\n        end\n        power -= 1\n\
    \        i += 1\n    end\n    join(digits)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjr1an82w.jl:42\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"33\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjr1an82w.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjr1an82w.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpjr1an82w.jl:43\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"300\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjr1an82w.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjr1an82w.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpjr1an82w.jl:44\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"22202020\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjr1an82w.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjr1an82w.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpjr1an82w.jl:45\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"20000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjr1an82w.jl:45 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjr1an82w.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpjr1an82w.jl:46\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"2000\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjr1an82w.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    remainder = 0\n    result = \"\"\
    \n    while quotient > 0\n        remainder = quotient % base\n        quotient\
    \ = trunc(Int64, quotient / base)\n        push!(result, remainder)\n    end\n\
    \    return join(reverse(result))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgftxmsr7.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpgftxmsr7.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgftxmsr7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgftxmsr7.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpgftxmsr7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpgftxmsr7.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgftxmsr7.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgftxmsr7.jl:26\ntest set:\
    \ Error During Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgftxmsr7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    x = Int64(x)\n    base = Int64(base)\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = x / base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2lhooyi0.jl:26\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2lhooyi0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = div(x, base)\n    remainder = rem(x, base)\n\
    \    if quotient == 0\n        return string(remainder)\n    else\n        return\
    \ change_base(quotient, base) * string(remainder)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    a = string(x, base)\n    return a\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgusn93hd.jl:20\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"83\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgusn93hd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgusn93hd.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgusn93hd.jl:21\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"93\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgusn93hd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgusn93hd.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgusn93hd.jl:22\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"2342\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgusn93hd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgusn93hd.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgusn93hd.jl:23\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"162\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgusn93hd.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgusn93hd.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpgusn93hd.jl:24\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"82\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgusn93hd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        remainder\
    \ = x % base\n        x = x \xF7 base\n        result = string(remainder) * result\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = \"\"\n    while x > 0\n        result = string(x % base) * result\n      \
    \  x = Int64(x / base)\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyxsnw0ma.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  InexactError: Int64(2.6666666666666665)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpyxsnw0ma.jl:18\n   [3] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyxsnw0ma.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyxsnw0ma.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpyxsnw0ma.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  InexactError: Int64(0.3333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpyxsnw0ma.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyxsnw0ma.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyxsnw0ma.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpyxsnw0ma.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  InexactError: Int64(58.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] change_base(x::Int64, base::Int64)\n\
    \     @ Main /tmp/tmpyxsnw0ma.jl:18\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyxsnw0ma.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyxsnw0ma.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpyxsnw0ma.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(16, 2) == \"10000\"\n  InexactError: Int64(0.5)"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyxsnw0ma.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x != 0\n        a = x %\
    \ base\n        x = div(x, base)\n        result = string(a) * result\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    x = Int64(x)\n    base = Int64(base)\n    \n\
    \    # in the case where x is zero \n    if x == 0\n        return \"0\"\n   \
    \ end\n    \n    # in the case where x is less than zero\n    x_abs = abs(x)\n\
    \    x_sign = sign(x)\n    \n    # place holder for number string\n    x_string\
    \ = \"\"\n    \n    # use do loop to interate integer division\n    while x_abs\
    \ > 0\n        x_string = string(x_abs % base) * x_string\n        x_abs = x_abs\
    \ \xF7 base\n    end\n    \n    # in the case where x is less than zero\n    if\
    \ x_sign == -1\n        x_string = \"-\" * x_string\n    end\n    \n    return\
    \ x_string\nend\n \nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"\n    >>> change_base(7, 2)\n    '111'\n  \
    \  \"\"\"\n    # initialize the remaninder and the quotient\n    remainder = 0\n\
    \    quotient = x\n    # initilize the output\n    output = \"\"\n    while quotient\
    \ != 0\n        remainder = quotient % base\n        quotient = floor(quotient\
    \ / base)\n        output = append!(output, string(remainder))\n    end\n    return\
    \ reverse(output)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpte4uq5ge.jl:33\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching append!(::String,\
    \ ::String)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpte4uq5ge.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpte4uq5ge.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpte4uq5ge.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpte4uq5ge.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching append!(::String,\
    \ ::String)\n  Closest candidates are:\n    append!(!Matched::BitVector, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,\
    \ ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n  Stacktrace:\n\
    \   [1] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpte4uq5ge.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpte4uq5ge.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpte4uq5ge.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpte4uq5ge.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  Method"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpte4uq5ge.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    answer = \"\" \n    while x >= base \n        push!(answer,\
    \ '0' + (x % base)) \n        x = x \xF7 base \n    end \n    push!(answer, '0'\
    \ + x) \n    reverse(answer) \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz8m8xqxk.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpz8m8xqxk.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz8m8xqxk.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz8m8xqxk.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz8m8xqxk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpz8m8xqxk.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz8m8xqxk.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz8m8xqxk.jl:24\ntest set:\
    \ Error During Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz8m8xqxk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    result\
    \ = String[]\n    while x != 0\n        push!(result, string(x % base))\n    \
    \    x = x \xF7 base\n    end\n    return reverse(join(result))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    value = x\n    result = \"\"\n    while value > 0\n\
    \        result = string(value % base) * result\n        value = value / base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj0hxr63m.jl:25\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"5.0e-3241.0e-3232.5e-3238.0e-3232.3e-3227.0e-3222.105e-3216.32e-3211.895e-3205.685e-3201.7055e-3195.1165e-3191.534943e-3184.604825e-3181.3814476e-3174.144342e-3171.2433026e-3163.7299079e-3161.11897237e-3153.35691711e-3151.007075132e-3143.0212253965e-3149.0636761895e-3142.71910285685e-3138.1573085706e-3132.44719257118e-3127.34157771355e-3122.202473314064e-3116.607419942193e-3111.9822259826578e-3105.9466779479735e-3101.78400338439205e-3095.352010153176153e-3091.6056030459528454e-3084.816809137858536e-3081.4450427413575606e-3074.335128224072682e-3071.3005384672218045e-3063.9016154016654134e-3061.170484620499624e-3053.511453861498872e-3051.0534361584496615e-3043.1603084753489846e-3049.480925426046954e-3042.8442776278140862e-3038.532832883442258e-3032.5598498650326775e-3027.679549595098033e-3022.30386487852941e-3016.91159463558823e-3012.073478390676469e-3006.220435172029407e-3001.866130551608822e-2995.598391654826466e-2991.6795174964479396e-2985.038552489343819e-2981.5115657468031457e-2974.534697240409437e-2971.360409172122831e-2964.0812275163684927e-2961.2243682549105478e-2953.6731047647316435e-2951.101931429419493e-2943.305794288258479e-2949.917382864775438e-2942.9752148594326316e-2938.925644578297895e-2932.6776933734893684e-2928.033080120468105e-2922.4099240361404313e-2917.229772108421293e-2912.1689316325263882e-2906.506794897579164e-2901.9520384692737492e-2895.856115407821248e-2891.7568346223463742e-2885.270503867039122e-2881.5811511601117368e-2874.74345348033521e-2871.423036044100563e-2864.269108132301689e-2861.2807324396905068e-2853.8421973190715204e-2851.152659195721456e-2843.457977587164368e-2841.0373932761493105e-2833.1121798284479315e-2839.336539485343795e-2832.8009618456031383e-2828.402885536809415e-2822.5208656610428243e-2817.562596983128473e-2812.268779094938542e-2806.806337284815626e-2802.0419011854446876e-2796.125703556334063e-2791.837711066900219e-2785.513133200700657e-2781.6539399602101971e-2774.961819"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0hxr63m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    # helper function\n    function helper(x, base):\n\
    \        if x == 0:\n            return \"\"\n        else:\n            # recursive\
    \ call\n            return helper(x \xF7 base, base) * string(x % base)\n    \
    \    end\n    end\n    \n    return helper(x, base)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: newline not allowed after \":\" used for quoting\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp2x_nsp33.jl:15\nin expression\
    \ starting at /tmp/tmp2x_nsp33.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # check if the input base is valid\n    if base >\
    \ 10 || base < 2\n        return \"Base can not be greater than 10 and less than\
    \ 2.\"\n    end\n    num = x\n    base10 = 0\n    power = 0\n    while num !=\
    \ 0\n        base10 += (num % 10) * base^power\n        num = div(num, 10)\n \
    \       power += 1\n    end\n    # convert to string\n    digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    i = 0\n    s = \"\"\n    while base10 != 0\n        s = digits[base10 %\
    \ base + 1] * s\n        base10 = div(base10, base)\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptv9rtmor.jl:41\n  Expression: candidate(234,\
    \ 2) == \"11101010\"\n   Evaluated: \"10010\" == \"11101010\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptv9rtmor.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptv9rtmor.jl:38\ntest set: Test\
    \ Failed at /tmp/tmptv9rtmor.jl:42\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"1000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptv9rtmor.jl:42 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptv9rtmor.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     2     12\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptv9rtmor.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \"\"\"Change numerical base of input number x to\
    \ base.\n    return string representation after the conversion.\n    base numbers\
    \ are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8,\
    \ 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    quotient\
    \ = x\n    res = \"\"\n    while quotient > 0\n        remainder = quotient %\
    \ base\n        quotient = quotient \xF7 base\n        res = \"$remainder$res\"\
    \n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if base > 10 || base < 2\n        error(\"base must\
    \ be less than 10 and greater than 1\")\n    end\n    r = \"\"\n    while x >\
    \ 0\n        r = string(x % base) * r\n        x = x \xF7 base\n    end\n    return\
    \ r\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    dividend = x\n    quotient = 0\n    remainder = 0\n\
    \    result = \"\"\n    while quotient != 0\n        quotient = dividend / base\n\
    \        remainder = dividend % base\n        result = string(remainder) * result\n\
    \        dividend = quotient\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpikfysfim.jl:29\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikfysfim.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikfysfim.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpikfysfim.jl:30\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikfysfim.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikfysfim.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpikfysfim.jl:31\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpikfysfim.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikfysfim.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpikfysfim.jl:32\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikfysfim.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikfysfim.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpikfysfim.jl:33\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpikfysfim.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    number = convert(Int64, x)\n    new_base = convert(Int64,\
    \ base)\n    result = []\n    push!(result, number % new_base)\n    number = div(number,\
    \ new_base)\n    while number > 0\n        push!(result, number % new_base)\n\
    \        number = div(number, new_base)\n    end\n    return join(reverse(result))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = []\n    remainder = Int64[]\n    while\
    \ x != 0\n        remainder = [x % base]\n        x = x // base\n        quotient\
    \ = [remainder, quotient]\n    end\n    return join(map(string, quotient))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph5f__tc5.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmph5f__tc5.jl:15\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmph5f__tc5.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmph5f__tc5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmph5f__tc5.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmph5f__tc5.jl:15\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmph5f__tc5.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmph5f__tc5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmph5f__tc5.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5f__tc5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    num = String[]\n    a = x\n    b = base\n    while\
    \ a > 0\n        rest = mod(a, b)\n        push!(num, string(rest))\n        a\
    \ = div(a, b)\n    end\n    return join(reverse(num))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    #Your code here\n    #hint: please find algorithm\
    \ via google search\n    #check when x is less than 0\n    if x < 0\n        return\
    \ change_base(-x, base) * \"-\"\n    end\n    # check when x is equal to 0\n \
    \   if x == 0\n        return \"0\"\n    end\n    # main code here\n    result::String\
    \ = \"\"\n    while x > 0\n        push!(result, x % base)\n        x = x \xF7\
    \ base\n    end\n    return reverse(result)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpna1yj6wc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpna1yj6wc.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna1yj6wc.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna1yj6wc.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpna1yj6wc.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpna1yj6wc.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna1yj6wc.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna1yj6wc.jl:34\ntest set:\
    \ Error During Te"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpna1yj6wc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    #convert to string format to mutate string\n\
    \    x_str = string(x)\n    \n    #Base 10 to 1\n    if base == 1\n        #Repeat\
    \ character '1' base - 1 times\n        #e.g. base 2 => '11'\n        return \"\
    1\" * base - 1\n    end\n    \n    #Base 10 to another base\n    if base < 10\n\
    \        #Convert to base 10 to String\n        #e.g. base 2 => '1000'\n     \
    \   return string(base, x)\n    end\n    \n    #Base 10 to 10\n    if base ==\
    \ 10\n        return x_str\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1m8vbfkh.jl:40\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"38\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1m8vbfkh.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1m8vbfkh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1m8vbfkh.jl:41\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"39\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1m8vbfkh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1m8vbfkh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1m8vbfkh.jl:42\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"2234\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1m8vbfkh.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1m8vbfkh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1m8vbfkh.jl:43\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"216\" == \"10000\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1m8vbfkh.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1m8vbfkh.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp1m8vbfkh.jl:44\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"28\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1m8vbfkh.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if (x==0)\n        return string(0)\n    end\n  \
    \  number = []\n    while x>0\n        number = [string(x%base), number...]\n\
    \        x = x \xF7 base\n    end\n    return join(number)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    temp_x, res = x, []\n    while temp_x > 0\n     \
    \   push!(res, temp_x % base)\n        temp_x = div(temp_x, base)\n    end\n \
    \   join(map(string, reverse(res)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    res = \"\"\n    while x >= base\n        res = string(x\
    \ % base) * res\n        x = x \xF7 base\n    end\n    res = string(x) * res\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    n = x\n    digit_vec = []\n    while n != 0\n   \
    \     push!(digit_vec, n % base)\n        n = div(n, base)\n    end\n    return\
    \ reduce(*, digit_vec)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5gmqomcz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp5gmqomcz.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gmqomcz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5gmqomcz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp5gmqomcz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmp5gmqomcz.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5gmqomcz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5gmqomcz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    q, r = divrem(x, base)\n    if q == 0\n        return\
    \ string(r)\n    else\n        return change_base(q, base) * string(r)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # ponizej znajduje sie Twoj kod\nend\n \n \nchange_base(x::Int64,\
    \ base::Int64) = change_base(abs(x), base)\nchange_base(x::Int64, base::Int64)\
    \ = \"-\" * change_base(abs(x), base)\n \n \n@testset \"change_base\" begin\n\
    \    @test change_base(8, 3) == \"22\"\n    @test change_base(8, 2) == \"1000\"\
    \n    @test change_base(7, 2) == \"111\"\n    @test change_base(-8, 3) == \"-22\"\
    \n    @test change_base(-8, 2) == \"-1000\"\n    @test change_base(-7, 2) == \"\
    -111\"\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpf0tun4q7.jl:20\nin expression starting at /tmp/tmpf0tun4q7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x < base:\n        return string(x)\n    else:\n\
    \        return change_base(div(x, base), base) * string(mod(x, base))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplx49poc5.jl:13\nin expression starting at\
    \ /tmp/tmplx49poc5.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    base10_digits = digits(base)\n\
    \    result = \"\"\n    while quotient > 0\n        remainder = quotient % base\n\
    \        quotient = div(quotient, base)\n        result = string(base10_digits[remainder\
    \ + 1]) * result\n    end\n    return result\nend\n\"\"\"Change binary string\
    \ x to decimal number.\n    return decimal number representation after the conversion.\n\
    \    >>> binary_to_decimal(\"1101\")\n    13\n    >>> binary_to_decimal(\"101\"\
    )\n    5\n    >>> binary_to_decimal(\"11\")\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpbt48ozw5.jl:22\nin expression starting at /tmp/tmpbt48ozw5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    result = \"\"\n    while x > 0\n        x, r = divrem(x,\
    \ base)\n        result = r*result\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa1848u7m.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(8, 3) == \"22\"\\n  MethodError: no method\
    \ matching *(::Int64, ::String)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\\\
    n    *(!Matched::Union{AbstractChar, AbstractString}, ::Union{AbstractChar, AbstractString}...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\\n    ...\\\
    n  Stacktrace:\\n   [1] change_base(x::Int64, base::Int64)\\n     @ Main /tmp/tmpa1848u7m.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpa1848u7m.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa1848u7m.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient = x\n    answer = \"\"\n    while quotient\
    \ > 0\n        reminder = quotient % base\n        answer = string(reminder) *\
    \ answer\n        quotient = quotient // base\n    end\n    return answer\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzv47sh5_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpzv47sh5_.jl:15\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpzv47sh5_.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpzv47sh5_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpzv47sh5_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpzv47sh5_.jl:15\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpzv47sh5_.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpzv47sh5_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpzv47sh5_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzv47sh5_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x==0\n        return \"0\"\n    end\n    x = abs(x)\n\
    \    result = \"\"\n    while x > 0\n        x, r = divrem(x, base)\n        result\
    \ = string(r) * result\n    end\n    return result\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    s = \"\"\n    if x == 0\n        return \"0\"\n \
    \   end\n    while x != 0\n        s = string(x % base) * s\n        x = x \xF7\
    \ base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \n    if x == 0\n        return \"0\"\n    end\n\
    \    \n    result = []\n    quotient = x\n    while quotient > 0\n        push!(result,\
    \ quotient % base)\n        quotient = div(quotient, base)\n    end\n    \n  \
    \  return join(reverse(result))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    # your code goes here\n    \nend\n \n```\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxgwejs5y.jl:16\nin expression starting at\
    \ /tmp/tmpxgwejs5y.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    r = \"\"\n    while x != 0\n        r = string(x\
    \ % base) * r\n        x = x \xF7 base\n    end\n    return r\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    if x == 0\n        return \"0\"\n    end\n    res\
    \ = \"\"\n    while x > 0\n        res = string(x % base) * res\n        x = floor(Int64,\
    \ x / base)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    #TODO \n    # change the base of x from 10 to base\n\
    \    # return a string representing x in the new base\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiv38tytn.jl:21\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpiv38tytn.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiv38tytn.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiv38tytn.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiv38tytn.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpiv38tytn.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiv38tytn.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiv38tytn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    \nend\n```\n### 2.3.3 Implementation\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq_t3s4f1.jl:14\nin expression starting at\
    \ /tmp/tmpq_t3s4f1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \   >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n \
    \   >>> change_base(7, 2)\n    '111'\n    \"\"\"\nfunction change_base(x::Int64,\
    \ base::Int64)::String \n    quotient, remainder = divrem(x, base)\n    if (quotient\
    \ == 0) \n        return string(remainder)\n    else\n        return change_base(quotient,\
    \ base) * string(remainder)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   12     12\n"
  exit_code: 0
  status: OK

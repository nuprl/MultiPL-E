name: HumanEval_126_is_sorted
language: jl
results:
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    i = 1\n    while\
    \ i < length(lst)\n        if lst[i] > lst[i+1]\n            return false\n  \
    \      end\n        i += 1\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpampqrury.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpampqrury.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpampqrury.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpampqrury.jl:44\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpampqrury.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpampqrury.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpampqrury.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjkdeu2wh.jl:24\n  Expression: candidate([5])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjkdeu2wh.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkdeu2wh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjkdeu2wh.jl:25\n  Expression: candidate([1, 2, 3, 4, 5]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkdeu2wh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkdeu2wh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjkdeu2wh.jl:27\n  Expression: candidate([1, 2, 3, 4, 5, 6])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjkdeu2wh.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkdeu2wh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjkdeu2wh.jl:28\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkdeu2wh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkdeu2wh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjkdeu2wh.jl:30\n  Expression: candidate(Vector{Int64}([]))\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjkdeu2wh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sort(lst) == lst && Set(lst) == Set(sort(lst))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn6xptegb.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6xptegb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6xptegb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpn6xptegb.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn6xptegb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn6xptegb.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6xptegb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst)==1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i]<lst[i+1]\n            continue\n        else\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5dkdx81e.jl:45\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5dkdx81e.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5dkdx81e.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dkdx81e.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if lst == sort(lst)\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprmav1oyp.jl:37\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmav1oyp.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmav1oyp.jl:27\ntest set: Test\
    \ Failed at /tmp/tmprmav1oyp.jl:38\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmav1oyp.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmav1oyp.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmav1oyp.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst_len = length(lst)\n    lst_len_1 = lst_len - 1\n    lst_len_2 = lst_len\
    \ - 2\n    if lst_len == 1\n        return true\n    elseif lst_len == 2\n   \
    \     return lst[1] <= lst[2]\n    else\n        for i in 1:lst_len_2\n      \
    \      if lst[i] <= lst[i+1] && lst[i+1] < lst[i+2]\n                return true\n\
    \            elseif lst[i] < lst[i+1] && lst[i+1] == lst[i+2]\n              \
    \  return false\n            elseif lst[i] < lst[i+1] && lst[i+1] > lst[i+2]\n\
    \                return false\n            elseif lst[i] == lst[i+1] && lst[i+1]\
    \ < lst[i+2]\n                return false\n            elseif lst[i] == lst[i+1]\
    \ && lst[i+1] == lst[i+2]\n                return false\n            elseif lst[i]\
    \ == lst[i+1] && lst[i+1] > lst[i+2]\n                return false\n         \
    \   elseif lst[i] > lst[i+1] && lst[i+1] < lst[i+2]\n                return false\n\
    \            elseif lst[i] > lst[i+1] && lst[i+1] == lst[i+2]\n              \
    \  return false\n            elseif lst[i] > lst[i+1] && lst[i+1] > lst[i+2]\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp69rzem2b.jl:64\n  Expression: candidate([1,\
    \ 2, 3, 3, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69rzem2b.jl:64 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69rzem2b.jl:53\ntest set: Test\
    \ Failed at /tmp/tmp69rzem2b.jl:65\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp69rzem2b.jl:65 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69rzem2b.jl:53\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp69rzem2b.jl:51\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for (index, num) in enumerate(lst)\n        if index > 1\n           \
    \ if num <= lst[index-1]\n                return false\n            end\n    \
    \    end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsbs9e88z.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbs9e88z.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbs9e88z.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsbs9e88z.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] != lst[i-1] + 1 \n         \
    \   return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ermsuc8.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ermsuc8.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ermsuc8.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ermsuc8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) > 1\n        if isequal(sort(lst), unique(lst))\n     \
    \       return true\n        else\n            return false\n        end\n   \
    \ else\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5fqz0x8i.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fqz0x8i.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fqz0x8i.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fqz0x8i.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all([x==true for x in [lst[i]<=lst[i+1] for i in 1:length(lst)-1]])\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf2ooptlp.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2ooptlp.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2ooptlp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf2ooptlp.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2ooptlp.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2ooptlp.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf2ooptlp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    res = true\n    d = lst[1]\n    cnt = 0\n    for x in lst\n        if\
    \ x < d\n            res = false\n            break\n        elseif x == d\n \
    \           cnt += 1\n        end\n        d = x\n    end\n    if cnt == length(lst)\n\
    \        res = false\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphvcv16ci.jl:39\\n  Expression: candidate([5])\
    \ == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmphvcv16ci.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmphvcv16ci.jl:38\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(i < j for i in lst[1:end-1], j in lst[2:end])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv7sodgop.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 4, 5]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv7sodgop.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv7sodgop.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv7sodgop.jl:27\n  Expression: candidate([1, 2, 3, 4, 5, 6])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv7sodgop.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv7sodgop.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv7sodgop.jl:28\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv7sodgop.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv7sodgop.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv7sodgop.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv7sodgop.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv7sodgop.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv7sodgop.jl:36\n  Expression: candidate([1, 2, 3, 4]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/juli"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv7sodgop.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr91o1dba.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr91o1dba.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr91o1dba.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr91o1dba.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr91o1dba.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr91o1dba.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr91o1dba.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    is_sorted_helper(lst,1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr0_718br.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  UndefVarError: is_sorted_helper\
    \ not defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @\
    \ Main /tmp/tmpr0_718br.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr0_718br.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr0_718br.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpr0_718br.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  UndefVarError: is_sorted_helper not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpr0_718br.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr0_718br.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr0_718br.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpr0_718br.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  UndefVarError: is_sorted_helper not\
    \ defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpr0_718br.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpr0_718br.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr0_718br.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpr0_718br.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  UndefVarError: is_sorted_helper not\
    \ defined\\n  Stacktrace:\\n   [1] is_sorte"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphpbz1yqd.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpbz1yqd.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpbz1yqd.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpbz1yqd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return length(unique(lst)) == length(lst) && (lst[1] <= lst[end])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpr6pb50up.jl:26\\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpr6pb50up.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpr6pb50up.jl:23\\ntest set: Test\
    \ Failed at /tmp/tmpr6pb50up.jl:29\\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpr6pb50up.jl:29 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpr6pb50up.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    #if lst[end] == lst[end - 1]\n    #    return false\n    #end\n    last\
    \ = lst[1]\n    for i in 2:length(lst)\n        current = lst[i]\n        if last\
    \ == current\n            return false\n        end\n        if last > current\n\
    \            return false\n        end\n        last = current\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvnghq6ek.jl:44\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpvnghq6ek.jl:20\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvnghq6ek.jl:44 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvnghq6ek.jl:37\\ntest set:\
    \ Test Failed at /tmp/tmpvnghq6ek.jl:49\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if length(lst)\
    \ == 2 && lst[1] <= lst[2]\n        return true\n    end\n    if length(lst) ==\
    \ 2 && lst[1] > lst[2]\n        return false\n    end\n    i = 1\n    while i\
    \ < length(lst)\n        if lst[i] <= lst[i+1]\n            i = i + 1\n      \
    \  else\n            return false\n        end\n    end\n    return true\nend\n\
    @testset \"Test cases\" begin\n    @test is_sorted([5])\n    @test is_sorted([1,\
    \ 2, 3, 4, 5])\n    @test !is_sorted([1, 3, 2, 4, 5])\n    @test is_sorted([1,\
    \ 2, 3, 4, 5, 6])\n    @test is_sorted([1, 2, 3, 4, 5, 6, 7])\n    @test !is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7])\n    @test is_sorted([1, 2, 2, 3, 3, 4])\n    @test !is_sorted([1,\
    \ 2, 2, 2, 3, 4])\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmp16_rcpo7.jl:36\nin expression starting at /tmp/tmp16_rcpo7.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    num_lst = length(lst)\n    if num_lst==1\n        return true\n    end\n\
    \    if num_lst==2\n        return lst[1]<=lst[2]\n    end\n    if is_sorted(lst[1:end-1])\n\
    \        return lst[end-1]<=lst[end]\n    else\n        return false\n    end\n\
    end\n\"\"\"\nfibonacci(n) returns the nth number in the fibonacci sequence,\n\
    where n can be any integer >= 0\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpckkuia3o.jl:30\nin expression starting at\
    \ /tmp/tmpckkuia3o.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph6zhmtq0.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph6zhmtq0.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph6zhmtq0.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph6zhmtq0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    #first ensure the list is sorted in ascending order\n    is_ascending\
    \ = sort(lst) == lst\n    #then check if there are any duplicates\n    is_no_duplicates\
    \ = length(unique(lst)) == length(lst)\n    #return a boolean to indicate whether\
    \ the list is sorted and has no duplicates\n    return is_ascending && is_no_duplicates\n\
    end\n@testset \"Exercise 3.2.2\" begin\n    @test is_sorted([5]) == true\n   \
    \ @test is_sorted([1, 2, 3, 4, 5]) == true\n    @test is_sorted([1, 3, 2, 4, 5])\
    \ == false\n    @test is_sorted([1, 2, 3, 4, 5, 6]) == true\n    @test is_sorted([1,\
    \ 2, 3, 4, 5, 6, 7]) == true\n    @test is_sorted([1, 3, 2, 4, 5, 6, 7]) == false\n\
    \    @test is_sorted([1, 2, 2, 3, 3, 4]) == true\n    @test is_sorted([1, 2, 2,\
    \ 2, 3, 4]) == false\nend\n \nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpbd_lr2tj.jl:24\nin expression starting at /tmp/tmpbd_lr2tj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if length(lst)\
    \ == 2\n        return lst[1] <= lst[2]\n    end\n    num_sorted_elements = 0\n\
    \    is_all_distinct = true\n    for i in 2:length(lst)\n        if lst[i] ==\
    \ lst[i-1] && i != length(lst)\n            is_all_distinct = false\n        end\n\
    \        if lst[i] >= lst[i-1]\n            num_sorted_elements += 1\n       \
    \ end\n    end\n    return num_sorted_elements == length(lst)-1 && is_all_distinct\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3wertsdu.jl:46\n  Expression: candidate(Vector{Int64}([]))\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3wertsdu.jl:46 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3wertsdu.jl:39\ntest set: Test\
    \ Failed at /tmp/tmp3wertsdu.jl:51\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3wertsdu.jl:51 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3wertsdu.jl:39\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3wertsdu.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpewuf5e8e.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpewuf5e8e.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpewuf5e8e.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpewuf5e8e.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpewuf5e8e.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpewuf5e8e.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpewuf5e8e.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    \n    \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n   \
    \         return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1qnf955e.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1qnf955e.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1qnf955e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp1qnf955e.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1qnf955e.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1qnf955e.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1qnf955e.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    prev_element = lst[1]\n    for (index, element) in enumerate(lst)\n  \
    \      if element < prev_element\n            return false\n        end\n    \
    \    prev_element = element\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp99jyscv_.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmp99jyscv_.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp99jyscv_.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp99jyscv_.jl:30\\ntest set:\
    \ Test Failed at /tmp/tmp99jyscv_.jl:40\\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sort(lst) == lst\nend\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_k2f9ek3.jl:34\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_k2f9ek3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_k2f9ek3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_k2f9ek3.jl:35\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_k2f9ek3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_k2f9ek3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_k2f9ek3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Write code here\n    count=1\n    flag=true\n    while count<length(lst)\n\
    \        if lst[count]<lst[count-1]\n            flag=false\n            break\n\
    \        end\n        count+=1\n    end\n    return flag\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvw0f7krs.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 2, 3, 4, 5]) == true\\n  BoundsError:\
    \ attempt to access 5-element Vector{Int64} at index [0]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpvw0f7krs.jl:21\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvw0f7krs.jl:35 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvw0f7krs.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpvw0f7krs.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpvw0f7krs.jl:21\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvw0f7krs.jl:36 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvw0f7krs.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpvw0f7krs.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  BoundsError: attempt to access 6-element\
    \ Vector{Int64} at index [0]\\n  Stacktrace:\\n   [1] getindex\\n     @ ./array.jl:861\
    \ [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpvw0f7krs.jl:21\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpvw0f7krs.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst)==1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i]<lst[i+1] || lst[i]==lst[i+1]\n            continue\n      \
    \  else\n            return false\n        end\n    end\n    return true\nend\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp10lfwmkg.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp10lfwmkg.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp10lfwmkg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp10lfwmkg.jl:45\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp10lfwmkg.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp10lfwmkg.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10lfwmkg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    n=length(lst)\n    for i=1:n-1\n        if lst[i]>lst[i+1]\n         \
    \   return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp81u30z_h.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81u30z_h.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81u30z_h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp81u30z_h.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81u30z_h.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81u30z_h.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81u30z_h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo0v77wru.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo0v77wru.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo0v77wru.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo0v77wru.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo0v77wru.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo0v77wru.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo0v77wru.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i = 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpemlcs2ir.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpemlcs2ir.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpemlcs2ir.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpemlcs2ir.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Given a list, returns a boolean.\n    # Takes a list of numbers, returns\
    \ whether or not they are sorted\n    # in ascending order.\n    # If list has\
    \ more than 1 duplicate of the same number, return False. \n    # Assume no negative\
    \ numbers and only integers.\n    n = length(lst)\n    m = unique(lst)\n    if\
    \ length(m) != n\n        return false\n    end\n    if isequal(sort(lst), lst)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr85h3vv2.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr85h3vv2.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr85h3vv2.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr85h3vv2.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  n=length(lst)\n  for i in 1:n-1\n    if lst[i]>lst[i+1]\n        return\
    \ false\n    end\n  end\n  return true\nend\n  \nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpineilwtw.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpineilwtw.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpineilwtw.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpineilwtw.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpineilwtw.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpineilwtw.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpineilwtw.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    check = sort(unique(lst))\n    if isequal(lst, check)\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd9gsinug.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd9gsinug.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd9gsinug.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9gsinug.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if length(lst)\
    \ == 2 && lst[1] == lst[2]\n        return false\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz5qcrywk.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5qcrywk.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5qcrywk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpz5qcrywk.jl:45\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5qcrywk.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5qcrywk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz5qcrywk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    n = length(lst)\n    if n == 1\n        return true\n    end\n    if n\
    \ > 1\n        for i in 1:n-1\n            if lst[i] > lst[i+1]\n            \
    \    return false\n            end\n        end\n    end\n    true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpznkm7ku_.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznkm7ku_.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznkm7ku_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpznkm7ku_.jl:45\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznkm7ku_.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznkm7ku_.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpznkm7ku_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] == lst[i+1]\n            return false\n        end\n      \
    \  if lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\n\"\"\"\n    Given a list of numbers, return the largest number.\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_uj9r164.jl:30\nin expression starting at\
    \ /tmp/tmp_uj9r164.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 \n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb07p5z9u.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb07p5z9u.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb07p5z9u.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpb07p5z9u.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb07p5z9u.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb07p5z9u.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb07p5z9u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i = 1:length(lst)-1\n        if lst[i] == lst[i+1]\n            return\
    \ false\n        elseif lst[i] > lst[i+1]\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfkd6a4jw.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkd6a4jw.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkd6a4jw.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkd6a4jw.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    last_value = 0\n    for i in lst\n        if i < last_value\n        \
    \    return false\n        end\n        last_value = i\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwf8f7bxg.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwf8f7bxg.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwf8f7bxg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpwf8f7bxg.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwf8f7bxg.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwf8f7bxg.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwf8f7bxg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzflrkboy.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzflrkboy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzflrkboy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzflrkboy.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzflrkboy.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzflrkboy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzflrkboy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for (i, num) in enumerate(lst)\n        if i != 1 && num != lst[i-1] +\
    \ 1\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoy76hk50.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoy76hk50.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoy76hk50.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoy76hk50.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    n = length(lst)\n    for i in 1:n\n        for j in i+1:n\n          \
    \  if lst[i] > lst[j]\n                return false\n            end\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpziepq2he.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziepq2he.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziepq2he.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpziepq2he.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziepq2he.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziepq2he.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpziepq2he.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    function find_duplicates(lst::Vector{Int64})\n        duplicates = []\n\
    \        for i in 1:length(lst)\n            for j in 1:length(lst)\n        \
    \        if i != j && lst[i] == lst[j]\n                    if !(lst[i] in duplicates)\n\
    \                        push!(duplicates, lst[i])\n                    end\n\
    \                end\n            end\n        end\n        duplicates\n    end\n\
    \    sorted = sort(lst)\n    duplicates = find_duplicates(lst)\n    sorted ==\
    \ lst && length(duplicates) == 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw___ys20.jl:50\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw___ys20.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw___ys20.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw___ys20.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    len = length(lst)\n    # Check if there is any duplicate element\n   \
    \ for i in 1:len-1\n        if lst[i] == lst[i+1]\n            return false\n\
    \        end\n    end\n    # Check if any number is bigger than the next one\n\
    \    for i in 1:len-1\n        if lst[i] > lst[i+1]\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf6vgsf_j.jl:48\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6vgsf_j.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6vgsf_j.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf6vgsf_j.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    unique = unique(lst)\n\
    \    if length(unique) != length(lst)\n        return false\n    end\n    return\
    \ sort(lst) == lst\nend\n\"\"\"\n    Remove every nth element from a list.\n \
    \   Examples\n    remove_every_nth([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3) \u279E\
    \ [1, 2, 4, 5, 7, 8, 10]\n    remove_every_nth([10, 20, 30, 40, 50, 60, 70, 80,\
    \ 90, 100], 2) \u279E [10, 30, 40, 60, 70, 90, 100]\n    remove_every_nth([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10], 1) \u279E []\n    remove_every_nth([], 3) \u279E\
    \ []\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp88dhzss2.jl:26\nin expression starting at /tmp/tmp88dhzss2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  \"\"\"\n  Given a list of numbers, return whether or not they are sorted\n\
    \  in ascending order. If list has more than 1 duplicate of the same\n  number,\
    \ return False. Assume no negative numbers and only integers.\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwl4emlhu.jl:1\nin expression starting at /tmp/tmpwl4emlhu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8hglb754.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8hglb754.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8hglb754.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8hglb754.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8hglb754.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8hglb754.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8hglb754.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    min(lst) == 1 &&\
    \ max(lst) == length(lst) && length(lst) == length(Set(lst))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8ct9jek_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 2, 3, 4, 5]) == true\\n  MethodError:\
    \ no method matching min(::Vector{Int64})\\n  Closest candidates are:\\n    min(::Any,\
    \ !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:134\\\
    n    min(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:506\\\
    n    min(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    ...\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp8ct9jek_.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8ct9jek_.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8ct9jek_.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp8ct9jek_.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  MethodError: no method matching min(::Vector{Int64})\\\
    n  Closest candidates are:\\n    min(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:134\\\
    n    min(::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:506\\\
    n    min(::Any, !Matched::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    ...\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp8ct9jek_.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8ct9jek_.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8ct9jek_.jl:26\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return isequal(lst, sort(lst))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaxra5sw9.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaxra5sw9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaxra5sw9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpaxra5sw9.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaxra5sw9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaxra5sw9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaxra5sw9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 return true end \n    for i in 2:length(lst)\n   \
    \     if lst[i] < lst[i-1]\n            return false\n        end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbcn2zajl.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbcn2zajl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbcn2zajl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbcn2zajl.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbcn2zajl.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbcn2zajl.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbcn2zajl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    length(lst)==1 || length(unique(lst))==length(lst) && (lst[1]<lst[end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7l6ekwra.jl:26\\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp7l6ekwra.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp7l6ekwra.jl:23\\ntest set: Test\
    \ Failed at /tmp/tmp7l6ekwra.jl:29\\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp7l6ekwra.jl:29 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp7l6ekwra.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvkwid_ab.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvkwid_ab.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvkwid_ab.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvkwid_ab.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvkwid_ab.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvkwid_ab.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvkwid_ab.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return length(unique(lst)) == length(lst) && length(lst) == last(lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2wylsk0v.jl:24\\n  Expression: candidate([5])\
    \ == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2wylsk0v.jl:24 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2wylsk0v.jl:23\\ntest set: Test\
    \ Failed at /tmp/tmp2wylsk0v.jl:26\\n  Expression: candidate([1, 3, 2, 4, 5])\
    \ == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2wylsk0v.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2wylsk0v.jl:23\\ntest set: Test\
    \ Failed at /tmp/tmp2wylsk0v.jl:29\\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp2wylsk0v.jl:29 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp2wylsk0v.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted = sort(lst)\n    return all(lst .== sorted) && length(unique(lst))\
    \ == length(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyjf93tfn.jl:36\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjf93tfn.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjf93tfn.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyjf93tfn.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n   lst == sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpojcx1xhh.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojcx1xhh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojcx1xhh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpojcx1xhh.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojcx1xhh.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojcx1xhh.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpojcx1xhh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    index=0\n    for i in 2:length(lst)\n        if lst[i] > lst[i-1]\n  \
    \          index += 1\n        end\n    end\n    if index == length(lst)-1\n \
    \       return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq7ouvyt4.jl:40\n  Expression: candidate(Vector{Int64}([]))\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq7ouvyt4.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq7ouvyt4.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpq7ouvyt4.jl:45\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq7ouvyt4.jl:45 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq7ouvyt4.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq7ouvyt4.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst_dup = Set(lst) # set of list without duplicates\n    lst_ord = sort(lst)\
    \ # list in ordered fashion\n    return (length(lst) == length(lst_dup)) & (lst_ord\
    \ == lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0xe0ilsn.jl:37\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0xe0ilsn.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0xe0ilsn.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0xe0ilsn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i = 1:length(lst)-1\n        if lst[i] == lst[i+1]\n            return\
    \ false\n        elseif lst[i] > lst[i+1]\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpek_z4_9l.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpek_z4_9l.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpek_z4_9l.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpek_z4_9l.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    true\nend\nis_sorted([1, 2, 2, 3, 3, 4])\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3_f6c2jh.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_f6c2jh.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_f6c2jh.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp3_f6c2jh.jl:43\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_f6c2jh.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_f6c2jh.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3_f6c2jh.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Write your code here\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp29ex27_o.jl:25\n  Expression: candidate([5])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp29ex27_o.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp29ex27_o.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp29ex27_o.jl:26\n  Expression: candidate([1, 2, 3, 4, 5]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp29ex27_o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp29ex27_o.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp29ex27_o.jl:28\n  Expression: candidate([1, 2, 3, 4, 5, 6])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp29ex27_o.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp29ex27_o.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp29ex27_o.jl:29\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp29ex27_o.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp29ex27_o.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp29ex27_o.jl:31\n  Expression: candidate(Vector{Int64}([]))\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp29ex27_o.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return length(unique(lst)) == length(lst) && isequal(lst, sort(lst))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpivbmj8kg.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpivbmj8kg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpivbmj8kg.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpivbmj8kg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8hyk2kzi.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8hyk2kzi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8hyk2kzi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8hyk2kzi.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8hyk2kzi.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8hyk2kzi.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8hyk2kzi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    res = true\n    for i = 1:length(lst)-1\n        if lst[i] > lst[i+1]\n\
    \            res = false\n            break\n        end\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk070ez_7.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk070ez_7.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk070ez_7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpk070ez_7.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk070ez_7.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk070ez_7.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk070ez_7.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted = true\n    for idx in 2:length(lst)\n        if lst[idx] > lst[idx-1]\n\
    \            sorted = false\n        end\n    end\n    return sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5652j8n8.jl:31\n  Expression: candidate([1,\
    \ 2, 3, 4, 5]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5652j8n8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5652j8n8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5652j8n8.jl:33\n  Expression: candidate([1, 2, 3, 4, 5, 6])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5652j8n8.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5652j8n8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5652j8n8.jl:34\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5652j8n8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5652j8n8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5652j8n8.jl:38\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5652j8n8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5652j8n8.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5652j8n8.jl:41\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5652j8n8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsmw37uqf.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsmw37uqf.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsmw37uqf.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpsmw37uqf.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsmw37uqf.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsmw37uqf.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsmw37uqf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) < 2 \n        return true\n    end\n    rlst = reverse(lst)\n\
    \    if rlst == sort(lst)\n        return true\n    else\n        return false\n\
    \    end\nend\nprintln(is_sorted([1, 2, 3, 4, 5]))\nprintln(is_sorted([1, 3, 2,\
    \ 4, 5]))\nprintln(is_sorted([1, 2, 2, 3, 3, 4]))\nprintln(is_sorted([1, 2, 2,\
    \ 2, 3, 4]))\nprintln(is_sorted([1, 2, 3, 4, 5, 6]))\nprintln(is_sorted([1, 2,\
    \ 3, 4, 5, 6, 7]))\nprintln(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprintln(is_sorted([5]))\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntest set: Test Failed\
    \ at /tmp/tmpmk4lstvi.jl:41\n  Expression: candidate([1, 2, 3, 4, 5]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmk4lstvi.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmk4lstvi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmk4lstvi.jl:43\n  Expression: candidate([1, 2, 3, 4, 5, 6])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmk4lstvi.jl:43 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmk4lstvi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmk4lstvi.jl:44\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmk4lstvi.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmk4lstvi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmk4lstvi.jl:48\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmk4lstvi.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmk4lstvi.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpmk4lstvi.jl:51\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmk4lstvi.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if isequal(sort(lst),\
    \ unique(lst))\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfdchnofo.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdchnofo.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdchnofo.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfdchnofo.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    cur = 0\n    for\
    \ n in lst\n        if cur > n\n            return false\n        end\n      \
    \  cur = n\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3k3u08iv.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3k3u08iv.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3k3u08iv.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp3k3u08iv.jl:44\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3k3u08iv.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3k3u08iv.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3k3u08iv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) > 1\n        sorted = true\n        prev = lst[1]\n   \
    \     for (index, item) in enumerate(lst)\n            if item < prev && index\
    \ > 1\n                sorted = false\n            end\n            prev = item\n\
    \        end\n        return sorted\n    else\n        return true\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy1d1et_m.jl:45\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1d1et_m.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1d1et_m.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpy1d1et_m.jl:46\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1d1et_m.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1d1et_m.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy1d1et_m.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 \n        return true\n    end \n    # make sure to\
    \ check for duplicates\n    # loop through list and if we find two indices next\
    \ to each other\n    # that have the same number, then return false.\n    if !all(lst[1:end-1]\
    \ .< lst[2:end])\n        return false\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbzxrpztc.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbzxrpztc.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbzxrpztc.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbzxrpztc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] == lst[i+1]\n            return\
    \ false\n        elseif lst[i]>lst[i+1]\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdydvg5dl.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdydvg5dl.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdydvg5dl.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdydvg5dl.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if lst[1] == lst[2]\n\
    \        return false\n    end\n    sort(lst)[1] == lst[1] && sort(lst)[end] ==\
    \ lst[end]\nend\n\"\"\"\n    Write a function that takes a number as its argument\
    \ and returns a string\n    representing the shaded area of a circle, given that\
    \ the argument is the\n    circle's radius. You can assume that the input will\
    \ always be a positive integer.\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzru6r3wb.jl:25\nin expression starting at\
    \ /tmp/tmpzru6r3wb.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted = true\n    i = 1\n    while i < length(lst)\n        if lst[i]\
    \ == lst[i+1]\n            sorted = false\n            break\n        end\n  \
    \      i += 1\n    end\n    sorted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmbh1jv1j.jl:35\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbh1jv1j.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbh1jv1j.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbh1jv1j.jl:38\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbh1jv1j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbh1jv1j.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbh1jv1j.jl:41\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbh1jv1j.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbh1jv1j.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpmbh1jv1j.jl:44\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmbh1jv1j.jl:44 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbh1jv1j.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     4     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmbh1jv1j.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return lst == sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgrhpr3ja.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrhpr3ja.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrhpr3ja.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgrhpr3ja.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgrhpr3ja.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgrhpr3ja.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgrhpr3ja.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 \n        return true\n    end\n    prev = lst[1]\n\
    \    for i = 2:length(lst)\n        if lst[i] < prev\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz9boav3c.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpz9boav3c.jl:20\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpz9boav3c.jl:40 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpz9boav3c.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmpz9boav3c.jl:43\\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\\n   Evaluated: true == false'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    a = 1\n    for i = 1:length(lst)-1\n        if a == 0\n            break\n\
    \        end\n        if lst[i] <= lst[i+1]\n            a = 1\n        else\n\
    \            a = 0\n        end\n    end\n    return a == 1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx_5of77z.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_5of77z.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_5of77z.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpx_5of77z.jl:45\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_5of77z.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_5of77z.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_5of77z.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst == sort(lst) && length(unique(lst)) == length(lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmoe9gvzl.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmoe9gvzl.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmoe9gvzl.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmoe9gvzl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    #return lst == sort(lst) # this would work but it uses the built in sort\n\
    \    for i = 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8llw6tf0.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8llw6tf0.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8llw6tf0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8llw6tf0.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8llw6tf0.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8llw6tf0.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8llw6tf0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Base case\n    if length(lst) == 1\n        return true\n    end\n \
    \   # Iterate over elements\n    # First check that elements are not the same\n\
    \    # Then check that they are in ascending order\n    for i in 1:length(lst)-1\n\
    \        if lst[i] == lst[i+1]\n            return false\n        elseif lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnc5jr1wl.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnc5jr1wl.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnc5jr1wl.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnc5jr1wl.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst == sort(lst)\nend\n \n \n    \"\"\"\n    Write a function that returns\
    \ the number of non-overlapping pairs in a string.\n    Assume that you are only\
    \ given uppercase letters and spaces. \n    The pairs should be adjacent letters,\
    \ not separated by a space.\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfpovuqtj.jl:21\nin expression starting at\
    \ /tmp/tmpfpovuqtj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\n    # lst[2:end] .>=\
    \ lst[1:end-1]\n    # n = length(lst)\n    # n>=2 && all(lst[i] <= lst[i+1] for\
    \ i in 1:n-1)\n    # @show lst\n    # @show any(lst[i] > lst[i+1] for i in 1:length(lst)-1)\n\
    \    !any(lst[i] > lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp18vec4pi.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18vec4pi.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18vec4pi.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp18vec4pi.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp18vec4pi.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp18vec4pi.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18vec4pi.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    @assert length(lst) > 0\n    is_ascending(lst) && !has_duplicates(lst)\n\
    end\nis_sorted([5])\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: is_ascending not defined\nStacktrace:\n\
    \ [1] is_sorted(lst::Vector{Int64})\n   @ Main /tmp/tmp2a7q7k1z.jl:18\n [2] top-level\
    \ scope\n   @ /tmp/tmp2a7q7k1z.jl:20\nin expression starting at /tmp/tmp2a7q7k1z.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if !(lst[i] < lst[i+1])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7w9yitac.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7w9yitac.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7w9yitac.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7w9yitac.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_zvfhfu.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_zvfhfu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_zvfhfu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf_zvfhfu.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_zvfhfu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_zvfhfu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_zvfhfu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return isequal(sort(lst), unique(lst))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpon3bgkum.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpon3bgkum.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpon3bgkum.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpon3bgkum.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    pass_flag::Bool = true\n    for i in 1:length(lst)-1\n        if lst[i]\
    \ == lst[i+1]\n            pass_flag = false\n        elseif lst[i] > lst[i+1]\n\
    \            pass_flag = false\n        end\n    end\n    return pass_flag\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0otv278k.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0otv278k.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0otv278k.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0otv278k.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst == sort(lst) && count(lst) == length(lst)\nend\nprintln(is_sorted([1,\
    \ 2, 2, 3, 3, 4]))\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: TypeError: non-boolean (Int64) used in boolean context\n\
    Stacktrace:\n [1] _simple_count\n   @ ./reduce.jl:1206 [inlined]\n [2] _count\n\
    \   @ ./reducedim.jl:407 [inlined]\n [3] #count#735\n   @ ./reducedim.jl:405 [inlined]\n\
    \ [4] #count#734\n   @ ./reducedim.jl:404 [inlined]\n [5] count\n   @ ./reducedim.jl:404\
    \ [inlined]\n [6] is_sorted(lst::Vector{Int64})\n   @ Main /tmp/tmpsjf81lg3.jl:17\n\
    \ [7] top-level scope\n   @ /tmp/tmpsjf81lg3.jl:19\nin expression starting at\
    \ /tmp/tmpsjf81lg3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  return all(i -> i < i+1, lst) && length(unique(lst)) == length(lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptgbv4_i0.jl:26\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgbv4_i0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgbv4_i0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptgbv4_i0.jl:29\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgbv4_i0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgbv4_i0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptgbv4_i0.jl:32\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgbv4_i0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgbv4_i0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptgbv4_i0.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptgbv4_i0.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgbv4_i0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     4     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptgbv4_i0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    return all(x ->\
    \ x <= length(lst), lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe6z9td9u.jl:29\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6z9td9u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6z9td9u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe6z9td9u.jl:32\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6z9td9u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6z9td9u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe6z9td9u.jl:35\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6z9td9u.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6z9td9u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe6z9td9u.jl:36\n  Expression: candidate([1, 2, 2, 2, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe6z9td9u.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe6z9td9u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpe6z9td9u.jl:37\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6z9td9u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return (sort(lst)==lst) && (length(unique(lst))==length(lst))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp17pjbctb.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp17pjbctb.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp17pjbctb.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17pjbctb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if all(lst .==\
    \ sort(lst))\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp94p4ycu6.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94p4ycu6.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94p4ycu6.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp94p4ycu6.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp94p4ycu6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp94p4ycu6.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94p4ycu6.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted = true\n    for i = 1:length(lst)-1\n        if lst[i] < lst[i+1]\
    \ || lst[i] == lst[i+1]\n            sorted = true\n        else\n           \
    \ sorted = false\n            break\n        end\n    end\n    return sorted\n\
    end\n@testset \"Tests\" begin\n    @test is_sorted([5]) == true\n    @test is_sorted([1,\
    \ 2, 3, 4, 5]) == true\n    @test is_sorted([1, 3, 2, 4, 5]) == false\n    @test\
    \ is_sorted([1, 2, 3, 4, 5, 6]) == true\n    @test is_sorted([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n    @test is_sorted([1, 3, 2, 4, 5, 6, 7]) == false\n    @test\
    \ is_sorted([1, 2, 2, 3, 3, 4]) == true\n    @test is_sorted([1, 2, 2, 2, 3, 4])\
    \ == false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpf4alp5_w.jl:28\nin expression starting at /tmp/tmpf4alp5_w.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n   lst == sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2ugvak3.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2ugvak3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2ugvak3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc2ugvak3.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2ugvak3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2ugvak3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2ugvak3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if all(lst[i] \u2264 lst[i+1] for i = 1:length(lst)-1)\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo_dktg2j.jl:37\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_dktg2j.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_dktg2j.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpo_dktg2j.jl:38\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_dktg2j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_dktg2j.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo_dktg2j.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx_50kbnf.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_50kbnf.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_50kbnf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpx_50kbnf.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_50kbnf.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_50kbnf.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_50kbnf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst_sorted = sort(lst)\n    c = collect(1:length(lst))\n    lst_sorted\
    \ == lst && c == lst_sorted\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpro23o6up.jl:26\n  Expression: candidate([5])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpro23o6up.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro23o6up.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpro23o6up.jl:37\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpro23o6up.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro23o6up.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpro23o6up.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return isequal(sort(lst), lst)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjdm64c71.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdm64c71.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdm64c71.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjdm64c71.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdm64c71.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdm64c71.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjdm64c71.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    n = length(lst)\n    for i in 1:n-1\n        if lst[i] > lst[i+1]\n  \
    \          return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukv0du3d.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukv0du3d.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukv0du3d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpukv0du3d.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukv0du3d.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukv0du3d.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukv0du3d.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return(isempty(setdiff(lst, sort(lst))))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpenuzp38y.jl:26\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenuzp38y.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenuzp38y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpenuzp38y.jl:29\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenuzp38y.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenuzp38y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpenuzp38y.jl:32\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenuzp38y.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenuzp38y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpenuzp38y.jl:33\n  Expression: candidate([1, 2, 2, 2, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpenuzp38y.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpenuzp38y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpenuzp38y.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpenuzp38y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(i in lst[j] for i in 1:length(lst)-1, j in 2:length(lst))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe556y1mc.jl:25\n  Expression: candidate([1,\
    \ 2, 3, 4, 5]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe556y1mc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe556y1mc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe556y1mc.jl:27\n  Expression: candidate([1, 2, 3, 4, 5, 6])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe556y1mc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe556y1mc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe556y1mc.jl:28\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe556y1mc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe556y1mc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe556y1mc.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe556y1mc.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe556y1mc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe556y1mc.jl:36\n  Expression: candidate([1, 2, 3, 4]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/juli"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe556y1mc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst)==1\n        return true\n    end\n    lst_new = sort(lst)\n\
    \    lst_new[end]\n    lst[end]\n    inds = findall(lst_new.==lst_new[end])\n\
    \    ind = inds[end]\n    val = lst_new[ind]\n    inds = findall(lst.==val)\n\
    \    if length(inds)>1\n        return false\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp168_wzfk.jl:39\\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp168_wzfk.jl:39 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp168_wzfk.jl:36\\ntest set: Test\
    \ Failed at /tmp/tmp168_wzfk.jl:42\\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp168_wzfk.jl:42 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp168_wzfk.jl:36\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    flag=true\n    for i in 1:length(lst)-1\n        if (lst[i]<lst[i+1])==false\n\
    \            flag=false\n            break\n        end\n    end\n    return flag\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm8bt_436.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8bt_436.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8bt_436.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm8bt_436.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    indices = find(lst)\n    len = length(indices)\n    if len == 1\n    \
    \    return true\n    end\n    for i in indices\n        if i < len && lst[i]\
    \ > lst[i+1]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoy2h0zwu.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  UndefVarError: find not\
    \ defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpoy2h0zwu.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoy2h0zwu.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoy2h0zwu.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpoy2h0zwu.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  UndefVarError: find not defined\\n  Stacktrace:\\\
    n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpoy2h0zwu.jl:17\\n\
    \   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoy2h0zwu.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoy2h0zwu.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpoy2h0zwu.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  UndefVarError: find not defined\\n \
    \ Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpoy2h0zwu.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoy2h0zwu.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoy2h0zwu.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpoy2h0zwu.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  UndefVarError: find not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpoy2h0"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    is_sorted = true\n    for i = 1:length(lst)-1\n        if lst[i] > lst[i+1]\n\
    \            is_sorted = false\n        end\n    end\n    return is_sorted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq_nl8ddk.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_nl8ddk.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_nl8ddk.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpq_nl8ddk.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq_nl8ddk.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq_nl8ddk.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq_nl8ddk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg6tibjas.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6tibjas.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6tibjas.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpg6tibjas.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6tibjas.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6tibjas.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg6tibjas.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    #@assert size(lst, 1) > 0\n    return all(lst[i] <= lst[i+1] for i in\
    \ 1:size(lst, 1)-1) && length(unique(lst)) == length(lst)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcc4eecml.jl:36\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcc4eecml.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcc4eecml.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcc4eecml.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    new_lst = sort(lst)\n    for i in 1:length(lst)\n        if lst[i] !=\
    \ new_lst[i]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkectfjsq.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkectfjsq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkectfjsq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpkectfjsq.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkectfjsq.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkectfjsq.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkectfjsq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    \n    # if list is empty, return true\n    if length(lst) == 0\n     \
    \   return true\n    end\n    \n    # if list only has one element, return true\n\
    \    if length(lst) == 1\n        return true\n    end\n    \n    # check if any\
    \ list element occurs more than once\n    if any(abs(diff(findall(lst))) == 0)\n\
    \        return false\n    end\n    \n    # check if list is sorted in ascending\
    \ order\n    if any(diff(lst) .< 0)\n        return false\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw23pkl77.jl:45\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 2, 3, 4, 5]) == true\\n  TypeError:\
    \ non-boolean (Int64) used in boolean context\\n  Stacktrace:\\n    [1] iterate\\\
    n      @ ./iterators.jl:447 [inlined]\\n    [2] iterate\\n      @ ./generator.jl:44\
    \ [inlined]\\n    [3] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{Base.var\"\
    #108#110\", Base.Pairs{Int64, Int64, LinearIndices{1, Tuple{Base.OneTo{Int64}}},\
    \ Vector{Int64}}}, Base.var\"#107#109\"})\\n      @ Base ./array.jl:797\\n   \
    \ [4] collect\\n      @ ./array.jl:721 [inlined]\\n    [5] findall\\n      @ ./array.jl:2300\
    \ [inlined]\\n    [6] is_sorted(lst::Vector{Int64})\\n      @ Main /tmp/tmpw23pkl77.jl:29\\\
    n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpw23pkl77.jl:45 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [10] top-level scope\\n      @ /tmp/tmpw23pkl77.jl:43\\ntest\
    \ set: Error During Test at /tmp/tmpw23pkl77.jl:46\\n  Test threw exception\\\
    n  Expression: candidate([1, 3, 2, 4, 5]) == false\\n  TypeError: non-boolean\
    \ (Int64) used in boolean context\\n  Stacktrace:\\n    [1] iterate\\n      @\
    \ ./iterators.jl:447 [inlined]\\n    [2] iterate\\n      @ ./generator.jl:44 [inlined]\\\
    n    [3] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{Base.var\"\
    #108#110\", Base.Pairs{Int64, Int64, LinearIndices{1, Tuple{Base.OneTo{Int64}}},\
    \ Vector{Int64}}}, Base.var\"#107#109\"})\\n      @ Base ./array.jl:797\\n   \
    \ [4] collect\\n      @ ./array.jl:721 [inlined]\\n    [5] findall\\n      @ ./array.jl:2300\
    \ [inlined]\\n    [6] is_sorted(lst::Vector{Int64})\\n      @ Main /tmp/tmpw23pkl77.jl:29\\\
    n    [7] macro expansion\\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n    [8] macro expansion\\n      @ /tmp/tmpw23pkl77.jl:46 [inlined]\\\
    n    [9] macro expansion\\n      @ /shared/centos7"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return lst == sort(lst) && unique(lst) == lst\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8mhjvhry.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8mhjvhry.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8mhjvhry.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8mhjvhry.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nprintln(is_sorted([1, 2, 3, 4, 5])) # True\nprintln(is_sorted([1,\
    \ 3, 2, 4, 5])) # False\nprintln(is_sorted([1, 2, 3, 4, 5, 6])) # True\nprintln(is_sorted([1,\
    \ 2, 3, 4, 5, 6, 7])) # True\nprintln(is_sorted([1, 3, 2, 4, 5, 6, 7])) # False\n\
    println(is_sorted([1, 2, 2, 3, 3, 4])) # True\nprintln(is_sorted([1, 2, 2, 2,\
    \ 3, 4])) # False\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "true\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\ntest set: Test Failed at\
    \ /tmp/tmptrvu699f.jl:50\n  Expression: candidate([1, 2, 2, 3, 3, 4]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrvu699f.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrvu699f.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrvu699f.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    x = lst[1]\n    for (i, v) in enumerate(lst)\n        if v < x\n     \
    \       return false\n        end\n        x = v\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplokmq_3z.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmplokmq_3z.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmplokmq_3z.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmplokmq_3z.jl:30\\ntest set:\
    \ Test Failed at /tmp/tmplokmq_3z.jl:40\\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\\n   Evaluated: true == false'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst_sorted = sort(lst)\n    if lst == lst_sorted\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxui763t8.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxui763t8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxui763t8.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpxui763t8.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxui763t8.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxui763t8.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxui763t8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3y1somea.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3y1somea.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3y1somea.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3y1somea.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3y1somea.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3y1somea.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3y1somea.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    b = true \n    for i = 1:length(lst)-1\n        if lst[i] > lst[i+1]\n\
    \            b = false\n        end\n    end\n    return b\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpry6c61gl.jl:39\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpry6c61gl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpry6c61gl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpry6c61gl.jl:40\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpry6c61gl.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpry6c61gl.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpry6c61gl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return length(lst) == 1 || (lst[end] - lst[end-1] == 1 && length(unique(lst))\
    \ == length(lst))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpp2ybjvt2.jl:26\\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro\
    \ expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpp2ybjvt2.jl:26 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpp2ybjvt2.jl:23\\ntest set: Test\
    \ Failed at /tmp/tmpp2ybjvt2.jl:29\\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpp2ybjvt2.jl:29 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpp2ybjvt2.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    #vector, not list\n    sorted = sort(lst)\n    for i in 1:length(lst)\n\
    \        if lst[i] != sorted[i]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwi7wgvpa.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwi7wgvpa.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwi7wgvpa.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpwi7wgvpa.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwi7wgvpa.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwi7wgvpa.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwi7wgvpa.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2zoyydhj.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zoyydhj.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zoyydhj.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zoyydhj.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7pilh84_.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pilh84_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pilh84_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7pilh84_.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pilh84_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pilh84_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7pilh84_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst == sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpklzv0f_p.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpklzv0f_p.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpklzv0f_p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpklzv0f_p.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpklzv0f_p.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpklzv0f_p.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpklzv0f_p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    _duplicate = 0\n    _sorted = true\n    for _i = 1:length(lst)-1\n   \
    \     if lst[_i] > lst[_i+1]\n            _sorted = false\n        end\n     \
    \   if lst[_i] == lst[_i+1]\n            _duplicate += 1\n        end\n    end\n\
    \    if _duplicate >= 1\n        _sorted = false\n    end\n    return _sorted\n\
    end\n@assert is_sorted([5]) == true\n@assert is_sorted([1, 2, 3, 4, 5]) == true\n\
    @assert is_sorted([1, 3, 2, 4, 5]) == false\n@assert is_sorted([1, 2, 3, 4, 5,\
    \ 6]) == true\n@assert is_sorted([1, 2, 3, 4, 5, 6, 7]) == true\n@assert is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) == false\n@assert is_sorted([1, 2, 2, 3, 3, 4]) == true\n\
    @assert is_sorted([1, 2, 2, 2, 3, 4]) == false\nprintln(\"If nothing showed up,\
    \ then it works\")\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: is_sorted([1, 2, 2, 3, 3, 4]) == true\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpa4mgas6b.jl:38\nin expression\
    \ starting at /tmp/tmpa4mgas6b.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    length(lst) == 1 ? true : lst[1] < lst[2] ? is_sorted(lst[2:end]) : false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq1ts_see.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpq1ts_see.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpq1ts_see.jl:30 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpq1ts_see.jl:23\\ntest set:\
    \ Test Failed at /tmp/tmpq1ts_see.jl:35\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sorted(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdm1bxn0w.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  UndefVarError: sorted not\
    \ defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmpdm1bxn0w.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdm1bxn0w.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdm1bxn0w.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpdm1bxn0w.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  UndefVarError: sorted not defined\\n\
    \  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpdm1bxn0w.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdm1bxn0w.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdm1bxn0w.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpdm1bxn0w.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  UndefVarError: sorted not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpdm1bxn0w.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpdm1bxn0w.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdm1bxn0w.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpdm1bxn0w.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  UndefVarError: sorted not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    return isequal(lst,sort(lst))\n\
    end\n#is_sorted([1, 2, 2, 3, 3, 4])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpca8_koyq.jl:37\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpca8_koyq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpca8_koyq.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpca8_koyq.jl:38\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpca8_koyq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpca8_koyq.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpca8_koyq.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    prev = lst[1]\n    for x in lst[2:end]\n        if prev >= x\n       \
    \     return false\n        end\n        prev = x\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm73qz_p5.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpm73qz_p5.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm73qz_p5.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm73qz_p5.jl:30\\ntest set:\
    \ Test Failed at /tmp/tmpm73qz_p5.jl:42\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in eachindex(lst)\n        if i > 1\n            if lst[i] > lst[i-1]\n\
    \                continue\n            else\n                return false\n  \
    \          end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxwspbzzk.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwspbzzk.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwspbzzk.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxwspbzzk.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for (i,j) in zip(lst[1:end-1],lst[2:end])\n        if i >= j\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpju5pe69n.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpju5pe69n.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpju5pe69n.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpju5pe69n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  if length(lst) == 1\n    return true\n  end\n  for i in 1:length(lst)-1\n\
    \    if lst[i] > lst[i+1]\n      return false\n    end\n  end\n  return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxidnbl8a.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxidnbl8a.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxidnbl8a.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxidnbl8a.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxidnbl8a.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxidnbl8a.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxidnbl8a.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    n = length(lst)\n    for i in 1:n-1\n        if !(lst[i] < lst[i+1])\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprfck0ltd.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfck0ltd.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfck0ltd.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprfck0ltd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) > 1\n        for i in 1:length(lst)-1\n            if lst[i]\
    \ > lst[i+1]\n                return false\n            end\n        end\n   \
    \ end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuf1hivnh.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuf1hivnh.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuf1hivnh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuf1hivnh.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuf1hivnh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuf1hivnh.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuf1hivnh.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) <= 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] == lst[i+1]\n            return false\n        end\n      \
    \  if lst[i] > lst[i+1]\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps2z1em_3.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2z1em_3.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2z1em_3.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps2z1em_3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted = true\n    for (i,val) in enumerate(lst)\n        if i == 1\n\
    \            continue\n        end\n        if val <= lst[i-1]\n            sorted\
    \ = false\n            break\n        end\n    end\n    return sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdrts11p7.jl:45\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdrts11p7.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdrts11p7.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdrts11p7.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 \n        return true\n    end\n    if lst[1] == lst[2]\n\
    \        return false\n    end\n    prev = lst[1]\n    for i in lst[2:end]\n \
    \       if i < prev\n            return false\n        end\n        prev = i\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpiokfj27s.jl:43\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpiokfj27s.jl:20\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpiokfj27s.jl:43 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpiokfj27s.jl:36\\ntest set:\
    \ Test Failed at /tmp/tmpiokfj27s.jl:46\\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\\n   Evaluated: true == false'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    n = length(lst)\n    if n < 2\n        return true\n    end\n    for i\
    \ in 1:n-1\n        if lst[i] != lst[i+1]\n            if lst[i] > lst[i+1]\n\
    \                return false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return true\nend\n# Test Cases\nis_sorted([5])\
    \ == true\nis_sorted([1, 2, 3, 4, 5]) == true\nis_sorted([1, 3, 2, 4, 5]) == false\n\
    is_sorted([1, 2, 3, 4, 5, 6]) == true\nis_sorted([1, 2, 3, 4, 5, 6, 7]) == true\n\
    is_sorted([1, 3, 2, 4, 5, 6, 7]) == false\nis_sorted([1, 2, 2, 3, 3, 4]) == true\n\
    is_sorted([1, 2, 2, 2, 3, 4]) == false\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp72din5eu.jl:58\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp72din5eu.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp72din5eu.jl:46\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp72din5eu.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for (index, val) in enumerate(lst)\n        if index != length(lst)\n\
    \            if val > lst[index+1]\n                return false\n           \
    \ end\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0fotreoh.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0fotreoh.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0fotreoh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp0fotreoh.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0fotreoh.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0fotreoh.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0fotreoh.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    x = sort(lst)\n    if lst == x \n        return true\n    else \n    \
    \    return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpck8jnwdv.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpck8jnwdv.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpck8jnwdv.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpck8jnwdv.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpck8jnwdv.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpck8jnwdv.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpck8jnwdv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i = 1:length(lst)-1\n        if lst[i]>lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp68p8hxzu.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68p8hxzu.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68p8hxzu.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp68p8hxzu.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68p8hxzu.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68p8hxzu.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp68p8hxzu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    lst == sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiwkx7ans.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkx7ans.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkx7ans.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiwkx7ans.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkx7ans.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkx7ans.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwkx7ans.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    unique_lst = unique(lst)\n    if length(lst) > length(unique_lst) \n \
    \       return false\n    else\n        return isequal(lst, sort(lst))\n    end\n\
    end\nis_sorted([1, 2, 2, 3, 3, 4])\nis_sorted([1, 2, 2, 2, 3, 4])\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe4_b21lw.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4_b21lw.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4_b21lw.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4_b21lw.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return lst == sort(lst)\nend\n# Testing Code\nfor lst in [[5], [1, 2,\
    \ 3, 4, 5], [1, 3, 2, 4, 5], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6, 7], [1, 3,\
    \ 2, 4, 5, 6, 7], [1, 2, 2, 3, 3, 4], [1, 2, 2, 2, 3, 4]]\n    println(lst, \"\
    \ is sorted? \", is_sorted(lst))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "[5] is sorted? true\n[1, 2, 3, 4, 5] is sorted? true\n[1, 3, 2, 4, 5] is\
    \ sorted? false\n[1, 2, 3, 4, 5, 6] is sorted? true\n[1, 2, 3, 4, 5, 6, 7] is\
    \ sorted? true\n[1, 3, 2, 4, 5, 6, 7] is sorted? false\n[1, 2, 2, 3, 3, 4] is\
    \ sorted? true\n[1, 2, 2, 2, 3, 4] is sorted? true\ntest set: Test Failed at /tmp/tmp4e8dht2w.jl:37\n\
    \  Expression: candidate([1, 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4e8dht2w.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4e8dht2w.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp4e8dht2w.jl:38\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4e8dht2w.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4e8dht2w.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4e8dht2w.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # assume that the list will not be empty \n    # check if the list has\
    \ more than one duplicate of the same number\n    if !is_valid(lst) \n       \
    \ return false\n    end\n    # iterate through the list to check if the list is\
    \ in ascending order\n    for i in 1:length(lst)-1\n        if lst[i]>lst[i+1]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph4b7q1av.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  UndefVarError: is_valid\
    \ not defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @\
    \ Main /tmp/tmph4b7q1av.jl:19\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph4b7q1av.jl:35 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph4b7q1av.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmph4b7q1av.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  UndefVarError: is_valid not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmph4b7q1av.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph4b7q1av.jl:36 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph4b7q1av.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmph4b7q1av.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  UndefVarError: is_valid not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmph4b7q1av.jl:19\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmph4b7q1av.jl:37 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmph4b7q1av.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmph4b7q1av.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  UndefVarError: is_valid not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Ma"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    temp = 0\n    for i in lst\n        if i > temp\n            temp = i\n\
    \        else\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvptvhjp_.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvptvhjp_.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvptvhjp_.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvptvhjp_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkjnd3hy7.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjnd3hy7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjnd3hy7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkjnd3hy7.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkjnd3hy7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkjnd3hy7.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkjnd3hy7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  \n \n  if length(lst) == 1\n    return true\n  end\n  if length(lst) ==\
    \ 0\n    return false\n  end\n  for i in 1:length(lst)-1\n      if lst[i] > lst[i+1]\n\
    \        return false\n      end\n  end\n  \n  return true\nend\n@testset \"Should\
    \ return True if nums is [1, 2, 3, 4, 5, 6, 7]\" begin\n    @test is_sorted([1,\
    \ 2, 3, 4, 5, 6, 7]) == true\nend\n@testset \"Should return True if nums is [1,\
    \ 2, 3, 4, 5, 6]\" begin\n    @test is_sorted([1, 2, 3, 4, 5, 6]) == true\nend\n\
    @testset \"Should return True if nums is [5]\" begin\n    @test is_sorted([5])\
    \ == true\nend\n@testset \"Should return False if nums is [1, 3, 2, 4, 5, 6, 7]\"\
    \ begin\n    @test is_sorted([1, 3, 2, 4, 5, 6, 7]) == false\nend\n@testset \"\
    Should return False if nums is [1, 2, 2, 2, 3, 4]\" begin\n    @test is_sorted([1,\
    \ 2, 2, 2, 3, 4]) == false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmprnff1c19.jl:33\nin expression starting at /tmp/tmprnff1c19.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_a4vbsqj.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_a4vbsqj.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_a4vbsqj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_a4vbsqj.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_a4vbsqj.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_a4vbsqj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_a4vbsqj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n   for i in 1:length(lst)-1\n        if lst[i] == lst[i+1]\n            return\
    \ false\n        elseif lst[i] > lst[i+1]\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp92y4qsmx.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92y4qsmx.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92y4qsmx.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp92y4qsmx.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    set = Set(lst)\n    if length(set) == length(lst) && all(x -> x > 0, lst)\
    \ && isequal(sort(lst), lst)\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6zgvzndv.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6zgvzndv.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6zgvzndv.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6zgvzndv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    prev = lst[1]\n    for i in 2:length(lst)\n        if lst[i] <= prev\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptefwyqsl.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmptefwyqsl.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmptefwyqsl.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmptefwyqsl.jl:30\\ntest set:\
    \ Test Failed at /tmp/tmptefwyqsl.jl:42\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # lst: list of int\n    # return: Bool\n    \n    n = length(lst)\n  \
    \  for i in 1:n-1\n        if lst[i] > lst[i+1]\n            return false\n  \
    \      end\n    end\n    return true\nend\nis_sorted([5])\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99crdndg.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99crdndg.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99crdndg.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp99crdndg.jl:44\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99crdndg.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99crdndg.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99crdndg.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    end_idx = (length(lst)-1)\n    if length(lst) < 2\n        return true\n\
    \    end\n    for idx in 1:end_idx\n        if lst[idx] >= lst[idx+1]\n      \
    \      return false\n        end\n    end\n    return true\nend\nlst = [5]\nlst2\
    \ = [1, 2, 3, 4, 5]\nlst3 = [1, 3, 2, 4, 5]\nlst4 = [1, 2, 3, 4, 5, 6]\nlst5 =\
    \ [1, 2, 3, 4, 5, 6, 7]\nlst6 = [1, 3, 2, 4, 5, 6, 7]\nlst7 = [1, 2, 2, 3, 3,\
    \ 4]\nlst8 = [1, 2, 2, 2, 3, 4]\n@testset \"Testing\" begin\n    @test is_sorted(lst)\
    \ == true\n    @test is_sorted(lst2) == true\n    @test is_sorted(lst3) == false\n\
    \    @test is_sorted(lst4) == true\n    @test is_sorted(lst5) == true\n    @test\
    \ is_sorted(lst6) == false\n    @test is_sorted(lst7) == true\n    @test is_sorted(lst8)\
    \ == false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpx88rca4c.jl:36\nin expression starting at /tmp/tmpx88rca4c.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc69p6om7.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc69p6om7.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc69p6om7.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpc69p6om7.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc69p6om7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc69p6om7.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc69p6om7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0tmqkbwl.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0tmqkbwl.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0tmqkbwl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp0tmqkbwl.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0tmqkbwl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0tmqkbwl.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0tmqkbwl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) < 2\n        return true\n    end\n    idx = 2\n    while\
    \ idx <= length(lst)\n        if lst[idx] < lst[idx-1]\n            return false\n\
    \        end\n        idx += 1\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw_sb7la2.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_sb7la2.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_sb7la2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpw_sb7la2.jl:44\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_sb7la2.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_sb7la2.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_sb7la2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i = 1:length(lst)-1) && isunique(lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpslj132uk.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  UndefVarError: isunique\
    \ not defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @\
    \ Main /tmp/tmpslj132uk.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpslj132uk.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpslj132uk.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpslj132uk.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  UndefVarError: isunique not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpslj132uk.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpslj132uk.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpslj132uk.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpslj132uk.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  UndefVarError: isunique not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpslj132uk.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpslj132uk.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpslj132uk.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpslj132uk.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6, 7]) == true\\n  UndefVarError: isunique not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n    "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnzz94nn2.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnzz94nn2.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnzz94nn2.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnzz94nn2.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnzz94nn2.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnzz94nn2.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzz94nn2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    x = lst[1]\n    for i in 2:length(lst)\n        if lst[i] < x\n      \
    \      return false\n        end\n        x = lst[i]\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe2vtha1h.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpe2vtha1h.jl:17\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpe2vtha1h.jl:37 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpe2vtha1h.jl:30\\ntest set:\
    \ Test Failed at /tmp/tmpe2vtha1h.jl:40\\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\\n   Evaluated: true == false'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] <= lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplmsww9hb.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplmsww9hb.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplmsww9hb.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplmsww9hb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return lst == sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjm2zfde_.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjm2zfde_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjm2zfde_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjm2zfde_.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjm2zfde_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjm2zfde_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjm2zfde_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    L = length(lst)\n    for i in 1:L-1\n        if lst[i] >= lst[i+1]\n \
    \           return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpih87ochw.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpih87ochw.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpih87ochw.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpih87ochw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return lst == sort(lst)\nend\n    \n    \nlst = [5]\nis_sorted(lst)\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyj0ivv25.jl:37\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj0ivv25.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj0ivv25.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpyj0ivv25.jl:38\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj0ivv25.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj0ivv25.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyj0ivv25.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    lst0 = lst[1]\n\
    \    for i in 2:length(lst)\n        if lst[i] <= lst0\n            return false\n\
    \        end\n        lst0 = lst[i]\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3f6n97vm.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmp3f6n97vm.jl:20\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp3f6n97vm.jl:40 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp3f6n97vm.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmp3f6n97vm.jl:45\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return length(unique(lst)) == length(lst) && all(x -> x > y,lst[2:end],lst[1:end-1])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5ni306ht.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  MethodError: no method\
    \ matching all(::var\"#1#2\", ::Vector{Int64}, ::Vector{Int64})\\n  Closest candidates\
    \ are:\\n    all(::Function, ::AbstractArray; dims) at /shared/centos7/julia/1.7.3/share/julia/base/reducedim.jl:902\\\
    n    all(::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1152\\\
    n    all(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1070\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmp5ni306ht.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5ni306ht.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5ni306ht.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp5ni306ht.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  MethodError: no method matching all(::var\"\
    #1#2\", ::Vector{Int64}, ::Vector{Int64})\\n  Closest candidates are:\\n    all(::Function,\
    \ ::AbstractArray; dims) at /shared/centos7/julia/1.7.3/share/julia/base/reducedim.jl:902\\\
    n    all(::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1152\\\
    n    all(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1070\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmp5ni306ht.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5ni306ht.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5ni306ht.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    i = length(lst)\n    if i == 1\n        return true\n    end\n    for\
    \ n in 1:i-1\n        if lst[n] < lst[n+1]\n            continue\n        else\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn1zhwqny.jl:46\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1zhwqny.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1zhwqny.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn1zhwqny.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Initialize boolean variable to true\n    test_bool = true\n    # Loop\
    \ through all elements in the list, checking for duplicates\n    for i = 1:length(lst)-1\n\
    \        if lst[i] == lst[i+1]\n            test_bool = false\n        end\n \
    \   end\n    # Check if list is in order\n    test_bool = test_bool && isequal(sort(lst),\
    \ lst)\n    return test_bool\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8l9zdow.jl:45\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8l9zdow.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8l9zdow.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8l9zdow.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(x -> x <= length(lst), lst) && isequal(lst, sort(lst))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiafjt6a5.jl:24\n  Expression: candidate([5])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpiafjt6a5.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiafjt6a5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiafjt6a5.jl:33\n  Expression: candidate([1, 2, 2, 2, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiafjt6a5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiafjt6a5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiafjt6a5.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiafjt6a5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiafjt6a5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     3     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiafjt6a5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    len = length(lst)\n    sorted = true\n    for i in 2:len\n        if lst[i]\
    \ < lst[i-1]\n            sorted = false\n            break\n        end\n   \
    \ end\n    return sorted\nend\nprintln(is_sorted([1, 2, 3, 4, 5]))\nprintln(is_sorted([1,\
    \ 3, 2, 4, 5]))\nprintln(is_sorted([1, 2, 2, 3, 3, 4]))\nprintln(is_sorted([1,\
    \ 2, 2, 2, 3, 4]))\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "true\nfalse\ntrue\ntrue\ntest set: Test Failed at /tmp/tmpeax753pp.jl:45\n\
    \  Expression: candidate([1, 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeax753pp.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeax753pp.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpeax753pp.jl:46\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeax753pp.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeax753pp.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeax753pp.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    is_sorted_rec(lst,1)\nend \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6f461us2.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  UndefVarError: is_sorted_rec\
    \ not defined\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @\
    \ Main /tmp/tmp6f461us2.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6f461us2.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6f461us2.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp6f461us2.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  UndefVarError: is_sorted_rec not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmp6f461us2.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6f461us2.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6f461us2.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp6f461us2.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  UndefVarError: is_sorted_rec not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmp6f461us2.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp6f461us2.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp6f461us2.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp6f461us2.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\\n  UndefVarError: is_sorted_rec not defined\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vecto"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    len = length(lst)\n    if len < 2\n        return true\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b5veabq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b5veabq.jl:1\n\
    in expression starting at /tmp/tmp_b5veabq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Find unique elements in list\n    unique_elements = unique(lst)\n  \
    \  # Check if unique elements are in order\n    if unique_elements == sort(unique_elements)\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppekwj_hj.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppekwj_hj.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppekwj_hj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmppekwj_hj.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppekwj_hj.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppekwj_hj.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppekwj_hj.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(unique(lst)) == lst\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk75k39t2.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk75k39t2.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk75k39t2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk75k39t2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 return true end\n    dup_nums = [num for num in lst\
    \ if count(x -> x == num, lst) > 1]\n    if length(dup_nums) > 0 return false\
    \ end\n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1] return false\
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2c3c57oc.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2c3c57oc.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2c3c57oc.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2c3c57oc.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nis_sorted([1, 2, 3, 4, 5])\nis_sorted([1,\
    \ 3, 2, 4, 5])\nis_sorted([1, 2, 3, 4, 5, 6])\nis_sorted([1, 2, 3, 4, 5, 6, 7])\n\
    is_sorted([1, 3, 2, 4, 5, 6, 7])\nis_sorted([1, 2, 2, 3, 3, 4])\nis_sorted([1,\
    \ 2, 2, 2, 3, 4])\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz2cmkts6.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz2cmkts6.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz2cmkts6.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpz2cmkts6.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz2cmkts6.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz2cmkts6.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2cmkts6.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] != lst[i-1] + 1\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6ex36h7.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6ex36h7.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6ex36h7.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6ex36h7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst)==1 return true end\n    if lst[1]==lst[end] return false\
    \ end\n    return sort(lst)==lst && unique(lst)==lst\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpeywncc0r.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpeywncc0r.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpeywncc0r.jl:32 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpeywncc0r.jl:25\\ntest set:\
    \ Test Failed at /tmp/tmpeywncc0r.jl:37\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  return all(x->x<=y, lst[1:end-1], lst[2:end]) && all(x->x>=y, lst[1:end-1],\
    \ lst[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaljtsebr.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  MethodError: no method\
    \ matching all(::var\"#1#3\", ::Vector{Int64}, ::Vector{Int64})\\n  Closest candidates\
    \ are:\\n    all(::Function, ::AbstractArray; dims) at /shared/centos7/julia/1.7.3/share/julia/base/reducedim.jl:902\\\
    n    all(::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1152\\\
    n    all(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1070\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpaljtsebr.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpaljtsebr.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpaljtsebr.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpaljtsebr.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  MethodError: no method matching all(::var\"\
    #1#3\", ::Vector{Int64}, ::Vector{Int64})\\n  Closest candidates are:\\n    all(::Function,\
    \ ::AbstractArray; dims) at /shared/centos7/julia/1.7.3/share/julia/base/reducedim.jl:902\\\
    n    all(::Any, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1152\\\
    n    all(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/reduce.jl:1070\\\
    n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main /tmp/tmpaljtsebr.jl:17\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpaljtsebr.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpaljtsebr.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpaljtsebr.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\\n  MethodError: n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpstfzsxlq.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpstfzsxlq.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpstfzsxlq.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpstfzsxlq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n  if length(lst) < 2\n    return true\n  end\n  if lst[2] < lst[1]\n    return\
    \ false\n  end\n  is_sorted(lst[2:end])\nend\n@assert is_sorted([5]) == true\n\
    @assert is_sorted([1, 2, 3, 4, 5]) == true\n@assert is_sorted([1, 3, 2, 4, 5])\
    \ == false\n@assert is_sorted([1, 2, 3, 4, 5, 6]) == true\n@assert is_sorted([1,\
    \ 2, 3, 4, 5, 6, 7]) == true\n@assert is_sorted([1, 3, 2, 4, 5, 6, 7]) == false\n\
    @assert is_sorted([1, 2, 2, 3, 3, 4]) == true\n@assert is_sorted([1, 2, 2, 2,\
    \ 3, 4]) == false\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: is_sorted([1, 2, 2, 2, 3, 4]) == false\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpxqtk59mw.jl:32\nin expression\
    \ starting at /tmp/tmpxqtk59mw.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted(lst) == 1:length(lst)\nend\nprintln(is_sorted([5]))\nprintln(is_sorted([1,\
    \ 2, 3, 4, 5]))\nprintln(is_sorted([1, 3, 2, 4, 5]))\nprintln(is_sorted([1, 2,\
    \ 3, 4, 5, 6]))\nprintln(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprintln(is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]))\nprintln(is_sorted([1, 2, 2, 3, 3, 4]))\nprintln(is_sorted([1,\
    \ 2, 2, 2, 3, 4]))\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t\
    @test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t\
    @test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: sorted not defined\nStacktrace:\n [1]\
    \ is_sorted(lst::Vector{Int64})\n   @ Main /tmp/tmprzawdcu8.jl:17\n [2] top-level\
    \ scope\n   @ /tmp/tmprzawdcu8.jl:19\nin expression starting at /tmp/tmprzawdcu8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    d = Dict{Int64,Int64}()\n    for i in lst\n        d[i] = get(d,i,0) +\
    \ 1\n    end\n    values(d) |> length == length(lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgmh90a6c.jl:30\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgmh90a6c.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgmh90a6c.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgmh90a6c.jl:33\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgmh90a6c.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgmh90a6c.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgmh90a6c.jl:36\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgmh90a6c.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgmh90a6c.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpgmh90a6c.jl:39\n  Expression: candidate([1, 2, 2, 3, 3, 4])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgmh90a6c.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgmh90a6c.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     4     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgmh90a6c.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Create a sorted list of the passed in list\n    # Create a range that\
    \ covers the length of the input list\n    s_lst = sort(lst)\n    range_ = 1:length(lst)\n\
    \    # Loop through every number in the range\n    for i in range_\n        #\
    \ Check to see if the number in the sorted list equals the number in the passed\
    \ in list\n        # If so, return true. If not, return false\n        if s_lst[i]\
    \ != lst[i]\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp53shcwlp.jl:45\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53shcwlp.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53shcwlp.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp53shcwlp.jl:46\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp53shcwlp.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp53shcwlp.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp53shcwlp.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgyr3hn16.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyr3hn16.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyr3hn16.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgyr3hn16.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyr3hn16.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyr3hn16.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgyr3hn16.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] \u2264 lst[i+1] for i in 1:length(lst)-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5cz7mo3x.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5cz7mo3x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5cz7mo3x.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5cz7mo3x.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5cz7mo3x.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5cz7mo3x.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5cz7mo3x.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # iterate through the list until we either find a number \n    # not larger\
    \ than the previous or we reach the end of the list\n    for i = 2:length(lst)\n\
    \        if lst[i] <= lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdj0y4f1c.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdj0y4f1c.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdj0y4f1c.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdj0y4f1c.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    l = length(lst)\n    prev = lst[1]\n    for i in 2:l\n        if prev\
    \ >= lst[i]\n            return false\n        end\n        prev = lst[i]\n  \
    \  end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc4o4_wlb.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == true\\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\n  \
    \ [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] is_sorted(lst::Vector{Int64})\\\
    n     @ Main /tmp/tmpc4o4_wlb.jl:18\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpc4o4_wlb.jl:38 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpc4o4_wlb.jl:31\\ntest set:\
    \ Test Failed at /tmp/tmpc4o4_wlb.jl:43\\n  Expression: candidate([1, 2, 2, 3,\
    \ 3, 4]) == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpc4o4_wlb.jl:43 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpc4o4_wlb.jl:31\\nTest Summary:\
    \ | Pass  Fail  Error  Total\\ntest set      |   11     1      1     13\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg3bkjyq7.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3bkjyq7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3bkjyq7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg3bkjyq7.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3bkjyq7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3bkjyq7.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg3bkjyq7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    is_sorted = true\n    prev_value = 0\n    for value in lst\n        if\
    \ value < prev_value\n            is_sorted = false\n            break\n     \
    \   end\n        prev_value = value\n    end\n    return is_sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0b5qrtpx.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b5qrtpx.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b5qrtpx.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp0b5qrtpx.jl:43\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b5qrtpx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b5qrtpx.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0b5qrtpx.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # Implemented sorting algorithm\n    # lst = sort(lst)\nusing Test\n\n\
    @testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptvsy36sq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptvsy36sq.jl:1\n\
    in expression starting at /tmp/tmptvsy36sq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] == lst[i+1]\n            return\
    \ false\n        elseif lst[i] > lst[i+1]\n            return false\n        end\n\
    \    end\n    return true\nend\n\"\"\"\n    You are given an array of numbers\
    \ and a value.\n    Check whether the given array contains two elements that sum\
    \ up to the given value.\n    Can you do it in O(n) runtime?\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr75242yq.jl:26\nin expression starting at\
    \ /tmp/tmpr75242yq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    sorted = true\n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n\
    \            sorted = false\n        end\n    end\n    return sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) ==\
    \ true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3,\
    \ 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph5i5ykej.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5i5ykej.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5i5ykej.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5i5ykej.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    prev = lst[1]\n    for num in lst[2:end]\n        if num < prev\n    \
    \        return false\n        end\n        prev = num\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgwg0sqc8.jl:37\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == true\n  BoundsError: attempt to\
    \ access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] is_sorted(lst::Vector{Int64})\n     @\
    \ Main /tmp/tmpgwg0sqc8.jl:17\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgwg0sqc8.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgwg0sqc8.jl:30\ntest set:\
    \ Test Failed at /tmp/tmpgwg0sqc8.jl:40\n  Expression: candidate([1, 2, 2, 2,\
    \ 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwg0sqc8.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwg0sqc8.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpgwg0sqc8.jl:41\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwg0sqc8.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwg0sqc8.jl:30\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |   10     2      1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgwg0sqc8.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsytm1orw.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsytm1orw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsytm1orw.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsytm1orw.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsytm1orw.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsytm1orw.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsytm1orw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    _is_sorted(lst, 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi2nr00y9.jl:24\n  Test threw exception\n\
    \  Expression: candidate([5]) == true\n  UndefVarError: _is_sorted not defined\n\
    \  Stacktrace:\n   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpi2nr00y9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2nr00y9.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2nr00y9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpi2nr00y9.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\n  UndefVarError: _is_sorted not defined\n\
    \  Stacktrace:\n   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpi2nr00y9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2nr00y9.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2nr00y9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpi2nr00y9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 3, 2, 4, 5]) == false\n  UndefVarError: _is_sorted not defined\n\
    \  Stacktrace:\n   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpi2nr00y9.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2nr00y9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2nr00y9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpi2nr00y9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 3, 4, 5, 6]) == true\n  UndefVarError: _is_sorted not defined\n\
    \  Stacktrace:\n   [1] is_sorted(lst::Vector{Int64})\n     @ Main /tmp/tmpi2nr00y9.jl:17\n\
    \   [2] macro expans"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi2nr00y9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # ==========\n    # your code\n    # ==========\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8r6v0djz.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate([5]) == true\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp8r6v0djz.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8r6v0djz.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8r6v0djz.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp8r6v0djz.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 4, 5]) == true\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Bool\\n  Closest candidates are:\\n   \
    \ convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] is_sorted(lst::Vector{Int64})\\n     @ Main\
    \ /tmp/tmp8r6v0djz.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8r6v0djz.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return isequal(sort(lst), lst) && length(unique(lst)) == length(lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo4qppomg.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4qppomg.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4qppomg.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4qppomg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj21b_tme.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj21b_tme.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj21b_tme.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj21b_tme.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 return true end\n    for i = 1:length(lst)-1\n   \
    \     if lst[i] >= lst[i+1] return false end\n    end\n    return true\nend\n\
    #One-Liner\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5])\
    \ == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp25aitl50.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25aitl50.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25aitl50.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp25aitl50.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1 return true end\n    i = 2\n    while i <= length(lst)\n\
    \        if lst[i] >= lst[i-1]\n            i += 1\n        else\n           \
    \ return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1wxicrbg.jl:42\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wxicrbg.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wxicrbg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp1wxicrbg.jl:43\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wxicrbg.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wxicrbg.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wxicrbg.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkln6acg1.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkln6acg1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkln6acg1.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkln6acg1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for n in 1:length(lst)-1\n        if lst[n] > lst[n+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpym62qrd2.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym62qrd2.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym62qrd2.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpym62qrd2.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpym62qrd2.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpym62qrd2.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpym62qrd2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    \n    \n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsl0nv6c3.jl:28\n  Expression: candidate([1,\
    \ 3, 2, 4, 5]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl0nv6c3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl0nv6c3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl0nv6c3.jl:31\n  Expression: candidate([1, 3, 2, 4, 5, 6,\
    \ 7]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl0nv6c3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl0nv6c3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl0nv6c3.jl:34\n  Expression: candidate([3, 2, 1]) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl0nv6c3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl0nv6c3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl0nv6c3.jl:35\n  Expression: candidate([1, 2, 2, 2, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsl0nv6c3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsl0nv6c3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsl0nv6c3.jl:36\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsl0nv6c3.jl:23\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_131_digits
language: jl
results:
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    a = 0\n    for i in 1:length(string(n))\n        if parse(Int64, string(n)[i])\
    \ % 2 != 0\n            a *= parse(Int64, string(n)[i])\n        end\n    end\n\
    \    a\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2dhbqf9r.jl:22\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dhbqf9r.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dhbqf9r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2dhbqf9r.jl:23\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dhbqf9r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dhbqf9r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2dhbqf9r.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dhbqf9r.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dhbqf9r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2dhbqf9r.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dhbqf9r.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dhbqf9r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2dhbqf9r.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dhbqf9r.jl:26 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2dhbqf9r.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    digits = 1\n    if n >= 10\n        while n != 0\n            rem = n\
    \ % 10\n            if rem % 2 != 0\n                digits *= rem\n         \
    \   end\n            n = n \xF7 10\n        end\n    else\n        if n % 2 !=\
    \ 0\n            digits = n\n        end\n    end\n    return digits\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpelft2ywa.jl:36\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelft2ywa.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelft2ywa.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpelft2ywa.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    int_to_string = string(n)\n    count = 0\n    for d in int_to_string\n\
    \        if (d % 2) != 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoyknkd4p.jl:23\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpoyknkd4p.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoyknkd4p.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoyknkd4p.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpoyknkd4p.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpoyknkd4p.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoyknkd4p.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoyknkd4p.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpoyknkd4p.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching rem(::Ch"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoyknkd4p.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    digits = []\n    for i in collect(digits(n))\n        i == parse(Int64,\
    \ i) ? push!(digits, i) : continue\n    end\n    sum(digits)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpw5et1jxc.jl:20\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: objects of type Vector{Any} are\
    \ not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpw5et1jxc.jl:10\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5et1jxc.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5et1jxc.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpw5et1jxc.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: objects of type Vector{Any} are not callable\n\
    \  Use square brackets [] for indexing an Array.\n  Stacktrace:\n   [1] digits(n::Int64)\n\
    \     @ Main /tmp/tmpw5et1jxc.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5et1jxc.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5et1jxc.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpw5et1jxc.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: objects of type Vector{Any} are not callable\n\
    \  Use square brackets [] for indexing an Array.\n  Stacktrace:\n   [1] digits(n::Int64)\n\
    \     @ Main /tmp/tmpw5et1jxc.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw5et1jxc.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5et1jxc.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpw5et1jxc.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: objects of type Vec"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5et1jxc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n   num_string = string(n)\n   product = 1\n   for digit in num_string\n  \
    \     num = parse(Int64, digit)\n       if num % 2 != 0\n           product *=\
    \ num\n       end\n   end\n   return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp34kfqr8g.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp34kfqr8g.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp34kfqr8g.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp34kfqr8g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n) #absolute value of n\n    prod = 1 #prod is the product of\
    \ digits\n    while n > 0 #while n is greater than 0\n        r = rem(n,10) #r\
    \ is the remainder of n when divided by 10\n        if rem(r,2) != 0 #if r is\
    \ not divisible by 2, it is odd and gets multiplied to prod\n            prod\
    \ *= r\n        end\n        n = div(n,10) #n gets divided by 10\n    end\n  \
    \  return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdv59z_wi.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdv59z_wi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdv59z_wi.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdv59z_wi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_digits = map(x->x-48, int2digits(n))\n    return prod(filter(x->x%2!=0,\
    \ n_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2o90ordl.jl:17\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: int2digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp2o90ordl.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2o90ordl.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2o90ordl.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2o90ordl.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: int2digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp2o90ordl.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2o90ordl.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2o90ordl.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2o90ordl.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: int2digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp2o90ordl.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2o90ordl.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2o90ordl.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2o90ordl.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: int2digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp2o90ordl.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o90ordl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    arr = [parse(Int64,i) for i in string(n)]\n    odd_arr = [arr[i] for i\
    \ in 1:length(arr) if isodd(arr[i])]\n    return prod(odd_arr)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsd47uew3.jl:24\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsd47uew3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsd47uew3.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsd47uew3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n%2 == 0 && return digits(n/10)\n    return n%10\
    \ * digits(n/10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4s4qjsg7.jl:18\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4s4qjsg7.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4s4qjsg7.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4s4qjsg7.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4s4qjsg7.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp4s4qjsg7.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4s4qjsg7.jl:8\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp4s4qjsg7.jl:0\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4s4qjsg7.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4s4qjsg7.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp4s4qjsg7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4s4qjsg7.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4s4qjsg7.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4s4qjsg7.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4s4qjsg7.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp4s4qjsg7.jl:21\n  Test threw exception\n  E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4s4qjsg7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10 && isodd(n)\n        return n\n    elseif n < 10 && !isodd(n)\n\
    \        return 0\n    else\n        d = floor(Int64, n/10)\n        return (n\
    \ % 10)*digits(d)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5h3_8mj4.jl:24\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h3_8mj4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h3_8mj4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5h3_8mj4.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h3_8mj4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h3_8mj4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5h3_8mj4.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h3_8mj4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h3_8mj4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5h3_8mj4.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5h3_8mj4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5h3_8mj4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5h3_8mj4.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5h3_8mj4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n <= 0\n        return 0\n    end\n    prod = 1\n    for d in digits(n)\n\
    \        if isodd(d)\n            prod *= d\n        end\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 return 0 end\n    s = n % 10\n    if s % 2 == 0 return digits(div(n,\
    \ 10)) end\n    return s * digits(div(n, 10))\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpchrqc25a.jl:20\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchrqc25a.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchrqc25a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpchrqc25a.jl:21\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchrqc25a.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchrqc25a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpchrqc25a.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchrqc25a.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchrqc25a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpchrqc25a.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchrqc25a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchrqc25a.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpchrqc25a.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchrqc25a.jl:24 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchrqc25a.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    r = 1\n    while n > 0\n        d = n % 10\n        if d % 2 == 1\n  \
    \          r *= d\n        end\n        n = n \xF7 10\n    end\n    return r\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm2q6vo7j.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm2q6vo7j.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm2q6vo7j.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm2q6vo7j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n * n * n\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj7znvg26.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 125 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7znvg26.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7znvg26.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpj7znvg26.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 157464 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7znvg26.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7znvg26.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpj7znvg26.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 1728000 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7znvg26.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7znvg26.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpj7znvg26.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 126052942744 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7znvg26.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7znvg26.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpj7znvg26.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 963405683847125 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj7znvg26.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return prod(n % 10 % 2 == 1 ? n % 10 : 1 for n = div(n, 10))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph34yijw9.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph34yijw9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph34yijw9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph34yijw9.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph34yijw9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph34yijw9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph34yijw9.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 1 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph34yijw9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph34yijw9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph34yijw9.jl:21\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 1 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph34yijw9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph34yijw9.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph34yijw9.jl:22\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph34yij"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph34yijw9.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd_prod = 1\n    while n > 0\n        if (n % 10) % 2 != 0\n        \
    \    odd_prod *= (n % 10)\n        end\n        n = n \xF7 10\n    end\n    return\
    \ odd_prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6u2ijeb.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6u2ijeb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6u2ijeb.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6u2ijeb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    m = 0\n    r = 1\n    while n > 0\n        m = n % 10\n        if m %\
    \ 2 != 0\n            r = r * m\n        end\n        n = n / 10\n    end\n  \
    \  return r\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpipxy2jrp.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxy2jrp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxy2jrp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpipxy2jrp.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxy2jrp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxy2jrp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpipxy2jrp.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxy2jrp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxy2jrp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpipxy2jrp.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxy2jrp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipxy2jrp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpipxy2jrp.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipxy2jrp.jl:29 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpipxy2jrp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # your code\nend\n\"\"\"\n\"\"\"\n\"\"\"Given an array of non-negative\
    \ integers and a value sum, determine whether there is a subset of the array that\
    \ adds up to sum. Example:\n    For numbers = [1, 4, 45, 6, 10, 8] and sum = 22,\
    \ the output should be hasPairWithSum(numbers, sum) = true.\n    For numbers =\
    \ [1, -2, 3, 8] and sum = 6, the output should be hasPairWithSum(numbers, sum)\
    \ = false.\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\n\"Given\
    \ an array of non-negative integers and a value sum, determine whether there is\
    \ a subset of the array that adds up to sum. Example:\\nFor numbers = [1, 4, 45,\
    \ 6, 10, 8] and sum = 22, the output should be hasPairWithSum(numbers, sum) =\
    \ true.\\nFor numbers = [1, -2, 3, 8] and sum = 6, the output should be hasPairWithSum(numbers,\
    \ sum) = false.\\n\"\n\nStacktrace:\n [1] error(::String, ::String)\n   @ Base\
    \ ./error.jl:42\n [2] top-level scope\n   @ /tmp/tmp2mbwyoc7.jl:11\nin expression\
    \ starting at /tmp/tmp2mbwyoc7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    prod = 1\n    while n != 0\n        r = n % 10\n        if r % 2 != 0\n\
    \            prod *= r\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1x85dmu9.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1x85dmu9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1x85dmu9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1x85dmu9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    product = 1\n    while n !=\
    \ 0\n        r = rem(n, 10)\n        if r % 2 != 0\n            product *= r\n\
    \        end\n        n = div(n, 10)\n    end\n    return product\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpduve2d14.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpduve2d14.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpduve2d14.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpduve2d14.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    pass\n    s = string(n)\n    total = 1\n    for i in s\n        if parse(Int64,\
    \ i) % 2 != 0\n            total *= parse(Int64, i)\n        end\n    end\n  \
    \  if total == 1\n        total = 0\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpvecn86cj.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: pass not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpvecn86cj.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvecn86cj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvecn86cj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvecn86cj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: pass not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmpvecn86cj.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvecn86cj.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvecn86cj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvecn86cj.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: pass not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmpvecn86cj.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvecn86cj.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvecn86cj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpvecn86cj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: pass not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmpvecn86cj.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpve"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvecn86cj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if (n % 10) % 2 == 0\n     \
    \   return digits(n // 10)\n    else\n        return digits(n // 10) * (n % 10)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5ryewthb.jl:24\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp5ryewthb.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5ryewthb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5ryewthb.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ryewthb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5ryewthb.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp5ryewthb.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5ryewthb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5ryewthb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ryewthb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5ryewthb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp5ryewthb.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5ryewthb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5ryewthb.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ryewthb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp5ryewthb.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ryewthb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    for digit in digits(n)\n        if digit\
    \ % 2 != 0\n            result *= digit\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return n < 10 ? (n % 2 == 1 ? n : 0) : digits(n % 10) * digits(n \xF7\
    \ 10)\nend\ndigits(1) \ndigits(4)  \ndigits(235) \nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0txwha1_.jl:20\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0txwha1_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0txwha1_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0txwha1_.jl:21\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0txwha1_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0txwha1_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0txwha1_.jl:22\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0txwha1_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0txwha1_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0txwha1_.jl:23\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0txwha1_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0txwha1_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0txwha1_.jl:24\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0txwha"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0txwha1_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    prod = 1\n    while n > 0\n        if n % 2 == 1\n            prod *=\
    \ n % 10\n        end\n        n = floor(Int64, n / 10)\n    end\n    return prod\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj2jqyrx8.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj2jqyrx8.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj2jqyrx8.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj2jqyrx8.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10 && n > 0\n        return n\n    end\n    if n < 0\n        return\
    \ digits(-n)\n    end\n    if n % 2 == 0\n        return digits(n // 10)\n   \
    \ end\n    return (n % 10) * digits(n // 10)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4k0wp3fe.jl:26\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4k0wp3fe.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4k0wp3fe.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4k0wp3fe.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4k0wp3fe.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4k0wp3fe.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4k0wp3fe.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4k0wp3fe.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4k0wp3fe.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4k0wp3fe.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4k0wp3fe.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp4k0wp3fe.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp4k0wp3fe.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4k0wp3fe.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4k0wp3fe.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp4k0wp3fe.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4k0wp3fe.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4vxn7qhw.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vxn7qhw.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4vxn7qhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4vxn7qhw.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vxn7qhw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4vxn7qhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4vxn7qhw.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vxn7qhw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4vxn7qhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4vxn7qhw.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vxn7qhw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4vxn7qhw.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp4vxn7qhw.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vxn7qhw.jl:20 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4vxn7qhw.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # your code\nend\n\"\"\"Given a string s, return a string of the same\
    \ length with each character\n    duplicated 3 times.\n    For example:\n    string3(\"\
    Hello\")  == \"HHHeeellllllooo\"\n    string3(\"hello\")  == \"hhheeellllllooo\"\
    \n    string3(\"World\")  == \"WWWooorrrrlllldddd\"\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpwbtai9gw.jl:11\nin expression starting at /tmp/tmpwbtai9gw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # you write this function!\n    return 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm7j_aeqo.jl:17\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7j_aeqo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7j_aeqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm7j_aeqo.jl:18\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7j_aeqo.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7j_aeqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm7j_aeqo.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7j_aeqo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7j_aeqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm7j_aeqo.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7j_aeqo.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7j_aeqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm7j_aeqo.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7j_aeqo.jl:21 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7j_aeqo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    x = 1\n    for i = 1:length(string(n))\n        if  parse(Int64, string(n)[i])\
    \ % 2 != 0 \n            x *= parse(Int64, string(n)[i])\n        end\n    end\n\
    \    return x\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmmtz7fw8.jl:28\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmtz7fw8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmtz7fw8.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmtz7fw8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        digit = mod(n, 10)\n  \
    \      if digit % 2 == 1\n            return digit * digits(div(n, 10))\n    \
    \    else\n            return digits(div(n, 10))\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvl3iqb3p.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvl3iqb3p.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvl3iqb3p.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvl3iqb3p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        d, r = divrem(n, 10)\n\
    \        if r % 2 == 0\n            return digits(d)\n        else\n         \
    \   return r * digits(d)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1iysikok.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1iysikok.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1iysikok.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1iysikok.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    digits = 0\n    while n > 0\n        if n % 2 == 1\n            digits\
    \ += 1\n        end\n        n = div(n, 10)\n    end\n    return digits\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9hii1fq2.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hii1fq2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hii1fq2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9hii1fq2.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hii1fq2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hii1fq2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9hii1fq2.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hii1fq2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hii1fq2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9hii1fq2.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 3 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hii1fq2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9hii1fq2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp9hii1fq2.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 5 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9hii1fq2"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9hii1fq2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # loop through all the digits of n\n    # if the digit is odd, multiply\
    \ it with the product (initialized to 1)\n    # return the product\nend\ndigits(1)\n\
    digits(4)\ndigits(235)\ndigits(23523525)\ndigits(235262537)\n \n \n \n\"\"\"Given\
    \ a positive integer n, return the largest integer that is\n    the product of\
    \ two digits in n.\n    Return 0 if no two digit product exists.\n    For example:\n\
    \    two_digits(1)  == 0\n    two_digits(4)  == 0\n    two_digits(235) == 15\n\
    \    two_digits(23523525) == 25\n    two_digits(235262537) == 25\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\nClosest candidates are:\n  convert(::Type{T}, !Matched::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \  convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \  ...\nStacktrace:\n [1] digits(n::Int64)\n   @ Main /tmp/tmpzxp50gvb.jl:12\n\
    \ [2] top-level scope\n   @ /tmp/tmpzxp50gvb.jl:13\nin expression starting at\
    \ /tmp/tmpzxp50gvb.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n%2 == 0 ? n == 0 ? 0 : n*digits(n/10) : digits(n/10) \nend\n \ndigits(235)\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching digits(::Float64)\\\
    nClosest candidates are:\\n  digits(!Matched::Int64) at /tmp/tmpiisutniz.jl:8\\\
    nStacktrace:\\n [1] digits(n::'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # YOUR CODE HERE\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwz1m0eau.jl:17\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz1m0eau.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz1m0eau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwz1m0eau.jl:18\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz1m0eau.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz1m0eau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwz1m0eau.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz1m0eau.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz1m0eau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwz1m0eau.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz1m0eau.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwz1m0eau.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwz1m0eau.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwz1m0eau.jl:21 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwz1m0eau.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n > 0\n        temp = mod(n, 10)\n        if mod(temp,\
    \ 2) != 0\n            product *= temp\n        end\n        n = div(n, 10)\n\
    \    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfc_zjuo5.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfc_zjuo5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfc_zjuo5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfc_zjuo5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n%2 != 0\n        return\
    \ n%10 * digits(div(n,10))\n    else\n        return digits(div(n,10))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu1krer38.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1krer38.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1krer38.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu1krer38.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1krer38.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1krer38.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu1krer38.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1krer38.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1krer38.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu1krer38.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1krer38.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu1krer38.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu1krer38.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu1krer38.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu1krer38.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    while n != 0\n        digit = n % 10\n        if digit\
    \ % 2 != 0\n            total *= digit\n        end\n        n = div(n, 10)\n\
    \    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb886ec8w.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb886ec8w.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb886ec8w.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb886ec8w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    digits = []\n    while n >= 10\n        push!(digits, n % 10)\n      \
    \  n = div(n, 10)\n    end\n    push!(digits, n)\n    @show digits\n    product\
    \ = 1\n    for d in digits\n        if d % 2 == 1\n            product *= d\n\
    \        end\n    end\n    product\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "digits = Any[5]\ndigits = Any[4, 5]\ndigits = Any[0, 2, 1]\ndigits = Any[4,\
    \ 1, 0, 5]\ndigits = Any[5, 6, 7, 8, 9]\ndigits = Any[3, 4, 5, 6, 7, 5, 5]\ndigits\
    \ = Any[8, 6, 4, 2]\ntest set: Test Failed at /tmp/tmpdytdbipy.jl:35\n  Expression:\
    \ candidate(2468) == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdytdbipy.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdytdbipy.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdytdbipy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    num::Int64 = 1\n    while n != 0\n        if mod(n, 10) % 2 != 0\n   \
    \         num *= mod(n, 10)\n        end\n        n = div(n, 10)\n    end\n  \
    \  return num\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5_vrom3.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn5_vrom3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn5_vrom3.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5_vrom3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_string = n |> tostring()\n    n_ints = n_string |> Int.(collect(n_string))\n\
    \    odd_ints = filter(x -> isodd(x), n_ints)\n    prod(odd_ints)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7auq1oru.jl:19\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: tostring not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp7auq1oru.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7auq1oru.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7auq1oru.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7auq1oru.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: tostring not defined\n  Stacktrace:\n \
    \  [1] digits(n::Int64)\n     @ Main /tmp/tmp7auq1oru.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7auq1oru.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7auq1oru.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7auq1oru.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: tostring not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp7auq1oru.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7auq1oru.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7auq1oru.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7auq1oru.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: tostring not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp7auq1oru.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7auq1oru.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n  \n    n = num_to_string(n)\n    product = 1\n    for i = 1:length(n)\n \
    \       if isodd(parse(Int64, n[i]))\n            product *= parse(Int64, n[i])\n\
    \        end\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpm8fsw_bt.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: num_to_string not defined\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpm8fsw_bt.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm8fsw_bt.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8fsw_bt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpm8fsw_bt.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: num_to_string not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpm8fsw_bt.jl:10\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm8fsw_bt.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8fsw_bt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpm8fsw_bt.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: num_to_string not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpm8fsw_bt.jl:10\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm8fsw_bt.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm8fsw_bt.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpm8fsw_bt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: num_to_string not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpm8fsw_bt.jl:10\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm8fsw_bt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # your code here\n    val, sum = 0, 0\n    while n > 0\n        if n %\
    \ 2 != 0\n            sum += n % 10\n        end\n        n = n / 10\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxaa_4fz5.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  InexactError: Int64(5.5555555555555545)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] digits(n::Int64)\n     @ Main /tmp/tmpxaa_4fz5.jl:17\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxaa_4fz5.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxaa_4fz5.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxaa_4fz5.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  InexactError: Int64(6.000000000000002)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] digits(n::Int64)\n     @ Main /tmp/tmpxaa_4fz5.jl:17\n   [4]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxaa_4fz5.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxaa_4fz5.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxaa_4fz5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  InexactError: Int64(1.333333333333333)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] digits(n::Int64)\n     @ Main /tmp/tmpxaa_4fz5.jl:17\n   [4]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxaa_4fz5.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxaa_4fz5.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxaa_4fz5.jl:27\n  Test threw except"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxaa_4fz5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    res = 1\n    for i in 1:ceil(log10(n))\n        d = div(n, 10^(i-1)) %\
    \ 10\n        if d % 2 != 0\n            res *= d\n        end\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2zvuajtg.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2zvuajtg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2zvuajtg.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zvuajtg.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    for c in string(n)\n        c == '0' && continue\n  \
    \      d = parse(Int64, c)\n        if d % 2 == 1\n            product *= d\n\
    \        end\n    end\n    product\nend\n    \nprintln(digits(1))\nprintln(digits(4))\n\
    println(digits(235))\nprintln(digits(8))\nprintln(digits(0))\nprintln(digits(9))\n\
    println(digits(100))\nprintln(digits(10019))\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "1\n1\n15\n1\n1\n9\n1\n9\ntest set: Test Failed at /tmp/tmp36akw6h5.jl:39\n\
    \  Expression: candidate(2468) == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp36akw6h5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp36akw6h5.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp36akw6h5.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    while n > 0\n        if n % 2 != 0\n            total *=\
    \ n % 10\n        end\n        n = div(n, 10)\n    end\n    return total\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt5fkj5ky.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt5fkj5ky.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt5fkj5ky.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt5fkj5ky.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # todo: please fill in your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpww9320fq.jl:16\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpww9320fq.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpww9320fq.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpww9320fq.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpww9320fq.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpww9320fq.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpww9320fq.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpww9320fq.jl:15\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpww9320fq.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_string = string(n)\n    result = 1\n    for i in n_string\n        if\
    \ parse(Int64, i) % 2 != 0\n            result *= parse(Int64, i)\n        end\n\
    \    end\n    return result\nend\ndigits(235)\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4pqqbbkh.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4pqqbbkh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4pqqbbkh.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4pqqbbkh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10 return n % 2 == 1 ? n : 0 end\n    if n % 2 == 0 return digits(n\
    \ \xF7 10) end\n    return n % 10 * digits(n \xF7 10)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n .&gt;= 1 || error(\"n must be positive\")\n    n &lt; 100000 || error(\"\
    n is too large\")\n    digs = map(Int64, digits(n))\n    isodd(digs) &amp;&amp;\
    \ return prod(digs[isodd(digs)])\n    return 0\nend\n</code>\nCan anyone help\
    \ me with this?\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpctamoczk.jl:9\nin expression starting at /tmp/tmpctamoczk.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkhfldg5b.jl:16\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpkhfldg5b.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkhfldg5b.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkhfldg5b.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpkhfldg5b.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpkhfldg5b.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkhfldg5b.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkhfldg5b.jl:15\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkhfldg5b.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return prod(odddigits(n))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxt_4l3ab.jl:16\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: odddigits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxt_4l3ab.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxt_4l3ab.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxt_4l3ab.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxt_4l3ab.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: odddigits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxt_4l3ab.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxt_4l3ab.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxt_4l3ab.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxt_4l3ab.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: odddigits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxt_4l3ab.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxt_4l3ab.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxt_4l3ab.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxt_4l3ab.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: odddigits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxt_4l3ab.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansi"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxt_4l3ab.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n  total = 1\n  while n > 0\n    n,r = divrem(n,10)\n    total *= r*(r%2 ==\
    \ 1)\n  end\n  return total\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbjl7_nbn.jl:22\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjl7_nbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjl7_nbn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbjl7_nbn.jl:23\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjl7_nbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjl7_nbn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbjl7_nbn.jl:24\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjl7_nbn.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjl7_nbn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbjl7_nbn.jl:25\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjl7_nbn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjl7_nbn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbjl7_nbn.jl:26\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjl7_n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbjl7_nbn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return 0\n    end\n    prod = 1\n    while n > 0\n \
    \       digit = n % 10\n        if digit % 2 == 1\n            prod *= digit\n\
    \        end\n        n = div(n, 10)\n    end\n    return prod\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpus0v47dh.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpus0v47dh.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpus0v47dh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpus0v47dh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd_digits = filter(isodd, [Int(d) for d in digits(n)])\n    return prod(odd_digits)\
    \ == 0 ? 0 : prod(odd_digits)\nend\n \n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n%2 == 1 ? n : 0\n    elseif n%2 == 1\n    \
    \    return digits(div(n,10))*(n%10)\n    else\n        return digits(div(n,10))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    for digit in string(n)\n        if parse(Int64, digit)\
    \ % 2 != 0\n            total *= parse(Int64, digit)\n        end\n    end\n \
    \   return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpykkyf9vw.jl:28\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykkyf9vw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykkyf9vw.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykkyf9vw.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # Base case, we have only one digit\n    if n < 10\n        return n %\
    \ 2 == 1 ? n : 0\n    end\n    # If n is even, then it will have no contribution\
    \ to the total\n    if n % 2 == 0\n        return digits(n / 10)\n    end\n  \
    \  return n % 10 * digits(n / 10)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaq6cm7ou.jl:25\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpaq6cm7ou.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpaq6cm7ou.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaq6cm7ou.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaq6cm7ou.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaq6cm7ou.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpaq6cm7ou.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpaq6cm7ou.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaq6cm7ou.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaq6cm7ou.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaq6cm7ou.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpaq6cm7ou.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpaq6cm7ou.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaq6cm7ou.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaq6cm7ou.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpaq6cm7ou.jl:28\n  Test threw exception\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaq6cm7ou.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n  x = abs(n)\n  p = 1\n  while x != 0\n    if x % 2 != 0\n      p *= x % 10\n\
    \    end\n    x = div(x, 10)\n  end\n  return p\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp471r2hzz.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp471r2hzz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp471r2hzz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp471r2hzz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # Convert integer to string (string is an array of characters)\n    string_digits\
    \ = string(n)\n    # Convert string to array of numbers\n    # A = collect(parse.(Int64,\
    \ string_digits))\n    # Check if number is even and exclude if so\n    # sum(A[A\
    \ .% 2 .!= 0])\n    total = 1\n    for d in string_digits\n        if parse(Int64,\
    \ d) % 2 != 0\n            total *= parse(Int64, d)\n        end\n    end\n  \
    \  return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfhtsrhdu.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhtsrhdu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhtsrhdu.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfhtsrhdu.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    while n > 0\n        r = rem(n, 10)\n        if r % 2 !=\
    \ 0\n            total *= r\n        end\n        n = div(n, 10)\n    end\n  \
    \  return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsqa257vg.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsqa257vg.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsqa257vg.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqa257vg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \nend\n \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5c3s3do2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5c3s3do2.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5c3s3do2.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5c3s3do2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp5c3s3do2.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp5c3s3do2.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5c3s3do2.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5c3s3do2.jl:16\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5c3s3do2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return 0\n    end\n    ones = mod(n, 10)\n    if ones\
    \ == 0\n        return 0\n    end\n    return ones*digits(n \xF7 10)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmdtmie7k.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdtmie7k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdtmie7k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmdtmie7k.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdtmie7k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdtmie7k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmdtmie7k.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdtmie7k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdtmie7k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmdtmie7k.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdtmie7k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmdtmie7k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmdtmie7k.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmdtmie7k.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmdtmie7k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n  |> digits2\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwryk3kic.jl:16\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: digits2 not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpwryk3kic.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwryk3kic.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwryk3kic.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwryk3kic.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: digits2 not defined\n  Stacktrace:\n  \
    \ [1] digits(n::Int64)\n     @ Main /tmp/tmpwryk3kic.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwryk3kic.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwryk3kic.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwryk3kic.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: digits2 not defined\n  Stacktrace:\n \
    \  [1] digits(n::Int64)\n     @ Main /tmp/tmpwryk3kic.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwryk3kic.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwryk3kic.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwryk3kic.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: digits2 not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpwryk3kic.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwryk3kic.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    res = 1\n    while n > 0\n        d = n % 10\n        if d % 2 != 0\n\
    \            res *= d\n        end\n        n = n \xF7 10\n    end\n    return\
    \ res\nend\n    \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpotgy25e3.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpotgy25e3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpotgy25e3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpotgy25e3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    for x in digits(n)\n        if x % 2 != 0\n         \
    \   product *= x\n        end\n    end\n    return product\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return( 0 )\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo6njcu5t.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6njcu5t.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6njcu5t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6njcu5t.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6njcu5t.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6njcu5t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6njcu5t.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6njcu5t.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6njcu5t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6njcu5t.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6njcu5t.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6njcu5t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6njcu5t.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6njcu5t.jl:20 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6njcu5t.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n % 10) *\
    \ digits(n \xF7 10)\n    end\nend\ndigits(1)\ndigits(4)\ndigits(235)\ndigits(10)\n\
    digits(11)\ndigits(12)\ndigits(13)\ndigits(14)\ndigits(15)\ndigits(16)\ndigits(17)\n\
    digits(18)\ndigits(19)\ndigits(20)\ndigits(21)\ndigits(22)\ndigits(23)\ndigits(24)\n\
    digits(25)\ndigits(26)\ndigits(27)\ndigits(28)\ndigits(29)\ndigits(30)\ndigits(31)\n\
    digits(32)\ndigits(33)\ndigits(34)\ndigits(35)\ndigits(36)\ndigits(37)\ndigits(38)\n\
    digits(39)\ndigits(40)\ndigits(41)\ndigits(42)\ndigits(43)\ndigits(44)\ndigits(45)\n\
    digits(46)\ndigits(47)\ndigits(48)\ndigits(49)\ndigits(50)\ndigits(51)\ndigits(52)\n\
    digits(53)\ndigits(54)\ndigits(55)\ndigits(56)\ndigits(57)\ndigits(58)\ndigits(59)\n\
    digits(60)\ndigits(61)\ndigits(62)\ndigits(63)\ndigits(64)\ndigits(65)\ndigits(66)\n\
    digits(67)\ndigits(68)\ndigits(69)\ndigits(70)\ndigits(71)\ndigits(72)\ndigits(73)\n\
    digits(74)\ndigits(75)\ndigits(76)\ndigits(77)\ndigits(78)\ndigits(79)\ndigits(80)\n\
    digits(81)\ndigits(82)\ndigits(83)\ndigits(84)\ndigits(85)\ndigits\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpe2kx32iv.jl:101\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2kx32iv.jl:101 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2kx32iv.jl:99\ntest set: Test\
    \ Failed at /tmp/tmpe2kx32iv.jl:102\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2kx32iv.jl:102 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2kx32iv.jl:99\ntest set: Test\
    \ Failed at /tmp/tmpe2kx32iv.jl:103\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2kx32iv.jl:103 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2kx32iv.jl:99\ntest set: Test\
    \ Failed at /tmp/tmpe2kx32iv.jl:104\n  Expression: candidate(98765) == 315\n \
    \  Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2kx32iv.jl:104 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2kx32iv.jl:99\ntest set: Test\
    \ Failed at /tmp/tmpe2kx32iv.jl:105\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe2kx32iv.jl:97\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    ans = 1\n    for x in string(n)\n        if x isa Int64 && x % 2 != 0\n\
    \            ans *= x\n        end\n    end\n    return ans\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpnnpwr3ou.jl:22\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnpwr3ou.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnnpwr3ou.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnnpwr3ou.jl:23\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnpwr3ou.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnnpwr3ou.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnnpwr3ou.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnpwr3ou.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnnpwr3ou.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnnpwr3ou.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 1 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnpwr3ou.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnnpwr3ou.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpnnpwr3ou.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 1 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnnpwr3ou"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnnpwr3ou.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # Check if n is positive\n    if n < 0\n        return \"Error, insert\
    \ positive integer\"\n    end\n    # Initialize empty list of odd digits\n   \
    \ odd_digits = []\n    # Loop over every digit\n    while n > 0\n        # Get\
    \ digit in loop\n        digit = n % 10\n        # if odd append to list\n   \
    \     if digit % 2 != 0\n            push!(odd_digits, digit)\n        end\n \
    \       # reduce n by 10^2 since we have extracted the last digit in loop\n  \
    \      n = n \xF7 10\n    end\n    # Initialize product of odd digits\n    product\
    \ = 1\n    # Loop over list of odd digits\n    for i in odd_digits\n        #\
    \ Multiply i with product\n        product *= i\n    end\n    # Return product\n\
    \    return product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukla1j5a.jl:47\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukla1j5a.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukla1j5a.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukla1j5a.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        nn = div(n, 10)\n     \
    \   if nn == 0\n            nn = 10\n        end\n        if rem(n, 10) != 0\n\
    \            return rem(n, 10) * digits(nn)\n        else\n            return\
    \ digits(nn)\n        end\n    end\nend\nprintln(digits(1))\nprintln(digits(4))\n\
    println(digits(235))\nprintln(digits(13))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "1\n4\n30\n3\ntest set: Test Failed at /tmp/tmpjqbrevw9.jl:33\n  Expression:\
    \ candidate(54) == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqbrevw9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqbrevw9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjqbrevw9.jl:34\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqbrevw9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqbrevw9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjqbrevw9.jl:35\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqbrevw9.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqbrevw9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjqbrevw9.jl:36\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqbrevw9.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqbrevw9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjqbrevw9.jl:37\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqbrevw9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return 0 \nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo6lmrgdv.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6lmrgdv.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6lmrgdv.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6lmrgdv.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6lmrgdv.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6lmrgdv.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6lmrgdv.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6lmrgdv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6lmrgdv.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6lmrgdv.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6lmrgdv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6lmrgdv.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpo6lmrgdv.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6lmrgdv.jl:20 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6lmrgdv.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = string(n)\n    l = length(s)\n    k = 1\n    for i in 1:l\n      \
    \  if parse(Int64,s[i])%2==1\n            k *= parse(Int64,s[i])\n        end\n\
    \    end\n    return k\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaa3ej37o.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaa3ej37o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaa3ej37o.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaa3ej37o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    sum = 1\n    while n > 0\n        r = n % 10\n        if r % 2 != 0\n\
    \            sum *= r\n        end\n        n = div(n, 10)\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaoaa8l20.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaoaa8l20.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaoaa8l20.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaoaa8l20.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if mod(n, 2) == 1\n        return\
    \ mod(n, 10) * digits(div(n, 10))\n    else\n        return digits(div(n, 10))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfml1mp3q.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfml1mp3q.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfml1mp3q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfml1mp3q.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfml1mp3q.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfml1mp3q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfml1mp3q.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfml1mp3q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfml1mp3q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfml1mp3q.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfml1mp3q.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfml1mp3q.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfml1mp3q.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfml1mp3q.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfml1mp3q.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph223of32.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph223of32.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph223of32.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph223of32.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph223of32.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph223of32.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph223of32.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph223of32.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph223of32.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph223of32.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph223of32.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph223of32.jl:15\ntest set: Test\
    \ Failed at /tmp/tmph223of32.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph223of32.jl:20 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph223of32.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    a = count_digits(n)\n    b = 0\n    while a >= 1\n        b = b + last_digit(n)\n\
    \        a = a - 1\n        n = strip_last_digit(n)\n    end\n    return b\nend\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptrzbsu8a.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: count_digits not defined\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmptrzbsu8a.jl:9\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptrzbsu8a.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptrzbsu8a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptrzbsu8a.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: count_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmptrzbsu8a.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptrzbsu8a.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptrzbsu8a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptrzbsu8a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: count_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmptrzbsu8a.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptrzbsu8a.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptrzbsu8a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptrzbsu8a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: count_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmptrzbsu8a.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrzbsu8a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = 0\n    for d in digits(n)\n        s = d % 2 == 1 ? s * d : s\n  \
    \  end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return n == 0 ? 0 : (n % 2 == 0 ? digits(n/10) : n % 10 * digits(n/10))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo2nsr112.jl:16\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpo2nsr112.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpo2nsr112.jl:9\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo2nsr112.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo2nsr112.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpo2nsr112.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpo2nsr112.jl:8\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpo2nsr112.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo2nsr112.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo2nsr112.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpo2nsr112.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpo2nsr112.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpo2nsr112.jl:9\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo2nsr112.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo2nsr112.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpo2nsr112.jl:19\n  Test threw exception\n  E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo2nsr112.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    #your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc_i7c587.jl:17\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc_i7c587.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc_i7c587.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc_i7c587.jl:18\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc_i7c587.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc_i7c587.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc_i7c587.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc_i7c587.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc_i7c587.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc_i7c587.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc_i7c587.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc_i7c587.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc_i7c587.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc_i7c587.jl:21 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc_i7c587.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n/10)\n    n % 2 ==\
    \ 1 && return n % 10 * digits(n/10)\nend\ndigits(1)\ndigits(4)\ndigits(235)\n\
    digits(13579)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: no method matching digits(::Float64)\\\
    nClosest candidates are:\\n  digits(!Matched::Int64) at /tmp/tmpphtsde4y.jl:8\\\
    nStacktrace:\\n [1] digits(n::Int64)\\n   @ '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    while n != 0\n        digit = mod(n, 10)\n        if isodd(digit)\n\
    \            total *= digit\n        end\n        n = div(n, 10)\n    end\n  \
    \  return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0yf9h3qp.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0yf9h3qp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0yf9h3qp.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0yf9h3qp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    a = 1\n    while n>0\n        if rem(n,2)==1\n            a = a*(n%10)\n\
    \        end\n        n = div(n,10)\n    end\n    return a\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1p8e9t18.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1p8e9t18.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1p8e9t18.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1p8e9t18.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n\n    |> collect(digits(10,:))\n    |> filter(x -> x % 2 != 0)\n    |>\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|>\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkq9yecyl.jl:10\nin expression starting at\
    \ /tmp/tmpkq9yecyl.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n != 0\n        num = n % 10\n        if num %\
    \ 2 != 0\n            product *= num\n        end\n        n = div(n, 10)\n  \
    \  end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkb5d08y3.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkb5d08y3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkb5d08y3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkb5d08y3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        if isodd(n)\n            return n\n        else\n \
    \           return 0\n        end\n    else\n        if isodd(n % 10)\n      \
    \      return n % 10 * digits(n \xF7 10)\n        else\n            return digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        last, rest = divrem(n,\
    \ 10)\n        if last%2 == 0\n            return digits(rest)\n        else\n\
    \            return last*digits(rest)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptuuawaco.jl:26\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptuuawaco.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptuuawaco.jl:24\ntest set: Test\
    \ Failed at /tmp/tmptuuawaco.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptuuawaco.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptuuawaco.jl:24\ntest set: Test\
    \ Failed at /tmp/tmptuuawaco.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 2004 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptuuawaco.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptuuawaco.jl:24\ntest set: Test\
    \ Failed at /tmp/tmptuuawaco.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptuuawaco.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptuuawaco.jl:24\ntest set: Test\
    \ Failed at /tmp/tmptuuawaco.jl:30\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptu"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptuuawaco.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # convert n to string\n    num_str = string(n)\n    # create an empty\
    \ product\n    product = 1\n    # loop over every digit in string using enumerate\n\
    \    for (i, digit) in enumerate(num_str)\n        # convert digit to number\n\
    \        digit = parse(Int64, digit)\n        # check if digit is odd or even\n\
    \        if mod(digit, 2) == 1\n            # multiply by product if odd\n   \
    \         product *= digit\n        end\n    end\n    # return the product\n \
    \   return product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpypxmnvgg.jl:37\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypxmnvgg.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypxmnvgg.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpypxmnvgg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        if n % 2 != 0\n\
    \            product *= n % 10\n        end\n        n = div(n, 10)\n    end\n\
    \    if product == 1\n        product = 0\n    end\n    return product\nend\n\
    digits(1)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgoje354j.jl:30\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgoje354j.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgoje354j.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgoje354j.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = n |> string\n    n_product = 1\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7mh7x2z9.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7mh7x2z9.jl:1\n\
    in expression starting at /tmp/tmp7mh7x2z9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return -digits(-n)\n    end\n    if n < 10\n       \
    \ return n%2 == 1 ? n : 0\n    end\n    return digits(n \xF7 10) * (n%10%2 ==\
    \ 1 ? n%10 : 1)\nend\n@assert digits(1)  == 1\n@assert digits(4)  == 0\n@assert\
    \ digits(235) == 15\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: digits(235) == 15\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpm891ejvo.jl:19\nin expression starting at /tmp/tmpm891ejvo.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_digits = length(digits(n))\n    n_prod = 1\n    while n > 0\n      \
    \  n_mod = n % 10\n        if n_mod % 2 != 0\n            n_prod *= n_mod\n  \
    \      end\n        n = trunc(Int64, n / 10)\n    end\n    return n_prod\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return prod(filter(x -> x % 2 != 0, digits(n)))\nend\ndigits(235)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # Base case\n    if n < 10 \n        return (n%2 == 1) ? n : 0\n    end\n\
    \    # Recursion\n    return (n%10 % 2 == 1) ? (n%10)*digits(floor(Int64, n/10))\
    \ : digits(floor(Int64, n/10))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    new_n = n\n    output = 1\n    while new_n > 0\n     \
    \   if new_n % 2 != 0\n            output *= new_n % 10\n        end\n       \
    \ new_n = new_n \xF7 10\n    end\n    return output\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_d0547go.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_d0547go.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_d0547go.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_d0547go.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n > 0\n        if n % 2 != 0\n            product\
    \ *= n % 10\n        end\n        n = div(n, 10)\n    end\n    if product == 1\n\
    \        return 0\n    else\n        return product\n    end\nend\ndigits(235)\n\
    digits(4)\ndigits(1)\ndigits(254)\ndigits(2546437)\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxc4rf0qb.jl:34\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxc4rf0qb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxc4rf0qb.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxc4rf0qb.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return mod(n, 10) * digits(div(n,\
    \ 10))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfnhorwm5.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnhorwm5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnhorwm5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfnhorwm5.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnhorwm5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnhorwm5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfnhorwm5.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnhorwm5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnhorwm5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfnhorwm5.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnhorwm5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnhorwm5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfnhorwm5.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnhorwm5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        return 0\n    else \n        return digits(floor(n/10))\
    \ + rem(n,2)*10^floor(log10(abs(n))) \n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpmnzphomi.jl:20\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpmnzphomi.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpmnzphomi.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmnzphomi.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmnzphomi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmnzphomi.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpmnzphomi.jl:8\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpmnzphomi.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmnzphomi.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmnzphomi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmnzphomi.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpmnzphomi.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpmnzphomi.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmnzphomi.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmnzphomi.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmnzphomi.jl:23\n  Test threw exception\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmnzphomi.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \n    # Split the digit into individual numbers\n    digit = split(string(n))\n\
    \    \n    # Create an array to store the odd numbers\n    odd_digit = Int64[]\n\
    \    \n    # Iterate through the numbers to find odd numbers\n    for i in digit\n\
    \        if parse(Int64, i) % 2 != 0\n            push!(odd_digit, parse(Int64,\
    \ i))\n        end\n    end\n    \n    # Check if odd_digit is empty\n    if isempty(odd_digit)\n\
    \        return 0\n    else\n        # If not empty, calculate the product\n \
    \       prod = 1\n        for i in odd_digit\n            prod *= i\n        end\n\
    \        return prod\n    end\nend\ndigits(235)\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8_vczd8v.jl:42\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_vczd8v.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_vczd8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8_vczd8v.jl:43\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_vczd8v.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_vczd8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8_vczd8v.jl:44\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_vczd8v.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_vczd8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8_vczd8v.jl:45\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 98765 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8_vczd8v.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8_vczd8v.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp8_vczd8v.jl:46\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 5576543 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_vczd8v.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        odd_digit = digits(n %\
    \ 10)\n        if odd_digit > 0\n            return odd_digit * digits(n div 10)\n\
    \        else\n            return digits(n div 10)\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps3tpt_rt.jl:14\nin expression starting at\
    \ /tmp/tmps3tpt_rt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    for digit in digits(n)\n        if digit%2 != 0\n            sum += digit\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    res = 1\n    while n > 0\n        if mod(n, 2) == 1\n            res *=\
    \ n % 10\n        end\n        n = div(n, 10)\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp92hhvmbn.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92hhvmbn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92hhvmbn.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp92hhvmbn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    prod = 1\n    while n != 0\n        if n % 2 != 0\n            prod *=\
    \ n % 10\n        end\n        n = div(n, 10)\n    end\n    return prod\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpla2v_8vl.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpla2v_8vl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpla2v_8vl.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpla2v_8vl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    function odd(n::Int64)::Bool\n        if n%2 == 0\n            return\
    \ false\n        else\n            return true\n        end\n    end\n    f(n)\
    \ = odd(n) ? n : 0\n    #print(n, f(n))\n    map(f, digits(n)) |> prod \nend\n\
    digits(4)\ndigits(235)\ndigits(235) == 15\ndigits(1)\ndigits(1) == 1\ndigits(4)\n\
    digits(4) == 0\ndigits(23)\ndigits(23) == 0\ndigits(235)\ndigits(235) == 15\n\
    digits(0)\ndigits(0) == 0\ndigits(555)\ndigits(555) == 0\ndigitsn\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_copy = n\n    product = 1\n    while n_copy > 0\n        digit = n_copy\
    \ % 10\n        if digit % 2 != 0\n            product *= digit\n        end\n\
    \        n_copy = n_copy / 10\n    end\n    return product\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkqv6bpbj.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkqv6bpbj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkqv6bpbj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkqv6bpbj.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkqv6bpbj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkqv6bpbj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkqv6bpbj.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkqv6bpbj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkqv6bpbj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkqv6bpbj.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkqv6bpbj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkqv6bpbj.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkqv6bpbj.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkqv6bpbj.jl:29 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkqv6bpbj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n::String=string(n)\n    product::Int64=1\n    for i::Int64 in n\n   \
    \     i::Int64=parse(Int64,i)\n        if i%2!=0\n            product*=i\n   \
    \     end\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"i\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp33kjj7zj.jl:1\nin expression starting at /tmp/tmp33kjj7zj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        d = n % 10\n   \
    \     if d % 2 != 0\n            product *= d\n        end\n        n = div(n,\
    \ 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6j3xz8q.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6j3xz8q.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6j3xz8q.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6j3xz8q.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n::Int64 == 0 && return 0\n    n::Int64 < 0 && return digits(-n)\n   \
    \ res::Int64 = 0\n    while n::Int64 > 0\n        r::Int64 = n::Int64 % 10\n \
    \       if (r::Int64 % 2 == 1)\n            res::Int64 = res::Int64 == 0 ? r::Int64\
    \ : res::Int64 * r::Int64\n        end\n        n::Int64 = n::Int64 \xF7 10\n\
    \    end\n    return res::Int64\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"res\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk1kyk2dh.jl:1\nin expression starting at /tmp/tmpk1kyk2dh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    x = num_digits(n)\n    total = 1\n    while x >= 1\n        if mod(n,10)\
    \ != 0\n            total *= mod(n,10)\n        end\n        n = div(n,10)\n \
    \       x -= 1\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpxltjqve5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: num_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxltjqve5.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxltjqve5.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxltjqve5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxltjqve5.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: num_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxltjqve5.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxltjqve5.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxltjqve5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxltjqve5.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: num_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxltjqve5.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxltjqve5.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxltjqve5.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpxltjqve5.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: num_digits not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpxltjqve5.jl:9\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxltjqve5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    number = n\n    product = 1\n    while number > 0\n        digit = number\
    \ % 10\n        if digit % 2 != 0\n            product *= digit\n        end\n\
    \        number = floor(Int64, number / 10)\n    end\n    return product\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp919ka4gi.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp919ka4gi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp919ka4gi.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp919ka4gi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n=abs(n)\n    ans=1\n    while n>0\n        r=n%10\n        if r%2!=0\n\
    \            ans=ans*r\n        end\n        n=div(n,10)\n    end\n    return\
    \ ans\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6614ekd8.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6614ekd8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6614ekd8.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6614ekd8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    sum = 1\n    while n > 0\n        digit = n % 10\n        if digit % 2\
    \ != 0\n            sum *= digit\n        end\n        n = div(n, 10)\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr487iga5.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr487iga5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr487iga5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr487iga5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # your code here\nend\ndigits(1)  == 1\ndigits(4)  == 0\ndigits(235) ==\
    \ 15\ndigits(1234) == 4\ndigits(81238) == 8\n \nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\nClosest candidates are:\n  convert(::Type{T}, !Matched::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \  convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \  ...\nStacktrace:\n [1] digits(n::Int64)\n   @ Main /tmp/tmplq26gzl3.jl:10\n\
    \ [2] top-level scope\n   @ /tmp/tmplq26gzl3.jl:11\nin expression starting at\
    \ /tmp/tmplq26gzl3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    if n == 0 return 0 end\n    newInt = 1\n    while n >\
    \ 0\n        if n % 2 != 0\n            newInt *= n % 10\n        end\n      \
    \  n = div(n, 10)\n    end\n    newInt\nend\n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsa3msgd_.jl:33\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsa3msgd_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsa3msgd_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsa3msgd_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return reduce(*, [d for d in digits(n) if isodd(d)])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = string(n)\n    res = 1\n    for i = 1:length(s)\n        c = s[i]\n\
    \        if c == '0'\n            res = 0\n            break\n        elseif c\
    \ == '1' || c == '3' || c == '5' || c == '7' || c == '9'\n            res *= parse(Int64,\
    \ c)\n        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdvg585e4.jl:29\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvg585e4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvg585e4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdvg585e4.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvg585e4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvg585e4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdvg585e4.jl:33\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvg585e4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvg585e4.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvg585e4.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        if n % 2 != 0\n\
    \            product *= n % 10\n        end\n        n = div(n, 10)\n    end\n\
    \    if product == 1\n        return 0\n    else\n        return product\n   \
    \ end\nend\ndigits(312)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfnltjx26.jl:31\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnltjx26.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnltjx26.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnltjx26.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    number = digits(n)\n    prod = 1\n    for i = 1:length(number)\n     \
    \   if mod(number[i],2) != 0\n            prod *= number[i]\n        end\n   \
    \ end\n    prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        n_tail = n % 10\n     \
    \   n_head = div(n, 10)\n        if n_tail % 2 == 0\n            return digits(n_head)\n\
    \        else\n            return n_tail * digits(n_head)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpov_337wv.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpov_337wv.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpov_337wv.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov_337wv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return prod(digits(n))\nend\ndigits(235)\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n < 0 && return digits(-n)\n    n < 10 && return n % 2 == 1 ? n : 0\n\
    \    return (n % 10 % 2 == 1 ? n % 10 : 1) * digits(n \xF7 10)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n  t = 0\n  r = 1\n  if (n < 0)\n    n = -n\n  end\n  if (n == 0)\n    return\
    \ 0\n  end\n  while (n != 0)\n    t = n % 10\n    if (t % 2 != 0)\n      r = r\
    \ * t\n    end\n    n = n / 10\n  end\n  return r\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr40v6p17.jl:31\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40v6p17.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40v6p17.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpr40v6p17.jl:32\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40v6p17.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40v6p17.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpr40v6p17.jl:33\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40v6p17.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40v6p17.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpr40v6p17.jl:34\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40v6p17.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr40v6p17.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpr40v6p17.jl:35\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr40v6p17.jl:35 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr40v6p17.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    remainder = n % 10\n    quotient = n / 10\n  \
    \  remainder % 2 == 0 && return digits(quotient)\n    return remainder * digits(quotient)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp51w835lf.jl:20\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp51w835lf.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp51w835lf.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp51w835lf.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp51w835lf.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp51w835lf.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmp51w835lf.jl:8\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp51w835lf.jl:0\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp51w835lf.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp51w835lf.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp51w835lf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmp51w835lf.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmp51w835lf.jl:0\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp51w835lf.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp51w835lf.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp51w835lf.jl:23\n  Test threw exception\n  E"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51w835lf.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n%2 != 0\n        a = n%10\n\
    \        return a*digits(n//10)\n    else\n        return digits(n//10)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxtyn3o3a.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpxtyn3o3a.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpxtyn3o3a.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtyn3o3a.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtyn3o3a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxtyn3o3a.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpxtyn3o3a.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpxtyn3o3a.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtyn3o3a.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtyn3o3a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxtyn3o3a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpxtyn3o3a.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpxtyn3o3a.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtyn3o3a.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtyn3o3a.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxtyn3o3a.jl:27"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxtyn3o3a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        if isodd(n)\n            return n\n        else\n \
    \           return 0\n        end\n    else\n        if isodd(mod(n,10))\n   \
    \         return mod(n,10)*digits(div(n,10))\n        else\n            return\
    \ digits(div(n,10))\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \"\"\"\n    function using recursion\n    \"\"\"\n    if n < 10 && n%2\
    \ != 0\n        return n\n    elseif n < 10\n        return 0\n    else\n    \
    \    return digits(n%10) * digits(n//10)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpx3g2k4_3.jl:26\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpx3g2k4_3.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpx3g2k4_3.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx3g2k4_3.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx3g2k4_3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpx3g2k4_3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpx3g2k4_3.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpx3g2k4_3.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx3g2k4_3.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx3g2k4_3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpx3g2k4_3.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpx3g2k4_3.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpx3g2k4_3.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx3g2k4_3.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx3g2k4_3.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpx3g2k4_3.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3g2k4_3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    for digit in digits(n)\n        if (rem(digit, 2) !=\
    \ 0) \n            product *= digit\n        end\n    end\n    product\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n < 0 && return 0\n    ds = digits(n)\n    ds = [d for d in ds if isodd(d)]\n\
    \    reduce(*, ds, 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n < 0 && return digits(-n)\n    n < 10 && return isodd(n) ? n : 0\n  \
    \  return isodd(n % 10) ? (n % 10) * digits(n \xF7 10) : digits(n \xF7 10)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \"your code here\"\nend\n@assert digits(1)  == 1\n@assert digits(4)  ==\
    \ 0\n@assert digits(235) == 15\n@assert digits(0) == 0\n@assert digits(100000)\
    \ == 0\n@assert digits(1111111) == 1\n@assert digits(123456789) == 15\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: "b'ERROR: LoadError: MethodError: Cannot `convert` an object of type String\
    \ to an object of type Int64\\nClosest candidates are:\\n  convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n  convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n  ...\\nStacktrace:\\n [1] digits(n::Int64)\\n   @ '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    last_digit = mod(n, 10)\n  \
    \  product = if last_digit % 2 == 1\n        last_digit\n    else\n        1\n\
    \    end\n    digits(div(n, 10)) * product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjrnti56z.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrnti56z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrnti56z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjrnti56z.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrnti56z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrnti56z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjrnti56z.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrnti56z.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrnti56z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjrnti56z.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrnti56z.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrnti56z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjrnti56z.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrnti56z.jl:29 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjrnti56z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return digits(-n)\n    end\n    if n < 10\n        return\
    \ 0\n    end\n    return (n % 10 == 0 ? 0 : n % 10) * digits(n \xF7 10)\nend\n\
    @test digits(1) == 1\n@test digits(4) == 0\n@test digits(235) == 15\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmp0mcn3qid.jl:17\nin expression starting at /tmp/tmp0mcn3qid.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsxk6p6_u.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxk6p6_u.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxk6p6_u.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpsxk6p6_u.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxk6p6_u.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxk6p6_u.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpsxk6p6_u.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxk6p6_u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxk6p6_u.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpsxk6p6_u.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxk6p6_u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxk6p6_u.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpsxk6p6_u.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxk6p6_u.jl:20 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsxk6p6_u.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n   n0=n\n   p=1\n   while n>0\n    if n%2==1\n     p=p*(n%10)\n    end\n \
    \   n=n/10\n   end\n   if p==1\n    p=0\n   end\n   return p\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9escqlaq.jl:28\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9escqlaq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9escqlaq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9escqlaq.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9escqlaq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9escqlaq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9escqlaq.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9escqlaq.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9escqlaq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9escqlaq.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9escqlaq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9escqlaq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9escqlaq.jl:32\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9escql"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9escqlaq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return @a(n)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @a not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n\
    \   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode, mod::Module,\
    \ meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n\
    \ [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n   @ Core\
    \ ./boot.jl:517\nin expression starting at /tmp/tmp7ftxzb61.jl:1\nin expression\
    \ starting at /tmp/tmp7ftxzb61.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    sum = 1\n    while n>=1\n        digit = n%10\n        if digit%2 != 0\n\
    \            sum *= digit\n        end\n        n = n/10\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoiq3_zn9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  InexactError: Int64(5.4)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] digits(n::Int64)\n     @ Main /tmp/tmpoiq3_zn9.jl:17\n   [4]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpoiq3_zn9.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpoiq3_zn9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoiq3_zn9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  InexactError: Int64(1.2)\n  Stacktrace:\n   [1] Int64\n\
    \     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n\
    \   [3] digits(n::Int64)\n     @ Main /tmp/tmpoiq3_zn9.jl:17\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpoiq3_zn9.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpoiq3_zn9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoiq3_zn9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  InexactError: Int64(0.9827439999999881)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] digits(n::Int64)\n     @ Main /tmp/tmpoiq3_zn9.jl:17\n   [4]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpoiq3_zn9.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpoiq3_zn9.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoiq3_zn9.jl:28\n  Test threw exception\n  Expression:\
    \ candida"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoiq3_zn9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    digit = n % 10\n    if digit\
    \ % 2 == 0\n        return digits(n // 10)\n    else\n        return digit * digits(n\
    \ // 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd1p8zb8w.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpd1p8zb8w.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpd1p8zb8w.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd1p8zb8w.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd1p8zb8w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpd1p8zb8w.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpd1p8zb8w.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpd1p8zb8w.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd1p8zb8w.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd1p8zb8w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpd1p8zb8w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Rational{Int64})\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpd1p8zb8w.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpd1p8zb8w.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd1p8zb8w.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd1p8zb8w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpd1p8zb8w.jl:27"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd1p8zb8w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd(x) = x % 2 != 0 ? x : 0\n    n < 10 ? odd(n) : odd(n % 10) * digits(trunc(Int64,\
    \ n / 10))\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9fbur6a2.jl:18\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fbur6a2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fbur6a2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9fbur6a2.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fbur6a2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fbur6a2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9fbur6a2.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fbur6a2.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fbur6a2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9fbur6a2.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fbur6a2.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fbur6a2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9fbur6a2.jl:22\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fbur6"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9fbur6a2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    accumulator = 1\n    while n > 0\n        digit = n % 10\n        if digit\
    \ % 2 != 0\n            accumulator *= digit\n        end\n        n = div(n,\
    \ 10)\n    end\n    return accumulator\nend\n \nprint(digits(235))\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "15test set: Test Failed at /tmp/tmpvb8vlm25.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvb8vlm25.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvb8vlm25.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvb8vlm25.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    prod = 1\n    while n > 0\n\
    \        if n % 2 == 1\n            prod *= n % 10\n        end\n        n = n\
    \ \xF7 10\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4wfckfmk.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4wfckfmk.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4wfckfmk.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4wfckfmk.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        return 0\n    else\n        if mod(n,2) != 0\n   \
    \         return n * digits(div(n,10))\n        else\n            return digits(div(n,10))\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpculip5s9.jl:24\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpculip5s9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpculip5s9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpculip5s9.jl:25\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpculip5s9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpculip5s9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpculip5s9.jl:26\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpculip5s9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpculip5s9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpculip5s9.jl:27\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpculip5s9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpculip5s9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpculip5s9.jl:28\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpculip5s9.jl:28 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpculip5s9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # Special case\n    if n < 0\n        return digits(-n)\n    end\n   \
    \ \n    # Find the number of digits\n    count = 0\n    temp = n\n    while temp\
    \ > 0\n        count += 1\n        temp = temp \xF7 10\n    end\n    \n    # Multiply\
    \ all digits\n    temp = n\n    result = 1\n    for i = 1:count\n        digit\
    \ = temp \xF7 10^(count-i)\n        if digit % 2 == 1\n            result *= digit\n\
    \        end\n        temp = temp % 10^(count-i)\n    end\n    \n    return result\n\
    end\n# test\nprintln(digits(5) == 5)\nprintln(digits(12) == 0)\nprintln(digits(245)\
    \ == 15)\nprintln(digits(1405) == 20)\nprintln(digits(7154) == 120)\nprintln(digits(5500)\
    \ == 0)\nprintln(digits(79999) == 598)\nprintln(digits(394530) == 945)\nprintln(digits(0)\
    \ == 0)\nprintln(digits(-123) == 15)\nprintln(digits(-1094) == 0)\nprintln(digits(-4)\
    \ == 0)\nprintln(digits(-2965) == 5)\nprintln(digits(-1159) == 15)\nprintln(digits(-7154)\
    \ == 120)\nprintln(digits(-394530) == 945)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "true\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n\
    false\nfalse\nfalse\nfalse\nfalse\ntest set: Test Failed at /tmp/tmptpok4oyq.jl:63\n\
    \  Expression: candidate(2468) == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptpok4oyq.jl:63 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptpok4oyq.jl:56\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptpok4oyq.jl:54\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \n    #initialize a counter and a product var\n    count = 0\n    prod\
    \ = 1\n    \n    #loop through each digit of n\n    for i in digits(n)\n     \
    \   count = count + 1\n        \n        #if the digit is odd add it to prod\n\
    \        if i % 2 != 0\n            prod = prod * i\n        end\n        \n \
    \   end\n    \n    #return prod if count is greater than 0\n    if count > 0\n\
    \        return prod\n    else\n        return 0\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \n    # Make sure n is nonnegative\n    n = abs(n)\n    \n    # Initialize\
    \ the return value\n    total = 1\n    \n    # While n is greater than 0,\n  \
    \  while n > 0\n        \n        # Get the last digit in n\n        digit = n\
    \ % 10\n        \n        # If the digit is not even,\n        if digit % 2 !=\
    \ 0\n            \n            # multiply the return value by the digit\n    \
    \        total *= digit\n        end\n        \n        # Drop the last digit\
    \ from n\n        n = n \xF7 10\n    end\n    \n    # Return the return value\n\
    \    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9e41n4nb.jl:47\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9e41n4nb.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9e41n4nb.jl:40\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9e41n4nb.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n % 2 == 1 ? n : 0\n    else\n        return\
    \ (n % 10 % 2 == 1 ? n % 10 : 0) * digits(div(n, 10))\n    end\nend\n    \n  \
    \  \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6l3dn6xz.jl:23\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l3dn6xz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l3dn6xz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6l3dn6xz.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l3dn6xz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l3dn6xz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6l3dn6xz.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l3dn6xz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l3dn6xz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6l3dn6xz.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l3dn6xz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6l3dn6xz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6l3dn6xz.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6l3dn6"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6l3dn6xz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        n = -n\n    end\n    if n < 10\n        if n % 2 ==\
    \ 1\n            return n\n        else\n            return 0\n        end\n \
    \   end\n    d = digits(div(n, 10))\n    m = n % 10\n    if m % 2 == 1\n     \
    \   return m * d\n    else\n        return d\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd_prod = 1\n    while n > 0\n        d = n % 10\n        if isodd(d)\n\
    \            odd_prod *= d\n        end\n        n = n \xF7 10\n    end\n    return\
    \ odd_prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpruyjex4c.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpruyjex4c.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpruyjex4c.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpruyjex4c.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd_digits = [i for i in string(n) if parse(Int64,i)%2 != 0]\n    if length(odd_digits)\
    \ == 0\n        return 0\n    else\n        return prod(parse.(Int64,odd_digits))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    if n == 0\n        return 0\n    end\n\
    \    while n != 0\n        digit = n % 10\n        if digit % 2 != 0\n       \
    \     product *= digit\n        end\n        n = div(n, 10)\n    end\n    return\
    \ product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps3h8ye61.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps3h8ye61.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps3h8ye61.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps3h8ye61.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return 0 if sum(isodd, digits(n)) == 0 else prod(digits(n)[isodd(digits(n))])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpzafflve8.jl:8 expected\
    \ \"end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzafflve8.jl:9\n\
    in expression starting at /tmp/tmpzafflve8.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    return n == 0 ? 0 : n % 10 % 2 == 1 ? n % 10 * digits(n \xF7 10) : digits(n\
    \ \xF7 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaatke8xg.jl:16\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaatke8xg.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaatke8xg.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpaatke8xg.jl:17\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaatke8xg.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaatke8xg.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpaatke8xg.jl:18\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaatke8xg.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaatke8xg.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpaatke8xg.jl:19\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaatke8xg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaatke8xg.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpaatke8xg.jl:20\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaatke8xg.jl:20 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaatke8xg.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    prod = 1\n    for d in string(n)\n        if parse(Int64, d) % 2 != 0\n\
    \            prod *= parse(Int64, d)\n        end\n    end\n    return prod\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa4o5b4vh.jl:28\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa4o5b4vh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa4o5b4vh.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa4o5b4vh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    x=0\n    if n%2 == 0\n        return 0\n    else\n        return n\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpctz8c_1f.jl:22\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctz8c_1f.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctz8c_1f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpctz8c_1f.jl:23\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctz8c_1f.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctz8c_1f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpctz8c_1f.jl:24\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctz8c_1f.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctz8c_1f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpctz8c_1f.jl:25\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 98765 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctz8c_1f.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctz8c_1f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpctz8c_1f.jl:26\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 5576543 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpctz8c_1f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    prod = 1\n    for digit in digits(n)\n        prod *= digit % 2 == 1 ?\
    \ digit : 1\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n < 10 ? n % 2 != 0 ? n : 0 : n % 2 != 0 ? n % 10 * digits(n \xF7 10)\
    \ : digits(n \xF7 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n1 = abs(n)\n    prod = 1\n    n0 = 0\n    #We can also use:\n    #while\
    \ n1 > 0\n    #   n0 = mod(n1,10)\n    #   n1 = div(n1,10)\n    #   if mod(n0,2)\
    \ == 1\n    #       prod *= n0\n    #   end\n    #end\n    for k in 1:floor(log10(n1))+1\n\
    \        n0 = mod(n1,10)\n        n1 = div(n1,10)\n        if mod(n0,2) == 1\n\
    \            prod *= n0\n        end\n    end\n    return prod\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpw48xguo5.jl:40\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw48xguo5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw48xguo5.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw48xguo5.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt8f7x_2k.jl:16\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpt8f7x_2k.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt8f7x_2k.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt8f7x_2k.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpt8f7x_2k.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpt8f7x_2k.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt8f7x_2k.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt8f7x_2k.jl:15\ntest set:\
    \ Error Durin"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8f7x_2k.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    sum = 1\n    while n > 0\n        if (n % 10) % 2 != 0\n            sum\
    \ *= (n % 10)\n        end\n        n = div(n, 10)\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmtxngsk6.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtxngsk6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtxngsk6.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmtxngsk6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    result = 1\n    while n > 0\n        # print(n)\n        x = n % 10\n\
    \        if x % 2 != 0\n            result *= x\n        end\n        n = div(n,\
    \ 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmqd0o0_d.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqd0o0_d.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqd0o0_d.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqd0o0_d.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n % 2 == 1 ? n : 0\n    else\n        return\
    \ digits(n\xF710) * (n % 2 == 1 ? n % 10 : 1)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    res = 1\n    for i in digits(n)\n        if i % 2 != 0\n            res\
    \ *= i\n        end\n    end\n    res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n % 2 == 1 ? n : 0\n    else\n        digit\
    \ = n % 10\n        return (digit % 2 == 1 ? digit : 0) * digits(n \xF7 10)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp43lyk3yd.jl:22\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43lyk3yd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43lyk3yd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp43lyk3yd.jl:23\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43lyk3yd.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43lyk3yd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp43lyk3yd.jl:24\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43lyk3yd.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43lyk3yd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp43lyk3yd.jl:25\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43lyk3yd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43lyk3yd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp43lyk3yd.jl:26\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43lyk3"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp43lyk3yd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    product = 1\n    for i = 1:length(n_str)\n    \
    \    num = parse(Int64, n_str[i])\n        if num % 2 != 0\n            product\
    \ *= num\n        end\n    end\n    if product != 1\n        return product\n\
    \    else\n        return 0\n    end\nend\ndigits(235)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpby__wnb4.jl:31\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpby__wnb4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpby__wnb4.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpby__wnb4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    #A = []\n    A = 1\n    while n > 0\n        a = n % 10\n        if a\
    \ % 2 != 0\n            #push!(A,a)\n            A = A * a\n        end\n    \
    \    n = div(n,10)\n    end\n    return A\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpso2bh1ut.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpso2bh1ut.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpso2bh1ut.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpso2bh1ut.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n > 0\n        r = rem(n, 10)\n        if isodd(r)\n\
    \            product *= r\n        end\n        n = div(n, 10)\n    end\n    return\
    \ product\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqi5ukz3k.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqi5ukz3k.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqi5ukz3k.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqi5ukz3k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    p::Int64 = 1\n    if n < 0\n        n = -n\n    end\n    while n > 0\n\
    \        d = n % 10\n        if d % 2 == 1\n            p = p * d\n        end\n\
    \        n = n / 10\n    end\n    return p\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpj34xcziy.jl:28\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj34xcziy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj34xcziy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpj34xcziy.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj34xcziy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj34xcziy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpj34xcziy.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 5 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj34xcziy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj34xcziy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpj34xcziy.jl:32\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 3 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj34xcziy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj34xcziy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpj34xcziy.jl:33\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj34xc"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj34xcziy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = string(n)\n    res = 1\n    for i in s\n        if i in '24680'\n\
    \            res *= parse(Int64, i)\n        end\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp43c2im8o.jl:12\nin expression\
    \ starting at /tmp/tmp43c2im8o.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 return 0 end\n    acc = 1\n    for i in 0:int(floor(log10(n)))\n\
    \        d = mod(div(n, 10^i), 10)\n        if d % 2 == 1\n            acc *=\
    \ d\n        end\n    end\n    return acc\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp8ugmvcxa.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmp8ugmvcxa.jl:11\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ugmvcxa.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ugmvcxa.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp8ugmvcxa.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp8ugmvcxa.jl:11\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ugmvcxa.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ugmvcxa.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp8ugmvcxa.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp8ugmvcxa.jl:11\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ugmvcxa.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ugmvcxa.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp8ugmvcxa.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmp8ugmvcxa.jl:11\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8u"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ugmvcxa.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = string(n)\n    product = 1\n    for x in s\n        product *= x -\
    \ '0'\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgnomn2fp.jl:22\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgnomn2fp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgnomn2fp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgnomn2fp.jl:23\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgnomn2fp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgnomn2fp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgnomn2fp.jl:24\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgnomn2fp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgnomn2fp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgnomn2fp.jl:25\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgnomn2fp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgnomn2fp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgnomn2fp.jl:26\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnomn2fp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    \n    # initialise the product, starting from 1\n    product = 1\n   \
    \ \n    # until n becomes 0\n    while n != 0\n        \n        # append the\
    \ last digit of n to the array\n        last_digit = n % 10\n        \n      \
    \  # if the last digit is odd\n        if last_digit % 2 != 0\n            # multiply\
    \ with product\n            product *= last_digit\n        end\n        \n   \
    \     # remove the last digit of n\n        n = div(n, 10)\n    end\n    \n  \
    \  # return the product\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0wut__c1.jl:43\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0wut__c1.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0wut__c1.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0wut__c1.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    p = 1\n    while n > 0\n        d = n % 10\n        if\
    \ d % 2 == 1\n            p *= d\n        end\n        n = (n - d) / 10\n    end\n\
    \    return p\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0oiivso0.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0oiivso0.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0oiivso0.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0oiivso0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    n_list = [parse(Int64, n_str[i]) for i in 1:length(n_str)]\n\
    \    odd_nums = filter(x -> x % 2 != 0, n_list)\n    prod = prod(odd_nums)\n \
    \   return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe7x2uojy.jl:20\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  UndefVarError: prod not defined\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpe7x2uojy.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe7x2uojy.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe7x2uojy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpe7x2uojy.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  UndefVarError: prod not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmpe7x2uojy.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe7x2uojy.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe7x2uojy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpe7x2uojy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  UndefVarError: prod not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmpe7x2uojy.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe7x2uojy.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe7x2uojy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpe7x2uojy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  UndefVarError: prod not defined\n  Stacktrace:\n   [1]\
    \ digits(n::Int64)\n     @ Main /tmp/tmpe7x2uojy.jl:12\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/t"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe7x2uojy.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    return (n % 10) % 2 == 1 ? (n\
    \ % 10) * digits(n \xF7 10) : digits(n \xF7 10)\nend\ndigits(235)\ndigits(1)\n\
    digits(4)\ndigits(1000)\ndigits(0)\ndigits(9999)\ndigits(10)\ndigits(423)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjjpbtbqw.jl:27\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjpbtbqw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjpbtbqw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjjpbtbqw.jl:28\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjpbtbqw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjpbtbqw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjjpbtbqw.jl:29\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjpbtbqw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjpbtbqw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjjpbtbqw.jl:30\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjpbtbqw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjpbtbqw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjjpbtbqw.jl:31\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjpbtbqw.jl:31 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjpbtbqw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = string(n)\n    prod = 1\n    for i = 1:length(s)\n        c = parse(Int64,\
    \ s[i])\n        if c % 2 == 1\n            prod *= c\n        end\n    end\n\
    \    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvr18xod5.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvr18xod5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvr18xod5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvr18xod5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    output = 1\n    for i in n \n        if i%2 != 0\n            output =\
    \ output * i\n        end\n    end\n    return output\nend\n@test digits(1234)\
    \ == 0\n@test digits(234) == 0\n@test digits(235) == 15\n@test digits(1357) ==\
    \ 35\n@test digits(135794) == 4\n@test digits(0) == 0\n@test digits(1) == 1\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpv0m8tq11.jl:17\nin expression starting at /tmp/tmpv0m8tq11.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    res = 1\n    while n != 0\n        if mod(n,2) == 1\n            res *=\
    \ div(n,10)\n        end\n        n = div(n,10)\n    end\n    res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0karxbkk.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0karxbkk.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0karxbkk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0karxbkk.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0karxbkk.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0karxbkk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0karxbkk.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0karxbkk.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0karxbkk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0karxbkk.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0karxbkk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0karxbkk.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0karxbkk.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0karxbkk.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0karxbkk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    for i in n\n        if i % 2 != 0\n            total *=\
    \ i\n        end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2o1xqrci.jl:23\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o1xqrci.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o1xqrci.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2o1xqrci.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o1xqrci.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o1xqrci.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2o1xqrci.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 98765 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o1xqrci.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o1xqrci.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2o1xqrci.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 5576543 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o1xqrci.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o1xqrci.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2o1xqrci.jl:28\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o1xqrci.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    prod = 1\n    for x in digits(n)\n        if x % 2 != 0\n            prod\
    \ *= x\n        end\n    end\n    prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n div 10)\n    return\
    \ (n mod 10) * digits(n div 10)\nend\ndigits(235)\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp910guobw.jl:10\nin expression starting at\
    \ /tmp/tmp910guobw.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n>0\n        last_digit = n%10\n        if last_digit%2\
    \ != 0 \n            product *= last_digit\n        end\n        n = n//10\n \
    \   end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfaluybie.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  OverflowError: 12800000000000000 * 2000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] *(x::Rational{Int64}, y::Rational{Int64})\n\
    \     @ Base ./rational.jl:334\n   [4] digits(n::Int64)\n     @ Main /tmp/tmpfaluybie.jl:13\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfaluybie.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfaluybie.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfaluybie.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  OverflowError: 31250000000000 * 500000 overflowed for\
    \ type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol, x::Int64,\
    \ y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n     @\
    \ ./checked.jl:288 [inlined]\n   [3] *(x::Rational{Int64}, y::Rational{Int64})\n\
    \     @ Base ./rational.jl:334\n   [4] digits(n::Int64)\n     @ Main /tmp/tmpfaluybie.jl:13\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfaluybie.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfaluybie.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfaluybie.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  OverflowError: 244140625000000000 * 2500000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] *(x::Rational{Int64}, y::Rati"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfaluybie.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    b = 1\n    while n > 0\n        c = n % 10\n        if c % 2 != 0\n  \
    \          b *= c\n        end\n        n = n / 10\n    end\n    return b\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkaj1olhj.jl:24\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaj1olhj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaj1olhj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkaj1olhj.jl:25\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaj1olhj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaj1olhj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkaj1olhj.jl:26\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaj1olhj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaj1olhj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkaj1olhj.jl:27\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaj1olhj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkaj1olhj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkaj1olhj.jl:28\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkaj1olhj.jl:28 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkaj1olhj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    res = 1\n    while n > 0\n        d = n % 10\n        if (d % 2 != 0)\n\
    \            res *= d\n        end\n        n = floor(Int64, n / 10)\n    end\n\
    \    return res\nend\ndigits(1)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuvzhatld.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuvzhatld.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuvzhatld.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvzhatld.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    a = 1\n    while n > 0\n        b = n % 10\n        if b % 2 != 0\n  \
    \          a *= b\n        end\n        n = floor(Int64, n / 10)\n    end\n  \
    \  return a\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfsgdm12_.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfsgdm12_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfsgdm12_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfsgdm12_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n   digits = 0\n   while n != 0\n       if mod(n, 2) != 0\n           digits\
    \ *= div(n, 10)\n       end\n       n = div(n, 10)\n   end\n   return digits\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4lsopkf4.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lsopkf4.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lsopkf4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4lsopkf4.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lsopkf4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lsopkf4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4lsopkf4.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lsopkf4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lsopkf4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4lsopkf4.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lsopkf4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lsopkf4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4lsopkf4.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lsopkf4.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4lsopkf4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_string = string(n)\n    n_array = split(n_string, \"\")\n    n_array\
    \ = [parse(Int64, n_array[i]) for i in 1:length(n_array)]\n    products = 1\n\
    \    for i in 1:length(n_array)\n        if n_array[i] % 2 != 0\n            products\
    \ *= n_array[i]\n        end\n    end\n    return products\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9cnc1c5x.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cnc1c5x.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cnc1c5x.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cnc1c5x.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0\n        println(\"n must be positive\")\n        return -1\n \
    \   end\n    sum = 1\n    while n>0\n        d = mod(n,10)\n        if d%2 !=\
    \ 0\n            sum *= d\n        end\n        n = div(n,10)\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdxem23pc.jl:34\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdxem23pc.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdxem23pc.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdxem23pc.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    output = 1\n    while n != 0\n        if mod(n,2) != 0\n            output\
    \ *= div(n,10)\n        end\n        n = div(n,10)\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4svlv71k.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4svlv71k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4svlv71k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4svlv71k.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4svlv71k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4svlv71k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4svlv71k.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4svlv71k.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4svlv71k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4svlv71k.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4svlv71k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4svlv71k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4svlv71k.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4svlv71k.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4svlv71k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    result = 1\n    for d in digits(n)\n        if d % 2 == 1\n          \
    \  result *= d\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd_digits = 1\n    for d in digits(n)\n        if (d % 2) != 0\n    \
    \        odd_digits *= d\n        end\n    end\n    return odd_digits\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = string(n)\n    v = 0\n    for i in 1:length(s)\n        a = parse(Int64,\
    \ s[i])\n        if a%2 != 0\n            v = v*a\n        end\n    end\n    v\n\
    end\ndigits(235)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqr5t6vuw.jl:25\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqr5t6vuw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqr5t6vuw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpqr5t6vuw.jl:26\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqr5t6vuw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqr5t6vuw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpqr5t6vuw.jl:27\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqr5t6vuw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqr5t6vuw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpqr5t6vuw.jl:28\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqr5t6vuw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqr5t6vuw.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpqr5t6vuw.jl:29\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqr5t6vuw.jl:29 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqr5t6vuw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n > 0\n        if n % 2 != 0\n            product\
    \ *= n % 10\n        end\n        n = div(n, 10)\n    end\n    if product == 1\n\
    \        return 0\n    else\n        return product\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpo4_t3rxd.jl:29\n  Expression: candidate(120)\
    \ == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4_t3rxd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4_t3rxd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4_t3rxd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    i = 0\n    while n > 0\n        if n % 2 == 1\n            i += 1\n  \
    \      end\n        n = n / 10\n    end\n    return i\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1smj7g9v.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1smj7g9v.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1smj7g9v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1smj7g9v.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1smj7g9v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1smj7g9v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1smj7g9v.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1smj7g9v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1smj7g9v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1smj7g9v.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1smj7g9v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1smj7g9v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1smj7g9v.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 1 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1smj7g9v.jl:27 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1smj7g9v.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    s = digits(n)\n    product = 1\n    for d in s\n        if isodd(d)\n\
    \            product *= d\n        end\n    end\n    return product\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    result::Int64 = 1\n    while n != 0\n        if n % 2 != 0\n         \
    \   result *= n % 10\n        end\n        n /= 10\n    end\n    result == 1 ?\
    \ 0 : result\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyfbv8krh.jl:23\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  InexactError: Int64(2.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] digits(n::Int64)\n     @ Main /tmp/tmpyfbv8krh.jl:12\n   [4]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyfbv8krh.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyfbv8krh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpyfbv8krh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  InexactError: Int64(5.4)\n  Stacktrace:\n   [1] Int64\n\
    \     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n\
    \   [3] digits(n::Int64)\n     @ Main /tmp/tmpyfbv8krh.jl:12\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyfbv8krh.jl:24 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyfbv8krh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpyfbv8krh.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  InexactError: Int64(1.2)\n  Stacktrace:\n   [1] Int64\n\
    \     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n\
    \   [3] digits(n::Int64)\n     @ Main /tmp/tmpyfbv8krh.jl:12\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyfbv8krh.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyfbv8krh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpyfbv8krh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  In"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfbv8krh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    odd = 1\n    for x in string(n)\n        if !isdigit(x)\n            continue\n\
    \        end\n        x = parse(Int64, x)\n        if x % 2 == 1\n           \
    \ odd *= x\n        end\n    end\n    return odd\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvpubsk5i.jl:32\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvpubsk5i.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvpubsk5i.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvpubsk5i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return 0\n    end\n    if n < 10\n        return n\n\
    \    end\n    return (n % 10) * digits(n \xF7 10)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4mafklfy.jl:23\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mafklfy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mafklfy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4mafklfy.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mafklfy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mafklfy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4mafklfy.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mafklfy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mafklfy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4mafklfy.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4mafklfy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4mafklfy.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4mafklfy.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4mafklfy.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    total = 1\n    while n > 0\n        d = n % 10\n        if isodd(d)\n\
    \            total *= d\n        end\n        n = n \xF7 10\n    end\n    return\
    \ total\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppdqxs9q3.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppdqxs9q3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppdqxs9q3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppdqxs9q3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    return (n % 10) * digits(floor(Int64,\
    \ n / 10))\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkkghutqf.jl:19\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkghutqf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkghutqf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkkghutqf.jl:20\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkghutqf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkghutqf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkkghutqf.jl:21\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkghutqf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkghutqf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkkghutqf.jl:22\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkghutqf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkghutqf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpkkghutqf.jl:23\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkghutqf.jl:23 [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkkghutqf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    i = 0\n    res = 1\n    while n > 0\n        i = mod(n, 10)\n        if\
    \ mod(i, 2) != 0\n            res = res * i\n        end\n        n = div(n, 10)\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0hbwvh3r.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hbwvh3r.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hbwvh3r.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0hbwvh3r.jl:22\n"
  exit_code: 1
  status: SyntaxError
